! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require("querystring")) : "function" == typeof define && define.amd ? define(["querystring"], t) : (e = e || self).BIMDataViewer = t(e.querystring)
}(this, (function(e) {
    "use strict";
    e = e && e.hasOwnProperty("default") ? e.default : e;
    /*!
     * Vue.js v2.6.11
     * (c) 2014-2019 Evan You
     * Released under the MIT License.
     */
    var t = Object.freeze({});

    function i(e) {
        return null == e
    }

    function r(e) {
        return null != e
    }

    function n(e) {
        return !0 === e
    }

    function s(e) {
        return "string" == typeof e || "number" == typeof e || "symbol" == typeof e || "boolean" == typeof e
    }

    function o(e) {
        return null !== e && "object" == typeof e
    }
    var a = Object.prototype.toString;

    function l(e) {
        return "[object Object]" === a.call(e)
    }

    function c(e) {
        var t = parseFloat(String(e));
        return t >= 0 && Math.floor(t) === t && isFinite(e)
    }

    function h(e) {
        return r(e) && "function" == typeof e.then && "function" == typeof e.catch
    }

    function d(e) {
        return null == e ? "" : Array.isArray(e) || l(e) && e.toString === a ? JSON.stringify(e, null, 2) : String(e)
    }

    function u(e) {
        var t = parseFloat(e);
        return isNaN(t) ? e : t
    }

    function p(e, t) {
        for (var i = Object.create(null), r = e.split(","), n = 0; n < r.length; n++) i[r[n]] = !0;
        return t ? function(e) {
            return i[e.toLowerCase()]
        } : function(e) {
            return i[e]
        }
    }
    var f = p("slot,component", !0),
        _ = p("key,ref,slot,slot-scope,is");

    function m(e, t) {
        if (e.length) {
            var i = e.indexOf(t);
            if (i > -1) return e.splice(i, 1)
        }
    }
    var g = Object.prototype.hasOwnProperty;

    function v(e, t) {
        return g.call(e, t)
    }

    function b(e) {
        var t = Object.create(null);
        return function(i) {
            return t[i] || (t[i] = e(i))
        }
    }
    var y = /-(\w)/g,
        w = b((function(e) {
            return e.replace(y, (function(e, t) {
                return t ? t.toUpperCase() : ""
            }))
        })),
        M = b((function(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        })),
        A = /\B([A-Z])/g,
        x = b((function(e) {
            return e.replace(A, "-$1").toLowerCase()
        }));
    var C = Function.prototype.bind ? function(e, t) {
        return e.bind(t)
    } : function(e, t) {
        function i(i) {
            var r = arguments.length;
            return r ? r > 1 ? e.apply(t, arguments) : e.call(t, i) : e.call(t)
        }
        return i._length = e.length, i
    };

    function P(e, t) {
        t = t || 0;
        for (var i = e.length - t, r = new Array(i); i--;) r[i] = e[i + t];
        return r
    }

    function k(e, t) {
        for (var i in t) e[i] = t[i];
        return e
    }

    function E(e) {
        for (var t = {}, i = 0; i < e.length; i++) e[i] && k(t, e[i]);
        return t
    }

    function I(e, t, i) {}
    var T = function(e, t, i) {
            return !1
        },
        D = function(e) {
            return e
        };

    function S(e, t) {
        if (e === t) return !0;
        var i = o(e),
            r = o(t);
        if (!i || !r) return !i && !r && String(e) === String(t);
        try {
            var n = Array.isArray(e),
                s = Array.isArray(t);
            if (n && s) return e.length === t.length && e.every((function(e, i) {
                return S(e, t[i])
            }));
            if (e instanceof Date && t instanceof Date) return e.getTime() === t.getTime();
            if (n || s) return !1;
            var a = Object.keys(e),
                l = Object.keys(t);
            return a.length === l.length && a.every((function(i) {
                return S(e[i], t[i])
            }))
        } catch (e) {
            return !1
        }
    }

    function B(e, t) {
        for (var i = 0; i < e.length; i++)
            if (S(e[i], t)) return i;
        return -1
    }

    function j(e) {
        var t = !1;
        return function() {
            t || (t = !0, e.apply(this, arguments))
        }
    }
    var L = ["component", "directive", "filter"],
        R = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch"],
        O = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: T,
            isReservedAttr: T,
            isUnknownElement: T,
            getTagNamespace: I,
            parsePlatformTagName: D,
            mustUseProp: T,
            async: !1,
            _lifecycleHooks: R
        },
        F = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

    function N(e) {
        var t = (e + "").charCodeAt(0);
        return 36 === t || 95 === t
    }

    function U(e, t, i, r) {
        Object.defineProperty(e, t, {
            value: i,
            enumerable: !!r,
            writable: !0,
            configurable: !0
        })
    }
    var H = new RegExp("[^" + F.source + ".$_\\d]");
    var V, z = "__proto__" in {},
        $ = "undefined" != typeof window,
        W = "undefined" != typeof WXEnvironment && !!WXEnvironment.platform,
        q = W && WXEnvironment.platform.toLowerCase(),
        G = $ && window.navigator.userAgent.toLowerCase(),
        Y = G && /msie|trident/.test(G),
        Z = G && G.indexOf("msie 9.0") > 0,
        X = G && G.indexOf("edge/") > 0,
        K = (G && G.indexOf("android"), G && /iphone|ipad|ipod|ios/.test(G) || "ios" === q),
        Q = (G && /chrome\/\d+/.test(G), G && /phantomjs/.test(G), G && G.match(/firefox\/(\d+)/)),
        J = {}.watch,
        ee = !1;
    if ($) try {
        var te = {};
        Object.defineProperty(te, "passive", {
            get: function() {
                ee = !0
            }
        }), window.addEventListener("test-passive", null, te)
    } catch (cw) {}
    var ie = function() {
            return void 0 === V && (V = !$ && !W && "undefined" != typeof global && (global.process && "server" === global.process.env.VUE_ENV)), V
        },
        re = $ && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

    function ne(e) {
        return "function" == typeof e && /native code/.test(e.toString())
    }
    var se, oe = "undefined" != typeof Symbol && ne(Symbol) && "undefined" != typeof Reflect && ne(Reflect.ownKeys);
    se = "undefined" != typeof Set && ne(Set) ? Set : function() {
        function e() {
            this.set = Object.create(null)
        }
        return e.prototype.has = function(e) {
            return !0 === this.set[e]
        }, e.prototype.add = function(e) {
            this.set[e] = !0
        }, e.prototype.clear = function() {
            this.set = Object.create(null)
        }, e
    }();
    var ae = I,
        le = 0,
        ce = function() {
            this.id = le++, this.subs = []
        };
    ce.prototype.addSub = function(e) {
        this.subs.push(e)
    }, ce.prototype.removeSub = function(e) {
        m(this.subs, e)
    }, ce.prototype.depend = function() {
        ce.target && ce.target.addDep(this)
    }, ce.prototype.notify = function() {
        for (var e = this.subs.slice(), t = 0, i = e.length; t < i; t++) e[t].update()
    }, ce.target = null;
    var he = [];

    function de(e) {
        he.push(e), ce.target = e
    }

    function ue() {
        he.pop(), ce.target = he[he.length - 1]
    }
    var pe = function(e, t, i, r, n, s, o, a) {
            this.tag = e, this.data = t, this.children = i, this.text = r, this.elm = n, this.ns = void 0, this.context = s, this.fnContext = void 0, this.fnOptions = void 0, this.fnScopeId = void 0, this.key = t && t.key, this.componentOptions = o, this.componentInstance = void 0, this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = a, this.asyncMeta = void 0, this.isAsyncPlaceholder = !1
        },
        fe = {
            child: {
                configurable: !0
            }
        };
    fe.child.get = function() {
        return this.componentInstance
    }, Object.defineProperties(pe.prototype, fe);
    var _e = function(e) {
        void 0 === e && (e = "");
        var t = new pe;
        return t.text = e, t.isComment = !0, t
    };

    function me(e) {
        return new pe(void 0, void 0, void 0, String(e))
    }

    function ge(e) {
        var t = new pe(e.tag, e.data, e.children && e.children.slice(), e.text, e.elm, e.context, e.componentOptions, e.asyncFactory);
        return t.ns = e.ns, t.isStatic = e.isStatic, t.key = e.key, t.isComment = e.isComment, t.fnContext = e.fnContext, t.fnOptions = e.fnOptions, t.fnScopeId = e.fnScopeId, t.asyncMeta = e.asyncMeta, t.isCloned = !0, t
    }
    var ve = Array.prototype,
        be = Object.create(ve);
    ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach((function(e) {
        var t = ve[e];
        U(be, e, (function() {
            for (var i = [], r = arguments.length; r--;) i[r] = arguments[r];
            var n, s = t.apply(this, i),
                o = this.__ob__;
            switch (e) {
                case "push":
                case "unshift":
                    n = i;
                    break;
                case "splice":
                    n = i.slice(2)
            }
            return n && o.observeArray(n), o.dep.notify(), s
        }))
    }));
    var ye = Object.getOwnPropertyNames(be),
        we = !0;

    function Me(e) {
        we = e
    }
    var Ae = function(e) {
        this.value = e, this.dep = new ce, this.vmCount = 0, U(e, "__ob__", this), Array.isArray(e) ? (z ? function(e, t) {
            e.__proto__ = t
        }(e, be) : function(e, t, i) {
            for (var r = 0, n = i.length; r < n; r++) {
                var s = i[r];
                U(e, s, t[s])
            }
        }(e, be, ye), this.observeArray(e)) : this.walk(e)
    };

    function xe(e, t) {
        var i;
        if (o(e) && !(e instanceof pe)) return v(e, "__ob__") && e.__ob__ instanceof Ae ? i = e.__ob__ : we && !ie() && (Array.isArray(e) || l(e)) && Object.isExtensible(e) && !e._isVue && (i = new Ae(e)), t && i && i.vmCount++, i
    }

    function Ce(e, t, i, r, n) {
        var s = new ce,
            o = Object.getOwnPropertyDescriptor(e, t);
        if (!o || !1 !== o.configurable) {
            var a = o && o.get,
                l = o && o.set;
            a && !l || 2 !== arguments.length || (i = e[t]);
            var c = !n && xe(i);
            Object.defineProperty(e, t, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    var t = a ? a.call(e) : i;
                    return ce.target && (s.depend(), c && (c.dep.depend(), Array.isArray(t) && Ee(t))), t
                },
                set: function(t) {
                    var r = a ? a.call(e) : i;
                    t === r || t != t && r != r || a && !l || (l ? l.call(e, t) : i = t, c = !n && xe(t), s.notify())
                }
            })
        }
    }

    function Pe(e, t, i) {
        if (Array.isArray(e) && c(t)) return e.length = Math.max(e.length, t), e.splice(t, 1, i), i;
        if (t in e && !(t in Object.prototype)) return e[t] = i, i;
        var r = e.__ob__;
        return e._isVue || r && r.vmCount ? i : r ? (Ce(r.value, t, i), r.dep.notify(), i) : (e[t] = i, i)
    }

    function ke(e, t) {
        if (Array.isArray(e) && c(t)) e.splice(t, 1);
        else {
            var i = e.__ob__;
            e._isVue || i && i.vmCount || v(e, t) && (delete e[t], i && i.dep.notify())
        }
    }

    function Ee(e) {
        for (var t = void 0, i = 0, r = e.length; i < r; i++)(t = e[i]) && t.__ob__ && t.__ob__.dep.depend(), Array.isArray(t) && Ee(t)
    }
    Ae.prototype.walk = function(e) {
        for (var t = Object.keys(e), i = 0; i < t.length; i++) Ce(e, t[i])
    }, Ae.prototype.observeArray = function(e) {
        for (var t = 0, i = e.length; t < i; t++) xe(e[t])
    };
    var Ie = O.optionMergeStrategies;

    function Te(e, t) {
        if (!t) return e;
        for (var i, r, n, s = oe ? Reflect.ownKeys(t) : Object.keys(t), o = 0; o < s.length; o++) "__ob__" !== (i = s[o]) && (r = e[i], n = t[i], v(e, i) ? r !== n && l(r) && l(n) && Te(r, n) : Pe(e, i, n));
        return e
    }

    function De(e, t, i) {
        return i ? function() {
            var r = "function" == typeof t ? t.call(i, i) : t,
                n = "function" == typeof e ? e.call(i, i) : e;
            return r ? Te(r, n) : n
        } : t ? e ? function() {
            return Te("function" == typeof t ? t.call(this, this) : t, "function" == typeof e ? e.call(this, this) : e)
        } : t : e
    }

    function Se(e, t) {
        var i = t ? e ? e.concat(t) : Array.isArray(t) ? t : [t] : e;
        return i ? function(e) {
            for (var t = [], i = 0; i < e.length; i++) - 1 === t.indexOf(e[i]) && t.push(e[i]);
            return t
        }(i) : i
    }

    function Be(e, t, i, r) {
        var n = Object.create(e || null);
        return t ? k(n, t) : n
    }
    Ie.data = function(e, t, i) {
        return i ? De(e, t, i) : t && "function" != typeof t ? e : De(e, t)
    }, R.forEach((function(e) {
        Ie[e] = Se
    })), L.forEach((function(e) {
        Ie[e + "s"] = Be
    })), Ie.watch = function(e, t, i, r) {
        if (e === J && (e = void 0), t === J && (t = void 0), !t) return Object.create(e || null);
        if (!e) return t;
        var n = {};
        for (var s in k(n, e), t) {
            var o = n[s],
                a = t[s];
            o && !Array.isArray(o) && (o = [o]), n[s] = o ? o.concat(a) : Array.isArray(a) ? a : [a]
        }
        return n
    }, Ie.props = Ie.methods = Ie.inject = Ie.computed = function(e, t, i, r) {
        if (!e) return t;
        var n = Object.create(null);
        return k(n, e), t && k(n, t), n
    }, Ie.provide = De;
    var je = function(e, t) {
        return void 0 === t ? e : t
    };

    function Le(e, t, i) {
        if ("function" == typeof t && (t = t.options), function(e, t) {
                var i = e.props;
                if (i) {
                    var r, n, s = {};
                    if (Array.isArray(i))
                        for (r = i.length; r--;) "string" == typeof(n = i[r]) && (s[w(n)] = {
                            type: null
                        });
                    else if (l(i))
                        for (var o in i) n = i[o], s[w(o)] = l(n) ? n : {
                            type: n
                        };
                    e.props = s
                }
            }(t), function(e, t) {
                var i = e.inject;
                if (i) {
                    var r = e.inject = {};
                    if (Array.isArray(i))
                        for (var n = 0; n < i.length; n++) r[i[n]] = {
                            from: i[n]
                        };
                    else if (l(i))
                        for (var s in i) {
                            var o = i[s];
                            r[s] = l(o) ? k({
                                from: s
                            }, o) : {
                                from: o
                            }
                        }
                }
            }(t), function(e) {
                var t = e.directives;
                if (t)
                    for (var i in t) {
                        var r = t[i];
                        "function" == typeof r && (t[i] = {
                            bind: r,
                            update: r
                        })
                    }
            }(t), !t._base && (t.extends && (e = Le(e, t.extends, i)), t.mixins))
            for (var r = 0, n = t.mixins.length; r < n; r++) e = Le(e, t.mixins[r], i);
        var s, o = {};
        for (s in e) a(s);
        for (s in t) v(e, s) || a(s);

        function a(r) {
            var n = Ie[r] || je;
            o[r] = n(e[r], t[r], i, r)
        }
        return o
    }

    function Re(e, t, i, r) {
        if ("string" == typeof i) {
            var n = e[t];
            if (v(n, i)) return n[i];
            var s = w(i);
            if (v(n, s)) return n[s];
            var o = M(s);
            return v(n, o) ? n[o] : n[i] || n[s] || n[o]
        }
    }

    function Oe(e, t, i, r) {
        var n = t[e],
            s = !v(i, e),
            o = i[e],
            a = Ue(Boolean, n.type);
        if (a > -1)
            if (s && !v(n, "default")) o = !1;
            else if ("" === o || o === x(e)) {
            var l = Ue(String, n.type);
            (l < 0 || a < l) && (o = !0)
        }
        if (void 0 === o) {
            o = function(e, t, i) {
                if (!v(t, "default")) return;
                var r = t.default;
                if (e && e.$options.propsData && void 0 === e.$options.propsData[i] && void 0 !== e._props[i]) return e._props[i];
                return "function" == typeof r && "Function" !== Fe(t.type) ? r.call(e) : r
            }(r, n, e);
            var c = we;
            Me(!0), xe(o), Me(c)
        }
        return o
    }

    function Fe(e) {
        var t = e && e.toString().match(/^\s*function (\w+)/);
        return t ? t[1] : ""
    }

    function Ne(e, t) {
        return Fe(e) === Fe(t)
    }

    function Ue(e, t) {
        if (!Array.isArray(t)) return Ne(t, e) ? 0 : -1;
        for (var i = 0, r = t.length; i < r; i++)
            if (Ne(t[i], e)) return i;
        return -1
    }

    function He(e, t, i) {
        de();
        try {
            if (t)
                for (var r = t; r = r.$parent;) {
                    var n = r.$options.errorCaptured;
                    if (n)
                        for (var s = 0; s < n.length; s++) try {
                            if (!1 === n[s].call(r, e, t, i)) return
                        } catch (e) {
                            ze(e, r, "errorCaptured hook")
                        }
                }
            ze(e, t, i)
        } finally {
            ue()
        }
    }

    function Ve(e, t, i, r, n) {
        var s;
        try {
            (s = i ? e.apply(t, i) : e.call(t)) && !s._isVue && h(s) && !s._handled && (s.catch((function(e) {
                return He(e, r, n + " (Promise/async)")
            })), s._handled = !0)
        } catch (e) {
            He(e, r, n)
        }
        return s
    }

    function ze(e, t, i) {
        if (O.errorHandler) try {
            return O.errorHandler.call(null, e, t, i)
        } catch (t) {
            t !== e && $e(t)
        }
        $e(e)
    }

    function $e(e, t, i) {
        if (!$ && !W || "undefined" == typeof console) throw e;
        console.error(e)
    }
    var We, qe = !1,
        Ge = [],
        Ye = !1;

    function Ze() {
        Ye = !1;
        var e = Ge.slice(0);
        Ge.length = 0;
        for (var t = 0; t < e.length; t++) e[t]()
    }
    if ("undefined" != typeof Promise && ne(Promise)) {
        var Xe = Promise.resolve();
        We = function() {
            Xe.then(Ze), K && setTimeout(I)
        }, qe = !0
    } else if (Y || "undefined" == typeof MutationObserver || !ne(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) We = "undefined" != typeof setImmediate && ne(setImmediate) ? function() {
        setImmediate(Ze)
    } : function() {
        setTimeout(Ze, 0)
    };
    else {
        var Ke = 1,
            Qe = new MutationObserver(Ze),
            Je = document.createTextNode(String(Ke));
        Qe.observe(Je, {
            characterData: !0
        }), We = function() {
            Ke = (Ke + 1) % 2, Je.data = String(Ke)
        }, qe = !0
    }

    function et(e, t) {
        var i;
        if (Ge.push((function() {
                if (e) try {
                    e.call(t)
                } catch (e) {
                    He(e, t, "nextTick")
                } else i && i(t)
            })), Ye || (Ye = !0, We()), !e && "undefined" != typeof Promise) return new Promise((function(e) {
            i = e
        }))
    }
    var tt = new se;

    function it(e) {
        ! function e(t, i) {
            var r, n, s = Array.isArray(t);
            if (!s && !o(t) || Object.isFrozen(t) || t instanceof pe) return;
            if (t.__ob__) {
                var a = t.__ob__.dep.id;
                if (i.has(a)) return;
                i.add(a)
            }
            if (s)
                for (r = t.length; r--;) e(t[r], i);
            else
                for (n = Object.keys(t), r = n.length; r--;) e(t[n[r]], i)
        }(e, tt), tt.clear()
    }
    var rt = b((function(e) {
        var t = "&" === e.charAt(0),
            i = "~" === (e = t ? e.slice(1) : e).charAt(0),
            r = "!" === (e = i ? e.slice(1) : e).charAt(0);
        return {
            name: e = r ? e.slice(1) : e,
            once: i,
            capture: r,
            passive: t
        }
    }));

    function nt(e, t) {
        function i() {
            var e = arguments,
                r = i.fns;
            if (!Array.isArray(r)) return Ve(r, null, arguments, t, "v-on handler");
            for (var n = r.slice(), s = 0; s < n.length; s++) Ve(n[s], null, e, t, "v-on handler")
        }
        return i.fns = e, i
    }

    function st(e, t, r, s, o, a) {
        var l, c, h, d;
        for (l in e) c = e[l], h = t[l], d = rt(l), i(c) || (i(h) ? (i(c.fns) && (c = e[l] = nt(c, a)), n(d.once) && (c = e[l] = o(d.name, c, d.capture)), r(d.name, c, d.capture, d.passive, d.params)) : c !== h && (h.fns = c, e[l] = h));
        for (l in t) i(e[l]) && s((d = rt(l)).name, t[l], d.capture)
    }

    function ot(e, t, s) {
        var o;
        e instanceof pe && (e = e.data.hook || (e.data.hook = {}));
        var a = e[t];

        function l() {
            s.apply(this, arguments), m(o.fns, l)
        }
        i(a) ? o = nt([l]) : r(a.fns) && n(a.merged) ? (o = a).fns.push(l) : o = nt([a, l]), o.merged = !0, e[t] = o
    }

    function at(e, t, i, n, s) {
        if (r(t)) {
            if (v(t, i)) return e[i] = t[i], s || delete t[i], !0;
            if (v(t, n)) return e[i] = t[n], s || delete t[n], !0
        }
        return !1
    }

    function lt(e) {
        return s(e) ? [me(e)] : Array.isArray(e) ? function e(t, o) {
            var a, l, c, h, d = [];
            for (a = 0; a < t.length; a++) i(l = t[a]) || "boolean" == typeof l || (c = d.length - 1, h = d[c], Array.isArray(l) ? l.length > 0 && (ct((l = e(l, (o || "") + "_" + a))[0]) && ct(h) && (d[c] = me(h.text + l[0].text), l.shift()), d.push.apply(d, l)) : s(l) ? ct(h) ? d[c] = me(h.text + l) : "" !== l && d.push(me(l)) : ct(l) && ct(h) ? d[c] = me(h.text + l.text) : (n(t._isVList) && r(l.tag) && i(l.key) && r(o) && (l.key = "__vlist" + o + "_" + a + "__"), d.push(l)));
            return d
        }(e) : void 0
    }

    function ct(e) {
        return r(e) && r(e.text) && !1 === e.isComment
    }

    function ht(e, t) {
        if (e) {
            for (var i = Object.create(null), r = oe ? Reflect.ownKeys(e) : Object.keys(e), n = 0; n < r.length; n++) {
                var s = r[n];
                if ("__ob__" !== s) {
                    for (var o = e[s].from, a = t; a;) {
                        if (a._provided && v(a._provided, o)) {
                            i[s] = a._provided[o];
                            break
                        }
                        a = a.$parent
                    }
                    if (!a && "default" in e[s]) {
                        var l = e[s].default;
                        i[s] = "function" == typeof l ? l.call(t) : l
                    }
                }
            }
            return i
        }
    }

    function dt(e, t) {
        if (!e || !e.length) return {};
        for (var i = {}, r = 0, n = e.length; r < n; r++) {
            var s = e[r],
                o = s.data;
            if (o && o.attrs && o.attrs.slot && delete o.attrs.slot, s.context !== t && s.fnContext !== t || !o || null == o.slot)(i.default || (i.default = [])).push(s);
            else {
                var a = o.slot,
                    l = i[a] || (i[a] = []);
                "template" === s.tag ? l.push.apply(l, s.children || []) : l.push(s)
            }
        }
        for (var c in i) i[c].every(ut) && delete i[c];
        return i
    }

    function ut(e) {
        return e.isComment && !e.asyncFactory || " " === e.text
    }

    function pt(e, i, r) {
        var n, s = Object.keys(i).length > 0,
            o = e ? !!e.$stable : !s,
            a = e && e.$key;
        if (e) {
            if (e._normalized) return e._normalized;
            if (o && r && r !== t && a === r.$key && !s && !r.$hasNormal) return r;
            for (var l in n = {}, e) e[l] && "$" !== l[0] && (n[l] = ft(i, l, e[l]))
        } else n = {};
        for (var c in i) c in n || (n[c] = _t(i, c));
        return e && Object.isExtensible(e) && (e._normalized = n), U(n, "$stable", o), U(n, "$key", a), U(n, "$hasNormal", s), n
    }

    function ft(e, t, i) {
        var r = function() {
            var e = arguments.length ? i.apply(null, arguments) : i({});
            return (e = e && "object" == typeof e && !Array.isArray(e) ? [e] : lt(e)) && (0 === e.length || 1 === e.length && e[0].isComment) ? void 0 : e
        };
        return i.proxy && Object.defineProperty(e, t, {
            get: r,
            enumerable: !0,
            configurable: !0
        }), r
    }

    function _t(e, t) {
        return function() {
            return e[t]
        }
    }

    function mt(e, t) {
        var i, n, s, a, l;
        if (Array.isArray(e) || "string" == typeof e)
            for (i = new Array(e.length), n = 0, s = e.length; n < s; n++) i[n] = t(e[n], n);
        else if ("number" == typeof e)
            for (i = new Array(e), n = 0; n < e; n++) i[n] = t(n + 1, n);
        else if (o(e))
            if (oe && e[Symbol.iterator]) {
                i = [];
                for (var c = e[Symbol.iterator](), h = c.next(); !h.done;) i.push(t(h.value, i.length)), h = c.next()
            } else
                for (a = Object.keys(e), i = new Array(a.length), n = 0, s = a.length; n < s; n++) l = a[n], i[n] = t(e[l], l, n);
        return r(i) || (i = []), i._isVList = !0, i
    }

    function gt(e, t, i, r) {
        var n, s = this.$scopedSlots[e];
        s ? (i = i || {}, r && (i = k(k({}, r), i)), n = s(i) || t) : n = this.$slots[e] || t;
        var o = i && i.slot;
        return o ? this.$createElement("template", {
            slot: o
        }, n) : n
    }

    function vt(e) {
        return Re(this.$options, "filters", e) || D
    }

    function bt(e, t) {
        return Array.isArray(e) ? -1 === e.indexOf(t) : e !== t
    }

    function yt(e, t, i, r, n) {
        var s = O.keyCodes[t] || i;
        return n && r && !O.keyCodes[t] ? bt(n, r) : s ? bt(s, e) : r ? x(r) !== t : void 0
    }

    function wt(e, t, i, r, n) {
        if (i)
            if (o(i)) {
                var s;
                Array.isArray(i) && (i = E(i));
                var a = function(o) {
                    if ("class" === o || "style" === o || _(o)) s = e;
                    else {
                        var a = e.attrs && e.attrs.type;
                        s = r || O.mustUseProp(t, a, o) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {})
                    }
                    var l = w(o),
                        c = x(o);
                    l in s || c in s || (s[o] = i[o], n && ((e.on || (e.on = {}))["update:" + o] = function(e) {
                        i[o] = e
                    }))
                };
                for (var l in i) a(l)
            } else;
        return e
    }

    function Mt(e, t) {
        var i = this._staticTrees || (this._staticTrees = []),
            r = i[e];
        return r && !t ? r : (xt(r = i[e] = this.$options.staticRenderFns[e].call(this._renderProxy, null, this), "__static__" + e, !1), r)
    }

    function At(e, t, i) {
        return xt(e, "__once__" + t + (i ? "_" + i : ""), !0), e
    }

    function xt(e, t, i) {
        if (Array.isArray(e))
            for (var r = 0; r < e.length; r++) e[r] && "string" != typeof e[r] && Ct(e[r], t + "_" + r, i);
        else Ct(e, t, i)
    }

    function Ct(e, t, i) {
        e.isStatic = !0, e.key = t, e.isOnce = i
    }

    function Pt(e, t) {
        if (t)
            if (l(t)) {
                var i = e.on = e.on ? k({}, e.on) : {};
                for (var r in t) {
                    var n = i[r],
                        s = t[r];
                    i[r] = n ? [].concat(n, s) : s
                }
            } else;
        return e
    }

    function kt(e, t, i, r) {
        t = t || {
            $stable: !i
        };
        for (var n = 0; n < e.length; n++) {
            var s = e[n];
            Array.isArray(s) ? kt(s, t, i) : s && (s.proxy && (s.fn.proxy = !0), t[s.key] = s.fn)
        }
        return r && (t.$key = r), t
    }

    function Et(e, t) {
        for (var i = 0; i < t.length; i += 2) {
            var r = t[i];
            "string" == typeof r && r && (e[t[i]] = t[i + 1])
        }
        return e
    }

    function It(e, t) {
        return "string" == typeof e ? t + e : e
    }

    function Tt(e) {
        e._o = At, e._n = u, e._s = d, e._l = mt, e._t = gt, e._q = S, e._i = B, e._m = Mt, e._f = vt, e._k = yt, e._b = wt, e._v = me, e._e = _e, e._u = kt, e._g = Pt, e._d = Et, e._p = It
    }

    function Dt(e, i, r, s, o) {
        var a, l = this,
            c = o.options;
        v(s, "_uid") ? (a = Object.create(s))._original = s : (a = s, s = s._original);
        var h = n(c._compiled),
            d = !h;
        this.data = e, this.props = i, this.children = r, this.parent = s, this.listeners = e.on || t, this.injections = ht(c.inject, s), this.slots = function() {
            return l.$slots || pt(e.scopedSlots, l.$slots = dt(r, s)), l.$slots
        }, Object.defineProperty(this, "scopedSlots", {
            enumerable: !0,
            get: function() {
                return pt(e.scopedSlots, this.slots())
            }
        }), h && (this.$options = c, this.$slots = this.slots(), this.$scopedSlots = pt(e.scopedSlots, this.$slots)), c._scopeId ? this._c = function(e, t, i, r) {
            var n = Ft(a, e, t, i, r, d);
            return n && !Array.isArray(n) && (n.fnScopeId = c._scopeId, n.fnContext = s), n
        } : this._c = function(e, t, i, r) {
            return Ft(a, e, t, i, r, d)
        }
    }

    function St(e, t, i, r, n) {
        var s = ge(e);
        return s.fnContext = i, s.fnOptions = r, t.slot && ((s.data || (s.data = {})).slot = t.slot), s
    }

    function Bt(e, t) {
        for (var i in t) e[w(i)] = t[i]
    }
    Tt(Dt.prototype);
    var jt = {
            init: function(e, t) {
                if (e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive) {
                    var i = e;
                    jt.prepatch(i, i)
                } else {
                    (e.componentInstance = function(e, t) {
                        var i = {
                                _isComponent: !0,
                                _parentVnode: e,
                                parent: t
                            },
                            n = e.data.inlineTemplate;
                        r(n) && (i.render = n.render, i.staticRenderFns = n.staticRenderFns);
                        return new e.componentOptions.Ctor(i)
                    }(e, Yt)).$mount(t ? e.elm : void 0, t)
                }
            },
            prepatch: function(e, i) {
                var r = i.componentOptions;
                ! function(e, i, r, n, s) {
                    var o = n.data.scopedSlots,
                        a = e.$scopedSlots,
                        l = !!(o && !o.$stable || a !== t && !a.$stable || o && e.$scopedSlots.$key !== o.$key),
                        c = !!(s || e.$options._renderChildren || l);
                    e.$options._parentVnode = n, e.$vnode = n, e._vnode && (e._vnode.parent = n);
                    if (e.$options._renderChildren = s, e.$attrs = n.data.attrs || t, e.$listeners = r || t, i && e.$options.props) {
                        Me(!1);
                        for (var h = e._props, d = e.$options._propKeys || [], u = 0; u < d.length; u++) {
                            var p = d[u],
                                f = e.$options.props;
                            h[p] = Oe(p, f, i, e)
                        }
                        Me(!0), e.$options.propsData = i
                    }
                    r = r || t;
                    var _ = e.$options._parentListeners;
                    e.$options._parentListeners = r, Gt(e, r, _), c && (e.$slots = dt(s, n.context), e.$forceUpdate())
                }(i.componentInstance = e.componentInstance, r.propsData, r.listeners, i, r.children)
            },
            insert: function(e) {
                var t, i = e.context,
                    r = e.componentInstance;
                r._isMounted || (r._isMounted = !0, Qt(r, "mounted")), e.data.keepAlive && (i._isMounted ? ((t = r)._inactive = !1, ei.push(t)) : Kt(r, !0))
            },
            destroy: function(e) {
                var t = e.componentInstance;
                t._isDestroyed || (e.data.keepAlive ? function e(t, i) {
                    if (i && (t._directInactive = !0, Xt(t))) return;
                    if (!t._inactive) {
                        t._inactive = !0;
                        for (var r = 0; r < t.$children.length; r++) e(t.$children[r]);
                        Qt(t, "deactivated")
                    }
                }(t, !0) : t.$destroy())
            }
        },
        Lt = Object.keys(jt);

    function Rt(e, s, a, l, c) {
        if (!i(e)) {
            var d = a.$options._base;
            if (o(e) && (e = d.extend(e)), "function" == typeof e) {
                var u;
                if (i(e.cid) && void 0 === (e = function(e, t) {
                        if (n(e.error) && r(e.errorComp)) return e.errorComp;
                        if (r(e.resolved)) return e.resolved;
                        var s = Ut;
                        s && r(e.owners) && -1 === e.owners.indexOf(s) && e.owners.push(s);
                        if (n(e.loading) && r(e.loadingComp)) return e.loadingComp;
                        if (s && !r(e.owners)) {
                            var a = e.owners = [s],
                                l = !0,
                                c = null,
                                d = null;
                            s.$on("hook:destroyed", (function() {
                                return m(a, s)
                            }));
                            var u = function(e) {
                                    for (var t = 0, i = a.length; t < i; t++) a[t].$forceUpdate();
                                    e && (a.length = 0, null !== c && (clearTimeout(c), c = null), null !== d && (clearTimeout(d), d = null))
                                },
                                p = j((function(i) {
                                    e.resolved = Ht(i, t), l ? a.length = 0 : u(!0)
                                })),
                                f = j((function(t) {
                                    r(e.errorComp) && (e.error = !0, u(!0))
                                })),
                                _ = e(p, f);
                            return o(_) && (h(_) ? i(e.resolved) && _.then(p, f) : h(_.component) && (_.component.then(p, f), r(_.error) && (e.errorComp = Ht(_.error, t)), r(_.loading) && (e.loadingComp = Ht(_.loading, t), 0 === _.delay ? e.loading = !0 : c = setTimeout((function() {
                                c = null, i(e.resolved) && i(e.error) && (e.loading = !0, u(!1))
                            }), _.delay || 200)), r(_.timeout) && (d = setTimeout((function() {
                                d = null, i(e.resolved) && f(null)
                            }), _.timeout)))), l = !1, e.loading ? e.loadingComp : e.resolved
                        }
                    }(u = e, d))) return function(e, t, i, r, n) {
                    var s = _e();
                    return s.asyncFactory = e, s.asyncMeta = {
                        data: t,
                        context: i,
                        children: r,
                        tag: n
                    }, s
                }(u, s, a, l, c);
                s = s || {}, yi(e), r(s.model) && function(e, t) {
                    var i = e.model && e.model.prop || "value",
                        n = e.model && e.model.event || "input";
                    (t.attrs || (t.attrs = {}))[i] = t.model.value;
                    var s = t.on || (t.on = {}),
                        o = s[n],
                        a = t.model.callback;
                    r(o) ? (Array.isArray(o) ? -1 === o.indexOf(a) : o !== a) && (s[n] = [a].concat(o)) : s[n] = a
                }(e.options, s);
                var p = function(e, t, n) {
                    var s = t.options.props;
                    if (!i(s)) {
                        var o = {},
                            a = e.attrs,
                            l = e.props;
                        if (r(a) || r(l))
                            for (var c in s) {
                                var h = x(c);
                                at(o, l, c, h, !0) || at(o, a, c, h, !1)
                            }
                        return o
                    }
                }(s, e);
                if (n(e.options.functional)) return function(e, i, n, s, o) {
                    var a = e.options,
                        l = {},
                        c = a.props;
                    if (r(c))
                        for (var h in c) l[h] = Oe(h, c, i || t);
                    else r(n.attrs) && Bt(l, n.attrs), r(n.props) && Bt(l, n.props);
                    var d = new Dt(n, l, o, s, e),
                        u = a.render.call(null, d._c, d);
                    if (u instanceof pe) return St(u, n, d.parent, a);
                    if (Array.isArray(u)) {
                        for (var p = lt(u) || [], f = new Array(p.length), _ = 0; _ < p.length; _++) f[_] = St(p[_], n, d.parent, a);
                        return f
                    }
                }(e, p, s, a, l);
                var f = s.on;
                if (s.on = s.nativeOn, n(e.options.abstract)) {
                    var _ = s.slot;
                    s = {}, _ && (s.slot = _)
                }! function(e) {
                    for (var t = e.hook || (e.hook = {}), i = 0; i < Lt.length; i++) {
                        var r = Lt[i],
                            n = t[r],
                            s = jt[r];
                        n === s || n && n._merged || (t[r] = n ? Ot(s, n) : s)
                    }
                }(s);
                var g = e.options.name || c;
                return new pe("vue-component-" + e.cid + (g ? "-" + g : ""), s, void 0, void 0, void 0, a, {
                    Ctor: e,
                    propsData: p,
                    listeners: f,
                    tag: c,
                    children: l
                }, u)
            }
        }
    }

    function Ot(e, t) {
        var i = function(i, r) {
            e(i, r), t(i, r)
        };
        return i._merged = !0, i
    }

    function Ft(e, t, a, l, c, h) {
        return (Array.isArray(a) || s(a)) && (c = l, l = a, a = void 0), n(h) && (c = 2),
            function(e, t, s, a, l) {
                if (r(s) && r(s.__ob__)) return _e();
                r(s) && r(s.is) && (t = s.is);
                if (!t) return _e();
                Array.isArray(a) && "function" == typeof a[0] && ((s = s || {}).scopedSlots = {
                    default: a[0]
                }, a.length = 0);
                2 === l ? a = lt(a) : 1 === l && (a = function(e) {
                    for (var t = 0; t < e.length; t++)
                        if (Array.isArray(e[t])) return Array.prototype.concat.apply([], e);
                    return e
                }(a));
                var c, h;
                if ("string" == typeof t) {
                    var d;
                    h = e.$vnode && e.$vnode.ns || O.getTagNamespace(t), c = O.isReservedTag(t) ? new pe(O.parsePlatformTagName(t), s, a, void 0, void 0, e) : s && s.pre || !r(d = Re(e.$options, "components", t)) ? new pe(t, s, a, void 0, void 0, e) : Rt(d, s, e, a, t)
                } else c = Rt(t, s, e, a);
                return Array.isArray(c) ? c : r(c) ? (r(h) && function e(t, s, o) {
                    t.ns = s, "foreignObject" === t.tag && (s = void 0, o = !0);
                    if (r(t.children))
                        for (var a = 0, l = t.children.length; a < l; a++) {
                            var c = t.children[a];
                            r(c.tag) && (i(c.ns) || n(o) && "svg" !== c.tag) && e(c, s, o)
                        }
                }(c, h), r(s) && function(e) {
                    o(e.style) && it(e.style);
                    o(e.class) && it(e.class)
                }(s), c) : _e()
            }(e, t, a, l, c)
    }
    var Nt, Ut = null;

    function Ht(e, t) {
        return (e.__esModule || oe && "Module" === e[Symbol.toStringTag]) && (e = e.default), o(e) ? t.extend(e) : e
    }

    function Vt(e) {
        return e.isComment && e.asyncFactory
    }

    function zt(e) {
        if (Array.isArray(e))
            for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (r(i) && (r(i.componentOptions) || Vt(i))) return i
            }
    }

    function $t(e, t) {
        Nt.$on(e, t)
    }

    function Wt(e, t) {
        Nt.$off(e, t)
    }

    function qt(e, t) {
        var i = Nt;
        return function r() {
            var n = t.apply(null, arguments);
            null !== n && i.$off(e, r)
        }
    }

    function Gt(e, t, i) {
        Nt = e, st(t, i || {}, $t, Wt, qt, e), Nt = void 0
    }
    var Yt = null;

    function Zt(e) {
        var t = Yt;
        return Yt = e,
            function() {
                Yt = t
            }
    }

    function Xt(e) {
        for (; e && (e = e.$parent);)
            if (e._inactive) return !0;
        return !1
    }

    function Kt(e, t) {
        if (t) {
            if (e._directInactive = !1, Xt(e)) return
        } else if (e._directInactive) return;
        if (e._inactive || null === e._inactive) {
            e._inactive = !1;
            for (var i = 0; i < e.$children.length; i++) Kt(e.$children[i]);
            Qt(e, "activated")
        }
    }

    function Qt(e, t) {
        de();
        var i = e.$options[t],
            r = t + " hook";
        if (i)
            for (var n = 0, s = i.length; n < s; n++) Ve(i[n], e, null, e, r);
        e._hasHookEvent && e.$emit("hook:" + t), ue()
    }
    var Jt = [],
        ei = [],
        ti = {},
        ii = !1,
        ri = !1,
        ni = 0;
    var si = 0,
        oi = Date.now;
    if ($ && !Y) {
        var ai = window.performance;
        ai && "function" == typeof ai.now && oi() > document.createEvent("Event").timeStamp && (oi = function() {
            return ai.now()
        })
    }

    function li() {
        var e, t;
        for (si = oi(), ri = !0, Jt.sort((function(e, t) {
                return e.id - t.id
            })), ni = 0; ni < Jt.length; ni++)(e = Jt[ni]).before && e.before(), t = e.id, ti[t] = null, e.run();
        var i = ei.slice(),
            r = Jt.slice();
        ni = Jt.length = ei.length = 0, ti = {}, ii = ri = !1,
            function(e) {
                for (var t = 0; t < e.length; t++) e[t]._inactive = !0, Kt(e[t], !0)
            }(i),
            function(e) {
                var t = e.length;
                for (; t--;) {
                    var i = e[t],
                        r = i.vm;
                    r._watcher === i && r._isMounted && !r._isDestroyed && Qt(r, "updated")
                }
            }(r), re && O.devtools && re.emit("flush")
    }
    var ci = 0,
        hi = function(e, t, i, r, n) {
            this.vm = e, n && (e._watcher = this), e._watchers.push(this), r ? (this.deep = !!r.deep, this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync, this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1, this.cb = i, this.id = ++ci, this.active = !0, this.dirty = this.lazy, this.deps = [], this.newDeps = [], this.depIds = new se, this.newDepIds = new se, this.expression = "", "function" == typeof t ? this.getter = t : (this.getter = function(e) {
                if (!H.test(e)) {
                    var t = e.split(".");
                    return function(e) {
                        for (var i = 0; i < t.length; i++) {
                            if (!e) return;
                            e = e[t[i]]
                        }
                        return e
                    }
                }
            }(t), this.getter || (this.getter = I)), this.value = this.lazy ? void 0 : this.get()
        };
    hi.prototype.get = function() {
        var e;
        de(this);
        var t = this.vm;
        try {
            e = this.getter.call(t, t)
        } catch (e) {
            if (!this.user) throw e;
            He(e, t, 'getter for watcher "' + this.expression + '"')
        } finally {
            this.deep && it(e), ue(), this.cleanupDeps()
        }
        return e
    }, hi.prototype.addDep = function(e) {
        var t = e.id;
        this.newDepIds.has(t) || (this.newDepIds.add(t), this.newDeps.push(e), this.depIds.has(t) || e.addSub(this))
    }, hi.prototype.cleanupDeps = function() {
        for (var e = this.deps.length; e--;) {
            var t = this.deps[e];
            this.newDepIds.has(t.id) || t.removeSub(this)
        }
        var i = this.depIds;
        this.depIds = this.newDepIds, this.newDepIds = i, this.newDepIds.clear(), i = this.deps, this.deps = this.newDeps, this.newDeps = i, this.newDeps.length = 0
    }, hi.prototype.update = function() {
        this.lazy ? this.dirty = !0 : this.sync ? this.run() : function(e) {
            var t = e.id;
            if (null == ti[t]) {
                if (ti[t] = !0, ri) {
                    for (var i = Jt.length - 1; i > ni && Jt[i].id > e.id;) i--;
                    Jt.splice(i + 1, 0, e)
                } else Jt.push(e);
                ii || (ii = !0, et(li))
            }
        }(this)
    }, hi.prototype.run = function() {
        if (this.active) {
            var e = this.get();
            if (e !== this.value || o(e) || this.deep) {
                var t = this.value;
                if (this.value = e, this.user) try {
                    this.cb.call(this.vm, e, t)
                } catch (e) {
                    He(e, this.vm, 'callback for watcher "' + this.expression + '"')
                } else this.cb.call(this.vm, e, t)
            }
        }
    }, hi.prototype.evaluate = function() {
        this.value = this.get(), this.dirty = !1
    }, hi.prototype.depend = function() {
        for (var e = this.deps.length; e--;) this.deps[e].depend()
    }, hi.prototype.teardown = function() {
        if (this.active) {
            this.vm._isBeingDestroyed || m(this.vm._watchers, this);
            for (var e = this.deps.length; e--;) this.deps[e].removeSub(this);
            this.active = !1
        }
    };
    var di = {
        enumerable: !0,
        configurable: !0,
        get: I,
        set: I
    };

    function ui(e, t, i) {
        di.get = function() {
            return this[t][i]
        }, di.set = function(e) {
            this[t][i] = e
        }, Object.defineProperty(e, i, di)
    }

    function pi(e) {
        e._watchers = [];
        var t = e.$options;
        t.props && function(e, t) {
            var i = e.$options.propsData || {},
                r = e._props = {},
                n = e.$options._propKeys = [];
            e.$parent && Me(!1);
            var s = function(s) {
                n.push(s);
                var o = Oe(s, t, i, e);
                Ce(r, s, o), s in e || ui(e, "_props", s)
            };
            for (var o in t) s(o);
            Me(!0)
        }(e, t.props), t.methods && function(e, t) {
            e.$options.props;
            for (var i in t) e[i] = "function" != typeof t[i] ? I : C(t[i], e)
        }(e, t.methods), t.data ? function(e) {
            var t = e.$options.data;
            l(t = e._data = "function" == typeof t ? function(e, t) {
                de();
                try {
                    return e.call(t, t)
                } catch (e) {
                    return He(e, t, "data()"), {}
                } finally {
                    ue()
                }
            }(t, e) : t || {}) || (t = {});
            var i = Object.keys(t),
                r = e.$options.props,
                n = (e.$options.methods, i.length);
            for (; n--;) {
                var s = i[n];
                r && v(r, s) || N(s) || ui(e, "_data", s)
            }
            xe(t, !0)
        }(e) : xe(e._data = {}, !0), t.computed && function(e, t) {
            var i = e._computedWatchers = Object.create(null),
                r = ie();
            for (var n in t) {
                var s = t[n],
                    o = "function" == typeof s ? s : s.get;
                r || (i[n] = new hi(e, o || I, I, fi)), n in e || _i(e, n, s)
            }
        }(e, t.computed), t.watch && t.watch !== J && function(e, t) {
            for (var i in t) {
                var r = t[i];
                if (Array.isArray(r))
                    for (var n = 0; n < r.length; n++) vi(e, i, r[n]);
                else vi(e, i, r)
            }
        }(e, t.watch)
    }
    var fi = {
        lazy: !0
    };

    function _i(e, t, i) {
        var r = !ie();
        "function" == typeof i ? (di.get = r ? mi(t) : gi(i), di.set = I) : (di.get = i.get ? r && !1 !== i.cache ? mi(t) : gi(i.get) : I, di.set = i.set || I), Object.defineProperty(e, t, di)
    }

    function mi(e) {
        return function() {
            var t = this._computedWatchers && this._computedWatchers[e];
            if (t) return t.dirty && t.evaluate(), ce.target && t.depend(), t.value
        }
    }

    function gi(e) {
        return function() {
            return e.call(this, this)
        }
    }

    function vi(e, t, i, r) {
        return l(i) && (r = i, i = i.handler), "string" == typeof i && (i = e[i]), e.$watch(t, i, r)
    }
    var bi = 0;

    function yi(e) {
        var t = e.options;
        if (e.super) {
            var i = yi(e.super);
            if (i !== e.superOptions) {
                e.superOptions = i;
                var r = function(e) {
                    var t, i = e.options,
                        r = e.sealedOptions;
                    for (var n in i) i[n] !== r[n] && (t || (t = {}), t[n] = i[n]);
                    return t
                }(e);
                r && k(e.extendOptions, r), (t = e.options = Le(i, e.extendOptions)).name && (t.components[t.name] = e)
            }
        }
        return t
    }

    function wi(e) {
        this._init(e)
    }

    function Mi(e) {
        e.cid = 0;
        var t = 1;
        e.extend = function(e) {
            e = e || {};
            var i = this,
                r = i.cid,
                n = e._Ctor || (e._Ctor = {});
            if (n[r]) return n[r];
            var s = e.name || i.options.name,
                o = function(e) {
                    this._init(e)
                };
            return (o.prototype = Object.create(i.prototype)).constructor = o, o.cid = t++, o.options = Le(i.options, e), o.super = i, o.options.props && function(e) {
                var t = e.options.props;
                for (var i in t) ui(e.prototype, "_props", i)
            }(o), o.options.computed && function(e) {
                var t = e.options.computed;
                for (var i in t) _i(e.prototype, i, t[i])
            }(o), o.extend = i.extend, o.mixin = i.mixin, o.use = i.use, L.forEach((function(e) {
                o[e] = i[e]
            })), s && (o.options.components[s] = o), o.superOptions = i.options, o.extendOptions = e, o.sealedOptions = k({}, o.options), n[r] = o, o
        }
    }

    function Ai(e) {
        return e && (e.Ctor.options.name || e.tag)
    }

    function xi(e, t) {
        return Array.isArray(e) ? e.indexOf(t) > -1 : "string" == typeof e ? e.split(",").indexOf(t) > -1 : (i = e, "[object RegExp]" === a.call(i) && e.test(t));
        var i
    }

    function Ci(e, t) {
        var i = e.cache,
            r = e.keys,
            n = e._vnode;
        for (var s in i) {
            var o = i[s];
            if (o) {
                var a = Ai(o.componentOptions);
                a && !t(a) && Pi(i, s, r, n)
            }
        }
    }

    function Pi(e, t, i, r) {
        var n = e[t];
        !n || r && n.tag === r.tag || n.componentInstance.$destroy(), e[t] = null, m(i, t)
    }! function(e) {
        e.prototype._init = function(e) {
            var i = this;
            i._uid = bi++, i._isVue = !0, e && e._isComponent ? function(e, t) {
                    var i = e.$options = Object.create(e.constructor.options),
                        r = t._parentVnode;
                    i.parent = t.parent, i._parentVnode = r;
                    var n = r.componentOptions;
                    i.propsData = n.propsData, i._parentListeners = n.listeners, i._renderChildren = n.children, i._componentTag = n.tag, t.render && (i.render = t.render, i.staticRenderFns = t.staticRenderFns)
                }(i, e) : i.$options = Le(yi(i.constructor), e || {}, i), i._renderProxy = i, i._self = i,
                function(e) {
                    var t = e.$options,
                        i = t.parent;
                    if (i && !t.abstract) {
                        for (; i.$options.abstract && i.$parent;) i = i.$parent;
                        i.$children.push(e)
                    }
                    e.$parent = i, e.$root = i ? i.$root : e, e.$children = [], e.$refs = {}, e._watcher = null, e._inactive = null, e._directInactive = !1, e._isMounted = !1, e._isDestroyed = !1, e._isBeingDestroyed = !1
                }(i),
                function(e) {
                    e._events = Object.create(null), e._hasHookEvent = !1;
                    var t = e.$options._parentListeners;
                    t && Gt(e, t)
                }(i),
                function(e) {
                    e._vnode = null, e._staticTrees = null;
                    var i = e.$options,
                        r = e.$vnode = i._parentVnode,
                        n = r && r.context;
                    e.$slots = dt(i._renderChildren, n), e.$scopedSlots = t, e._c = function(t, i, r, n) {
                        return Ft(e, t, i, r, n, !1)
                    }, e.$createElement = function(t, i, r, n) {
                        return Ft(e, t, i, r, n, !0)
                    };
                    var s = r && r.data;
                    Ce(e, "$attrs", s && s.attrs || t, null, !0), Ce(e, "$listeners", i._parentListeners || t, null, !0)
                }(i), Qt(i, "beforeCreate"),
                function(e) {
                    var t = ht(e.$options.inject, e);
                    t && (Me(!1), Object.keys(t).forEach((function(i) {
                        Ce(e, i, t[i])
                    })), Me(!0))
                }(i), pi(i),
                function(e) {
                    var t = e.$options.provide;
                    t && (e._provided = "function" == typeof t ? t.call(e) : t)
                }(i), Qt(i, "created"), i.$options.el && i.$mount(i.$options.el)
        }
    }(wi),
    function(e) {
        var t = {
                get: function() {
                    return this._data
                }
            },
            i = {
                get: function() {
                    return this._props
                }
            };
        Object.defineProperty(e.prototype, "$data", t), Object.defineProperty(e.prototype, "$props", i), e.prototype.$set = Pe, e.prototype.$delete = ke, e.prototype.$watch = function(e, t, i) {
            if (l(t)) return vi(this, e, t, i);
            (i = i || {}).user = !0;
            var r = new hi(this, e, t, i);
            if (i.immediate) try {
                t.call(this, r.value)
            } catch (e) {
                He(e, this, 'callback for immediate watcher "' + r.expression + '"')
            }
            return function() {
                r.teardown()
            }
        }
    }(wi),
    function(e) {
        var t = /^hook:/;
        e.prototype.$on = function(e, i) {
            var r = this;
            if (Array.isArray(e))
                for (var n = 0, s = e.length; n < s; n++) r.$on(e[n], i);
            else(r._events[e] || (r._events[e] = [])).push(i), t.test(e) && (r._hasHookEvent = !0);
            return r
        }, e.prototype.$once = function(e, t) {
            var i = this;

            function r() {
                i.$off(e, r), t.apply(i, arguments)
            }
            return r.fn = t, i.$on(e, r), i
        }, e.prototype.$off = function(e, t) {
            var i = this;
            if (!arguments.length) return i._events = Object.create(null), i;
            if (Array.isArray(e)) {
                for (var r = 0, n = e.length; r < n; r++) i.$off(e[r], t);
                return i
            }
            var s, o = i._events[e];
            if (!o) return i;
            if (!t) return i._events[e] = null, i;
            for (var a = o.length; a--;)
                if ((s = o[a]) === t || s.fn === t) {
                    o.splice(a, 1);
                    break
                } return i
        }, e.prototype.$emit = function(e) {
            var t = this,
                i = t._events[e];
            if (i) {
                i = i.length > 1 ? P(i) : i;
                for (var r = P(arguments, 1), n = 'event handler for "' + e + '"', s = 0, o = i.length; s < o; s++) Ve(i[s], t, r, t, n)
            }
            return t
        }
    }(wi),
    function(e) {
        e.prototype._update = function(e, t) {
            var i = this,
                r = i.$el,
                n = i._vnode,
                s = Zt(i);
            i._vnode = e, i.$el = n ? i.__patch__(n, e) : i.__patch__(i.$el, e, t, !1), s(), r && (r.__vue__ = null), i.$el && (i.$el.__vue__ = i), i.$vnode && i.$parent && i.$vnode === i.$parent._vnode && (i.$parent.$el = i.$el)
        }, e.prototype.$forceUpdate = function() {
            this._watcher && this._watcher.update()
        }, e.prototype.$destroy = function() {
            var e = this;
            if (!e._isBeingDestroyed) {
                Qt(e, "beforeDestroy"), e._isBeingDestroyed = !0;
                var t = e.$parent;
                !t || t._isBeingDestroyed || e.$options.abstract || m(t.$children, e), e._watcher && e._watcher.teardown();
                for (var i = e._watchers.length; i--;) e._watchers[i].teardown();
                e._data.__ob__ && e._data.__ob__.vmCount--, e._isDestroyed = !0, e.__patch__(e._vnode, null), Qt(e, "destroyed"), e.$off(), e.$el && (e.$el.__vue__ = null), e.$vnode && (e.$vnode.parent = null)
            }
        }
    }(wi),
    function(e) {
        Tt(e.prototype), e.prototype.$nextTick = function(e) {
            return et(e, this)
        }, e.prototype._render = function() {
            var e, t = this,
                i = t.$options,
                r = i.render,
                n = i._parentVnode;
            n && (t.$scopedSlots = pt(n.data.scopedSlots, t.$slots, t.$scopedSlots)), t.$vnode = n;
            try {
                Ut = t, e = r.call(t._renderProxy, t.$createElement)
            } catch (i) {
                He(i, t, "render"), e = t._vnode
            } finally {
                Ut = null
            }
            return Array.isArray(e) && 1 === e.length && (e = e[0]), e instanceof pe || (e = _e()), e.parent = n, e
        }
    }(wi);
    var ki = [String, RegExp, Array],
        Ei = {
            KeepAlive: {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: ki,
                    exclude: ki,
                    max: [String, Number]
                },
                created: function() {
                    this.cache = Object.create(null), this.keys = []
                },
                destroyed: function() {
                    for (var e in this.cache) Pi(this.cache, e, this.keys)
                },
                mounted: function() {
                    var e = this;
                    this.$watch("include", (function(t) {
                        Ci(e, (function(e) {
                            return xi(t, e)
                        }))
                    })), this.$watch("exclude", (function(t) {
                        Ci(e, (function(e) {
                            return !xi(t, e)
                        }))
                    }))
                },
                render: function() {
                    var e = this.$slots.default,
                        t = zt(e),
                        i = t && t.componentOptions;
                    if (i) {
                        var r = Ai(i),
                            n = this.include,
                            s = this.exclude;
                        if (n && (!r || !xi(n, r)) || s && r && xi(s, r)) return t;
                        var o = this.cache,
                            a = this.keys,
                            l = null == t.key ? i.Ctor.cid + (i.tag ? "::" + i.tag : "") : t.key;
                        o[l] ? (t.componentInstance = o[l].componentInstance, m(a, l), a.push(l)) : (o[l] = t, a.push(l), this.max && a.length > parseInt(this.max) && Pi(o, a[0], a, this._vnode)), t.data.keepAlive = !0
                    }
                    return t || e && e[0]
                }
            }
        };
    ! function(e) {
        var t = {
            get: function() {
                return O
            }
        };
        Object.defineProperty(e, "config", t), e.util = {
                warn: ae,
                extend: k,
                mergeOptions: Le,
                defineReactive: Ce
            }, e.set = Pe, e.delete = ke, e.nextTick = et, e.observable = function(e) {
                return xe(e), e
            }, e.options = Object.create(null), L.forEach((function(t) {
                e.options[t + "s"] = Object.create(null)
            })), e.options._base = e, k(e.options.components, Ei),
            function(e) {
                e.use = function(e) {
                    var t = this._installedPlugins || (this._installedPlugins = []);
                    if (t.indexOf(e) > -1) return this;
                    var i = P(arguments, 1);
                    return i.unshift(this), "function" == typeof e.install ? e.install.apply(e, i) : "function" == typeof e && e.apply(null, i), t.push(e), this
                }
            }(e),
            function(e) {
                e.mixin = function(e) {
                    return this.options = Le(this.options, e), this
                }
            }(e), Mi(e),
            function(e) {
                L.forEach((function(t) {
                    e[t] = function(e, i) {
                        return i ? ("component" === t && l(i) && (i.name = i.name || e, i = this.options._base.extend(i)), "directive" === t && "function" == typeof i && (i = {
                            bind: i,
                            update: i
                        }), this.options[t + "s"][e] = i, i) : this.options[t + "s"][e]
                    }
                }))
            }(e)
    }(wi), Object.defineProperty(wi.prototype, "$isServer", {
        get: ie
    }), Object.defineProperty(wi.prototype, "$ssrContext", {
        get: function() {
            return this.$vnode && this.$vnode.ssrContext
        }
    }), Object.defineProperty(wi, "FunctionalRenderContext", {
        value: Dt
    }), wi.version = "2.6.11";
    var Ii = p("style,class"),
        Ti = p("input,textarea,option,select,progress"),
        Di = function(e, t, i) {
            return "value" === i && Ti(e) && "button" !== t || "selected" === i && "option" === e || "checked" === i && "input" === e || "muted" === i && "video" === e
        },
        Si = p("contenteditable,draggable,spellcheck"),
        Bi = p("events,caret,typing,plaintext-only"),
        ji = p("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),
        Li = "http://www.w3.org/1999/xlink",
        Ri = function(e) {
            return ":" === e.charAt(5) && "xlink" === e.slice(0, 5)
        },
        Oi = function(e) {
            return Ri(e) ? e.slice(6, e.length) : ""
        },
        Fi = function(e) {
            return null == e || !1 === e
        };

    function Ni(e) {
        for (var t = e.data, i = e, n = e; r(n.componentInstance);)(n = n.componentInstance._vnode) && n.data && (t = Ui(n.data, t));
        for (; r(i = i.parent);) i && i.data && (t = Ui(t, i.data));
        return function(e, t) {
            if (r(e) || r(t)) return Hi(e, Vi(t));
            return ""
        }(t.staticClass, t.class)
    }

    function Ui(e, t) {
        return {
            staticClass: Hi(e.staticClass, t.staticClass),
            class: r(e.class) ? [e.class, t.class] : t.class
        }
    }

    function Hi(e, t) {
        return e ? t ? e + " " + t : e : t || ""
    }

    function Vi(e) {
        return Array.isArray(e) ? function(e) {
            for (var t, i = "", n = 0, s = e.length; n < s; n++) r(t = Vi(e[n])) && "" !== t && (i && (i += " "), i += t);
            return i
        }(e) : o(e) ? function(e) {
            var t = "";
            for (var i in e) e[i] && (t && (t += " "), t += i);
            return t
        }(e) : "string" == typeof e ? e : ""
    }
    var zi = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
        },
        $i = p("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),
        Wi = p("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0),
        qi = function(e) {
            return $i(e) || Wi(e)
        };

    function Gi(e) {
        return Wi(e) ? "svg" : "math" === e ? "math" : void 0
    }
    var Yi = Object.create(null);
    var Zi = p("text,number,password,search,email,tel,url");

    function Xi(e) {
        if ("string" == typeof e) {
            var t = document.querySelector(e);
            return t || document.createElement("div")
        }
        return e
    }
    var Ki = Object.freeze({
            createElement: function(e, t) {
                var i = document.createElement(e);
                return "select" !== e ? i : (t.data && t.data.attrs && void 0 !== t.data.attrs.multiple && i.setAttribute("multiple", "multiple"), i)
            },
            createElementNS: function(e, t) {
                return document.createElementNS(zi[e], t)
            },
            createTextNode: function(e) {
                return document.createTextNode(e)
            },
            createComment: function(e) {
                return document.createComment(e)
            },
            insertBefore: function(e, t, i) {
                e.insertBefore(t, i)
            },
            removeChild: function(e, t) {
                e.removeChild(t)
            },
            appendChild: function(e, t) {
                e.appendChild(t)
            },
            parentNode: function(e) {
                return e.parentNode
            },
            nextSibling: function(e) {
                return e.nextSibling
            },
            tagName: function(e) {
                return e.tagName
            },
            setTextContent: function(e, t) {
                e.textContent = t
            },
            setStyleScope: function(e, t) {
                e.setAttribute(t, "")
            }
        }),
        Qi = {
            create: function(e, t) {
                Ji(t)
            },
            update: function(e, t) {
                e.data.ref !== t.data.ref && (Ji(e, !0), Ji(t))
            },
            destroy: function(e) {
                Ji(e, !0)
            }
        };

    function Ji(e, t) {
        var i = e.data.ref;
        if (r(i)) {
            var n = e.context,
                s = e.componentInstance || e.elm,
                o = n.$refs;
            t ? Array.isArray(o[i]) ? m(o[i], s) : o[i] === s && (o[i] = void 0) : e.data.refInFor ? Array.isArray(o[i]) ? o[i].indexOf(s) < 0 && o[i].push(s) : o[i] = [s] : o[i] = s
        }
    }
    var er = new pe("", {}, []),
        tr = ["create", "activate", "update", "remove", "destroy"];

    function ir(e, t) {
        return e.key === t.key && (e.tag === t.tag && e.isComment === t.isComment && r(e.data) === r(t.data) && function(e, t) {
            if ("input" !== e.tag) return !0;
            var i, n = r(i = e.data) && r(i = i.attrs) && i.type,
                s = r(i = t.data) && r(i = i.attrs) && i.type;
            return n === s || Zi(n) && Zi(s)
        }(e, t) || n(e.isAsyncPlaceholder) && e.asyncFactory === t.asyncFactory && i(t.asyncFactory.error))
    }

    function rr(e, t, i) {
        var n, s, o = {};
        for (n = t; n <= i; ++n) r(s = e[n].key) && (o[s] = n);
        return o
    }
    var nr = {
        create: sr,
        update: sr,
        destroy: function(e) {
            sr(e, er)
        }
    };

    function sr(e, t) {
        (e.data.directives || t.data.directives) && function(e, t) {
            var i, r, n, s = e === er,
                o = t === er,
                a = ar(e.data.directives, e.context),
                l = ar(t.data.directives, t.context),
                c = [],
                h = [];
            for (i in l) r = a[i], n = l[i], r ? (n.oldValue = r.value, n.oldArg = r.arg, cr(n, "update", t, e), n.def && n.def.componentUpdated && h.push(n)) : (cr(n, "bind", t, e), n.def && n.def.inserted && c.push(n));
            if (c.length) {
                var d = function() {
                    for (var i = 0; i < c.length; i++) cr(c[i], "inserted", t, e)
                };
                s ? ot(t, "insert", d) : d()
            }
            h.length && ot(t, "postpatch", (function() {
                for (var i = 0; i < h.length; i++) cr(h[i], "componentUpdated", t, e)
            }));
            if (!s)
                for (i in a) l[i] || cr(a[i], "unbind", e, e, o)
        }(e, t)
    }
    var or = Object.create(null);

    function ar(e, t) {
        var i, r, n = Object.create(null);
        if (!e) return n;
        for (i = 0; i < e.length; i++)(r = e[i]).modifiers || (r.modifiers = or), n[lr(r)] = r, r.def = Re(t.$options, "directives", r.name);
        return n
    }

    function lr(e) {
        return e.rawName || e.name + "." + Object.keys(e.modifiers || {}).join(".")
    }

    function cr(e, t, i, r, n) {
        var s = e.def && e.def[t];
        if (s) try {
            s(i.elm, e, i, r, n)
        } catch (r) {
            He(r, i.context, "directive " + e.name + " " + t + " hook")
        }
    }
    var hr = [Qi, nr];

    function dr(e, t) {
        var n = t.componentOptions;
        if (!(r(n) && !1 === n.Ctor.options.inheritAttrs || i(e.data.attrs) && i(t.data.attrs))) {
            var s, o, a = t.elm,
                l = e.data.attrs || {},
                c = t.data.attrs || {};
            for (s in r(c.__ob__) && (c = t.data.attrs = k({}, c)), c) o = c[s], l[s] !== o && ur(a, s, o);
            for (s in (Y || X) && c.value !== l.value && ur(a, "value", c.value), l) i(c[s]) && (Ri(s) ? a.removeAttributeNS(Li, Oi(s)) : Si(s) || a.removeAttribute(s))
        }
    }

    function ur(e, t, i) {
        e.tagName.indexOf("-") > -1 ? pr(e, t, i) : ji(t) ? Fi(i) ? e.removeAttribute(t) : (i = "allowfullscreen" === t && "EMBED" === e.tagName ? "true" : t, e.setAttribute(t, i)) : Si(t) ? e.setAttribute(t, function(e, t) {
            return Fi(t) || "false" === t ? "false" : "contenteditable" === e && Bi(t) ? t : "true"
        }(t, i)) : Ri(t) ? Fi(i) ? e.removeAttributeNS(Li, Oi(t)) : e.setAttributeNS(Li, t, i) : pr(e, t, i)
    }

    function pr(e, t, i) {
        if (Fi(i)) e.removeAttribute(t);
        else {
            if (Y && !Z && "TEXTAREA" === e.tagName && "placeholder" === t && "" !== i && !e.__ieph) {
                var r = function(t) {
                    t.stopImmediatePropagation(), e.removeEventListener("input", r)
                };
                e.addEventListener("input", r), e.__ieph = !0
            }
            e.setAttribute(t, i)
        }
    }
    var fr = {
        create: dr,
        update: dr
    };

    function _r(e, t) {
        var n = t.elm,
            s = t.data,
            o = e.data;
        if (!(i(s.staticClass) && i(s.class) && (i(o) || i(o.staticClass) && i(o.class)))) {
            var a = Ni(t),
                l = n._transitionClasses;
            r(l) && (a = Hi(a, Vi(l))), a !== n._prevClass && (n.setAttribute("class", a), n._prevClass = a)
        }
    }
    var mr, gr, vr, br, yr, wr, Mr = {
            create: _r,
            update: _r
        },
        Ar = /[\w).+\-_$\]]/;

    function xr(e) {
        var t, i, r, n, s, o = !1,
            a = !1,
            l = !1,
            c = !1,
            h = 0,
            d = 0,
            u = 0,
            p = 0;
        for (r = 0; r < e.length; r++)
            if (i = t, t = e.charCodeAt(r), o) 39 === t && 92 !== i && (o = !1);
            else if (a) 34 === t && 92 !== i && (a = !1);
        else if (l) 96 === t && 92 !== i && (l = !1);
        else if (c) 47 === t && 92 !== i && (c = !1);
        else if (124 !== t || 124 === e.charCodeAt(r + 1) || 124 === e.charCodeAt(r - 1) || h || d || u) {
            switch (t) {
                case 34:
                    a = !0;
                    break;
                case 39:
                    o = !0;
                    break;
                case 96:
                    l = !0;
                    break;
                case 40:
                    u++;
                    break;
                case 41:
                    u--;
                    break;
                case 91:
                    d++;
                    break;
                case 93:
                    d--;
                    break;
                case 123:
                    h++;
                    break;
                case 125:
                    h--
            }
            if (47 === t) {
                for (var f = r - 1, _ = void 0; f >= 0 && " " === (_ = e.charAt(f)); f--);
                _ && Ar.test(_) || (c = !0)
            }
        } else void 0 === n ? (p = r + 1, n = e.slice(0, r).trim()) : m();

        function m() {
            (s || (s = [])).push(e.slice(p, r).trim()), p = r + 1
        }
        if (void 0 === n ? n = e.slice(0, r).trim() : 0 !== p && m(), s)
            for (r = 0; r < s.length; r++) n = Cr(n, s[r]);
        return n
    }

    function Cr(e, t) {
        var i = t.indexOf("(");
        if (i < 0) return '_f("' + t + '")(' + e + ")";
        var r = t.slice(0, i),
            n = t.slice(i + 1);
        return '_f("' + r + '")(' + e + (")" !== n ? "," + n : n)
    }

    function Pr(e, t) {
        console.error("[Vue compiler]: " + e)
    }

    function kr(e, t) {
        return e ? e.map((function(e) {
            return e[t]
        })).filter((function(e) {
            return e
        })) : []
    }

    function Er(e, t, i, r, n) {
        (e.props || (e.props = [])).push(Or({
            name: t,
            value: i,
            dynamic: n
        }, r)), e.plain = !1
    }

    function Ir(e, t, i, r, n) {
        (n ? e.dynamicAttrs || (e.dynamicAttrs = []) : e.attrs || (e.attrs = [])).push(Or({
            name: t,
            value: i,
            dynamic: n
        }, r)), e.plain = !1
    }

    function Tr(e, t, i, r) {
        e.attrsMap[t] = i, e.attrsList.push(Or({
            name: t,
            value: i
        }, r))
    }

    function Dr(e, t, i, r, n, s, o, a) {
        (e.directives || (e.directives = [])).push(Or({
            name: t,
            rawName: i,
            value: r,
            arg: n,
            isDynamicArg: s,
            modifiers: o
        }, a)), e.plain = !1
    }

    function Sr(e, t, i) {
        return i ? "_p(" + t + ',"' + e + '")' : e + t
    }

    function Br(e, i, r, n, s, o, a, l) {
        var c;
        (n = n || t).right ? l ? i = "(" + i + ")==='click'?'contextmenu':(" + i + ")" : "click" === i && (i = "contextmenu", delete n.right) : n.middle && (l ? i = "(" + i + ")==='click'?'mouseup':(" + i + ")" : "click" === i && (i = "mouseup")), n.capture && (delete n.capture, i = Sr("!", i, l)), n.once && (delete n.once, i = Sr("~", i, l)), n.passive && (delete n.passive, i = Sr("&", i, l)), n.native ? (delete n.native, c = e.nativeEvents || (e.nativeEvents = {})) : c = e.events || (e.events = {});
        var h = Or({
            value: r.trim(),
            dynamic: l
        }, a);
        n !== t && (h.modifiers = n);
        var d = c[i];
        Array.isArray(d) ? s ? d.unshift(h) : d.push(h) : c[i] = d ? s ? [h, d] : [d, h] : h, e.plain = !1
    }

    function jr(e, t, i) {
        var r = Lr(e, ":" + t) || Lr(e, "v-bind:" + t);
        if (null != r) return xr(r);
        if (!1 !== i) {
            var n = Lr(e, t);
            if (null != n) return JSON.stringify(n)
        }
    }

    function Lr(e, t, i) {
        var r;
        if (null != (r = e.attrsMap[t]))
            for (var n = e.attrsList, s = 0, o = n.length; s < o; s++)
                if (n[s].name === t) {
                    n.splice(s, 1);
                    break
                } return i && delete e.attrsMap[t], r
    }

    function Rr(e, t) {
        for (var i = e.attrsList, r = 0, n = i.length; r < n; r++) {
            var s = i[r];
            if (t.test(s.name)) return i.splice(r, 1), s
        }
    }

    function Or(e, t) {
        return t && (null != t.start && (e.start = t.start), null != t.end && (e.end = t.end)), e
    }

    function Fr(e, t, i) {
        var r = i || {},
            n = r.number,
            s = "$$v";
        r.trim && (s = "(typeof $$v === 'string'? $$v.trim(): $$v)"), n && (s = "_n(" + s + ")");
        var o = Nr(t, s);
        e.model = {
            value: "(" + t + ")",
            expression: JSON.stringify(t),
            callback: "function ($$v) {" + o + "}"
        }
    }

    function Nr(e, t) {
        var i = function(e) {
            if (e = e.trim(), mr = e.length, e.indexOf("[") < 0 || e.lastIndexOf("]") < mr - 1) return (br = e.lastIndexOf(".")) > -1 ? {
                exp: e.slice(0, br),
                key: '"' + e.slice(br + 1) + '"'
            } : {
                exp: e,
                key: null
            };
            gr = e, br = yr = wr = 0;
            for (; !Hr();) Vr(vr = Ur()) ? $r(vr) : 91 === vr && zr(vr);
            return {
                exp: e.slice(0, yr),
                key: e.slice(yr + 1, wr)
            }
        }(e);
        return null === i.key ? e + "=" + t : "$set(" + i.exp + ", " + i.key + ", " + t + ")"
    }

    function Ur() {
        return gr.charCodeAt(++br)
    }

    function Hr() {
        return br >= mr
    }

    function Vr(e) {
        return 34 === e || 39 === e
    }

    function zr(e) {
        var t = 1;
        for (yr = br; !Hr();)
            if (Vr(e = Ur())) $r(e);
            else if (91 === e && t++, 93 === e && t--, 0 === t) {
            wr = br;
            break
        }
    }

    function $r(e) {
        for (var t = e; !Hr() && (e = Ur()) !== t;);
    }
    var Wr;

    function qr(e, t, i) {
        var r = Wr;
        return function n() {
            var s = t.apply(null, arguments);
            null !== s && Zr(e, n, i, r)
        }
    }
    var Gr = qe && !(Q && Number(Q[1]) <= 53);

    function Yr(e, t, i, r) {
        if (Gr) {
            var n = si,
                s = t;
            t = s._wrapper = function(e) {
                if (e.target === e.currentTarget || e.timeStamp >= n || e.timeStamp <= 0 || e.target.ownerDocument !== document) return s.apply(this, arguments)
            }
        }
        Wr.addEventListener(e, t, ee ? {
            capture: i,
            passive: r
        } : i)
    }

    function Zr(e, t, i, r) {
        (r || Wr).removeEventListener(e, t._wrapper || t, i)
    }

    function Xr(e, t) {
        if (!i(e.data.on) || !i(t.data.on)) {
            var n = t.data.on || {},
                s = e.data.on || {};
            Wr = t.elm,
                function(e) {
                    if (r(e.__r)) {
                        var t = Y ? "change" : "input";
                        e[t] = [].concat(e.__r, e[t] || []), delete e.__r
                    }
                    r(e.__c) && (e.change = [].concat(e.__c, e.change || []), delete e.__c)
                }(n), st(n, s, Yr, Zr, qr, t.context), Wr = void 0
        }
    }
    var Kr, Qr = {
        create: Xr,
        update: Xr
    };

    function Jr(e, t) {
        if (!i(e.data.domProps) || !i(t.data.domProps)) {
            var n, s, o = t.elm,
                a = e.data.domProps || {},
                l = t.data.domProps || {};
            for (n in r(l.__ob__) && (l = t.data.domProps = k({}, l)), a) n in l || (o[n] = "");
            for (n in l) {
                if (s = l[n], "textContent" === n || "innerHTML" === n) {
                    if (t.children && (t.children.length = 0), s === a[n]) continue;
                    1 === o.childNodes.length && o.removeChild(o.childNodes[0])
                }
                if ("value" === n && "PROGRESS" !== o.tagName) {
                    o._value = s;
                    var c = i(s) ? "" : String(s);
                    en(o, c) && (o.value = c)
                } else if ("innerHTML" === n && Wi(o.tagName) && i(o.innerHTML)) {
                    (Kr = Kr || document.createElement("div")).innerHTML = "<svg>" + s + "</svg>";
                    for (var h = Kr.firstChild; o.firstChild;) o.removeChild(o.firstChild);
                    for (; h.firstChild;) o.appendChild(h.firstChild)
                } else if (s !== a[n]) try {
                    o[n] = s
                } catch (e) {}
            }
        }
    }

    function en(e, t) {
        return !e.composing && ("OPTION" === e.tagName || function(e, t) {
            var i = !0;
            try {
                i = document.activeElement !== e
            } catch (e) {}
            return i && e.value !== t
        }(e, t) || function(e, t) {
            var i = e.value,
                n = e._vModifiers;
            if (r(n)) {
                if (n.number) return u(i) !== u(t);
                if (n.trim) return i.trim() !== t.trim()
            }
            return i !== t
        }(e, t))
    }
    var tn = {
            create: Jr,
            update: Jr
        },
        rn = b((function(e) {
            var t = {},
                i = /:(.+)/;
            return e.split(/;(?![^(]*\))/g).forEach((function(e) {
                if (e) {
                    var r = e.split(i);
                    r.length > 1 && (t[r[0].trim()] = r[1].trim())
                }
            })), t
        }));

    function nn(e) {
        var t = sn(e.style);
        return e.staticStyle ? k(e.staticStyle, t) : t
    }

    function sn(e) {
        return Array.isArray(e) ? E(e) : "string" == typeof e ? rn(e) : e
    }
    var on, an = /^--/,
        ln = /\s*!important$/,
        cn = function(e, t, i) {
            if (an.test(t)) e.style.setProperty(t, i);
            else if (ln.test(i)) e.style.setProperty(x(t), i.replace(ln, ""), "important");
            else {
                var r = dn(t);
                if (Array.isArray(i))
                    for (var n = 0, s = i.length; n < s; n++) e.style[r] = i[n];
                else e.style[r] = i
            }
        },
        hn = ["Webkit", "Moz", "ms"],
        dn = b((function(e) {
            if (on = on || document.createElement("div").style, "filter" !== (e = w(e)) && e in on) return e;
            for (var t = e.charAt(0).toUpperCase() + e.slice(1), i = 0; i < hn.length; i++) {
                var r = hn[i] + t;
                if (r in on) return r
            }
        }));

    function un(e, t) {
        var n = t.data,
            s = e.data;
        if (!(i(n.staticStyle) && i(n.style) && i(s.staticStyle) && i(s.style))) {
            var o, a, l = t.elm,
                c = s.staticStyle,
                h = s.normalizedStyle || s.style || {},
                d = c || h,
                u = sn(t.data.style) || {};
            t.data.normalizedStyle = r(u.__ob__) ? k({}, u) : u;
            var p = function(e, t) {
                var i, r = {};
                if (t)
                    for (var n = e; n.componentInstance;)(n = n.componentInstance._vnode) && n.data && (i = nn(n.data)) && k(r, i);
                (i = nn(e.data)) && k(r, i);
                for (var s = e; s = s.parent;) s.data && (i = nn(s.data)) && k(r, i);
                return r
            }(t, !0);
            for (a in d) i(p[a]) && cn(l, a, "");
            for (a in p)(o = p[a]) !== d[a] && cn(l, a, null == o ? "" : o)
        }
    }
    var pn = {
            create: un,
            update: un
        },
        fn = /\s+/;

    function _n(e, t) {
        if (t && (t = t.trim()))
            if (e.classList) t.indexOf(" ") > -1 ? t.split(fn).forEach((function(t) {
                return e.classList.add(t)
            })) : e.classList.add(t);
            else {
                var i = " " + (e.getAttribute("class") || "") + " ";
                i.indexOf(" " + t + " ") < 0 && e.setAttribute("class", (i + t).trim())
            }
    }

    function mn(e, t) {
        if (t && (t = t.trim()))
            if (e.classList) t.indexOf(" ") > -1 ? t.split(fn).forEach((function(t) {
                return e.classList.remove(t)
            })) : e.classList.remove(t), e.classList.length || e.removeAttribute("class");
            else {
                for (var i = " " + (e.getAttribute("class") || "") + " ", r = " " + t + " "; i.indexOf(r) >= 0;) i = i.replace(r, " ");
                (i = i.trim()) ? e.setAttribute("class", i): e.removeAttribute("class")
            }
    }

    function gn(e) {
        if (e) {
            if ("object" == typeof e) {
                var t = {};
                return !1 !== e.css && k(t, vn(e.name || "v")), k(t, e), t
            }
            return "string" == typeof e ? vn(e) : void 0
        }
    }
    var vn = b((function(e) {
            return {
                enterClass: e + "-enter",
                enterToClass: e + "-enter-to",
                enterActiveClass: e + "-enter-active",
                leaveClass: e + "-leave",
                leaveToClass: e + "-leave-to",
                leaveActiveClass: e + "-leave-active"
            }
        })),
        bn = $ && !Z,
        yn = "transition",
        wn = "transitionend",
        Mn = "animation",
        An = "animationend";
    bn && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (yn = "WebkitTransition", wn = "webkitTransitionEnd"), void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Mn = "WebkitAnimation", An = "webkitAnimationEnd"));
    var xn = $ ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : function(e) {
        return e()
    };

    function Cn(e) {
        xn((function() {
            xn(e)
        }))
    }

    function Pn(e, t) {
        var i = e._transitionClasses || (e._transitionClasses = []);
        i.indexOf(t) < 0 && (i.push(t), _n(e, t))
    }

    function kn(e, t) {
        e._transitionClasses && m(e._transitionClasses, t), mn(e, t)
    }

    function En(e, t, i) {
        var r = Tn(e, t),
            n = r.type,
            s = r.timeout,
            o = r.propCount;
        if (!n) return i();
        var a = "transition" === n ? wn : An,
            l = 0,
            c = function() {
                e.removeEventListener(a, h), i()
            },
            h = function(t) {
                t.target === e && ++l >= o && c()
            };
        setTimeout((function() {
            l < o && c()
        }), s + 1), e.addEventListener(a, h)
    }
    var In = /\b(transform|all)(,|$)/;

    function Tn(e, t) {
        var i, r = window.getComputedStyle(e),
            n = (r[yn + "Delay"] || "").split(", "),
            s = (r[yn + "Duration"] || "").split(", "),
            o = Dn(n, s),
            a = (r[Mn + "Delay"] || "").split(", "),
            l = (r[Mn + "Duration"] || "").split(", "),
            c = Dn(a, l),
            h = 0,
            d = 0;
        return "transition" === t ? o > 0 && (i = "transition", h = o, d = s.length) : "animation" === t ? c > 0 && (i = "animation", h = c, d = l.length) : d = (i = (h = Math.max(o, c)) > 0 ? o > c ? "transition" : "animation" : null) ? "transition" === i ? s.length : l.length : 0, {
            type: i,
            timeout: h,
            propCount: d,
            hasTransform: "transition" === i && In.test(r[yn + "Property"])
        }
    }

    function Dn(e, t) {
        for (; e.length < t.length;) e = e.concat(e);
        return Math.max.apply(null, t.map((function(t, i) {
            return Sn(t) + Sn(e[i])
        })))
    }

    function Sn(e) {
        return 1e3 * Number(e.slice(0, -1).replace(",", "."))
    }

    function Bn(e, t) {
        var n = e.elm;
        r(n._leaveCb) && (n._leaveCb.cancelled = !0, n._leaveCb());
        var s = gn(e.data.transition);
        if (!i(s) && !r(n._enterCb) && 1 === n.nodeType) {
            for (var a = s.css, l = s.type, c = s.enterClass, h = s.enterToClass, d = s.enterActiveClass, p = s.appearClass, f = s.appearToClass, _ = s.appearActiveClass, m = s.beforeEnter, g = s.enter, v = s.afterEnter, b = s.enterCancelled, y = s.beforeAppear, w = s.appear, M = s.afterAppear, A = s.appearCancelled, x = s.duration, C = Yt, P = Yt.$vnode; P && P.parent;) C = P.context, P = P.parent;
            var k = !C._isMounted || !e.isRootInsert;
            if (!k || w || "" === w) {
                var E = k && p ? p : c,
                    I = k && _ ? _ : d,
                    T = k && f ? f : h,
                    D = k && y || m,
                    S = k && "function" == typeof w ? w : g,
                    B = k && M || v,
                    L = k && A || b,
                    R = u(o(x) ? x.enter : x),
                    O = !1 !== a && !Z,
                    F = Rn(S),
                    N = n._enterCb = j((function() {
                        O && (kn(n, T), kn(n, I)), N.cancelled ? (O && kn(n, E), L && L(n)) : B && B(n), n._enterCb = null
                    }));
                e.data.show || ot(e, "insert", (function() {
                    var t = n.parentNode,
                        i = t && t._pending && t._pending[e.key];
                    i && i.tag === e.tag && i.elm._leaveCb && i.elm._leaveCb(), S && S(n, N)
                })), D && D(n), O && (Pn(n, E), Pn(n, I), Cn((function() {
                    kn(n, E), N.cancelled || (Pn(n, T), F || (Ln(R) ? setTimeout(N, R) : En(n, l, N)))
                }))), e.data.show && (t && t(), S && S(n, N)), O || F || N()
            }
        }
    }

    function jn(e, t) {
        var n = e.elm;
        r(n._enterCb) && (n._enterCb.cancelled = !0, n._enterCb());
        var s = gn(e.data.transition);
        if (i(s) || 1 !== n.nodeType) return t();
        if (!r(n._leaveCb)) {
            var a = s.css,
                l = s.type,
                c = s.leaveClass,
                h = s.leaveToClass,
                d = s.leaveActiveClass,
                p = s.beforeLeave,
                f = s.leave,
                _ = s.afterLeave,
                m = s.leaveCancelled,
                g = s.delayLeave,
                v = s.duration,
                b = !1 !== a && !Z,
                y = Rn(f),
                w = u(o(v) ? v.leave : v),
                M = n._leaveCb = j((function() {
                    n.parentNode && n.parentNode._pending && (n.parentNode._pending[e.key] = null), b && (kn(n, h), kn(n, d)), M.cancelled ? (b && kn(n, c), m && m(n)) : (t(), _ && _(n)), n._leaveCb = null
                }));
            g ? g(A) : A()
        }

        function A() {
            M.cancelled || (!e.data.show && n.parentNode && ((n.parentNode._pending || (n.parentNode._pending = {}))[e.key] = e), p && p(n), b && (Pn(n, c), Pn(n, d), Cn((function() {
                kn(n, c), M.cancelled || (Pn(n, h), y || (Ln(w) ? setTimeout(M, w) : En(n, l, M)))
            }))), f && f(n, M), b || y || M())
        }
    }

    function Ln(e) {
        return "number" == typeof e && !isNaN(e)
    }

    function Rn(e) {
        if (i(e)) return !1;
        var t = e.fns;
        return r(t) ? Rn(Array.isArray(t) ? t[0] : t) : (e._length || e.length) > 1
    }

    function On(e, t) {
        !0 !== t.data.show && Bn(t)
    }
    var Fn = function(e) {
        var t, o, a = {},
            l = e.modules,
            c = e.nodeOps;
        for (t = 0; t < tr.length; ++t)
            for (a[tr[t]] = [], o = 0; o < l.length; ++o) r(l[o][tr[t]]) && a[tr[t]].push(l[o][tr[t]]);

        function h(e) {
            var t = c.parentNode(e);
            r(t) && c.removeChild(t, e)
        }

        function d(e, t, i, s, o, l, h) {
            if (r(e.elm) && r(l) && (e = l[h] = ge(e)), e.isRootInsert = !o, ! function(e, t, i, s) {
                    var o = e.data;
                    if (r(o)) {
                        var l = r(e.componentInstance) && o.keepAlive;
                        if (r(o = o.hook) && r(o = o.init) && o(e, !1), r(e.componentInstance)) return u(e, t), f(i, e.elm, s), n(l) && function(e, t, i, n) {
                            var s, o = e;
                            for (; o.componentInstance;)
                                if (o = o.componentInstance._vnode, r(s = o.data) && r(s = s.transition)) {
                                    for (s = 0; s < a.activate.length; ++s) a.activate[s](er, o);
                                    t.push(o);
                                    break
                                } f(i, e.elm, n)
                        }(e, t, i, s), !0
                    }
                }(e, t, i, s)) {
                var d = e.data,
                    p = e.children,
                    m = e.tag;
                r(m) ? (e.elm = e.ns ? c.createElementNS(e.ns, m) : c.createElement(m, e), v(e), _(e, p, t), r(d) && g(e, t), f(i, e.elm, s)) : n(e.isComment) ? (e.elm = c.createComment(e.text), f(i, e.elm, s)) : (e.elm = c.createTextNode(e.text), f(i, e.elm, s))
            }
        }

        function u(e, t) {
            r(e.data.pendingInsert) && (t.push.apply(t, e.data.pendingInsert), e.data.pendingInsert = null), e.elm = e.componentInstance.$el, m(e) ? (g(e, t), v(e)) : (Ji(e), t.push(e))
        }

        function f(e, t, i) {
            r(e) && (r(i) ? c.parentNode(i) === e && c.insertBefore(e, t, i) : c.appendChild(e, t))
        }

        function _(e, t, i) {
            if (Array.isArray(t))
                for (var r = 0; r < t.length; ++r) d(t[r], i, e.elm, null, !0, t, r);
            else s(e.text) && c.appendChild(e.elm, c.createTextNode(String(e.text)))
        }

        function m(e) {
            for (; e.componentInstance;) e = e.componentInstance._vnode;
            return r(e.tag)
        }

        function g(e, i) {
            for (var n = 0; n < a.create.length; ++n) a.create[n](er, e);
            r(t = e.data.hook) && (r(t.create) && t.create(er, e), r(t.insert) && i.push(e))
        }

        function v(e) {
            var t;
            if (r(t = e.fnScopeId)) c.setStyleScope(e.elm, t);
            else
                for (var i = e; i;) r(t = i.context) && r(t = t.$options._scopeId) && c.setStyleScope(e.elm, t), i = i.parent;
            r(t = Yt) && t !== e.context && t !== e.fnContext && r(t = t.$options._scopeId) && c.setStyleScope(e.elm, t)
        }

        function b(e, t, i, r, n, s) {
            for (; r <= n; ++r) d(i[r], s, e, t, !1, i, r)
        }

        function y(e) {
            var t, i, n = e.data;
            if (r(n))
                for (r(t = n.hook) && r(t = t.destroy) && t(e), t = 0; t < a.destroy.length; ++t) a.destroy[t](e);
            if (r(t = e.children))
                for (i = 0; i < e.children.length; ++i) y(e.children[i])
        }

        function w(e, t, i) {
            for (; t <= i; ++t) {
                var n = e[t];
                r(n) && (r(n.tag) ? (M(n), y(n)) : h(n.elm))
            }
        }

        function M(e, t) {
            if (r(t) || r(e.data)) {
                var i, n = a.remove.length + 1;
                for (r(t) ? t.listeners += n : t = function(e, t) {
                        function i() {
                            0 == --i.listeners && h(e)
                        }
                        return i.listeners = t, i
                    }(e.elm, n), r(i = e.componentInstance) && r(i = i._vnode) && r(i.data) && M(i, t), i = 0; i < a.remove.length; ++i) a.remove[i](e, t);
                r(i = e.data.hook) && r(i = i.remove) ? i(e, t) : t()
            } else h(e.elm)
        }

        function A(e, t, i, n) {
            for (var s = i; s < n; s++) {
                var o = t[s];
                if (r(o) && ir(e, o)) return s
            }
        }

        function x(e, t, s, o, l, h) {
            if (e !== t) {
                r(t.elm) && r(o) && (t = o[l] = ge(t));
                var u = t.elm = e.elm;
                if (n(e.isAsyncPlaceholder)) r(t.asyncFactory.resolved) ? k(e.elm, t, s) : t.isAsyncPlaceholder = !0;
                else if (n(t.isStatic) && n(e.isStatic) && t.key === e.key && (n(t.isCloned) || n(t.isOnce))) t.componentInstance = e.componentInstance;
                else {
                    var p, f = t.data;
                    r(f) && r(p = f.hook) && r(p = p.prepatch) && p(e, t);
                    var _ = e.children,
                        g = t.children;
                    if (r(f) && m(t)) {
                        for (p = 0; p < a.update.length; ++p) a.update[p](e, t);
                        r(p = f.hook) && r(p = p.update) && p(e, t)
                    }
                    i(t.text) ? r(_) && r(g) ? _ !== g && function(e, t, n, s, o) {
                        for (var a, l, h, u = 0, p = 0, f = t.length - 1, _ = t[0], m = t[f], g = n.length - 1, v = n[0], y = n[g], M = !o; u <= f && p <= g;) i(_) ? _ = t[++u] : i(m) ? m = t[--f] : ir(_, v) ? (x(_, v, s, n, p), _ = t[++u], v = n[++p]) : ir(m, y) ? (x(m, y, s, n, g), m = t[--f], y = n[--g]) : ir(_, y) ? (x(_, y, s, n, g), M && c.insertBefore(e, _.elm, c.nextSibling(m.elm)), _ = t[++u], y = n[--g]) : ir(m, v) ? (x(m, v, s, n, p), M && c.insertBefore(e, m.elm, _.elm), m = t[--f], v = n[++p]) : (i(a) && (a = rr(t, u, f)), i(l = r(v.key) ? a[v.key] : A(v, t, u, f)) ? d(v, s, e, _.elm, !1, n, p) : ir(h = t[l], v) ? (x(h, v, s, n, p), t[l] = void 0, M && c.insertBefore(e, h.elm, _.elm)) : d(v, s, e, _.elm, !1, n, p), v = n[++p]);
                        u > f ? b(e, i(n[g + 1]) ? null : n[g + 1].elm, n, p, g, s) : p > g && w(t, u, f)
                    }(u, _, g, s, h) : r(g) ? (r(e.text) && c.setTextContent(u, ""), b(u, null, g, 0, g.length - 1, s)) : r(_) ? w(_, 0, _.length - 1) : r(e.text) && c.setTextContent(u, "") : e.text !== t.text && c.setTextContent(u, t.text), r(f) && r(p = f.hook) && r(p = p.postpatch) && p(e, t)
                }
            }
        }

        function C(e, t, i) {
            if (n(i) && r(e.parent)) e.parent.data.pendingInsert = t;
            else
                for (var s = 0; s < t.length; ++s) t[s].data.hook.insert(t[s])
        }
        var P = p("attrs,class,staticClass,staticStyle,key");

        function k(e, t, i, s) {
            var o, a = t.tag,
                l = t.data,
                c = t.children;
            if (s = s || l && l.pre, t.elm = e, n(t.isComment) && r(t.asyncFactory)) return t.isAsyncPlaceholder = !0, !0;
            if (r(l) && (r(o = l.hook) && r(o = o.init) && o(t, !0), r(o = t.componentInstance))) return u(t, i), !0;
            if (r(a)) {
                if (r(c))
                    if (e.hasChildNodes())
                        if (r(o = l) && r(o = o.domProps) && r(o = o.innerHTML)) {
                            if (o !== e.innerHTML) return !1
                        } else {
                            for (var h = !0, d = e.firstChild, p = 0; p < c.length; p++) {
                                if (!d || !k(d, c[p], i, s)) {
                                    h = !1;
                                    break
                                }
                                d = d.nextSibling
                            }
                            if (!h || d) return !1
                        }
                else _(t, c, i);
                if (r(l)) {
                    var f = !1;
                    for (var m in l)
                        if (!P(m)) {
                            f = !0, g(t, i);
                            break
                        }! f && l.class && it(l.class)
                }
            } else e.data !== t.text && (e.data = t.text);
            return !0
        }
        return function(e, t, s, o) {
            if (!i(t)) {
                var l, h = !1,
                    u = [];
                if (i(e)) h = !0, d(t, u);
                else {
                    var p = r(e.nodeType);
                    if (!p && ir(e, t)) x(e, t, u, null, null, o);
                    else {
                        if (p) {
                            if (1 === e.nodeType && e.hasAttribute("data-server-rendered") && (e.removeAttribute("data-server-rendered"), s = !0), n(s) && k(e, t, u)) return C(t, u, !0), e;
                            l = e, e = new pe(c.tagName(l).toLowerCase(), {}, [], void 0, l)
                        }
                        var f = e.elm,
                            _ = c.parentNode(f);
                        if (d(t, u, f._leaveCb ? null : _, c.nextSibling(f)), r(t.parent))
                            for (var g = t.parent, v = m(t); g;) {
                                for (var b = 0; b < a.destroy.length; ++b) a.destroy[b](g);
                                if (g.elm = t.elm, v) {
                                    for (var M = 0; M < a.create.length; ++M) a.create[M](er, g);
                                    var A = g.data.hook.insert;
                                    if (A.merged)
                                        for (var P = 1; P < A.fns.length; P++) A.fns[P]()
                                } else Ji(g);
                                g = g.parent
                            }
                        r(_) ? w([e], 0, 0) : r(e.tag) && y(e)
                    }
                }
                return C(t, u, h), t.elm
            }
            r(e) && y(e)
        }
    }({
        nodeOps: Ki,
        modules: [fr, Mr, Qr, tn, pn, $ ? {
            create: On,
            activate: On,
            remove: function(e, t) {
                !0 !== e.data.show ? jn(e, t) : t()
            }
        } : {}].concat(hr)
    });
    Z && document.addEventListener("selectionchange", (function() {
        var e = document.activeElement;
        e && e.vmodel && qn(e, "input")
    }));
    var Nn = {
        inserted: function(e, t, i, r) {
            "select" === i.tag ? (r.elm && !r.elm._vOptions ? ot(i, "postpatch", (function() {
                Nn.componentUpdated(e, t, i)
            })) : Un(e, t, i.context), e._vOptions = [].map.call(e.options, zn)) : ("textarea" === i.tag || Zi(e.type)) && (e._vModifiers = t.modifiers, t.modifiers.lazy || (e.addEventListener("compositionstart", $n), e.addEventListener("compositionend", Wn), e.addEventListener("change", Wn), Z && (e.vmodel = !0)))
        },
        componentUpdated: function(e, t, i) {
            if ("select" === i.tag) {
                Un(e, t, i.context);
                var r = e._vOptions,
                    n = e._vOptions = [].map.call(e.options, zn);
                if (n.some((function(e, t) {
                        return !S(e, r[t])
                    })))(e.multiple ? t.value.some((function(e) {
                    return Vn(e, n)
                })) : t.value !== t.oldValue && Vn(t.value, n)) && qn(e, "change")
            }
        }
    };

    function Un(e, t, i) {
        Hn(e, t), (Y || X) && setTimeout((function() {
            Hn(e, t)
        }), 0)
    }

    function Hn(e, t, i) {
        var r = t.value,
            n = e.multiple;
        if (!n || Array.isArray(r)) {
            for (var s, o, a = 0, l = e.options.length; a < l; a++)
                if (o = e.options[a], n) s = B(r, zn(o)) > -1, o.selected !== s && (o.selected = s);
                else if (S(zn(o), r)) return void(e.selectedIndex !== a && (e.selectedIndex = a));
            n || (e.selectedIndex = -1)
        }
    }

    function Vn(e, t) {
        return t.every((function(t) {
            return !S(t, e)
        }))
    }

    function zn(e) {
        return "_value" in e ? e._value : e.value
    }

    function $n(e) {
        e.target.composing = !0
    }

    function Wn(e) {
        e.target.composing && (e.target.composing = !1, qn(e.target, "input"))
    }

    function qn(e, t) {
        var i = document.createEvent("HTMLEvents");
        i.initEvent(t, !0, !0), e.dispatchEvent(i)
    }

    function Gn(e) {
        return !e.componentInstance || e.data && e.data.transition ? e : Gn(e.componentInstance._vnode)
    }
    var Yn = {
            model: Nn,
            show: {
                bind: function(e, t, i) {
                    var r = t.value,
                        n = (i = Gn(i)).data && i.data.transition,
                        s = e.__vOriginalDisplay = "none" === e.style.display ? "" : e.style.display;
                    r && n ? (i.data.show = !0, Bn(i, (function() {
                        e.style.display = s
                    }))) : e.style.display = r ? s : "none"
                },
                update: function(e, t, i) {
                    var r = t.value;
                    !r != !t.oldValue && ((i = Gn(i)).data && i.data.transition ? (i.data.show = !0, r ? Bn(i, (function() {
                        e.style.display = e.__vOriginalDisplay
                    })) : jn(i, (function() {
                        e.style.display = "none"
                    }))) : e.style.display = r ? e.__vOriginalDisplay : "none")
                },
                unbind: function(e, t, i, r, n) {
                    n || (e.style.display = e.__vOriginalDisplay)
                }
            }
        },
        Zn = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
        };

    function Xn(e) {
        var t = e && e.componentOptions;
        return t && t.Ctor.options.abstract ? Xn(zt(t.children)) : e
    }

    function Kn(e) {
        var t = {},
            i = e.$options;
        for (var r in i.propsData) t[r] = e[r];
        var n = i._parentListeners;
        for (var s in n) t[w(s)] = n[s];
        return t
    }

    function Qn(e, t) {
        if (/\d-keep-alive$/.test(t.tag)) return e("keep-alive", {
            props: t.componentOptions.propsData
        })
    }
    var Jn = function(e) {
            return e.tag || Vt(e)
        },
        es = function(e) {
            return "show" === e.name
        },
        ts = {
            name: "transition",
            props: Zn,
            abstract: !0,
            render: function(e) {
                var t = this,
                    i = this.$slots.default;
                if (i && (i = i.filter(Jn)).length) {
                    var r = this.mode,
                        n = i[0];
                    if (function(e) {
                            for (; e = e.parent;)
                                if (e.data.transition) return !0
                        }(this.$vnode)) return n;
                    var o = Xn(n);
                    if (!o) return n;
                    if (this._leaving) return Qn(e, n);
                    var a = "__transition-" + this._uid + "-";
                    o.key = null == o.key ? o.isComment ? a + "comment" : a + o.tag : s(o.key) ? 0 === String(o.key).indexOf(a) ? o.key : a + o.key : o.key;
                    var l = (o.data || (o.data = {})).transition = Kn(this),
                        c = this._vnode,
                        h = Xn(c);
                    if (o.data.directives && o.data.directives.some(es) && (o.data.show = !0), h && h.data && ! function(e, t) {
                            return t.key === e.key && t.tag === e.tag
                        }(o, h) && !Vt(h) && (!h.componentInstance || !h.componentInstance._vnode.isComment)) {
                        var d = h.data.transition = k({}, l);
                        if ("out-in" === r) return this._leaving = !0, ot(d, "afterLeave", (function() {
                            t._leaving = !1, t.$forceUpdate()
                        })), Qn(e, n);
                        if ("in-out" === r) {
                            if (Vt(o)) return c;
                            var u, p = function() {
                                u()
                            };
                            ot(l, "afterEnter", p), ot(l, "enterCancelled", p), ot(d, "delayLeave", (function(e) {
                                u = e
                            }))
                        }
                    }
                    return n
                }
            }
        },
        is = k({
            tag: String,
            moveClass: String
        }, Zn);

    function rs(e) {
        e.elm._moveCb && e.elm._moveCb(), e.elm._enterCb && e.elm._enterCb()
    }

    function ns(e) {
        e.data.newPos = e.elm.getBoundingClientRect()
    }

    function ss(e) {
        var t = e.data.pos,
            i = e.data.newPos,
            r = t.left - i.left,
            n = t.top - i.top;
        if (r || n) {
            e.data.moved = !0;
            var s = e.elm.style;
            s.transform = s.WebkitTransform = "translate(" + r + "px," + n + "px)", s.transitionDuration = "0s"
        }
    }
    delete is.mode;
    var os = {
        Transition: ts,
        TransitionGroup: {
            props: is,
            beforeMount: function() {
                var e = this,
                    t = this._update;
                this._update = function(i, r) {
                    var n = Zt(e);
                    e.__patch__(e._vnode, e.kept, !1, !0), e._vnode = e.kept, n(), t.call(e, i, r)
                }
            },
            render: function(e) {
                for (var t = this.tag || this.$vnode.data.tag || "span", i = Object.create(null), r = this.prevChildren = this.children, n = this.$slots.default || [], s = this.children = [], o = Kn(this), a = 0; a < n.length; a++) {
                    var l = n[a];
                    l.tag && null != l.key && 0 !== String(l.key).indexOf("__vlist") && (s.push(l), i[l.key] = l, (l.data || (l.data = {})).transition = o)
                }
                if (r) {
                    for (var c = [], h = [], d = 0; d < r.length; d++) {
                        var u = r[d];
                        u.data.transition = o, u.data.pos = u.elm.getBoundingClientRect(), i[u.key] ? c.push(u) : h.push(u)
                    }
                    this.kept = e(t, null, c), this.removed = h
                }
                return e(t, null, s)
            },
            updated: function() {
                var e = this.prevChildren,
                    t = this.moveClass || (this.name || "v") + "-move";
                e.length && this.hasMove(e[0].elm, t) && (e.forEach(rs), e.forEach(ns), e.forEach(ss), this._reflow = document.body.offsetHeight, e.forEach((function(e) {
                    if (e.data.moved) {
                        var i = e.elm,
                            r = i.style;
                        Pn(i, t), r.transform = r.WebkitTransform = r.transitionDuration = "", i.addEventListener(wn, i._moveCb = function e(r) {
                            r && r.target !== i || r && !/transform$/.test(r.propertyName) || (i.removeEventListener(wn, e), i._moveCb = null, kn(i, t))
                        })
                    }
                })))
            },
            methods: {
                hasMove: function(e, t) {
                    if (!bn) return !1;
                    if (this._hasMove) return this._hasMove;
                    var i = e.cloneNode();
                    e._transitionClasses && e._transitionClasses.forEach((function(e) {
                        mn(i, e)
                    })), _n(i, t), i.style.display = "none", this.$el.appendChild(i);
                    var r = Tn(i);
                    return this.$el.removeChild(i), this._hasMove = r.hasTransform
                }
            }
        }
    };
    wi.config.mustUseProp = Di, wi.config.isReservedTag = qi, wi.config.isReservedAttr = Ii, wi.config.getTagNamespace = Gi, wi.config.isUnknownElement = function(e) {
        if (!$) return !0;
        if (qi(e)) return !1;
        if (e = e.toLowerCase(), null != Yi[e]) return Yi[e];
        var t = document.createElement(e);
        return e.indexOf("-") > -1 ? Yi[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement : Yi[e] = /HTMLUnknownElement/.test(t.toString())
    }, k(wi.options.directives, Yn), k(wi.options.components, os), wi.prototype.__patch__ = $ ? Fn : I, wi.prototype.$mount = function(e, t) {
        return function(e, t, i) {
            var r;
            return e.$el = t, e.$options.render || (e.$options.render = _e), Qt(e, "beforeMount"), r = function() {
                e._update(e._render(), i)
            }, new hi(e, r, I, {
                before: function() {
                    e._isMounted && !e._isDestroyed && Qt(e, "beforeUpdate")
                }
            }, !0), i = !1, null == e.$vnode && (e._isMounted = !0, Qt(e, "mounted")), e
        }(this, e = e && $ ? Xi(e) : void 0, t)
    }, $ && setTimeout((function() {
        O.devtools && re && re.emit("init", wi)
    }), 0);
    var as = /\{\{((?:.|\r?\n)+?)\}\}/g,
        ls = /[-.*+?^${}()|[\]\/\\]/g,
        cs = b((function(e) {
            var t = e[0].replace(ls, "\\$&"),
                i = e[1].replace(ls, "\\$&");
            return new RegExp(t + "((?:.|\\n)+?)" + i, "g")
        }));
    var hs = {
        staticKeys: ["staticClass"],
        transformNode: function(e, t) {
            t.warn;
            var i = Lr(e, "class");
            i && (e.staticClass = JSON.stringify(i));
            var r = jr(e, "class", !1);
            r && (e.classBinding = r)
        },
        genData: function(e) {
            var t = "";
            return e.staticClass && (t += "staticClass:" + e.staticClass + ","), e.classBinding && (t += "class:" + e.classBinding + ","), t
        }
    };
    var ds, us = {
            staticKeys: ["staticStyle"],
            transformNode: function(e, t) {
                t.warn;
                var i = Lr(e, "style");
                i && (e.staticStyle = JSON.stringify(rn(i)));
                var r = jr(e, "style", !1);
                r && (e.styleBinding = r)
            },
            genData: function(e) {
                var t = "";
                return e.staticStyle && (t += "staticStyle:" + e.staticStyle + ","), e.styleBinding && (t += "style:(" + e.styleBinding + "),"), t
            }
        },
        ps = function(e) {
            return (ds = ds || document.createElement("div")).innerHTML = e, ds.textContent
        },
        fs = p("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),
        _s = p("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),
        ms = p("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),
        gs = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        vs = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        bs = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + F.source + "]*",
        ys = "((?:" + bs + "\\:)?" + bs + ")",
        ws = new RegExp("^<" + ys),
        Ms = /^\s*(\/?)>/,
        As = new RegExp("^<\\/" + ys + "[^>]*>"),
        xs = /^<!DOCTYPE [^>]+>/i,
        Cs = /^<!\--/,
        Ps = /^<!\[/,
        ks = p("script,style,textarea", !0),
        Es = {},
        Is = {
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&amp;": "&",
            "&#10;": "\n",
            "&#9;": "\t",
            "&#39;": "'"
        },
        Ts = /&(?:lt|gt|quot|amp|#39);/g,
        Ds = /&(?:lt|gt|quot|amp|#39|#10|#9);/g,
        Ss = p("pre,textarea", !0),
        Bs = function(e, t) {
            return e && Ss(e) && "\n" === t[0]
        };

    function js(e, t) {
        var i = t ? Ds : Ts;
        return e.replace(i, (function(e) {
            return Is[e]
        }))
    }
    var Ls, Rs, Os, Fs, Ns, Us, Hs, Vs, zs = /^@|^v-on:/,
        $s = /^v-|^@|^:|^#/,
        Ws = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,
        qs = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/,
        Gs = /^\(|\)$/g,
        Ys = /^\[.*\]$/,
        Zs = /:(.*)$/,
        Xs = /^:|^\.|^v-bind:/,
        Ks = /\.[^.\]]+(?=[^\]]*$)/g,
        Qs = /^v-slot(:|$)|^#/,
        Js = /[\r\n]/,
        eo = /\s+/g,
        to = b(ps);

    function io(e, t, i) {
        return {
            type: 1,
            tag: e,
            attrsList: t,
            attrsMap: co(t),
            rawAttrsMap: {},
            parent: i,
            children: []
        }
    }

    function ro(e, t) {
        Ls = t.warn || Pr, Us = t.isPreTag || T, Hs = t.mustUseProp || T, Vs = t.getTagNamespace || T;
        t.isReservedTag;
        Os = kr(t.modules, "transformNode"), Fs = kr(t.modules, "preTransformNode"), Ns = kr(t.modules, "postTransformNode"), Rs = t.delimiters;
        var i, r, n = [],
            s = !1 !== t.preserveWhitespace,
            o = t.whitespace,
            a = !1,
            l = !1;

        function c(e) {
            if (h(e), a || e.processed || (e = no(e, t)), n.length || e === i || i.if && (e.elseif || e.else) && oo(i, {
                    exp: e.elseif,
                    block: e
                }), r && !e.forbidden)
                if (e.elseif || e.else) o = e, (c = function(e) {
                    for (var t = e.length; t--;) {
                        if (1 === e[t].type) return e[t];
                        e.pop()
                    }
                }(r.children)) && c.if && oo(c, {
                    exp: o.elseif,
                    block: o
                });
                else {
                    if (e.slotScope) {
                        var s = e.slotTarget || '"default"';
                        (r.scopedSlots || (r.scopedSlots = {}))[s] = e
                    }
                    r.children.push(e), e.parent = r
                } var o, c;
            e.children = e.children.filter((function(e) {
                return !e.slotScope
            })), h(e), e.pre && (a = !1), Us(e.tag) && (l = !1);
            for (var d = 0; d < Ns.length; d++) Ns[d](e, t)
        }

        function h(e) {
            if (!l)
                for (var t;
                    (t = e.children[e.children.length - 1]) && 3 === t.type && " " === t.text;) e.children.pop()
        }
        return function(e, t) {
            for (var i, r, n = [], s = t.expectHTML, o = t.isUnaryTag || T, a = t.canBeLeftOpenTag || T, l = 0; e;) {
                if (i = e, r && ks(r)) {
                    var c = 0,
                        h = r.toLowerCase(),
                        d = Es[h] || (Es[h] = new RegExp("([\\s\\S]*?)(</" + h + "[^>]*>)", "i")),
                        u = e.replace(d, (function(e, i, r) {
                            return c = r.length, ks(h) || "noscript" === h || (i = i.replace(/<!\--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")), Bs(h, i) && (i = i.slice(1)), t.chars && t.chars(i), ""
                        }));
                    l += e.length - u.length, e = u, P(h, l - c, l)
                } else {
                    var p = e.indexOf("<");
                    if (0 === p) {
                        if (Cs.test(e)) {
                            var f = e.indexOf("--\x3e");
                            if (f >= 0) {
                                t.shouldKeepComment && t.comment(e.substring(4, f), l, l + f + 3), A(f + 3);
                                continue
                            }
                        }
                        if (Ps.test(e)) {
                            var _ = e.indexOf("]>");
                            if (_ >= 0) {
                                A(_ + 2);
                                continue
                            }
                        }
                        var m = e.match(xs);
                        if (m) {
                            A(m[0].length);
                            continue
                        }
                        var g = e.match(As);
                        if (g) {
                            var v = l;
                            A(g[0].length), P(g[1], v, l);
                            continue
                        }
                        var b = x();
                        if (b) {
                            C(b), Bs(b.tagName, e) && A(1);
                            continue
                        }
                    }
                    var y = void 0,
                        w = void 0,
                        M = void 0;
                    if (p >= 0) {
                        for (w = e.slice(p); !(As.test(w) || ws.test(w) || Cs.test(w) || Ps.test(w) || (M = w.indexOf("<", 1)) < 0);) p += M, w = e.slice(p);
                        y = e.substring(0, p)
                    }
                    p < 0 && (y = e), y && A(y.length), t.chars && y && t.chars(y, l - y.length, l)
                }
                if (e === i) {
                    t.chars && t.chars(e);
                    break
                }
            }

            function A(t) {
                l += t, e = e.substring(t)
            }

            function x() {
                var t = e.match(ws);
                if (t) {
                    var i, r, n = {
                        tagName: t[1],
                        attrs: [],
                        start: l
                    };
                    for (A(t[0].length); !(i = e.match(Ms)) && (r = e.match(vs) || e.match(gs));) r.start = l, A(r[0].length), r.end = l, n.attrs.push(r);
                    if (i) return n.unarySlash = i[1], A(i[0].length), n.end = l, n
                }
            }

            function C(e) {
                var i = e.tagName,
                    l = e.unarySlash;
                s && ("p" === r && ms(i) && P(r), a(i) && r === i && P(i));
                for (var c = o(i) || !!l, h = e.attrs.length, d = new Array(h), u = 0; u < h; u++) {
                    var p = e.attrs[u],
                        f = p[3] || p[4] || p[5] || "",
                        _ = "a" === i && "href" === p[1] ? t.shouldDecodeNewlinesForHref : t.shouldDecodeNewlines;
                    d[u] = {
                        name: p[1],
                        value: js(f, _)
                    }
                }
                c || (n.push({
                    tag: i,
                    lowerCasedTag: i.toLowerCase(),
                    attrs: d,
                    start: e.start,
                    end: e.end
                }), r = i), t.start && t.start(i, d, c, e.start, e.end)
            }

            function P(e, i, s) {
                var o, a;
                if (null == i && (i = l), null == s && (s = l), e)
                    for (a = e.toLowerCase(), o = n.length - 1; o >= 0 && n[o].lowerCasedTag !== a; o--);
                else o = 0;
                if (o >= 0) {
                    for (var c = n.length - 1; c >= o; c--) t.end && t.end(n[c].tag, i, s);
                    n.length = o, r = o && n[o - 1].tag
                } else "br" === a ? t.start && t.start(e, [], !0, i, s) : "p" === a && (t.start && t.start(e, [], !1, i, s), t.end && t.end(e, i, s))
            }
            P()
        }(e, {
            warn: Ls,
            expectHTML: t.expectHTML,
            isUnaryTag: t.isUnaryTag,
            canBeLeftOpenTag: t.canBeLeftOpenTag,
            shouldDecodeNewlines: t.shouldDecodeNewlines,
            shouldDecodeNewlinesForHref: t.shouldDecodeNewlinesForHref,
            shouldKeepComment: t.comments,
            outputSourceRange: t.outputSourceRange,
            start: function(e, s, o, h, d) {
                var u = r && r.ns || Vs(e);
                Y && "svg" === u && (s = function(e) {
                    for (var t = [], i = 0; i < e.length; i++) {
                        var r = e[i];
                        ho.test(r.name) || (r.name = r.name.replace(uo, ""), t.push(r))
                    }
                    return t
                }(s));
                var p, f = io(e, s, r);
                u && (f.ns = u), "style" !== (p = f).tag && ("script" !== p.tag || p.attrsMap.type && "text/javascript" !== p.attrsMap.type) || ie() || (f.forbidden = !0);
                for (var _ = 0; _ < Fs.length; _++) f = Fs[_](f, t) || f;
                a || (! function(e) {
                    null != Lr(e, "v-pre") && (e.pre = !0)
                }(f), f.pre && (a = !0)), Us(f.tag) && (l = !0), a ? function(e) {
                    var t = e.attrsList,
                        i = t.length;
                    if (i)
                        for (var r = e.attrs = new Array(i), n = 0; n < i; n++) r[n] = {
                            name: t[n].name,
                            value: JSON.stringify(t[n].value)
                        }, null != t[n].start && (r[n].start = t[n].start, r[n].end = t[n].end);
                    else e.pre || (e.plain = !0)
                }(f) : f.processed || (so(f), function(e) {
                    var t = Lr(e, "v-if");
                    if (t) e.if = t, oo(e, {
                        exp: t,
                        block: e
                    });
                    else {
                        null != Lr(e, "v-else") && (e.else = !0);
                        var i = Lr(e, "v-else-if");
                        i && (e.elseif = i)
                    }
                }(f), function(e) {
                    null != Lr(e, "v-once") && (e.once = !0)
                }(f)), i || (i = f), o ? c(f) : (r = f, n.push(f))
            },
            end: function(e, t, i) {
                var s = n[n.length - 1];
                n.length -= 1, r = n[n.length - 1], c(s)
            },
            chars: function(e, t, i) {
                if (r && (!Y || "textarea" !== r.tag || r.attrsMap.placeholder !== e)) {
                    var n, c, h, d = r.children;
                    if (e = l || e.trim() ? "script" === (n = r).tag || "style" === n.tag ? e : to(e) : d.length ? o ? "condense" === o && Js.test(e) ? "" : " " : s ? " " : "" : "") l || "condense" !== o || (e = e.replace(eo, " ")), !a && " " !== e && (c = function(e, t) {
                        var i = t ? cs(t) : as;
                        if (i.test(e)) {
                            for (var r, n, s, o = [], a = [], l = i.lastIndex = 0; r = i.exec(e);) {
                                (n = r.index) > l && (a.push(s = e.slice(l, n)), o.push(JSON.stringify(s)));
                                var c = xr(r[1].trim());
                                o.push("_s(" + c + ")"), a.push({
                                    "@binding": c
                                }), l = n + r[0].length
                            }
                            return l < e.length && (a.push(s = e.slice(l)), o.push(JSON.stringify(s))), {
                                expression: o.join("+"),
                                tokens: a
                            }
                        }
                    }(e, Rs)) ? h = {
                        type: 2,
                        expression: c.expression,
                        tokens: c.tokens,
                        text: e
                    } : " " === e && d.length && " " === d[d.length - 1].text || (h = {
                        type: 3,
                        text: e
                    }), h && d.push(h)
                }
            },
            comment: function(e, t, i) {
                if (r) {
                    var n = {
                        type: 3,
                        text: e,
                        isComment: !0
                    };
                    r.children.push(n)
                }
            }
        }), i
    }

    function no(e, t) {
        var i, r;
        (r = jr(i = e, "key")) && (i.key = r), e.plain = !e.key && !e.scopedSlots && !e.attrsList.length,
            function(e) {
                var t = jr(e, "ref");
                t && (e.ref = t, e.refInFor = function(e) {
                    var t = e;
                    for (; t;) {
                        if (void 0 !== t.for) return !0;
                        t = t.parent
                    }
                    return !1
                }(e))
            }(e),
            function(e) {
                var t;
                "template" === e.tag ? (t = Lr(e, "scope"), e.slotScope = t || Lr(e, "slot-scope")) : (t = Lr(e, "slot-scope")) && (e.slotScope = t);
                var i = jr(e, "slot");
                i && (e.slotTarget = '""' === i ? '"default"' : i, e.slotTargetDynamic = !(!e.attrsMap[":slot"] && !e.attrsMap["v-bind:slot"]), "template" === e.tag || e.slotScope || Ir(e, "slot", i, function(e, t) {
                    return e.rawAttrsMap[":" + t] || e.rawAttrsMap["v-bind:" + t] || e.rawAttrsMap[t]
                }(e, "slot")));
                if ("template" === e.tag) {
                    var r = Rr(e, Qs);
                    if (r) {
                        var n = ao(r),
                            s = n.name,
                            o = n.dynamic;
                        e.slotTarget = s, e.slotTargetDynamic = o, e.slotScope = r.value || "_empty_"
                    }
                } else {
                    var a = Rr(e, Qs);
                    if (a) {
                        var l = e.scopedSlots || (e.scopedSlots = {}),
                            c = ao(a),
                            h = c.name,
                            d = c.dynamic,
                            u = l[h] = io("template", [], e);
                        u.slotTarget = h, u.slotTargetDynamic = d, u.children = e.children.filter((function(e) {
                            if (!e.slotScope) return e.parent = u, !0
                        })), u.slotScope = a.value || "_empty_", e.children = [], e.plain = !1
                    }
                }
            }(e),
            function(e) {
                "slot" === e.tag && (e.slotName = jr(e, "name"))
            }(e),
            function(e) {
                var t;
                (t = jr(e, "is")) && (e.component = t);
                null != Lr(e, "inline-template") && (e.inlineTemplate = !0)
            }(e);
        for (var n = 0; n < Os.length; n++) e = Os[n](e, t) || e;
        return function(e) {
            var t, i, r, n, s, o, a, l, c = e.attrsList;
            for (t = 0, i = c.length; t < i; t++)
                if (r = n = c[t].name, s = c[t].value, $s.test(r))
                    if (e.hasBindings = !0, (o = lo(r.replace($s, ""))) && (r = r.replace(Ks, "")), Xs.test(r)) r = r.replace(Xs, ""), s = xr(s), (l = Ys.test(r)) && (r = r.slice(1, -1)), o && (o.prop && !l && "innerHtml" === (r = w(r)) && (r = "innerHTML"), o.camel && !l && (r = w(r)), o.sync && (a = Nr(s, "$event"), l ? Br(e, '"update:"+(' + r + ")", a, null, !1, 0, c[t], !0) : (Br(e, "update:" + w(r), a, null, !1, 0, c[t]), x(r) !== w(r) && Br(e, "update:" + x(r), a, null, !1, 0, c[t])))), o && o.prop || !e.component && Hs(e.tag, e.attrsMap.type, r) ? Er(e, r, s, c[t], l) : Ir(e, r, s, c[t], l);
                    else if (zs.test(r)) r = r.replace(zs, ""), (l = Ys.test(r)) && (r = r.slice(1, -1)), Br(e, r, s, o, !1, 0, c[t], l);
            else {
                var h = (r = r.replace($s, "")).match(Zs),
                    d = h && h[1];
                l = !1, d && (r = r.slice(0, -(d.length + 1)), Ys.test(d) && (d = d.slice(1, -1), l = !0)), Dr(e, r, n, s, d, l, o, c[t])
            } else Ir(e, r, JSON.stringify(s), c[t]), !e.component && "muted" === r && Hs(e.tag, e.attrsMap.type, r) && Er(e, r, "true", c[t])
        }(e), e
    }

    function so(e) {
        var t;
        if (t = Lr(e, "v-for")) {
            var i = function(e) {
                var t = e.match(Ws);
                if (!t) return;
                var i = {};
                i.for = t[2].trim();
                var r = t[1].trim().replace(Gs, ""),
                    n = r.match(qs);
                n ? (i.alias = r.replace(qs, "").trim(), i.iterator1 = n[1].trim(), n[2] && (i.iterator2 = n[2].trim())) : i.alias = r;
                return i
            }(t);
            i && k(e, i)
        }
    }

    function oo(e, t) {
        e.ifConditions || (e.ifConditions = []), e.ifConditions.push(t)
    }

    function ao(e) {
        var t = e.name.replace(Qs, "");
        return t || "#" !== e.name[0] && (t = "default"), Ys.test(t) ? {
            name: t.slice(1, -1),
            dynamic: !0
        } : {
            name: '"' + t + '"',
            dynamic: !1
        }
    }

    function lo(e) {
        var t = e.match(Ks);
        if (t) {
            var i = {};
            return t.forEach((function(e) {
                i[e.slice(1)] = !0
            })), i
        }
    }

    function co(e) {
        for (var t = {}, i = 0, r = e.length; i < r; i++) t[e[i].name] = e[i].value;
        return t
    }
    var ho = /^xmlns:NS\d+/,
        uo = /^NS\d+:/;

    function po(e) {
        return io(e.tag, e.attrsList.slice(), e.parent)
    }
    var fo = [hs, us, {
        preTransformNode: function(e, t) {
            if ("input" === e.tag) {
                var i, r = e.attrsMap;
                if (!r["v-model"]) return;
                if ((r[":type"] || r["v-bind:type"]) && (i = jr(e, "type")), r.type || i || !r["v-bind"] || (i = "(" + r["v-bind"] + ").type"), i) {
                    var n = Lr(e, "v-if", !0),
                        s = n ? "&&(" + n + ")" : "",
                        o = null != Lr(e, "v-else", !0),
                        a = Lr(e, "v-else-if", !0),
                        l = po(e);
                    so(l), Tr(l, "type", "checkbox"), no(l, t), l.processed = !0, l.if = "(" + i + ")==='checkbox'" + s, oo(l, {
                        exp: l.if,
                        block: l
                    });
                    var c = po(e);
                    Lr(c, "v-for", !0), Tr(c, "type", "radio"), no(c, t), oo(l, {
                        exp: "(" + i + ")==='radio'" + s,
                        block: c
                    });
                    var h = po(e);
                    return Lr(h, "v-for", !0), Tr(h, ":type", i), no(h, t), oo(l, {
                        exp: n,
                        block: h
                    }), o ? l.else = !0 : a && (l.elseif = a), l
                }
            }
        }
    }];
    var _o, mo, go = {
            expectHTML: !0,
            modules: fo,
            directives: {
                model: function(e, t, i) {
                    var r = t.value,
                        n = t.modifiers,
                        s = e.tag,
                        o = e.attrsMap.type;
                    if (e.component) return Fr(e, r, n), !1;
                    if ("select" === s) ! function(e, t, i) {
                        var r = 'var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (i && i.number ? "_n(val)" : "val") + "});";
                        r = r + " " + Nr(t, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), Br(e, "change", r, null, !0)
                    }(e, r, n);
                    else if ("input" === s && "checkbox" === o) ! function(e, t, i) {
                        var r = i && i.number,
                            n = jr(e, "value") || "null",
                            s = jr(e, "true-value") || "true",
                            o = jr(e, "false-value") || "false";
                        Er(e, "checked", "Array.isArray(" + t + ")?_i(" + t + "," + n + ")>-1" + ("true" === s ? ":(" + t + ")" : ":_q(" + t + "," + s + ")")), Br(e, "change", "var $$a=" + t + ",$$el=$event.target,$$c=$$el.checked?(" + s + "):(" + o + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + n + ")" : n) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + Nr(t, "$$a.concat([$$v])") + ")}else{$$i>-1&&(" + Nr(t, "$$a.slice(0,$$i).concat($$a.slice($$i+1))") + ")}}else{" + Nr(t, "$$c") + "}", null, !0)
                    }(e, r, n);
                    else if ("input" === s && "radio" === o) ! function(e, t, i) {
                        var r = i && i.number,
                            n = jr(e, "value") || "null";
                        Er(e, "checked", "_q(" + t + "," + (n = r ? "_n(" + n + ")" : n) + ")"), Br(e, "change", Nr(t, n), null, !0)
                    }(e, r, n);
                    else if ("input" === s || "textarea" === s) ! function(e, t, i) {
                        var r = e.attrsMap.type,
                            n = i || {},
                            s = n.lazy,
                            o = n.number,
                            a = n.trim,
                            l = !s && "range" !== r,
                            c = s ? "change" : "range" === r ? "__r" : "input",
                            h = "$event.target.value";
                        a && (h = "$event.target.value.trim()");
                        o && (h = "_n(" + h + ")");
                        var d = Nr(t, h);
                        l && (d = "if($event.target.composing)return;" + d);
                        Er(e, "value", "(" + t + ")"), Br(e, c, d, null, !0), (a || o) && Br(e, "blur", "$forceUpdate()")
                    }(e, r, n);
                    else if (!O.isReservedTag(s)) return Fr(e, r, n), !1;
                    return !0
                },
                text: function(e, t) {
                    t.value && Er(e, "textContent", "_s(" + t.value + ")", t)
                },
                html: function(e, t) {
                    t.value && Er(e, "innerHTML", "_s(" + t.value + ")", t)
                }
            },
            isPreTag: function(e) {
                return "pre" === e
            },
            isUnaryTag: fs,
            mustUseProp: Di,
            canBeLeftOpenTag: _s,
            isReservedTag: qi,
            getTagNamespace: Gi,
            staticKeys: function(e) {
                return e.reduce((function(e, t) {
                    return e.concat(t.staticKeys || [])
                }), []).join(",")
            }(fo)
        },
        vo = b((function(e) {
            return p("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap" + (e ? "," + e : ""))
        }));

    function bo(e, t) {
        e && (_o = vo(t.staticKeys || ""), mo = t.isReservedTag || T, function e(t) {
            if (t.static = function(e) {
                    if (2 === e.type) return !1;
                    if (3 === e.type) return !0;
                    return !(!e.pre && (e.hasBindings || e.if || e.for || f(e.tag) || !mo(e.tag) || function(e) {
                        for (; e.parent;) {
                            if ("template" !== (e = e.parent).tag) return !1;
                            if (e.for) return !0
                        }
                        return !1
                    }(e) || !Object.keys(e).every(_o)))
                }(t), 1 === t.type) {
                if (!mo(t.tag) && "slot" !== t.tag && null == t.attrsMap["inline-template"]) return;
                for (var i = 0, r = t.children.length; i < r; i++) {
                    var n = t.children[i];
                    e(n), n.static || (t.static = !1)
                }
                if (t.ifConditions)
                    for (var s = 1, o = t.ifConditions.length; s < o; s++) {
                        var a = t.ifConditions[s].block;
                        e(a), a.static || (t.static = !1)
                    }
            }
        }(e), function e(t, i) {
            if (1 === t.type) {
                if ((t.static || t.once) && (t.staticInFor = i), t.static && t.children.length && (1 !== t.children.length || 3 !== t.children[0].type)) return void(t.staticRoot = !0);
                if (t.staticRoot = !1, t.children)
                    for (var r = 0, n = t.children.length; r < n; r++) e(t.children[r], i || !!t.for);
                if (t.ifConditions)
                    for (var s = 1, o = t.ifConditions.length; s < o; s++) e(t.ifConditions[s].block, i)
            }
        }(e, !1))
    }
    var yo = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,
        wo = /\([^)]*?\);*$/,
        Mo = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,
        Ao = {
            esc: 27,
            tab: 9,
            enter: 13,
            space: 32,
            up: 38,
            left: 37,
            right: 39,
            down: 40,
            delete: [8, 46]
        },
        xo = {
            esc: ["Esc", "Escape"],
            tab: "Tab",
            enter: "Enter",
            space: [" ", "Spacebar"],
            up: ["Up", "ArrowUp"],
            left: ["Left", "ArrowLeft"],
            right: ["Right", "ArrowRight"],
            down: ["Down", "ArrowDown"],
            delete: ["Backspace", "Delete", "Del"]
        },
        Co = function(e) {
            return "if(" + e + ")return null;"
        },
        Po = {
            stop: "$event.stopPropagation();",
            prevent: "$event.preventDefault();",
            self: Co("$event.target !== $event.currentTarget"),
            ctrl: Co("!$event.ctrlKey"),
            shift: Co("!$event.shiftKey"),
            alt: Co("!$event.altKey"),
            meta: Co("!$event.metaKey"),
            left: Co("'button' in $event && $event.button !== 0"),
            middle: Co("'button' in $event && $event.button !== 1"),
            right: Co("'button' in $event && $event.button !== 2")
        };

    function ko(e, t) {
        var i = t ? "nativeOn:" : "on:",
            r = "",
            n = "";
        for (var s in e) {
            var o = Eo(e[s]);
            e[s] && e[s].dynamic ? n += s + "," + o + "," : r += '"' + s + '":' + o + ","
        }
        return r = "{" + r.slice(0, -1) + "}", n ? i + "_d(" + r + ",[" + n.slice(0, -1) + "])" : i + r
    }

    function Eo(e) {
        if (!e) return "function(){}";
        if (Array.isArray(e)) return "[" + e.map((function(e) {
            return Eo(e)
        })).join(",") + "]";
        var t = Mo.test(e.value),
            i = yo.test(e.value),
            r = Mo.test(e.value.replace(wo, ""));
        if (e.modifiers) {
            var n = "",
                s = "",
                o = [];
            for (var a in e.modifiers)
                if (Po[a]) s += Po[a], Ao[a] && o.push(a);
                else if ("exact" === a) {
                var l = e.modifiers;
                s += Co(["ctrl", "shift", "alt", "meta"].filter((function(e) {
                    return !l[e]
                })).map((function(e) {
                    return "$event." + e + "Key"
                })).join("||"))
            } else o.push(a);
            return o.length && (n += function(e) {
                return "if(!$event.type.indexOf('key')&&" + e.map(Io).join("&&") + ")return null;"
            }(o)), s && (n += s), "function($event){" + n + (t ? "return " + e.value + "($event)" : i ? "return (" + e.value + ")($event)" : r ? "return " + e.value : e.value) + "}"
        }
        return t || i ? e.value : "function($event){" + (r ? "return " + e.value : e.value) + "}"
    }

    function Io(e) {
        var t = parseInt(e, 10);
        if (t) return "$event.keyCode!==" + t;
        var i = Ao[e],
            r = xo[e];
        return "_k($event.keyCode," + JSON.stringify(e) + "," + JSON.stringify(i) + ",$event.key," + JSON.stringify(r) + ")"
    }
    var To = {
            on: function(e, t) {
                e.wrapListeners = function(e) {
                    return "_g(" + e + "," + t.value + ")"
                }
            },
            bind: function(e, t) {
                e.wrapData = function(i) {
                    return "_b(" + i + ",'" + e.tag + "'," + t.value + "," + (t.modifiers && t.modifiers.prop ? "true" : "false") + (t.modifiers && t.modifiers.sync ? ",true" : "") + ")"
                }
            },
            cloak: I
        },
        Do = function(e) {
            this.options = e, this.warn = e.warn || Pr, this.transforms = kr(e.modules, "transformCode"), this.dataGenFns = kr(e.modules, "genData"), this.directives = k(k({}, To), e.directives);
            var t = e.isReservedTag || T;
            this.maybeComponent = function(e) {
                return !!e.component || !t(e.tag)
            }, this.onceId = 0, this.staticRenderFns = [], this.pre = !1
        };

    function So(e, t) {
        var i = new Do(t);
        return {
            render: "with(this){return " + (e ? Bo(e, i) : '_c("div")') + "}",
            staticRenderFns: i.staticRenderFns
        }
    }

    function Bo(e, t) {
        if (e.parent && (e.pre = e.pre || e.parent.pre), e.staticRoot && !e.staticProcessed) return jo(e, t);
        if (e.once && !e.onceProcessed) return Lo(e, t);
        if (e.for && !e.forProcessed) return Oo(e, t);
        if (e.if && !e.ifProcessed) return Ro(e, t);
        if ("template" !== e.tag || e.slotTarget || t.pre) {
            if ("slot" === e.tag) return function(e, t) {
                var i = e.slotName || '"default"',
                    r = Ho(e, t),
                    n = "_t(" + i + (r ? "," + r : ""),
                    s = e.attrs || e.dynamicAttrs ? $o((e.attrs || []).concat(e.dynamicAttrs || []).map((function(e) {
                        return {
                            name: w(e.name),
                            value: e.value,
                            dynamic: e.dynamic
                        }
                    }))) : null,
                    o = e.attrsMap["v-bind"];
                !s && !o || r || (n += ",null");
                s && (n += "," + s);
                o && (n += (s ? "" : ",null") + "," + o);
                return n + ")"
            }(e, t);
            var i;
            if (e.component) i = function(e, t, i) {
                var r = t.inlineTemplate ? null : Ho(t, i, !0);
                return "_c(" + e + "," + Fo(t, i) + (r ? "," + r : "") + ")"
            }(e.component, e, t);
            else {
                var r;
                (!e.plain || e.pre && t.maybeComponent(e)) && (r = Fo(e, t));
                var n = e.inlineTemplate ? null : Ho(e, t, !0);
                i = "_c('" + e.tag + "'" + (r ? "," + r : "") + (n ? "," + n : "") + ")"
            }
            for (var s = 0; s < t.transforms.length; s++) i = t.transforms[s](e, i);
            return i
        }
        return Ho(e, t) || "void 0"
    }

    function jo(e, t) {
        e.staticProcessed = !0;
        var i = t.pre;
        return e.pre && (t.pre = e.pre), t.staticRenderFns.push("with(this){return " + Bo(e, t) + "}"), t.pre = i, "_m(" + (t.staticRenderFns.length - 1) + (e.staticInFor ? ",true" : "") + ")"
    }

    function Lo(e, t) {
        if (e.onceProcessed = !0, e.if && !e.ifProcessed) return Ro(e, t);
        if (e.staticInFor) {
            for (var i = "", r = e.parent; r;) {
                if (r.for) {
                    i = r.key;
                    break
                }
                r = r.parent
            }
            return i ? "_o(" + Bo(e, t) + "," + t.onceId++ + "," + i + ")" : Bo(e, t)
        }
        return jo(e, t)
    }

    function Ro(e, t, i, r) {
        return e.ifProcessed = !0,
            function e(t, i, r, n) {
                if (!t.length) return n || "_e()";
                var s = t.shift();
                return s.exp ? "(" + s.exp + ")?" + o(s.block) + ":" + e(t, i, r, n) : "" + o(s.block);

                function o(e) {
                    return r ? r(e, i) : e.once ? Lo(e, i) : Bo(e, i)
                }
            }(e.ifConditions.slice(), t, i, r)
    }

    function Oo(e, t, i, r) {
        var n = e.for,
            s = e.alias,
            o = e.iterator1 ? "," + e.iterator1 : "",
            a = e.iterator2 ? "," + e.iterator2 : "";
        return e.forProcessed = !0, (r || "_l") + "((" + n + "),function(" + s + o + a + "){return " + (i || Bo)(e, t) + "})"
    }

    function Fo(e, t) {
        var i = "{",
            r = function(e, t) {
                var i = e.directives;
                if (!i) return;
                var r, n, s, o, a = "directives:[",
                    l = !1;
                for (r = 0, n = i.length; r < n; r++) {
                    s = i[r], o = !0;
                    var c = t.directives[s.name];
                    c && (o = !!c(e, s, t.warn)), o && (l = !0, a += '{name:"' + s.name + '",rawName:"' + s.rawName + '"' + (s.value ? ",value:(" + s.value + "),expression:" + JSON.stringify(s.value) : "") + (s.arg ? ",arg:" + (s.isDynamicArg ? s.arg : '"' + s.arg + '"') : "") + (s.modifiers ? ",modifiers:" + JSON.stringify(s.modifiers) : "") + "},")
                }
                if (l) return a.slice(0, -1) + "]"
            }(e, t);
        r && (i += r + ","), e.key && (i += "key:" + e.key + ","), e.ref && (i += "ref:" + e.ref + ","), e.refInFor && (i += "refInFor:true,"), e.pre && (i += "pre:true,"), e.component && (i += 'tag:"' + e.tag + '",');
        for (var n = 0; n < t.dataGenFns.length; n++) i += t.dataGenFns[n](e);
        if (e.attrs && (i += "attrs:" + $o(e.attrs) + ","), e.props && (i += "domProps:" + $o(e.props) + ","), e.events && (i += ko(e.events, !1) + ","), e.nativeEvents && (i += ko(e.nativeEvents, !0) + ","), e.slotTarget && !e.slotScope && (i += "slot:" + e.slotTarget + ","), e.scopedSlots && (i += function(e, t, i) {
                var r = e.for || Object.keys(t).some((function(e) {
                        var i = t[e];
                        return i.slotTargetDynamic || i.if || i.for || No(i)
                    })),
                    n = !!e.if;
                if (!r)
                    for (var s = e.parent; s;) {
                        if (s.slotScope && "_empty_" !== s.slotScope || s.for) {
                            r = !0;
                            break
                        }
                        s.if && (n = !0), s = s.parent
                    }
                var o = Object.keys(t).map((function(e) {
                    return Uo(t[e], i)
                })).join(",");
                return "scopedSlots:_u([" + o + "]" + (r ? ",null,true" : "") + (!r && n ? ",null,false," + function(e) {
                    var t = 5381,
                        i = e.length;
                    for (; i;) t = 33 * t ^ e.charCodeAt(--i);
                    return t >>> 0
                }(o) : "") + ")"
            }(e, e.scopedSlots, t) + ","), e.model && (i += "model:{value:" + e.model.value + ",callback:" + e.model.callback + ",expression:" + e.model.expression + "},"), e.inlineTemplate) {
            var s = function(e, t) {
                var i = e.children[0];
                if (i && 1 === i.type) {
                    var r = So(i, t.options);
                    return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map((function(e) {
                        return "function(){" + e + "}"
                    })).join(",") + "]}"
                }
            }(e, t);
            s && (i += s + ",")
        }
        return i = i.replace(/,$/, "") + "}", e.dynamicAttrs && (i = "_b(" + i + ',"' + e.tag + '",' + $o(e.dynamicAttrs) + ")"), e.wrapData && (i = e.wrapData(i)), e.wrapListeners && (i = e.wrapListeners(i)), i
    }

    function No(e) {
        return 1 === e.type && ("slot" === e.tag || e.children.some(No))
    }

    function Uo(e, t) {
        var i = e.attrsMap["slot-scope"];
        if (e.if && !e.ifProcessed && !i) return Ro(e, t, Uo, "null");
        if (e.for && !e.forProcessed) return Oo(e, t, Uo);
        var r = "_empty_" === e.slotScope ? "" : String(e.slotScope),
            n = "function(" + r + "){return " + ("template" === e.tag ? e.if && i ? "(" + e.if+")?" + (Ho(e, t) || "undefined") + ":undefined" : Ho(e, t) || "undefined" : Bo(e, t)) + "}",
            s = r ? "" : ",proxy:true";
        return "{key:" + (e.slotTarget || '"default"') + ",fn:" + n + s + "}"
    }

    function Ho(e, t, i, r, n) {
        var s = e.children;
        if (s.length) {
            var o = s[0];
            if (1 === s.length && o.for && "template" !== o.tag && "slot" !== o.tag) {
                var a = i ? t.maybeComponent(o) ? ",1" : ",0" : "";
                return "" + (r || Bo)(o, t) + a
            }
            var l = i ? function(e, t) {
                    for (var i = 0, r = 0; r < e.length; r++) {
                        var n = e[r];
                        if (1 === n.type) {
                            if (Vo(n) || n.ifConditions && n.ifConditions.some((function(e) {
                                    return Vo(e.block)
                                }))) {
                                i = 2;
                                break
                            }(t(n) || n.ifConditions && n.ifConditions.some((function(e) {
                                return t(e.block)
                            }))) && (i = 1)
                        }
                    }
                    return i
                }(s, t.maybeComponent) : 0,
                c = n || zo;
            return "[" + s.map((function(e) {
                return c(e, t)
            })).join(",") + "]" + (l ? "," + l : "")
        }
    }

    function Vo(e) {
        return void 0 !== e.for || "template" === e.tag || "slot" === e.tag
    }

    function zo(e, t) {
        return 1 === e.type ? Bo(e, t) : 3 === e.type && e.isComment ? function(e) {
            return "_e(" + JSON.stringify(e.text) + ")"
        }(e) : function(e) {
            return "_v(" + (2 === e.type ? e.expression : Wo(JSON.stringify(e.text))) + ")"
        }(e)
    }

    function $o(e) {
        for (var t = "", i = "", r = 0; r < e.length; r++) {
            var n = e[r],
                s = Wo(n.value);
            n.dynamic ? i += n.name + "," + s + "," : t += '"' + n.name + '":' + s + ","
        }
        return t = "{" + t.slice(0, -1) + "}", i ? "_d(" + t + ",[" + i.slice(0, -1) + "])" : t
    }

    function Wo(e) {
        return e.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
    }
    new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b") + "\\b");

    function qo(e, t) {
        try {
            return new Function(e)
        } catch (i) {
            return t.push({
                err: i,
                code: e
            }), I
        }
    }

    function Go(e) {
        var t = Object.create(null);
        return function(i, r, n) {
            (r = k({}, r)).warn;
            delete r.warn;
            var s = r.delimiters ? String(r.delimiters) + i : i;
            if (t[s]) return t[s];
            var o = e(i, r),
                a = {},
                l = [];
            return a.render = qo(o.render, l), a.staticRenderFns = o.staticRenderFns.map((function(e) {
                return qo(e, l)
            })), t[s] = a
        }
    }
    var Yo, Zo, Xo = (Yo = function(e, t) {
        var i = ro(e.trim(), t);
        !1 !== t.optimize && bo(i, t);
        var r = So(i, t);
        return {
            ast: i,
            render: r.render,
            staticRenderFns: r.staticRenderFns
        }
    }, function(e) {
        function t(t, i) {
            var r = Object.create(e),
                n = [],
                s = [];
            if (i)
                for (var o in i.modules && (r.modules = (e.modules || []).concat(i.modules)), i.directives && (r.directives = k(Object.create(e.directives || null), i.directives)), i) "modules" !== o && "directives" !== o && (r[o] = i[o]);
            r.warn = function(e, t, i) {
                (i ? s : n).push(e)
            };
            var a = Yo(t.trim(), r);
            return a.errors = n, a.tips = s, a
        }
        return {
            compile: t,
            compileToFunctions: Go(t)
        }
    })(go).compileToFunctions;

    function Ko(e) {
        return (Zo = Zo || document.createElement("div")).innerHTML = e ? '<a href="\n"/>' : '<div a="\n"/>', Zo.innerHTML.indexOf("&#10;") > 0
    }
    var Qo = !!$ && Ko(!1),
        Jo = !!$ && Ko(!0),
        ea = b((function(e) {
            var t = Xi(e);
            return t && t.innerHTML
        })),
        ta = wi.prototype.$mount;
    wi.prototype.$mount = function(e, t) {
        if ((e = e && Xi(e)) === document.body || e === document.documentElement) return this;
        var i = this.$options;
        if (!i.render) {
            var r = i.template;
            if (r)
                if ("string" == typeof r) "#" === r.charAt(0) && (r = ea(r));
                else {
                    if (!r.nodeType) return this;
                    r = r.innerHTML
                }
            else e && (r = function(e) {
                if (e.outerHTML) return e.outerHTML;
                var t = document.createElement("div");
                return t.appendChild(e.cloneNode(!0)), t.innerHTML
            }(e));
            if (r) {
                var n = Xo(r, {
                        outputSourceRange: !1,
                        shouldDecodeNewlines: Qo,
                        shouldDecodeNewlinesForHref: Jo,
                        delimiters: i.delimiters,
                        comments: i.comments
                    }, this),
                    s = n.render,
                    o = n.staticRenderFns;
                i.render = s, i.staticRenderFns = o
            }
        }
        return ta.call(this, e, t)
    }, wi.compile = Xo;
    var ia = ("undefined" != typeof window ? window : "undefined" != typeof global ? global : {}).__VUE_DEVTOOLS_GLOBAL_HOOK__;

    function ra(e, t) {
        Object.keys(e).forEach((function(i) {
            return t(e[i], i)
        }))
    }

    function na(e) {
        return null !== e && "object" == typeof e
    }
    var sa = function(e, t) {
            this.runtime = t, this._children = Object.create(null), this._rawModule = e;
            var i = e.state;
            this.state = ("function" == typeof i ? i() : i) || {}
        },
        oa = {
            namespaced: {
                configurable: !0
            }
        };
    oa.namespaced.get = function() {
        return !!this._rawModule.namespaced
    }, sa.prototype.addChild = function(e, t) {
        this._children[e] = t
    }, sa.prototype.removeChild = function(e) {
        delete this._children[e]
    }, sa.prototype.getChild = function(e) {
        return this._children[e]
    }, sa.prototype.update = function(e) {
        this._rawModule.namespaced = e.namespaced, e.actions && (this._rawModule.actions = e.actions), e.mutations && (this._rawModule.mutations = e.mutations), e.getters && (this._rawModule.getters = e.getters)
    }, sa.prototype.forEachChild = function(e) {
        ra(this._children, e)
    }, sa.prototype.forEachGetter = function(e) {
        this._rawModule.getters && ra(this._rawModule.getters, e)
    }, sa.prototype.forEachAction = function(e) {
        this._rawModule.actions && ra(this._rawModule.actions, e)
    }, sa.prototype.forEachMutation = function(e) {
        this._rawModule.mutations && ra(this._rawModule.mutations, e)
    }, Object.defineProperties(sa.prototype, oa);
    var aa, la = function(e) {
        this.register([], e, !1)
    };
    la.prototype.get = function(e) {
        return e.reduce((function(e, t) {
            return e.getChild(t)
        }), this.root)
    }, la.prototype.getNamespace = function(e) {
        var t = this.root;
        return e.reduce((function(e, i) {
            return e + ((t = t.getChild(i)).namespaced ? i + "/" : "")
        }), "")
    }, la.prototype.update = function(e) {
        ! function e(t, i, r) {
            if (i.update(r), r.modules)
                for (var n in r.modules) {
                    if (!i.getChild(n)) return;
                    e(t.concat(n), i.getChild(n), r.modules[n])
                }
        }([], this.root, e)
    }, la.prototype.register = function(e, t, i) {
        var r = this;
        void 0 === i && (i = !0);
        var n = new sa(t, i);
        0 === e.length ? this.root = n : this.get(e.slice(0, -1)).addChild(e[e.length - 1], n);
        t.modules && ra(t.modules, (function(t, n) {
            r.register(e.concat(n), t, i)
        }))
    }, la.prototype.unregister = function(e) {
        var t = this.get(e.slice(0, -1)),
            i = e[e.length - 1];
        t.getChild(i).runtime && t.removeChild(i)
    };
    var ca = function(e) {
            var t = this;
            void 0 === e && (e = {}), !aa && "undefined" != typeof window && window.Vue && ga(window.Vue);
            var i = e.plugins;
            void 0 === i && (i = []);
            var r = e.strict;
            void 0 === r && (r = !1), this._committing = !1, this._actions = Object.create(null), this._actionSubscribers = [], this._mutations = Object.create(null), this._wrappedGetters = Object.create(null), this._modules = new la(e), this._modulesNamespaceMap = Object.create(null), this._subscribers = [], this._watcherVM = new aa, this._makeLocalGettersCache = Object.create(null);
            var n = this,
                s = this.dispatch,
                o = this.commit;
            this.dispatch = function(e, t) {
                return s.call(n, e, t)
            }, this.commit = function(e, t, i) {
                return o.call(n, e, t, i)
            }, this.strict = r;
            var a = this._modules.root.state;
            fa(this, a, [], this._modules.root), pa(this, a), i.forEach((function(e) {
                return e(t)
            })), (void 0 !== e.devtools ? e.devtools : aa.config.devtools) && function(e) {
                ia && (e._devtoolHook = ia, ia.emit("vuex:init", e), ia.on("vuex:travel-to-state", (function(t) {
                    e.replaceState(t)
                })), e.subscribe((function(e, t) {
                    ia.emit("vuex:mutation", e, t)
                })))
            }(this)
        },
        ha = {
            state: {
                configurable: !0
            }
        };

    function da(e, t) {
        return t.indexOf(e) < 0 && t.push(e),
            function() {
                var i = t.indexOf(e);
                i > -1 && t.splice(i, 1)
            }
    }

    function ua(e, t) {
        e._actions = Object.create(null), e._mutations = Object.create(null), e._wrappedGetters = Object.create(null), e._modulesNamespaceMap = Object.create(null);
        var i = e.state;
        fa(e, i, [], e._modules.root, !0), pa(e, i, t)
    }

    function pa(e, t, i) {
        var r = e._vm;
        e.getters = {}, e._makeLocalGettersCache = Object.create(null);
        var n = e._wrappedGetters,
            s = {};
        ra(n, (function(t, i) {
            s[i] = function(e, t) {
                return function() {
                    return e(t)
                }
            }(t, e), Object.defineProperty(e.getters, i, {
                get: function() {
                    return e._vm[i]
                },
                enumerable: !0
            })
        }));
        var o = aa.config.silent;
        aa.config.silent = !0, e._vm = new aa({
            data: {
                $$state: t
            },
            computed: s
        }), aa.config.silent = o, e.strict && function(e) {
            e._vm.$watch((function() {
                return this._data.$$state
            }), (function() {}), {
                deep: !0,
                sync: !0
            })
        }(e), r && (i && e._withCommit((function() {
            r._data.$$state = null
        })), aa.nextTick((function() {
            return r.$destroy()
        })))
    }

    function fa(e, t, i, r, n) {
        var s = !i.length,
            o = e._modules.getNamespace(i);
        if (r.namespaced && (e._modulesNamespaceMap[o], e._modulesNamespaceMap[o] = r), !s && !n) {
            var a = _a(t, i.slice(0, -1)),
                l = i[i.length - 1];
            e._withCommit((function() {
                aa.set(a, l, r.state)
            }))
        }
        var c = r.context = function(e, t, i) {
            var r = "" === t,
                n = {
                    dispatch: r ? e.dispatch : function(i, r, n) {
                        var s = ma(i, r, n),
                            o = s.payload,
                            a = s.options,
                            l = s.type;
                        return a && a.root || (l = t + l), e.dispatch(l, o)
                    },
                    commit: r ? e.commit : function(i, r, n) {
                        var s = ma(i, r, n),
                            o = s.payload,
                            a = s.options,
                            l = s.type;
                        a && a.root || (l = t + l), e.commit(l, o, a)
                    }
                };
            return Object.defineProperties(n, {
                getters: {
                    get: r ? function() {
                        return e.getters
                    } : function() {
                        return function(e, t) {
                            if (!e._makeLocalGettersCache[t]) {
                                var i = {},
                                    r = t.length;
                                Object.keys(e.getters).forEach((function(n) {
                                    if (n.slice(0, r) === t) {
                                        var s = n.slice(r);
                                        Object.defineProperty(i, s, {
                                            get: function() {
                                                return e.getters[n]
                                            },
                                            enumerable: !0
                                        })
                                    }
                                })), e._makeLocalGettersCache[t] = i
                            }
                            return e._makeLocalGettersCache[t]
                        }(e, t)
                    }
                },
                state: {
                    get: function() {
                        return _a(e.state, i)
                    }
                }
            }), n
        }(e, o, i);
        r.forEachMutation((function(t, i) {
            ! function(e, t, i, r) {
                (e._mutations[t] || (e._mutations[t] = [])).push((function(t) {
                    i.call(e, r.state, t)
                }))
            }(e, o + i, t, c)
        })), r.forEachAction((function(t, i) {
            var r = t.root ? i : o + i,
                n = t.handler || t;
            ! function(e, t, i, r) {
                (e._actions[t] || (e._actions[t] = [])).push((function(t) {
                    var n, s = i.call(e, {
                        dispatch: r.dispatch,
                        commit: r.commit,
                        getters: r.getters,
                        state: r.state,
                        rootGetters: e.getters,
                        rootState: e.state
                    }, t);
                    return (n = s) && "function" == typeof n.then || (s = Promise.resolve(s)), e._devtoolHook ? s.catch((function(t) {
                        throw e._devtoolHook.emit("vuex:error", t), t
                    })) : s
                }))
            }(e, r, n, c)
        })), r.forEachGetter((function(t, i) {
            ! function(e, t, i, r) {
                if (e._wrappedGetters[t]) return;
                e._wrappedGetters[t] = function(e) {
                    return i(r.state, r.getters, e.state, e.getters)
                }
            }(e, o + i, t, c)
        })), r.forEachChild((function(r, s) {
            fa(e, t, i.concat(s), r, n)
        }))
    }

    function _a(e, t) {
        return t.length ? t.reduce((function(e, t) {
            return e[t]
        }), e) : e
    }

    function ma(e, t, i) {
        return na(e) && e.type && (i = t, t = e, e = e.type), {
            type: e,
            payload: t,
            options: i
        }
    }

    function ga(e) {
        aa && e === aa ||
            /**
             * vuex v3.1.2
             * (c) 2019 Evan You
             * @license MIT
             */
            function(e) {
                if (Number(e.version.split(".")[0]) >= 2) e.mixin({
                    beforeCreate: i
                });
                else {
                    var t = e.prototype._init;
                    e.prototype._init = function(e) {
                        void 0 === e && (e = {}), e.init = e.init ? [i].concat(e.init) : i, t.call(this, e)
                    }
                }

                function i() {
                    var e = this.$options;
                    e.store ? this.$store = "function" == typeof e.store ? e.store() : e.store : e.parent && e.parent.$store && (this.$store = e.parent.$store)
                }
            }(aa = e)
    }
    ha.state.get = function() {
        return this._vm._data.$$state
    }, ha.state.set = function(e) {}, ca.prototype.commit = function(e, t, i) {
        var r = this,
            n = ma(e, t, i),
            s = n.type,
            o = n.payload,
            a = {
                type: s,
                payload: o
            },
            l = this._mutations[s];
        l && (this._withCommit((function() {
            l.forEach((function(e) {
                e(o)
            }))
        })), this._subscribers.forEach((function(e) {
            return e(a, r.state)
        })))
    }, ca.prototype.dispatch = function(e, t) {
        var i = this,
            r = ma(e, t),
            n = r.type,
            s = r.payload,
            o = {
                type: n,
                payload: s
            },
            a = this._actions[n];
        if (a) {
            try {
                this._actionSubscribers.filter((function(e) {
                    return e.before
                })).forEach((function(e) {
                    return e.before(o, i.state)
                }))
            } catch (e) {}
            return (a.length > 1 ? Promise.all(a.map((function(e) {
                return e(s)
            }))) : a[0](s)).then((function(e) {
                try {
                    i._actionSubscribers.filter((function(e) {
                        return e.after
                    })).forEach((function(e) {
                        return e.after(o, i.state)
                    }))
                } catch (e) {}
                return e
            }))
        }
    }, ca.prototype.subscribe = function(e) {
        return da(e, this._subscribers)
    }, ca.prototype.subscribeAction = function(e) {
        return da("function" == typeof e ? {
            before: e
        } : e, this._actionSubscribers)
    }, ca.prototype.watch = function(e, t, i) {
        var r = this;
        return this._watcherVM.$watch((function() {
            return e(r.state, r.getters)
        }), t, i)
    }, ca.prototype.replaceState = function(e) {
        var t = this;
        this._withCommit((function() {
            t._vm._data.$$state = e
        }))
    }, ca.prototype.registerModule = function(e, t, i) {
        void 0 === i && (i = {}), "string" == typeof e && (e = [e]), this._modules.register(e, t), fa(this, this.state, e, this._modules.get(e), i.preserveState), pa(this, this.state)
    }, ca.prototype.unregisterModule = function(e) {
        var t = this;
        "string" == typeof e && (e = [e]), this._modules.unregister(e), this._withCommit((function() {
            var i = _a(t.state, e.slice(0, -1));
            aa.delete(i, e[e.length - 1])
        })), ua(this)
    }, ca.prototype.hotUpdate = function(e) {
        this._modules.update(e), ua(this, !0)
    }, ca.prototype._withCommit = function(e) {
        var t = this._committing;
        this._committing = !0, e(), this._committing = t
    }, Object.defineProperties(ca.prototype, ha);
    var va = xa((function(e, t) {
            var i = {};
            return Aa(t).forEach((function(t) {
                var r = t.key,
                    n = t.val;
                i[r] = function() {
                    var t = this.$store.state,
                        i = this.$store.getters;
                    if (e) {
                        var r = Ca(this.$store, "mapState", e);
                        if (!r) return;
                        t = r.context.state, i = r.context.getters
                    }
                    return "function" == typeof n ? n.call(this, t, i) : t[n]
                }, i[r].vuex = !0
            })), i
        })),
        ba = xa((function(e, t) {
            var i = {};
            return Aa(t).forEach((function(t) {
                var r = t.key,
                    n = t.val;
                i[r] = function() {
                    for (var t = [], i = arguments.length; i--;) t[i] = arguments[i];
                    var r = this.$store.commit;
                    if (e) {
                        var s = Ca(this.$store, "mapMutations", e);
                        if (!s) return;
                        r = s.context.commit
                    }
                    return "function" == typeof n ? n.apply(this, [r].concat(t)) : r.apply(this.$store, [n].concat(t))
                }
            })), i
        })),
        ya = xa((function(e, t) {
            var i = {};
            return Aa(t).forEach((function(t) {
                var r = t.key,
                    n = t.val;
                n = e + n, i[r] = function() {
                    if (!e || Ca(this.$store, "mapGetters", e)) return this.$store.getters[n]
                }, i[r].vuex = !0
            })), i
        })),
        wa = xa((function(e, t) {
            var i = {};
            return Aa(t).forEach((function(t) {
                var r = t.key,
                    n = t.val;
                i[r] = function() {
                    for (var t = [], i = arguments.length; i--;) t[i] = arguments[i];
                    var r = this.$store.dispatch;
                    if (e) {
                        var s = Ca(this.$store, "mapActions", e);
                        if (!s) return;
                        r = s.context.dispatch
                    }
                    return "function" == typeof n ? n.apply(this, [r].concat(t)) : r.apply(this.$store, [n].concat(t))
                }
            })), i
        })),
        Ma = function(e) {
            return {
                mapState: va.bind(null, e),
                mapGetters: ya.bind(null, e),
                mapMutations: ba.bind(null, e),
                mapActions: wa.bind(null, e)
            }
        };

    function Aa(e) {
        return function(e) {
            return Array.isArray(e) || na(e)
        }(e) ? Array.isArray(e) ? e.map((function(e) {
            return {
                key: e,
                val: e
            }
        })) : Object.keys(e).map((function(t) {
            return {
                key: t,
                val: e[t]
            }
        })) : []
    }

    function xa(e) {
        return function(t, i) {
            return "string" != typeof t ? (i = t, t = "") : "/" !== t.charAt(t.length - 1) && (t += "/"), e(t, i)
        }
    }

    function Ca(e, t, i) {
        return e._modulesNamespaceMap[i]
    }
    var Pa = {
            Store: ca,
            install: ga,
            version: "3.1.2",
            mapState: va,
            mapMutations: ba,
            mapGetters: ya,
            mapActions: wa,
            createNamespacedHelpers: Ma
        },
        ka = ["style", "currency", "currencyDisplay", "useGrouping", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits", "localeMatcher", "formatMatcher", "unit"];
    /*!
     * vue-i18n v8.15.3 
     * (c) 2019 kazuya kawaguchi
     * Released under the MIT License.
     */
    function Ea(e, t) {
        "undefined" != typeof console && (console.warn("[vue-i18n] " + e), t && console.warn(t.stack))
    }

    function Ia(e) {
        return null !== e && "object" == typeof e
    }
    var Ta = Object.prototype.toString;

    function Da(e) {
        return "[object Object]" === Ta.call(e)
    }

    function Sa(e) {
        return null == e
    }

    function Ba() {
        for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
        var i = null,
            r = null;
        return 1 === e.length ? Ia(e[0]) || Array.isArray(e[0]) ? r = e[0] : "string" == typeof e[0] && (i = e[0]) : 2 === e.length && ("string" == typeof e[0] && (i = e[0]), (Ia(e[1]) || Array.isArray(e[1])) && (r = e[1])), {
            locale: i,
            params: r
        }
    }

    function ja(e) {
        return JSON.parse(JSON.stringify(e))
    }
    var La = Object.prototype.hasOwnProperty;

    function Ra(e, t) {
        return La.call(e, t)
    }

    function Oa(e) {
        for (var t = arguments, i = Object(e), r = 1; r < arguments.length; r++) {
            var n = t[r];
            if (null != n) {
                var s = void 0;
                for (s in n) Ra(n, s) && (Ia(n[s]) ? i[s] = Oa(i[s], n[s]) : i[s] = n[s])
            }
        }
        return i
    }

    function Fa(e, t) {
        if (e === t) return !0;
        var i = Ia(e),
            r = Ia(t);
        if (!i || !r) return !i && !r && String(e) === String(t);
        try {
            var n = Array.isArray(e),
                s = Array.isArray(t);
            if (n && s) return e.length === t.length && e.every((function(e, i) {
                return Fa(e, t[i])
            }));
            if (n || s) return !1;
            var o = Object.keys(e),
                a = Object.keys(t);
            return o.length === a.length && o.every((function(i) {
                return Fa(e[i], t[i])
            }))
        } catch (e) {
            return !1
        }
    }
    var Na = {
            beforeCreate: function() {
                var e = this.$options;
                if (e.i18n = e.i18n || (e.__i18n ? {} : null), e.i18n) {
                    if (e.i18n instanceof fl) {
                        if (e.__i18n) try {
                            var t = {};
                            e.__i18n.forEach((function(e) {
                                t = Oa(t, JSON.parse(e))
                            })), Object.keys(t).forEach((function(i) {
                                e.i18n.mergeLocaleMessage(i, t[i])
                            }))
                        } catch (e) {}
                        this._i18n = e.i18n, this._i18nWatcher = this._i18n.watchI18nData()
                    } else if (Da(e.i18n)) {
                        if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof fl && (e.i18n.root = this.$root, e.i18n.formatter = this.$root.$i18n.formatter, e.i18n.fallbackLocale = this.$root.$i18n.fallbackLocale, e.i18n.formatFallbackMessages = this.$root.$i18n.formatFallbackMessages, e.i18n.silentTranslationWarn = this.$root.$i18n.silentTranslationWarn, e.i18n.silentFallbackWarn = this.$root.$i18n.silentFallbackWarn, e.i18n.pluralizationRules = this.$root.$i18n.pluralizationRules, e.i18n.preserveDirectiveContent = this.$root.$i18n.preserveDirectiveContent), e.__i18n) try {
                            var i = {};
                            e.__i18n.forEach((function(e) {
                                i = Oa(i, JSON.parse(e))
                            })), e.i18n.messages = i
                        } catch (e) {}
                        var r = e.i18n.sharedMessages;
                        r && Da(r) && (e.i18n.messages = Oa(e.i18n.messages, r)), this._i18n = new fl(e.i18n), this._i18nWatcher = this._i18n.watchI18nData(), (void 0 === e.i18n.sync || e.i18n.sync) && (this._localeWatcher = this.$i18n.watchLocale())
                    }
                } else this.$root && this.$root.$i18n && this.$root.$i18n instanceof fl ? this._i18n = this.$root.$i18n : e.parent && e.parent.$i18n && e.parent.$i18n instanceof fl && (this._i18n = e.parent.$i18n)
            },
            beforeMount: function() {
                var e = this.$options;
                e.i18n = e.i18n || (e.__i18n ? {} : null), e.i18n ? e.i18n instanceof fl ? (this._i18n.subscribeDataChanging(this), this._subscribing = !0) : Da(e.i18n) && (this._i18n.subscribeDataChanging(this), this._subscribing = !0) : this.$root && this.$root.$i18n && this.$root.$i18n instanceof fl ? (this._i18n.subscribeDataChanging(this), this._subscribing = !0) : e.parent && e.parent.$i18n && e.parent.$i18n instanceof fl && (this._i18n.subscribeDataChanging(this), this._subscribing = !0)
            },
            beforeDestroy: function() {
                if (this._i18n) {
                    var e = this;
                    this.$nextTick((function() {
                        e._subscribing && (e._i18n.unsubscribeDataChanging(e), delete e._subscribing), e._i18nWatcher && (e._i18nWatcher(), e._i18n.destroyVM(), delete e._i18nWatcher), e._localeWatcher && (e._localeWatcher(), delete e._localeWatcher), e._i18n = null
                    }))
                }
            }
        },
        Ua = {
            name: "i18n",
            functional: !0,
            props: {
                tag: {
                    type: String
                },
                path: {
                    type: String,
                    required: !0
                },
                locale: {
                    type: String
                },
                places: {
                    type: [Array, Object]
                }
            },
            render: function(e, t) {
                var i = t.data,
                    r = t.parent,
                    n = t.props,
                    s = t.slots,
                    o = r.$i18n;
                if (o) {
                    var a = n.path,
                        l = n.locale,
                        c = n.places,
                        h = s(),
                        d = o.i(a, l, function(e) {
                            var t;
                            for (t in e)
                                if ("default" !== t) return !1;
                            return Boolean(t)
                        }(h) || c ? function(e, t) {
                            var i = t ? function(e) {
                                return Array.isArray(e) ? e.reduce(Va, {}) : Object.assign({}, e)
                            }(t) : {};
                            if (!e) return i;
                            var r = (e = e.filter((function(e) {
                                return e.tag || "" !== e.text.trim()
                            }))).every(za);
                            return e.reduce(r ? Ha : Va, i)
                        }(h.default, c) : h),
                        u = n.tag || "span";
                    return u ? e(u, i, d) : d
                }
            }
        };

    function Ha(e, t) {
        return t.data && t.data.attrs && t.data.attrs.place && (e[t.data.attrs.place] = t), e
    }

    function Va(e, t, i) {
        return e[i] = t, e
    }

    function za(e) {
        return Boolean(e.data && e.data.attrs && e.data.attrs.place)
    }
    var $a, Wa = {
        name: "i18n-n",
        functional: !0,
        props: {
            tag: {
                type: String,
                default: "span"
            },
            value: {
                type: Number,
                required: !0
            },
            format: {
                type: [String, Object]
            },
            locale: {
                type: String
            }
        },
        render: function(e, t) {
            var i = t.props,
                r = t.parent,
                n = t.data,
                s = r.$i18n;
            if (!s) return null;
            var o = null,
                a = null;
            "string" == typeof i.format ? o = i.format : Ia(i.format) && (i.format.key && (o = i.format.key), a = Object.keys(i.format).reduce((function(e, t) {
                var r;
                return ka.includes(t) ? Object.assign({}, e, ((r = {})[t] = i.format[t], r)) : e
            }), null));
            var l = i.locale || s.locale,
                c = s._ntp(i.value, l, o, a),
                h = c.map((function(e, t) {
                    var i, r = n.scopedSlots && n.scopedSlots[e.type];
                    return r ? r(((i = {})[e.type] = e.value, i.index = t, i.parts = c, i)) : e.value
                }));
            return e(i.tag, {
                attrs: n.attrs,
                class: n.class,
                staticClass: n.staticClass
            }, h)
        }
    };

    function qa(e, t, i) {
        Za(e, i) && Xa(e, t, i)
    }

    function Ga(e, t, i, r) {
        if (Za(e, i)) {
            var n = i.context.$i18n;
            (function(e, t) {
                var i = t.context;
                return e._locale === i.$i18n.locale
            })(e, i) && Fa(t.value, t.oldValue) && Fa(e._localeMessage, n.getLocaleMessage(n.locale)) || Xa(e, t, i)
        }
    }

    function Ya(e, t, i, r) {
        if (i.context) {
            var n = i.context.$i18n || {};
            t.modifiers.preserve || n.preserveDirectiveContent || (e.textContent = ""), e._vt = void 0, delete e._vt, e._locale = void 0, delete e._locale, e._localeMessage = void 0, delete e._localeMessage
        } else Ea("Vue instance does not exists in VNode context")
    }

    function Za(e, t) {
        var i = t.context;
        return i ? !!i.$i18n || (Ea("VueI18n instance does not exists in Vue instance"), !1) : (Ea("Vue instance does not exists in VNode context"), !1)
    }

    function Xa(e, t, i) {
        var r, n, s = function(e) {
                var t, i, r, n;
                "string" == typeof e ? t = e : Da(e) && (t = e.path, i = e.locale, r = e.args, n = e.choice);
                return {
                    path: t,
                    locale: i,
                    args: r,
                    choice: n
                }
            }(t.value),
            o = s.path,
            a = s.locale,
            l = s.args,
            c = s.choice;
        if (o || a || l)
            if (o) {
                var h = i.context;
                e._vt = e.textContent = c ? (r = h.$i18n).tc.apply(r, [o, c].concat(Ka(a, l))) : (n = h.$i18n).t.apply(n, [o].concat(Ka(a, l))), e._locale = h.$i18n.locale, e._localeMessage = h.$i18n.getLocaleMessage(h.$i18n.locale)
            } else Ea("`path` is required in v-t directive");
        else Ea("value type not supported")
    }

    function Ka(e, t) {
        var i = [];
        return e && i.push(e), t && (Array.isArray(t) || Da(t)) && i.push(t), i
    }

    function Qa(e) {
        Qa.installed = !0;
        ($a = e).version && Number($a.version.split(".")[0]);
        ! function(e) {
            e.prototype.hasOwnProperty("$i18n") || Object.defineProperty(e.prototype, "$i18n", {
                get: function() {
                    return this._i18n
                }
            }), e.prototype.$t = function(e) {
                for (var t = [], i = arguments.length - 1; i-- > 0;) t[i] = arguments[i + 1];
                var r = this.$i18n;
                return r._t.apply(r, [e, r.locale, r._getMessages(), this].concat(t))
            }, e.prototype.$tc = function(e, t) {
                for (var i = [], r = arguments.length - 2; r-- > 0;) i[r] = arguments[r + 2];
                var n = this.$i18n;
                return n._tc.apply(n, [e, n.locale, n._getMessages(), this, t].concat(i))
            }, e.prototype.$te = function(e, t) {
                var i = this.$i18n;
                return i._te(e, i.locale, i._getMessages(), t)
            }, e.prototype.$d = function(e) {
                for (var t, i = [], r = arguments.length - 1; r-- > 0;) i[r] = arguments[r + 1];
                return (t = this.$i18n).d.apply(t, [e].concat(i))
            }, e.prototype.$n = function(e) {
                for (var t, i = [], r = arguments.length - 1; r-- > 0;) i[r] = arguments[r + 1];
                return (t = this.$i18n).n.apply(t, [e].concat(i))
            }
        }($a), $a.mixin(Na), $a.directive("t", {
            bind: qa,
            update: Ga,
            unbind: Ya
        }), $a.component(Ua.name, Ua), $a.component(Wa.name, Wa), $a.config.optionMergeStrategies.i18n = function(e, t) {
            return void 0 === t ? e : t
        }
    }
    var Ja = function() {
        this._caches = Object.create(null)
    };
    Ja.prototype.interpolate = function(e, t) {
        if (!t) return [e];
        var i = this._caches[e];
        return i || (i = function(e) {
                var t = [],
                    i = 0,
                    r = "";
                for (; i < e.length;) {
                    var n = e[i++];
                    if ("{" === n) {
                        r && t.push({
                            type: "text",
                            value: r
                        }), r = "";
                        var s = "";
                        for (n = e[i++]; void 0 !== n && "}" !== n;) s += n, n = e[i++];
                        var o = "}" === n,
                            a = el.test(s) ? "list" : o && tl.test(s) ? "named" : "unknown";
                        t.push({
                            value: s,
                            type: a
                        })
                    } else "%" === n ? "{" !== e[i] && (r += n) : r += n
                }
                return r && t.push({
                    type: "text",
                    value: r
                }), t
            }(e), this._caches[e] = i),
            function(e, t) {
                var i = [],
                    r = 0,
                    n = Array.isArray(t) ? "list" : Ia(t) ? "named" : "unknown";
                if ("unknown" === n) return i;
                for (; r < e.length;) {
                    var s = e[r];
                    switch (s.type) {
                        case "text":
                            i.push(s.value);
                            break;
                        case "list":
                            i.push(t[parseInt(s.value, 10)]);
                            break;
                        case "named":
                            "named" === n && i.push(t[s.value])
                    }
                    r++
                }
                return i
            }(i, t)
    };
    var el = /^(?:\d)+/,
        tl = /^(?:\w)+/;
    var il = [];
    il[0] = {
        ws: [0],
        ident: [3, 0],
        "[": [4],
        eof: [7]
    }, il[1] = {
        ws: [1],
        ".": [2],
        "[": [4],
        eof: [7]
    }, il[2] = {
        ws: [2],
        ident: [3, 0],
        0: [3, 0],
        number: [3, 0]
    }, il[3] = {
        ident: [3, 0],
        0: [3, 0],
        number: [3, 0],
        ws: [1, 1],
        ".": [2, 1],
        "[": [4, 1],
        eof: [7, 1]
    }, il[4] = {
        "'": [5, 0],
        '"': [6, 0],
        "[": [4, 2],
        "]": [1, 3],
        eof: 8,
        else: [4, 0]
    }, il[5] = {
        "'": [4, 0],
        eof: 8,
        else: [5, 0]
    }, il[6] = {
        '"': [4, 0],
        eof: 8,
        else: [6, 0]
    };
    var rl = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;

    function nl(e) {
        if (null == e) return "eof";
        switch (e.charCodeAt(0)) {
            case 91:
            case 93:
            case 46:
            case 34:
            case 39:
                return e;
            case 95:
            case 36:
            case 45:
                return "ident";
            case 9:
            case 10:
            case 13:
            case 160:
            case 65279:
            case 8232:
            case 8233:
                return "ws"
        }
        return "ident"
    }

    function sl(e) {
        var t, i = e.trim();
        return ("0" !== e.charAt(0) || !isNaN(e)) && (t = i, rl.test(t) ? function(e) {
            var t = e.charCodeAt(0);
            return t !== e.charCodeAt(e.length - 1) || 34 !== t && 39 !== t ? e : e.slice(1, -1)
        }(i) : "*" + i)
    }
    var ol = function() {
        this._cache = Object.create(null)
    };
    ol.prototype.parsePath = function(e) {
        var t = this._cache[e];
        return t || (t = function(e) {
            var t, i, r, n, s, o, a, l = [],
                c = -1,
                h = 0,
                d = 0,
                u = [];

            function p() {
                var t = e[c + 1];
                if (5 === h && "'" === t || 6 === h && '"' === t) return c++, r = "\\" + t, u[0](), !0
            }
            for (u[1] = function() {
                    void 0 !== i && (l.push(i), i = void 0)
                }, u[0] = function() {
                    void 0 === i ? i = r : i += r
                }, u[2] = function() {
                    u[0](), d++
                }, u[3] = function() {
                    if (d > 0) d--, h = 4, u[0]();
                    else {
                        if (d = 0, void 0 === i) return !1;
                        if (!1 === (i = sl(i))) return !1;
                        u[1]()
                    }
                }; null !== h;)
                if (c++, "\\" !== (t = e[c]) || !p()) {
                    if (n = nl(t), 8 === (s = (a = il[h])[n] || a.else || 8)) return;
                    if (h = s[0], (o = u[s[1]]) && (r = void 0 === (r = s[2]) ? t : r, !1 === o())) return;
                    if (7 === h) return l
                }
        }(e)) && (this._cache[e] = t), t || []
    }, ol.prototype.getPathValue = function(e, t) {
        if (!Ia(e)) return null;
        var i = this.parsePath(t);
        if (0 === i.length) return null;
        for (var r = i.length, n = e, s = 0; s < r;) {
            var o = n[i[s]];
            if (void 0 === o) return null;
            n = o, s++
        }
        return n
    };
    var al, ll = /<\/?[\w\s="/.':;#-\/]+>/,
        cl = /(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g,
        hl = /^@(?:\.([a-z]+))?:/,
        dl = /[()]/g,
        ul = {
            upper: function(e) {
                return e.toLocaleUpperCase()
            },
            lower: function(e) {
                return e.toLocaleLowerCase()
            }
        },
        pl = new Ja,
        fl = function(e) {
            var t = this;
            void 0 === e && (e = {}), !$a && "undefined" != typeof window && window.Vue && Qa(window.Vue);
            var i = e.locale || "en-US",
                r = e.fallbackLocale || "en-US",
                n = e.messages || {},
                s = e.dateTimeFormats || {},
                o = e.numberFormats || {};
            this._vm = null, this._formatter = e.formatter || pl, this._modifiers = e.modifiers || {}, this._missing = e.missing || null, this._root = e.root || null, this._sync = void 0 === e.sync || !!e.sync, this._fallbackRoot = void 0 === e.fallbackRoot || !!e.fallbackRoot, this._formatFallbackMessages = void 0 !== e.formatFallbackMessages && !!e.formatFallbackMessages, this._silentTranslationWarn = void 0 !== e.silentTranslationWarn && e.silentTranslationWarn, this._silentFallbackWarn = void 0 !== e.silentFallbackWarn && !!e.silentFallbackWarn, this._dateTimeFormatters = {}, this._numberFormatters = {}, this._path = new ol, this._dataListeners = [], this._preserveDirectiveContent = void 0 !== e.preserveDirectiveContent && !!e.preserveDirectiveContent, this.pluralizationRules = e.pluralizationRules || {}, this._warnHtmlInMessage = e.warnHtmlInMessage || "off", this._exist = function(e, i) {
                return !(!e || !i) && (!Sa(t._path.getPathValue(e, i)) || !!e[i])
            }, "warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || Object.keys(n).forEach((function(e) {
                t._checkLocaleMessage(e, t._warnHtmlInMessage, n[e])
            })), this._initVM({
                locale: i,
                fallbackLocale: r,
                messages: n,
                dateTimeFormats: s,
                numberFormats: o
            })
        },
        _l = {
            vm: {
                configurable: !0
            },
            messages: {
                configurable: !0
            },
            dateTimeFormats: {
                configurable: !0
            },
            numberFormats: {
                configurable: !0
            },
            availableLocales: {
                configurable: !0
            },
            locale: {
                configurable: !0
            },
            fallbackLocale: {
                configurable: !0
            },
            formatFallbackMessages: {
                configurable: !0
            },
            missing: {
                configurable: !0
            },
            formatter: {
                configurable: !0
            },
            silentTranslationWarn: {
                configurable: !0
            },
            silentFallbackWarn: {
                configurable: !0
            },
            preserveDirectiveContent: {
                configurable: !0
            },
            warnHtmlInMessage: {
                configurable: !0
            }
        };
    fl.prototype._checkLocaleMessage = function(e, t, i) {
        var r = function(e, t, i, n) {
            if (Da(i)) Object.keys(i).forEach((function(s) {
                var o = i[s];
                Da(o) ? (n.push(s), n.push("."), r(e, t, o, n), n.pop(), n.pop()) : (n.push(s), r(e, t, o, n), n.pop())
            }));
            else if (Array.isArray(i)) i.forEach((function(i, s) {
                Da(i) ? (n.push("[" + s + "]"), n.push("."), r(e, t, i, n), n.pop(), n.pop()) : (n.push("[" + s + "]"), r(e, t, i, n), n.pop())
            }));
            else if ("string" == typeof i) {
                if (ll.test(i)) {
                    var s = "Detected HTML in message '" + i + "' of keypath '" + n.join("") + "' at '" + t + "'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";
                    "warn" === e ? Ea(s) : "error" === e && function(e, t) {
                        "undefined" != typeof console && (console.error("[vue-i18n] " + e), t && console.error(t.stack))
                    }(s)
                }
            }
        };
        r(t, e, i, [])
    }, fl.prototype._initVM = function(e) {
        var t = $a.config.silent;
        $a.config.silent = !0, this._vm = new $a({
            data: e
        }), $a.config.silent = t
    }, fl.prototype.destroyVM = function() {
        this._vm.$destroy()
    }, fl.prototype.subscribeDataChanging = function(e) {
        this._dataListeners.push(e)
    }, fl.prototype.unsubscribeDataChanging = function(e) {
        ! function(e, t) {
            if (e.length) {
                var i = e.indexOf(t);
                if (i > -1) e.splice(i, 1)
            }
        }(this._dataListeners, e)
    }, fl.prototype.watchI18nData = function() {
        var e = this;
        return this._vm.$watch("$data", (function() {
            for (var t = e._dataListeners.length; t--;) $a.nextTick((function() {
                e._dataListeners[t] && e._dataListeners[t].$forceUpdate()
            }))
        }), {
            deep: !0
        })
    }, fl.prototype.watchLocale = function() {
        if (!this._sync || !this._root) return null;
        var e = this._vm;
        return this._root.$i18n.vm.$watch("locale", (function(t) {
            e.$set(e, "locale", t), e.$forceUpdate()
        }), {
            immediate: !0
        })
    }, _l.vm.get = function() {
        return this._vm
    }, _l.messages.get = function() {
        return ja(this._getMessages())
    }, _l.dateTimeFormats.get = function() {
        return ja(this._getDateTimeFormats())
    }, _l.numberFormats.get = function() {
        return ja(this._getNumberFormats())
    }, _l.availableLocales.get = function() {
        return Object.keys(this.messages).sort()
    }, _l.locale.get = function() {
        return this._vm.locale
    }, _l.locale.set = function(e) {
        this._vm.$set(this._vm, "locale", e)
    }, _l.fallbackLocale.get = function() {
        return this._vm.fallbackLocale
    }, _l.fallbackLocale.set = function(e) {
        this._vm.$set(this._vm, "fallbackLocale", e)
    }, _l.formatFallbackMessages.get = function() {
        return this._formatFallbackMessages
    }, _l.formatFallbackMessages.set = function(e) {
        this._formatFallbackMessages = e
    }, _l.missing.get = function() {
        return this._missing
    }, _l.missing.set = function(e) {
        this._missing = e
    }, _l.formatter.get = function() {
        return this._formatter
    }, _l.formatter.set = function(e) {
        this._formatter = e
    }, _l.silentTranslationWarn.get = function() {
        return this._silentTranslationWarn
    }, _l.silentTranslationWarn.set = function(e) {
        this._silentTranslationWarn = e
    }, _l.silentFallbackWarn.get = function() {
        return this._silentFallbackWarn
    }, _l.silentFallbackWarn.set = function(e) {
        this._silentFallbackWarn = e
    }, _l.preserveDirectiveContent.get = function() {
        return this._preserveDirectiveContent
    }, _l.preserveDirectiveContent.set = function(e) {
        this._preserveDirectiveContent = e
    }, _l.warnHtmlInMessage.get = function() {
        return this._warnHtmlInMessage
    }, _l.warnHtmlInMessage.set = function(e) {
        var t = this,
            i = this._warnHtmlInMessage;
        if (this._warnHtmlInMessage = e, i !== e && ("warn" === e || "error" === e)) {
            var r = this._getMessages();
            Object.keys(r).forEach((function(e) {
                t._checkLocaleMessage(e, t._warnHtmlInMessage, r[e])
            }))
        }
    }, fl.prototype._getMessages = function() {
        return this._vm.messages
    }, fl.prototype._getDateTimeFormats = function() {
        return this._vm.dateTimeFormats
    }, fl.prototype._getNumberFormats = function() {
        return this._vm.numberFormats
    }, fl.prototype._warnDefault = function(e, t, i, r, n) {
        if (!Sa(i)) return i;
        if (this._missing) {
            var s = this._missing.apply(null, [e, t, r, n]);
            if ("string" == typeof s) return s
        }
        if (this._formatFallbackMessages) {
            var o = Ba.apply(void 0, n);
            return this._render(t, "string", o.params, t)
        }
        return t
    }, fl.prototype._isFallbackRoot = function(e) {
        return !e && !Sa(this._root) && this._fallbackRoot
    }, fl.prototype._isSilentFallbackWarn = function(e) {
        return this._silentFallbackWarn instanceof RegExp ? this._silentFallbackWarn.test(e) : this._silentFallbackWarn
    }, fl.prototype._isSilentFallback = function(e, t) {
        return this._isSilentFallbackWarn(t) && (this._isFallbackRoot() || e !== this.fallbackLocale)
    }, fl.prototype._isSilentTranslationWarn = function(e) {
        return this._silentTranslationWarn instanceof RegExp ? this._silentTranslationWarn.test(e) : this._silentTranslationWarn
    }, fl.prototype._interpolate = function(e, t, i, r, n, s, o) {
        if (!t) return null;
        var a, l = this._path.getPathValue(t, i);
        if (Array.isArray(l) || Da(l)) return l;
        if (Sa(l)) {
            if (!Da(t)) return null;
            if ("string" != typeof(a = t[i])) return null
        } else {
            if ("string" != typeof l) return null;
            a = l
        }
        return (a.indexOf("@:") >= 0 || a.indexOf("@.") >= 0) && (a = this._link(e, t, a, r, "raw", s, o)), this._render(a, n, s, i)
    }, fl.prototype._link = function(e, t, i, r, n, s, o) {
        var a = i,
            l = a.match(cl);
        for (var c in l)
            if (l.hasOwnProperty(c)) {
                var h = l[c],
                    d = h.match(hl),
                    u = d[0],
                    p = d[1],
                    f = h.replace(u, "").replace(dl, "");
                if (o.includes(f)) return a;
                o.push(f);
                var _ = this._interpolate(e, t, f, r, "raw" === n ? "string" : n, "raw" === n ? void 0 : s, o);
                if (this._isFallbackRoot(_)) {
                    if (!this._root) throw Error("unexpected error");
                    var m = this._root.$i18n;
                    _ = m._translate(m._getMessages(), m.locale, m.fallbackLocale, f, r, n, s)
                }
                _ = this._warnDefault(e, f, _, r, Array.isArray(s) ? s : [s]), this._modifiers.hasOwnProperty(p) ? _ = this._modifiers[p](_) : ul.hasOwnProperty(p) && (_ = ul[p](_)), o.pop(), a = _ ? a.replace(h, _) : a
            } return a
    }, fl.prototype._render = function(e, t, i, r) {
        var n = this._formatter.interpolate(e, i, r);
        return n || (n = pl.interpolate(e, i, r)), "string" === t ? n.join("") : n
    }, fl.prototype._translate = function(e, t, i, r, n, s, o) {
        var a = this._interpolate(t, e[t], r, n, s, o, [r]);
        return Sa(a) && Sa(a = this._interpolate(i, e[i], r, n, s, o, [r])) ? null : a
    }, fl.prototype._t = function(e, t, i, r) {
        for (var n, s = [], o = arguments.length - 4; o-- > 0;) s[o] = arguments[o + 4];
        if (!e) return "";
        var a = Ba.apply(void 0, s),
            l = a.locale || t,
            c = this._translate(i, l, this.fallbackLocale, e, r, "string", a.params);
        if (this._isFallbackRoot(c)) {
            if (!this._root) throw Error("unexpected error");
            return (n = this._root).$t.apply(n, [e].concat(s))
        }
        return this._warnDefault(l, e, c, r, s)
    }, fl.prototype.t = function(e) {
        for (var t, i = [], r = arguments.length - 1; r-- > 0;) i[r] = arguments[r + 1];
        return (t = this)._t.apply(t, [e, this.locale, this._getMessages(), null].concat(i))
    }, fl.prototype._i = function(e, t, i, r, n) {
        var s = this._translate(i, t, this.fallbackLocale, e, r, "raw", n);
        if (this._isFallbackRoot(s)) {
            if (!this._root) throw Error("unexpected error");
            return this._root.$i18n.i(e, t, n)
        }
        return this._warnDefault(t, e, s, r, [n])
    }, fl.prototype.i = function(e, t, i) {
        return e ? ("string" != typeof t && (t = this.locale), this._i(e, t, this._getMessages(), null, i)) : ""
    }, fl.prototype._tc = function(e, t, i, r, n) {
        for (var s, o = [], a = arguments.length - 5; a-- > 0;) o[a] = arguments[a + 5];
        if (!e) return "";
        void 0 === n && (n = 1);
        var l = {
                count: n,
                n: n
            },
            c = Ba.apply(void 0, o);
        return c.params = Object.assign(l, c.params), o = null === c.locale ? [c.params] : [c.locale, c.params], this.fetchChoice((s = this)._t.apply(s, [e, t, i, r].concat(o)), n)
    }, fl.prototype.fetchChoice = function(e, t) {
        if (!e && "string" != typeof e) return null;
        var i = e.split("|");
        return i[t = this.getChoiceIndex(t, i.length)] ? i[t].trim() : e
    }, fl.prototype.getChoiceIndex = function(e, t) {
        var i, r;
        return this.locale in this.pluralizationRules ? this.pluralizationRules[this.locale].apply(this, [e, t]) : (i = e, r = t, i = Math.abs(i), 2 === r ? i ? i > 1 ? 1 : 0 : 1 : i ? Math.min(i, 2) : 0)
    }, fl.prototype.tc = function(e, t) {
        for (var i, r = [], n = arguments.length - 2; n-- > 0;) r[n] = arguments[n + 2];
        return (i = this)._tc.apply(i, [e, this.locale, this._getMessages(), null, t].concat(r))
    }, fl.prototype._te = function(e, t, i) {
        for (var r = [], n = arguments.length - 3; n-- > 0;) r[n] = arguments[n + 3];
        var s = Ba.apply(void 0, r).locale || t;
        return this._exist(i[s], e)
    }, fl.prototype.te = function(e, t) {
        return this._te(e, this.locale, this._getMessages(), t)
    }, fl.prototype.getLocaleMessage = function(e) {
        return ja(this._vm.messages[e] || {})
    }, fl.prototype.setLocaleMessage = function(e, t) {
        ("warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || (this._checkLocaleMessage(e, this._warnHtmlInMessage, t), "error" !== this._warnHtmlInMessage)) && this._vm.$set(this._vm.messages, e, t)
    }, fl.prototype.mergeLocaleMessage = function(e, t) {
        ("warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || (this._checkLocaleMessage(e, this._warnHtmlInMessage, t), "error" !== this._warnHtmlInMessage)) && this._vm.$set(this._vm.messages, e, Oa({}, this._vm.messages[e] || {}, t))
    }, fl.prototype.getDateTimeFormat = function(e) {
        return ja(this._vm.dateTimeFormats[e] || {})
    }, fl.prototype.setDateTimeFormat = function(e, t) {
        this._vm.$set(this._vm.dateTimeFormats, e, t)
    }, fl.prototype.mergeDateTimeFormat = function(e, t) {
        this._vm.$set(this._vm.dateTimeFormats, e, Oa(this._vm.dateTimeFormats[e] || {}, t))
    }, fl.prototype._localizeDateTime = function(e, t, i, r, n) {
        var s = t,
            o = r[s];
        if ((Sa(o) || Sa(o[n])) && (o = r[s = i]), Sa(o) || Sa(o[n])) return null;
        var a = o[n],
            l = s + "__" + n,
            c = this._dateTimeFormatters[l];
        return c || (c = this._dateTimeFormatters[l] = new Intl.DateTimeFormat(s, a)), c.format(e)
    }, fl.prototype._d = function(e, t, i) {
        if (!i) return new Intl.DateTimeFormat(t).format(e);
        var r = this._localizeDateTime(e, t, this.fallbackLocale, this._getDateTimeFormats(), i);
        if (this._isFallbackRoot(r)) {
            if (!this._root) throw Error("unexpected error");
            return this._root.$i18n.d(e, i, t)
        }
        return r || ""
    }, fl.prototype.d = function(e) {
        for (var t = [], i = arguments.length - 1; i-- > 0;) t[i] = arguments[i + 1];
        var r = this.locale,
            n = null;
        return 1 === t.length ? "string" == typeof t[0] ? n = t[0] : Ia(t[0]) && (t[0].locale && (r = t[0].locale), t[0].key && (n = t[0].key)) : 2 === t.length && ("string" == typeof t[0] && (n = t[0]), "string" == typeof t[1] && (r = t[1])), this._d(e, r, n)
    }, fl.prototype.getNumberFormat = function(e) {
        return ja(this._vm.numberFormats[e] || {})
    }, fl.prototype.setNumberFormat = function(e, t) {
        this._vm.$set(this._vm.numberFormats, e, t)
    }, fl.prototype.mergeNumberFormat = function(e, t) {
        this._vm.$set(this._vm.numberFormats, e, Oa(this._vm.numberFormats[e] || {}, t))
    }, fl.prototype._getNumberFormatter = function(e, t, i, r, n, s) {
        var o = t,
            a = r[o];
        if ((Sa(a) || Sa(a[n])) && (a = r[o = i]), Sa(a) || Sa(a[n])) return null;
        var l, c = a[n];
        if (s) l = new Intl.NumberFormat(o, Object.assign({}, c, s));
        else {
            var h = o + "__" + n;
            (l = this._numberFormatters[h]) || (l = this._numberFormatters[h] = new Intl.NumberFormat(o, c))
        }
        return l
    }, fl.prototype._n = function(e, t, i, r) {
        if (!fl.availabilities.numberFormat) return "";
        if (!i) return (r ? new Intl.NumberFormat(t, r) : new Intl.NumberFormat(t)).format(e);
        var n = this._getNumberFormatter(e, t, this.fallbackLocale, this._getNumberFormats(), i, r),
            s = n && n.format(e);
        if (this._isFallbackRoot(s)) {
            if (!this._root) throw Error("unexpected error");
            return this._root.$i18n.n(e, Object.assign({}, {
                key: i,
                locale: t
            }, r))
        }
        return s || ""
    }, fl.prototype.n = function(e) {
        for (var t = [], i = arguments.length - 1; i-- > 0;) t[i] = arguments[i + 1];
        var r = this.locale,
            n = null,
            s = null;
        return 1 === t.length ? "string" == typeof t[0] ? n = t[0] : Ia(t[0]) && (t[0].locale && (r = t[0].locale), t[0].key && (n = t[0].key), s = Object.keys(t[0]).reduce((function(e, i) {
            var r;
            return ka.includes(i) ? Object.assign({}, e, ((r = {})[i] = t[0][i], r)) : e
        }), null)) : 2 === t.length && ("string" == typeof t[0] && (n = t[0]), "string" == typeof t[1] && (r = t[1])), this._n(e, r, n, s)
    }, fl.prototype._ntp = function(e, t, i, r) {
        if (!fl.availabilities.numberFormat) return [];
        if (!i) return (r ? new Intl.NumberFormat(t, r) : new Intl.NumberFormat(t)).formatToParts(e);
        var n = this._getNumberFormatter(e, t, this.fallbackLocale, this._getNumberFormats(), i, r),
            s = n && n.formatToParts(e);
        if (this._isFallbackRoot(s)) {
            if (!this._root) throw Error("unexpected error");
            return this._root.$i18n._ntp(e, t, i, r)
        }
        return s || []
    }, Object.defineProperties(fl.prototype, _l), Object.defineProperty(fl, "availabilities", {
        get: function() {
            if (!al) {
                var e = "undefined" != typeof Intl;
                al = {
                    dateTimeFormat: e && void 0 !== Intl.DateTimeFormat,
                    numberFormat: e && void 0 !== Intl.NumberFormat
                }
            }
            return al
        }
    }), fl.install = Qa, fl.version = "8.15.3";
    var ml = {
        data: () => ({
            isButtonHover: !1
        }),
        props: {
            width: {
                type: [Number, String],
                default: "150px"
            },
            height: {
                type: [Number, String],
                default: "32px"
            },
            disabled: {
                type: Boolean,
                default: !1
            }
        }
    };

    function gl(e, t, i, r, n, s, o, a, l, c) {
        "boolean" != typeof o && (l = a, a = o, o = !1);
        const h = "function" == typeof i ? i.options : i;
        let d;
        if (e && e.render && (h.render = e.render, h.staticRenderFns = e.staticRenderFns, h._compiled = !0, n && (h.functional = !0)), r && (h._scopeId = r), s ? (d = function(e) {
                (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), t && t.call(this, l(e)), e && e._registeredComponents && e._registeredComponents.add(s)
            }, h._ssrRegister = d) : t && (d = o ? function(e) {
                t.call(this, c(e, this.$root.$options.shadowRoot))
            } : function(e) {
                t.call(this, a(e))
            }), d)
            if (h.functional) {
                const e = h.render;
                h.render = function(t, i) {
                    return d.call(i), e(t, i)
                }
            } else {
                const e = h.beforeCreate;
                h.beforeCreate = e ? [].concat(e, d) : [d]
            } return i
    }
    const vl = "undefined" != typeof navigator && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

    function bl(e) {
        return (e, t) => function(e, t) {
            const i = vl ? t.media || "default" : e,
                r = wl[i] || (wl[i] = {
                    ids: new Set,
                    styles: []
                });
            if (!r.ids.has(e)) {
                r.ids.add(e);
                let i = t.source;
                if (t.map && (i += "\n/*# sourceURL=" + t.map.sources[0] + " */", i += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(t.map)))) + " */"), r.element || (r.element = document.createElement("style"), r.element.type = "text/css", t.media && r.element.setAttribute("media", t.media), void 0 === yl && (yl = document.head || document.getElementsByTagName("head")[0]), yl.appendChild(r.element)), "styleSheet" in r.element) r.styles.push(i), r.element.styleSheet.cssText = r.styles.filter(Boolean).join("\n");
                else {
                    const e = r.ids.size - 1,
                        t = document.createTextNode(i),
                        n = r.element.childNodes;
                    n[e] && r.element.removeChild(n[e]), n.length ? r.element.insertBefore(t, n[e]) : r.element.appendChild(t)
                }
            }
        }(e, t)
    }
    let yl;
    const wl = {};
    const Ml = gl({
        render: function() {
            var e = this,
                t = e.$createElement;
            return (e._self._c || t)("button", {
                staticClass: "bimdata-btn",
                style: {
                    width: e.width,
                    height: e.height
                },
                attrs: {
                    type: "button",
                    disabled: e.disabled
                },
                on: {
                    click: function(t) {
                        return e.$emit("click", t)
                    },
                    mouseover: function(t) {
                        e.isButtonHover = !0
                    },
                    mouseleave: function(t) {
                        e.isButtonHover = !1
                    }
                }
            }, [e._t("default", null, {
                hover: e.isButtonHover
            })], 2)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-327f6da2_0", {
            source: ".bimdata-btn{padding:0;display:flex;align-items:center;background-color:transparent;border:none;color:#000;cursor:pointer;font-size:.8571428571em;transition:all .1s ease}.bimdata-btn:focus{outline:0}.bimdata-btn__radius{border-radius:3px}.bimdata-btn__fill{justify-content:center}.bimdata-btn__fill--default{background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.10)}.bimdata-btn__fill--primary{background-color:#2f374a;color:#fff}.bimdata-btn__fill--secondary{background-color:#abcde1;color:#2f374a}.bimdata-btn__fill--grey{background-color:#d8d8d8}.bimdata-btn__fill--red{background-color:#ff3d1e;color:#fff}.bimdata-btn__fill--btn-icon svg{margin:0 6px}.bimdata-btn__outline{justify-content:center;border:1px solid}.bimdata-btn__outline--default{border-color:#d8d8d8;color:#2f374a}.bimdata-btn__outline--grey{border-color:#7b7b7b;color:#7b7b7b}.bimdata-btn__ghost{justify-content:flex-start}.bimdata-btn__ghost svg{display:flex;align-items:center}.bimdata-btn__ghost--grey{color:#616060}",
            map: void 0,
            media: void 0
        })
    }), ml, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Al = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("span", {
                staticClass: "bimdata-tooltip"
            }, [this._v(this._s(this.message))])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-39c26f4e_0", {
            source: '@keyframes fadeIn{0%{opacity:0}50%{opacity:1}}@keyframes fadeOut{0%{opacity:1}50%{opacity:0}}@keyframes scale-up-center{0%{transform:scale(.5)}100%{transform:scale(1)}}.bimdata-tooltip{padding:0 .5rem;width:max-content;height:25px;min-width:56px;position:absolute;top:calc((45px - 25px)/ 2);background-color: #303030;border-radius:3px;color:#fff;line-height:25px;opacity:0;text-align:center;word-wrap:break-word;font-size:1em;z-index:2}.bimdata-tooltip::first-letter{text-transform:capitalize}.bimdata-tooltip::before{content:"";display:block;position:absolute;top:calc(16px / 2);border-color:transparent transparent #303030;border-style:solid;border-width:0 0 8px 8px}.bimdata-tooltip--left{left:calc(45px + 4px)}.bimdata-tooltip--left::before{left:-4px;transform:rotate(135deg)}.bimdata-tooltip--right{right:calc(45px + 4px)}.bimdata-tooltip--right::before{right:-4px;transform:rotate(-45deg)}.bimdata-tooltip--up{padding:calc(12px / 2);width:140px;height:auto;top:24px;left:0;line-height:1.5}.bimdata-tooltip--up::before{top:-4px;left:47%;transform:rotate(-135deg)}.bimdata-tooltip--grey{background-color:#7b7b7b}.bimdata-tooltip--grey::before{content:none}',
            map: void 0,
            media: void 0
        })
    }), {
        name: "BaseTooltip",
        props: {
            message: {
                type: String,
                default: null
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const xl = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-spinner"
            }, [t("div", {
                staticClass: "bimdata-spinner--square",
                style: this.getStyle()
            })])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-2e2625ca_0", {
            source: "@keyframes bimdataspinner{0%{transform:scale(.2)}15%{transform:scale(1.3)}20%{transform:scale(1)}40%{transform:rotate(0)}60%{transform:rotate(180deg)}80%{transform:rotate(0)}90%{transform:scale(1)}100%{transform:scale(.2)}}.bimdata-spinner{display:flex}.bimdata-spinner--square{width:25px;height:25px;border:5px black solid;animation:bimdataspinner 1.4s linear infinite}",
            map: void 0,
            media: void 0
        })
    }), {
        props: ["size", "border"],
        methods: {
            getStyle() {
                if (this.size) return {
                    width: this.size,
                    height: this.size,
                    "border-width": this.border ? this.border : null
                }
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    var Cl = {
            data: () => ({
                textMaxLength: 25
            }),
            filters: {
                truncate: (e, t) => (e.length > t && (e = e.substring(0, t) + "."), e),
                middleTruncate(e, t, i) {
                    if (e.length <= t) return e;
                    const r = t - (i = i || "...").length,
                        n = Math.ceil(r / 2),
                        s = Math.floor(r / 2);
                    return e.substring(0, n) + i + e.substring(e.length - s)
                }
            }
        },
        Pl = {
            bind(e, t) {
                if ("function" != typeof t.value) throw Error(`click away directive needs function, got ${typeof t.value}`);
                e.clickAwayHandler = i => {
                    (i.path || i.composedPath && i.composedPath()).find(t => t === e) || t.value()
                }, window.addEventListener("click", e.clickAwayHandler, !0)
            },
            unbind(e) {
                window.removeEventListener("click", e.clickAwayHandler, !0), delete e.clickAwayHandler
            }
        };
    const kl = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                directives: [{
                    name: "clickaway",
                    rawName: "v-clickaway",
                    value: e.away,
                    expression: "away"
                }],
                staticClass: "plugin"
            }, [i("div", {
                staticClass: "tools-menu m-b-12"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn bimdata-btn__fill--default bimdata-btn__fill--icon",
                class: {
                    active: e.active
                },
                attrs: {
                    width: "45",
                    height: "45"
                },
                on: {
                    click: function(t) {
                        return e.toggleActive()
                    }
                },
                scopedSlots: e._u([{
                    key: "default",
                    fn: function(t) {
                        var r, n = t.hover;
                        return [e.buttonText ? i("span", {
                            staticClass: "tools-menu__info"
                        }, [e._v(e._s(e._f("truncate")(e.buttonText, e.truncateSize)))]) : e._e(), e._v(" "), e.loading ? i("BIMDataSpinner") : e._t("icon", null, {
                            active: e.active
                        }), e._v(" "), !e.active && e.tooltip && n ? i("BIMDataTooltip", {
                            class: (r = {}, r["bimdata-tooltip--" + e.position] = !0, r),
                            attrs: {
                                message: e.$t(e.tooltip)
                            }
                        }) : e._e()]
                    }
                }])
            })], 1), e._v(" "), i("div", {
                staticClass: "window"
            }, [i("transition", {
                attrs: {
                    name: "slide-fade-" + e.position
                }
            }, [i("span", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.active,
                    expression: "active"
                }],
                class: {
                    overlapped: e.overlapped
                }
            }, [e._t("default", [e._v("No content provided")], {
                buttonTextChange: e.buttonTextChange,
                active: e.active,
                activeChange: e.activeChange,
                loading: e.loading,
                loadingChange: e.loadingChange
            })], 2)])], 1)])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-7f3d2c90_0", {
            source: ".viewer__menu .tools-menu__info{position:absolute;top:3px;left:3px;font-size:11px;font-weight:700}.viewer__menu .tools-menu__info~svg{margin-top:6px}.viewer__menu .tools-menu>.bimdata-btn{position:relative;width:40px;height:40px;justify-content:center}.viewer__menu .tools-menu>.bimdata-btn:focus{outline:0}.viewer__menu .tools-menu>.bimdata-btn__fill--default{background-color:#e3e3e3;box-shadow:0 0px 0px 0 rgba(0,0,0,.0)}.viewer__menu .tools-menu>.bimdata-btn.active{background-color:#fff}.viewer__menu .tools-menu>.bimdata-btn:hover .bimdata-tooltip{opacity:1}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataButton: Ml,
            BIMDataTooltip: Al,
            BIMDataSpinner: xl
        },
        data: () => ({
            active: !1,
            buttonText: null,
            loading: !1
        }),
        props: {
            keepActive: {
                type: Boolean,
                default: !1
            },
            tooltip: {
                type: String,
                default: null
            },
            overlapped: {
                type: Boolean,
                default: !1
            },
            truncateSize: {
                type: Number,
                default: 4
            },
            position: {
                type: String,
                required: !0,
                validator: e => ["right", "left"].includes(e)
            },
            asyncLoading: {
                type: Boolean,
                default: !1
            }
        },
        mixins: [Cl],
        directives: {
            clickaway: Pl
        },
        methods: {
            toggleActive() {
                this.activeChange(!this.active)
            },
            away() {
                this.keepActive || this.activeChange(!1)
            },
            buttonTextChange(e) {
                this.buttonText = e
            },
            activeChange(e) {
                this.asyncLoading && this.loading || (this.active = e, this.asyncLoading && this.loadingChange(!0))
            },
            loadingChange(e) {
                this.loading = e
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const El = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: this.width,
                    height: this.height,
                    viewBox: this.viewBox,
                    "aria-labelledby": this.iconName,
                    fill: this.iconColor,
                    role: "presentation"
                }
            }, [this._t("default")], 2)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-76df4e3d_0", {
            source: ".bimdata-fill-default{fill:#7b7b7b}.bimdata-stroke-default{stroke:#7b7b7b}.bimdata-fill-primary{fill:#2f374a}.bimdata-stroke-primary{stroke:#2f374a}.bimdata-fill-secondary{fill:#abcde1}.bimdata-stroke-secondary{stroke:#abcde1}.bimdata-fill-grey{fill:#c4c4c4}.bimdata-stroke-grey{stroke:#c4c4c4}.bimdata-fill-white{fill:#fff}.bimdata-stroke-white{stroke:#fff}.bimdata-fill-border{fill:#d8d8d8}.bimdata-stroke-border{stroke:#d8d8d8}.bimdata-fill-text{fill:#616060}.bimdata-stroke-text{stroke:#616060}.bimdata-fill-red{fill:#ff3d1e}.bimdata-stroke-red{stroke:#ff3d1e}.bimdata-fill-orange{fill:#ff9100}.bimdata-stroke-orange{stroke:#ff9100}.bimdata-fill-green{fill:#00af50}.bimdata-stroke-green{stroke:#00af50}.icon-chevron{transition:all .1s linear}.icon-chevron.expanded{transform:rotate(90deg);transition:all .1s linear}",
            map: void 0,
            media: void 0
        })
    }), {
        props: {
            iconName: {
                type: String,
                default: "box"
            },
            width: {
                type: [Number, String],
                default: 20
            },
            height: {
                type: [Number, String],
                default: 20
            },
            iconColor: {
                type: String,
                default: "currentColor"
            },
            x: {
                type: [Number, String],
                default: 20
            },
            y: {
                type: [Number, String],
                default: 20
            }
        },
        computed: {
            viewBox() {
                return `0 0 ${this.x} ${this.y}`
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Il = gl({
            render: function() {
                var e = this.$createElement;
                return (this._self._c || e)("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M4 0C1.79086 0 0 1.79086 0 4V28C0 30.2091 1.79086 32 4 32H28C30.2091 32 32 30.2091 32 28V4C32 1.79086 30.2091 0 28 0H4ZM4 28L10 20.5L14 25.5L20 19L28 28H4Z"
                    }
                })
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: Tl
        } = Ma("viewer");
    const Dl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("div", {
                staticClass: "window-manager",
                style: this.allWindowsUnpined ? "height: 0px;" : null
            }, [this._t("default")], 2)
        },
        staticRenderFns: []
    }, void 0, {
        data: () => ({
            windows: []
        }),
        props: {
            container: {
                type: HTMLElement
            }
        },
        computed: {
            ...Tl(["viewerBoundingClientRect"]),
            allWindowsUnpined() {
                return this.windows.every(e => !e.pinned)
            }
        },
        watch: {
            viewerBoundingClientRect() {
                this.pinWindows()
            }
        },
        methods: {
            registerWindow(e) {
                this.windows.push(e)
            },
            pinWindows() {
                this.windows.forEach(e => e.pin())
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Sl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M13.5977 2.77181C14.6959 0.942788 17.1064 0.304031 18.9817 1.34511C20.857 2.38619 21.487 4.71287 20.3888 6.5419L17.974 10.5637C17.2048 11.8447 15.792 12.5418 14.3702 12.487L14.0465 13.0476L11.1304 11.364L11.378 10.9353C10.5028 9.76046 10.3734 8.14184 11.1829 6.79362L13.5977 2.77181ZM15.7839 9.49876C15.7555 8.94791 15.4573 8.42214 14.9441 8.12581C14.3956 7.80917 13.7431 7.83616 13.2358 8.13998C13.2658 7.96309 13.329 7.78809 13.4276 7.62335L15.4643 4.21906C15.8969 3.496 16.8476 3.24408 17.5876 3.65638C18.3277 4.06869 18.5769 4.98908 18.1443 5.71214L16.1075 9.11644C16.0192 9.26407 15.9092 9.39206 15.7839 9.49876ZM6.86332 14.4362C7.63245 13.1553 9.04524 12.4582 10.4671 12.513L10.7641 11.9986L13.6802 13.6822L13.4593 14.0647C14.3344 15.2395 14.4639 16.8581 13.6544 18.2063L11.2396 22.2281C10.1414 24.0572 7.73084 24.6959 5.85554 23.6548C3.98023 22.6138 3.35027 20.2871 4.44848 18.4581L6.86332 14.4362ZM8.7298 15.8835C8.81813 15.7359 8.92806 15.6079 9.05338 15.5012C9.08177 16.052 9.37998 16.5778 9.89323 16.8741C10.4417 17.1907 11.0942 17.1638 11.6015 16.8599C11.5715 17.0368 11.5083 17.2118 11.4097 17.3766L9.37295 20.7809C8.94034 21.5039 7.98972 21.7559 7.24968 21.3436C6.50963 20.9312 6.26041 20.0109 6.69302 19.2878L8.7298 15.8835ZM19.6254 17.5434L20.4627 16.0932L16.4186 14.7251L19.6254 17.5434ZM17.7009 19.0437L16.0834 19.4771L15.8087 15.2167L17.7009 19.0437ZM20.477 13.6175L20.0436 12L16.2166 13.8922L20.477 13.6175ZM4.90855 8.83603L5.8139 7.42734L8.88297 10.3951L4.90855 8.83603ZM9.44393 5.6644L7.80765 6.02031L9.51558 9.93305L9.44393 5.6644ZM5.1323 12.9445L4.77639 11.3082L9.04504 11.2366L5.1323 12.9445Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Bl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M18.9819 1.34511C17.1066 0.304031 14.696 0.942788 13.5978 2.77181L11.183 6.79362C10.3735 8.14184 10.503 9.76046 11.3781 10.9353L10.4672 12.513C9.04536 12.4582 7.63257 13.1553 6.86344 14.4362L4.44861 18.4581C3.3504 20.2871 3.98035 22.6138 5.85566 23.6548C7.73096 24.6959 10.1415 24.0572 11.2397 22.2281L13.6545 18.2063C14.464 16.8581 14.3346 15.2395 13.4594 14.0647L14.3703 12.487C15.7922 12.5418 17.205 11.8447 17.9741 10.5637L20.3889 6.5419C21.4871 4.71287 20.8572 2.38619 18.9819 1.34511ZM15.784 9.49877C15.9094 9.39206 16.0193 9.26407 16.1076 9.11644L18.1444 5.71214C18.577 4.98908 18.3278 4.06869 17.5877 3.65638C16.8477 3.24408 15.8971 3.496 15.4645 4.21906L13.4277 7.62335C13.3291 7.7881 13.2659 7.96309 13.2359 8.13998C13.7432 7.83616 14.3958 7.80917 14.9442 8.12581C15.4574 8.42214 15.7556 8.94791 15.784 9.49877ZM9.0535 15.5012C9.08189 16.052 9.38009 16.5778 9.89335 16.8741C10.4418 17.1908 11.0943 17.1638 11.6016 16.86C11.5716 17.0368 11.5084 17.2118 11.4099 17.3766L9.37307 20.7809C8.94046 21.5039 7.98984 21.7559 7.2498 21.3436C6.50976 20.9312 6.26053 20.0109 6.69314 19.2878L8.72992 15.8835C8.81825 15.7359 8.92818 15.6079 9.0535 15.5012Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const jl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("polygon", {
                staticClass: "st0",
                attrs: {
                    points: "20.5,10.5 12.5,10.5 12.5,2.5 10.5,2.5 10.5,10.5 2.5,10.5 2.5,12.5 10.5,12.5 10.5,20.5 12.5,20.5 12.5,12.5 20.5,12.5 "
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ll = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M0 1.958H8.965V0H0V1.958Z",
                    fill: "#394055"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Rl = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "bimdata-window",
                    class: {
                        "bimdata-window-unpined": !e.pinned, "bimdata-window-reduced": e.reduced
                    },
                    style: {
                        left: e.left,
                        top: e.top,
                        "min-height": e.computedMinHeight,
                        "min-width": e.computedMinWidth,
                        "max-height": e.computedMaxHeight,
                        "max-width": e.computedMaxWidth,
                        "z-index": e.pinned ? "unset" : 2
                    }
                }, [i("div", {
                    ref: "header",
                    staticClass: "bimdata-window__header",
                    style: e.pinned || e.grabbing ? null : "cursor: grab;",
                    on: {
                        mousedown: e.mouseDown
                    }
                }, [e._t("header", [i("span", [e._v(e._s(e.title))])]), e._v(" "), i("div", {
                    staticClass: "bimdata-window__header-buttons"
                }, [e.reducible && e.pinned ? i("BIMDataButton", {
                    attrs: {
                        width: "32"
                    },
                    on: {
                        mousedown: function(e) {
                            e.stopPropagation()
                        },
                        click: function(t) {
                            return t.stopPropagation(), e.onReducedClick(t)
                        }
                    },
                    scopedSlots: e._u([{
                        key: "default",
                        fn: function(t) {
                            var r = t.hover;
                            return [e.reduced ? i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "plus",
                                    width: "15",
                                    height: "15"
                                }
                            }, [i("BIMDataPlusIcon")], 1) : i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "minus",
                                    width: "9",
                                    height: "2",
                                    x: "9",
                                    y: "2"
                                }
                            }, [i("BIMDataMinusIcon")], 1), e._v(" "), r ? i("BIMDataTooltip", {
                                staticClass: "bimdata-tooltip--grey",
                                attrs: {
                                    message: e.reduced ? e.$t("window_manager.tooltip_plus") : e.$t("window_manager.tooltip_minus")
                                }
                            }) : e._e()]
                        }
                    }], null, !1, 3377986155)
                }) : e._e(), e._v(" "), i("BIMDataButton", {
                    attrs: {
                        width: "32"
                    },
                    on: {
                        mousedown: function(e) {
                            e.stopPropagation()
                        },
                        click: function(t) {
                            return t.stopPropagation(), e.onPinClick(t)
                        }
                    },
                    scopedSlots: e._u([{
                        key: "default",
                        fn: function(t) {
                            var r = t.hover;
                            return [e.pinned ? i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "detach",
                                    width: "18",
                                    height: "18",
                                    x: "23",
                                    y: "25"
                                }
                            }, [i("BIMDataDetachIcon")], 1) : i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "attach",
                                    width: "18",
                                    height: "18",
                                    x: "23",
                                    y: "25"
                                }
                            }, [i("BIMDataAttachIcon")], 1), e._v(" "), r ? i("BIMDataTooltip", {
                                staticClass: "bimdata-tooltip--grey",
                                attrs: {
                                    message: e.pinned ? e.$t("window_manager.tooltip_detach") : e.$t("window_manager.tooltip_attach")
                                }
                            }) : e._e()]
                        }
                    }])
                })], 1)], 2), e._v(" "), e.reduced ? e._e() : i("div", {
                    staticClass: "bimdata-window__content",
                    class: {
                        "content-pinned": e.pinned
                    }
                }, [e._t("default")], 2)])
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-5aae0302_0", {
                source: ".bimdata-window{flex:1;background-color:#fff;display:flex;flex-direction:column;box-sizing:border-box}.bimdata-window-reduced{flex:none}.bimdata-window-unpined{padding:0 .9px;position:absolute;overflow:auto;resize:both;box-shadow:0 2px 10px 0 rgba(0,0,0,.1)}.bimdata-window-unpined .bimdata-properties__content__detail .property__name{width:40%}.bimdata-window__header{padding:0 12px;height:42px;background-color:#f8f8f8;display:flex;justify-content:space-between;align-items:center}.bimdata-window__header-buttons{display:flex;flex-shrink:0}.bimdata-window__header-buttons .bimdata-btn{position:relative;width:33px;height:33px;display:flex;align-items:center;justify-content:center}.bimdata-window__header-buttons .bimdata-btn:hover{background-color:rgba(216,216,216,.5);border-radius:3px}.bimdata-window__header-buttons .bimdata-btn:hover .bimdata-tooltip{top:35px;opacity:1;animation:fadeIn ease .2s,scale-up-center .2s cubic-bezier(.39,.575,.565,1)}.bimdata-window__header-buttons .bimdata-tooltip{animation:fadeOut ease .4s}.bimdata-window__header-buttons button:first-child{margin-right:5px}.bimdata-window__content{height:100%;overflow-y:auto;overflow-x:hidden}.bimdata-window__content:not(.content-pinned){margin-bottom:12px}.window-manager{display:flex;flex-direction:column;position:absolute}",
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataIcon: El,
                BIMDataDetachIcon: Sl,
                BIMDataAttachIcon: Bl,
                BIMDataPlusIcon: jl,
                BIMDataMinusIcon: Ll,
                BIMDataTooltip: Al,
                BIMDataButton: Ml
            },
            data() {
                return {
                    pinned: !0,
                    grabbing: !1,
                    initialMousePos: {
                        left: null,
                        top: null
                    },
                    startingDragPosition: {
                        left: null,
                        top: null
                    },
                    left: null,
                    top: null,
                    maxHeight: null,
                    maxWidth: null,
                    maxLeftDx: null,
                    maxRightDx: null,
                    maxBottomDy: null,
                    maxTopDy: null,
                    savedHeight: null,
                    savedWidth: null,
                    headerHeight: null,
                    headerResizeObserver: new ResizeObserver(this.handleHeaderResize),
                    isIconHover: !1
                }
            },
            props: {
                title: String,
                reduced: {
                    type: Boolean,
                    default: !1
                },
                reducible: {
                    type: Boolean,
                    default: !1
                },
                unpinOffset: {
                    type: Number,
                    default: 10
                },
                minHeight: {
                    type: Number,
                    default: 100
                },
                minWidth: {
                    type: Number,
                    default: 350
                }
            },
            created() {
                this.$parent.registerWindow(this)
            },
            mounted() {
                this.headerResizeObserver.observe(this.$refs.header)
            },
            destroyed() {
                this.headerResizeObserver.disconnect()
            },
            computed: {
                computedMinHeight() {
                    if (!this.reduced) return this.pinned ? `${this.headerHeight||0}px` : `${this.minHeight+this.headerHeight||0}px`
                },
                computedMaxHeight() {
                    return this.maxHeight ? `${this.maxHeight}px` : "unset"
                },
                computedMinWidth() {
                    return `${this.minWidth}px`
                },
                computedMaxWidth() {
                    return this.maxWidth ? `${this.maxWidth}px` : "unset"
                }
            },
            methods: {
                onReducedClick() {
                    this.reducible && this.$emit("reduced-change", !this.reduced)
                },
                onPinClick() {
                    this.pin(!this.pinned)
                },
                pin(e = !0) {
                    if (this.pinned = e, this.$emit("pinned-change", this.pinned), this.pinned) this.resetMax(), this.$el.style.height = "", this.$el.style.width = "";
                    else {
                        const {
                            height: e,
                            width: t,
                            top: i
                        } = this.$el.getBoundingClientRect(), r = this.$el.parentElement.getBoundingClientRect().top;
                        this.top = `${this.unpinOffset+i-r}px`, this.left = `${this.unpinOffset}px`, this.$el.style.width = `${t}px`, this.$el.style.height = `${e}px`, this.$nextTick(this.testAndFixHeight)
                    }
                },
                mouseDown(e) {
                    if (this.pinned) return;
                    e.preventDefault(), this.grabbing = !0, document.body.style.setProperty("cursor", "grabbing", "important"), this.initialMousePos.left = e.clientX, this.initialMousePos.top = e.clientY;
                    const {
                        left: t,
                        top: i,
                        width: r,
                        height: n
                    } = this.$el.getBoundingClientRect(), {
                        left: s,
                        top: o
                    } = this.$el.parentElement.getBoundingClientRect();
                    this.startingDragPosition.left = t - s, this.startingDragPosition.top = i - o;
                    const {
                        top: a,
                        left: l,
                        width: c,
                        height: h
                    } = this.$parent.container.getBoundingClientRect();
                    this.maxLeftDx = t - l, this.maxRightDx = c - r - this.maxLeftDx, this.maxTopDy = i - a, this.maxBottomDy = h - n - this.maxTopDy, document.addEventListener("mousemove", this.mouseMove), document.addEventListener("mouseup", this.mouseUp)
                },
                mouseMove(e) {
                    e.preventDefault();
                    let t = e.clientX - this.initialMousePos.left;
                    t > this.maxRightDx ? t = this.maxRightDx : t < -this.maxLeftDx && (t = -this.maxLeftDx);
                    let i = e.clientY - this.initialMousePos.top;
                    i > this.maxBottomDy ? i = this.maxBottomDy : i < -this.maxTopDy && (i = -this.maxTopDy), this.left = `${this.startingDragPosition.left+t}px`, this.top = `${this.startingDragPosition.top+i}px`
                },
                mouseUp(e) {
                    Number.parseInt(this.$el.style.width) > this.maxWidth && (this.$el.style.width = `${this.maxWidth}px`), Number.parseInt(this.$el.style.height) > this.maxHeight && (this.$el.style.height = `${this.maxHeight}px`), this.setMax(), this.grabbing = !1, document.body.style.cursor = "", document.removeEventListener("mousemove", this.mouseMove), document.removeEventListener("mouseup", this.mouseUp)
                },
                handleHeaderResize(e) {
                    e.forEach(e => {
                        this.headerHeight = e.target.getBoundingClientRect().height, this.testAndFixHeight()
                    })
                },
                testAndFixHeight() {
                    const {
                        height: e,
                        bottom: t
                    } = this.$el.getBoundingClientRect(), i = this.$parent.container.getBoundingClientRect().bottom;
                    if (t > i) {
                        const t = this.$el.parentElement.getBoundingClientRect().top;
                        this.top = `${i-e-t}px`, this.$nextTick(this.setMax)
                    }
                },
                setMax() {
                    const {
                        top: e,
                        left: t
                    } = this.$el.getBoundingClientRect(), {
                        top: i,
                        left: r,
                        height: n,
                        width: s
                    } = this.$parent.container.getBoundingClientRect();
                    this.maxHeight = n - (e - i), this.maxWidth = s - (t - r)
                },
                resetMax() {
                    this.maxHeight = null, this.maxWidth = null
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        {
            mapState: Ol
        } = Ma("viewer");

    function Fl(e, t) {
        return t && t.component ? function(e, t, i) {
            return e(El, {
                scopedSlots: {
                    default: () => e(t)
                },
                props: {
                    ...i
                }
            })
        }(e, t.component, t.props) : t && t.svg ? function(e, t, i) {
            return e(El, {
                scopedSlots: {
                    default: () => e("g", {
                        domProps: {
                            innerHTML: t
                        }
                    })
                },
                props: {
                    ...i
                }
            })
        }(e, t.svg.path, t.svg.options) : t && t.imgUri ? function(e, t) {
            return e("img", {
                domProps: {
                    src: t
                },
                style: "max-width:80%;max-height:80%;"
            })
        }(e, t.imgUri) : void 0
    }
    const Nl = gl({}, void 0, {
        props: {
            plugins: {
                type: Array,
                default: () => []
            },
            position: {
                type: String,
                required: !0,
                validator: e => ["right", "left"].includes(e)
            }
        },
        computed: {
            ...Ol(["viewerElement", "viewerBoundingClientRect"]),
            viewerHeight() {
                return this.viewerBoundingClientRect ? `${this.viewerBoundingClientRect.height}px` : null
            }
        },
        render(e) {
            return e("div", {
                class: {
                    viewer__menu: !0, [`viewer__menu--${this.position}`]: !0
                }
            }, this.plugins.map(t => {
                const i = t.display && t.display.content || "free",
                    r = (e, {
                        buttonTextChange: r,
                        activeChange: n,
                        loadingChange: s,
                        active: o,
                        loading: a
                    }, l = !1) => e(t.component, {
                        class: l ? ["submenu", `submenu--${this.position}__${i}`] : null,
                        props: {
                            ...t.componentCfg,
                            active: o,
                            loading: a,
                            cfg: t.cfg
                        },
                        on: {
                            "set-button-text"(e) {
                                r(e)
                            },
                            "set-active"() {
                                n(!0)
                            },
                            "set-inactive"() {
                                n(!1)
                            },
                            "loading-start"() {
                                s(!0)
                            },
                            "loading-end"() {
                                s(!1)
                            },
                            "unloading-start"() {
                                s(!0)
                            },
                            "unloading-end"() {
                                s(!1)
                            },
                            ...t.on
                        }
                    }),
                    n = (e, i) => r => e(Dl, {
                        class: ["submenu", `submenu--${this.position}__windowed`],
                        style: {
                            "--viewer-height": this.viewerHeight
                        },
                        props: {
                            container: this.viewerElement
                        },
                        scopedSlots: {
                            default: () => e(Rl, {
                                props: {
                                    title: this.$t(t.tooltip)
                                },
                                scopedSlots: {
                                    default: () => r(e, i)
                                }
                            })
                        }
                    });
                return e(kl, {
                    style: "simple" === i ? "position: relative;" : null,
                    scopedSlots: {
                        default: t => "windowed" === i ? n(e, t)(r) : r(e, t, !0),
                        icon: ({
                            active: i
                        }) => {
                            const r = Fl(e, t.icon),
                                n = i ? Fl(e, t.iconActive) : null,
                                s = Fl(e, {
                                    component: Il,
                                    props: {
                                        x: 32,
                                        y: 32
                                    }
                                });
                            return i && n || r || s
                        }
                    },
                    props: {
                        position: this.position,
                        truncateSize: t.truncateSize,
                        tooltip: t.tooltip,
                        keepActive: t.keepActive,
                        asyncLoading: t.asyncLoading,
                        overlapped: !!t.overlapWith && t.overlapWith.some(e => {
                            const t = this.$plugins[e];
                            return t && t.$parent && t.$parent.active
                        })
                    },
                    key: t.name
                })
            }))
        }
    }, void 0, void 0, void 0, !1, void 0, void 0, void 0);
    const Ul = {
        en: {
            error: {
                title: "Title is required",
                field: "This field is mandatory"
            },
            window_manager: {
                tooltip_detach: "Detach",
                tooltip_attach: "Attach",
                tooltip_plus: "Expand",
                tooltip_minus: "Reduce"
            },
            global: {
                edit: "Edit"
            }
        },
        fr: {
            error: {
                title: "Le titre est obligatoire",
                field: "Ce champ est obligatoire"
            },
            window_manager: {
                tooltip_detach: "Détacher",
                tooltip_attach: "Attacher",
                tooltip_plus: "Étendre",
                tooltip_minus: "Réduire"
            },
            global: {
                edit: "Editer"
            }
        }
    };

    function Hl(e, t) {
        Object.keys(e).forEach(i => {
            t.availableLocales.includes(i) ? t.mergeLocaleMessage(i, e[i]) : console.error(`Unable to register locale "${i}" because the application does not allow it`)
        })
    }
    const Vl = ({
        display: {
            position: e = 0
        }
    }, {
        display: {
            position: t = 0
        }
    }) => e - t;
    const zl = gl({}, void 0, {
        functional: !0,
        components: {
            Menu: Nl
        },
        props: {
            plugins: {
                type: Array,
                required: !0
            }
        },
        render(e, t) {
            const i = t.props.plugins.filter(e => e.enabled);
            return [e("div", {
                class: {
                    viewer__menu: !0, "viewer__menu--up": !0
                }
            }, i.filter(e => "header" === (e.display && e.display.content)).sort(Vl).map(t => e(t.component, {
                props: t.componentCfg
            }))), e("div", {
                class: {
                    viewer__menu: !0, "viewer__menu--down": !0
                }
            }, i.filter(e => "footer" === (e.display && e.display.content)).sort(Vl).map(t => e(t.component, {
                props: t.componentCfg
            }))), ...i.filter(e => !e.display).map(t => e(t.component, {
                props: t.componentCfg
            })), e(Nl, {
                props: {
                    position: "left",
                    plugins: i.filter(e => "left" === (e.display && e.display.iconPosition)).sort(Vl)
                }
            }), e(Nl, {
                props: {
                    position: "right",
                    plugins: i.filter(e => "right" === (e.display && e.display.iconPosition)).sort(Vl)
                }
            })]
        }
    }, void 0, void 0, void 0, !1, void 0, void 0, void 0);
    const $l = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Wl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M23 11.5664C23 17.9177 17.8513 23.0664 11.5 23.0664C5.14873 23.0664 0 17.9177 0 11.5664C0 5.21513 5.14873 0.0664062 11.5 0.0664062C17.8513 0.0664062 23 5.21513 23 11.5664ZM17.7727 10.1843L16.2727 8.71857L10.7827 14.0927L7.77271 11.1614L6.27271 12.6271L10.7827 17.0241L17.7727 10.1843Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ql = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M0.0522011 2.19676C-0.0174004 2.27217 -0.0174004 2.39544 0.0522011 2.47105L8.40456 11.5192L0.0880449 20.529C0.0182538 20.6044 0.0182538 20.7279 0.0880449 20.8033L2.06344 22.9433C2.13304 23.0189 2.24702 23.0189 2.31662 22.9433L12.7257 11.667C12.7942 11.5928 12.795 11.4724 12.729 11.3968C12.7202 11.3736 12.7071 11.3518 12.6899 11.3331L2.28077 0.0565512C2.21117 -0.0188504 2.09719 -0.0188504 2.02759 0.0565512L0.0522011 2.19676Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Gl = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M10.9551 18.0898C11.015 18.0242 11.015 17.917 10.9551 17.8513L3.76477 9.98327L10.9242 2.14869C10.9843 2.08312 10.9843 1.97575 10.9242 1.91019L9.22365 0.0493081C9.16373 -0.0164372 9.06561 -0.0164372 9.0057 0.0493081L0.0448052 9.85482C-0.014133 9.91931 -0.0147853 10.024 0.0420305 10.0898C0.0495406 10.1099 0.0608058 10.1289 0.0756628 10.1451L9.03655 19.9508C9.09647 20.0164 9.19459 20.0164 9.25451 19.9508L10.9551 18.0898Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Yl = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M8.04494 1.91023C7.98502 1.9758 7.98502 2.08299 8.04494 2.14874L15.2352 10.0167L8.0758 17.8513C8.01571 17.9169 8.01571 18.0242 8.0758 18.0898L9.77635 19.9507C9.83627 20.0164 9.93439 20.0164 9.99431 19.9507L18.9552 10.1452C19.0141 10.0807 19.0148 9.97599 18.958 9.91025C18.9505 9.89006 18.9392 9.87112 18.9243 9.85487L9.96345 0.0491749C9.90353 -0.0163916 9.80541 -0.0163916 9.74549 0.0491749L8.04494 1.91023Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M0.0449383 1.91023C-0.0149794 1.9758 -0.0149794 2.08299 0.0449383 2.14874L7.23523 10.0167L0.0757952 17.8513C0.0157141 17.9169 0.0157141 18.0242 0.0757952 18.0898L1.77635 19.9507C1.83627 20.0164 1.93439 20.0164 1.99431 19.9507L10.9552 10.1452C11.0141 10.0807 11.0148 9.97599 10.958 9.91025C10.9505 9.89006 10.9392 9.87112 10.9243 9.85487L1.96345 0.0491749C1.90353 -0.0163916 1.80541 -0.0163916 1.74549 0.0491749L0.0449383 1.91023Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Zl = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M10.9551 18.0898C11.015 18.0242 11.015 17.917 10.9551 17.8513L3.76477 9.98327L10.9242 2.14869C10.9843 2.08312 10.9843 1.97575 10.9242 1.91019L9.22365 0.0493081C9.16373 -0.0164372 9.06561 -0.0164372 9.0057 0.0493081L0.0448052 9.85482C-0.014133 9.91931 -0.0147853 10.024 0.0420305 10.0898C0.0495406 10.1099 0.0608058 10.1289 0.0756628 10.1451L9.03655 19.9508C9.09647 20.0164 9.19459 20.0164 9.25451 19.9508L10.9551 18.0898Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M18.9551 18.0898C19.015 18.0242 19.015 17.917 18.9551 17.8513L11.7648 9.98327L18.9242 2.14869C18.9843 2.08312 18.9843 1.97575 18.9242 1.91019L17.2237 0.0493081C17.1637 -0.0164372 17.0656 -0.0164372 17.0057 0.0493081L8.04481 9.85482C7.98587 9.91931 7.98521 10.024 8.04203 10.0898C8.04954 10.1099 8.06081 10.1289 8.07566 10.1451L17.0366 19.9508C17.0965 20.0164 17.1946 20.0164 17.2545 19.9508L18.9551 18.0898Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Xl = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("ul", {
                staticClass: "bimdata-list bimdata-navigation"
            }, [e.$scopedSlots.left ? i("li", [e._t("left")], 2) : e._e(), e._v(" "), e.first ? i("li", {
                staticClass: "bimdata-navigation__item"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn",
                class: {
                    disabled: e.firstDisabled
                },
                attrs: {
                    disabled: e.firstDisabled,
                    width: "36px",
                    height: "21px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("first")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-twin-chevron-left",
                attrs: {
                    "icon-name": "icon-twin-chevron-left",
                    width: "10",
                    height: "10",
                    x: "19",
                    y: "20"
                }
            }, [i("BIMDataTwinChevronLeftIcon")], 1)], 1)], 1) : e._e(), e._v(" "), e.previous ? i("li", {
                staticClass: "bimdata-navigation__item"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                class: {
                    disabled: e.previousDisabled
                },
                attrs: {
                    disabled: e.previousDisabled,
                    width: "36px",
                    height: "21px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("previous")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-chevron",
                attrs: {
                    "icon-name": "chevron-left",
                    width: "10",
                    height: "10",
                    x: "11",
                    y: "20"
                }
            }, [i("BIMDataChevronLeftIcon")], 1)], 1)], 1) : e._e(), e._v(" "), i("li", [e._t("default")], 2), e._v(" "), e.next ? i("li", {
                staticClass: "bimdata-navigation__item"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                class: {
                    disabled: e.nextDisabled
                },
                attrs: {
                    disabled: e.nextDisabled,
                    width: "36px",
                    height: "21px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("next")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-chevron",
                attrs: {
                    "icon-name": "chevron",
                    width: "10",
                    height: "10",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1)], 1) : e._e(), e._v(" "), e.last ? i("li", {
                staticClass: "bimdata-navigation__item"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                class: {
                    disabled: e.lastDisabled
                },
                attrs: {
                    disabled: e.lastDisabled,
                    width: "36px",
                    height: "21px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("last")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-twin-chevron",
                attrs: {
                    "icon-name": "icon-twin-chevron",
                    width: "10",
                    height: "10",
                    x: "17",
                    y: "21"
                }
            }, [i("BIMDataTwinChevronRightIcon")], 1)], 1)], 1) : e._e(), e._v(" "), e.$scopedSlots.right ? i("li", [e._t("right")], 2) : e._e()])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-6005d3b4_0", {
            source: ".bimdata-list[data-v-6005d3b4]{margin:0;padding:0}.bimdata-list li[data-v-6005d3b4]{list-style-type:none}.bimdata-navigation[data-v-6005d3b4]{display:inline-flex;width:100%;height:38px;justify-content:center;align-items:center;background-color:#fff}.bimdata-navigation__item .bimdata-btn[data-v-6005d3b4]{justify-content:center}.bimdata-navigation__item .bimdata-btn[data-v-6005d3b4]:disabled{background-color:transparent}.bimdata-navigation__item .bimdata-btn:disabled svg .st0[data-v-6005d3b4]{fill:#d8d8d8}.bimdata-navigation__item.active .bimdata-btn[data-v-6005d3b4]{font-weight:700}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataChevronRightIcon: ql,
            BIMDataChevronLeftIcon: Gl,
            BIMDataTwinChevronRightIcon: Yl,
            BIMDataTwinChevronLeftIcon: Zl,
            BIMDataButton: Ml
        },
        props: {
            first: {
                type: Boolean,
                default: !0
            },
            last: {
                type: Boolean,
                default: !0
            },
            previous: {
                type: Boolean,
                default: !0
            },
            next: {
                type: Boolean,
                default: !0
            },
            firstDisabled: {
                type: Boolean,
                default: !1
            },
            lastDisabled: {
                type: Boolean,
                default: !1
            },
            previousDisabled: {
                type: Boolean,
                default: !1
            },
            nextDisabled: {
                type: Boolean,
                default: !1
            }
        }
    }, "data-v-6005d3b4", !1, void 0, !1, bl, void 0, void 0);
    const Kl = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("BIMDataNavigation", {
                staticClass: "bimdata-pagination",
                attrs: {
                    firstDisabled: e.isFirstPage,
                    previousDisabled: e.isFirstPage,
                    nextDisabled: e.isLastPage,
                    lastDisabled: e.isLastPage
                },
                on: {
                    first: function(t) {
                        return e.firstPage()
                    },
                    previous: function(t) {
                        return e.previousPage()
                    },
                    next: function(t) {
                        return e.nextPage()
                    },
                    last: function(t) {
                        return e.lastPage()
                    }
                },
                scopedSlots: e._u([{
                    key: "left",
                    fn: function() {
                        return [i("span", {
                            staticClass: "bimdata-pagination__number"
                        }, [e._v(e._s(e.firstIndex) + " - " + e._s(e.lastIndex) + " of " + e._s(e.length))])]
                    },
                    proxy: !0
                }])
            }, [e._v(" "), i("span", {
                staticClass: "bimdata-pagination__item"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "50px",
                    height: "21px"
                }
            }, [e._v("\n      " + e._s(e.currentPage) + "\n    ")])], 1)])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-03ad2d1e_0", {
            source: ".bimdata-pagination{font-size:.8571428571em}.bimdata-pagination__number{padding:0 12px;width:auto;min-width:100px;text-align:left}.bimdata-pagination__item .bimdata-btn{justify-content:center}.bimdata-pagination__item .bimdata-btn:disabled{background-color:transparent}.bimdata-pagination__item .bimdata-btn:disabled svg .st0{fill:#d8d8d8}.bimdata-pagination__item.active .bimdata-btn{font-weight:700}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataNavigation: Xl,
            BIMDataButton: Ml
        },
        props: {
            length: {
                type: Number,
                required: !0
            },
            currentPage: {
                type: Number,
                required: !0
            },
            totalPages: {
                type: Number,
                required: !0
            },
            perPage: {
                type: Number,
                required: !0
            }
        },
        computed: {
            firstIndex() {
                return this.perPage * (this.currentPage - 1) + 1
            },
            lastIndex() {
                return Math.min(this.firstIndex + this.perPage - 1, this.length)
            },
            isFirstPage() {
                return 1 === this.currentPage
            },
            isLastPage() {
                return this.currentPage === this.totalPages
            }
        },
        methods: {
            firstPage() {
                this.$emit("pagechanged", 1)
            },
            previousPage() {
                this.$emit("pagechanged", this.currentPage - 1)
            },
            nextPage() {
                this.$emit("pagechanged", this.currentPage + 1)
            },
            lastPage() {
                this.$emit("pagechanged", this.totalPages)
            },
            setPages() {
                Math.ceil(this.length / this.perPage)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Ql = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-paginated-list"
            }, [e._t("header"), e._v(" "), i("ul", {
                staticClass: "bimdata-list bimdata-paginated-list__elements"
            }, e._l(e.page, (function(t) {
                return i("li", {
                    key: e.elementKey ? t[e.elementKey] : t,
                    on: {
                        click: function(i) {
                            return e.$emit("element-click", t)
                        }
                    }
                }, [e._t("element", [e._v(e._s(t))], {
                    element: t
                })], 2)
            })), 0), e._v(" "), 0 === e.list.length ? [e._t("empty")] : e._e(), e._v(" "), e.totalPages > 1 ? i("BIMDataPagination", {
                attrs: {
                    length: e.list.length,
                    currentPage: e.currentPage,
                    totalPages: e.totalPages,
                    perPage: e.perPage
                },
                on: {
                    pagechanged: e.onPageChange
                }
            }) : e._e()], 2)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-dfe0a1d4_0", {
            source: ".bimdata-list{margin:0;padding:0}.bimdata-list li{list-style-type:none}.bimdata-paginated-list{line-height:1.5}.bimdata-paginated-list--small{height:100%;position:relative}.bimdata-paginated-list--small .bimdata-paginated-list__elements li{padding:6px;display:flex;align-items:center;justify-content:space-between}.bimdata-paginated-list--small .bimdata-paginated-list__elements li:nth-child(odd){background-color:#f8f8f8}.bimdata-paginated-list--small .bimdata-paginated-list__elements li:nth-child(even){background-color:#ebebeb}.bimdata-paginated-list--empty{height:auto}.bimdata-paginated-list .bcf--bucket__content{height:calc(304px - 37px - 4px)}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataPagination: Kl
        },
        data: () => ({
            currentPage: 1,
            page: []
        }),
        props: {
            list: {
                type: Array,
                default: () => []
            },
            perPage: {
                type: Number,
                default: 10
            },
            elementKey: {
                type: String
            }
        },
        watch: {
            list: {
                handler(e) {
                    e.length < this.perPage * (this.currentPage - 1) + 1 && (this.currentPage = 1), this.paginate()
                },
                immediate: !0
            }
        },
        computed: {
            totalPages() {
                return this.list.length ? Math.ceil(this.list.length / this.perPage) : 0
            }
        },
        methods: {
            paginate() {
                const e = this.perPage * (this.currentPage - 1),
                    t = e + this.perPage;
                this.page = this.list.slice(e, t)
            },
            onPageChange(e) {
                this.currentPage = e, this.paginate()
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Jl = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-checkbox",
                class: {
                    indeterminate: e.indeterminate, disabled: e.disabled, checked: e.checked
                },
                on: {
                    click: e.onClick
                }
            }, [i("span", {
                staticClass: "bimdata-checkbox__mark"
            }), e._v(" "), i("span", {
                staticClass: "bimdata-checkbox__text"
            }, [e._v(e._s(e.text))])])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-134bcc05_0", {
            source: '.bimdata-checkbox{position:relative;display:flex;align-items:center;cursor:pointer}.bimdata-checkbox__mark{width:13px;height:13px;position:relative;top:0;left:0;border:solid 1px #2f374a;border-radius:2px}.bimdata-checkbox__mark::after{width:4px;height:7px;content:"";display:block;position:absolute;top:1px;left:3px;border:solid transparent;opacity:0;transform:rotate(45deg)}.bimdata-checkbox__text{width:calc(100% - 13px - 5px);margin-left:5px;font-size:.7857142857em}.bimdata-checkbox.checked>.bimdata-checkbox__mark,.bimdata-checkbox.indeterminate>.bimdata-checkbox__mark{background-color:#2f374a}.bimdata-checkbox:not(.indeterminate):not(.checked)>.bimdata-checkbox__mark::after{border-color:transparent}.bimdata-checkbox.checked>.bimdata-checkbox__mark::after,.bimdata-checkbox:not(.indeterminate)>.bimdata-checkbox__mark::after{border:solid 1px #fff;border-left:none;border-top:none;border-width:0 1px 1px 0;opacity:1}.bimdata-checkbox.indeterminate>.bimdata-checkbox__mark::after{border-width:0 1px 0 0;transform:rotate(90deg)}.bimdata-checkbox.disabled{cursor:default}.bimdata-checkbox.disabled>.bimdata-checkbox__mark{border-color:#d8d8d8}.bimdata-checkbox.disabled>.bimdata-checkbox__text{color:#d8d8d8}.bimdata-checkbox.checked.disabled>.bimdata-checkbox__mark{background-color:#d8d8d8}',
            map: void 0,
            media: void 0
        })
    }), {
        model: {
            prop: "state",
            event: "change"
        },
        inheritAttrs: !1,
        name: "BIMDataCheckbox",
        props: {
            text: {
                type: String,
                default: null
            },
            state: {
                type: Boolean,
                default: !1
            },
            disabled: {
                type: Boolean,
                default: !1
            }
        },
        computed: {
            indeterminate() {
                return null === this.state
            },
            checked() {
                return !0 === this.state || this.indeterminate
            }
        },
        methods: {
            onClick() {
                this.$emit("change", !this.checked)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const ec = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "warning-list"
            }, [i("h1", [e._v(e._s(e.$t("warningList.title")))]), e._v(" "), i("div", {
                staticClass: "warning-list__header"
            }, [i("BIMDataNavigation", {
                attrs: {
                    last: !1,
                    first: !1,
                    previous: e.selectedIfcWithWarnings && !!(e.selectedIfcWithWarnings.length > 1),
                    next: e.selectedIfcWithWarnings && !!(e.selectedIfcWithWarnings.length > 1),
                    previousDisabled: e.isFirst,
                    nextDisabled: e.isLast
                },
                on: {
                    previous: function(t) {
                        return e.previousClick()
                    },
                    next: function(t) {
                        return e.nextClick()
                    }
                }
            }, [e.selectedIfc ? i("div", [e._v("IFC name : " + e._s(e.selectedIfc.name))]) : e._e()])], 1), e._v(" "), i("div", {
                staticClass: "warning-list__content"
            }, [e.selectedIfc.errors && e.selectedIfc.errors.length ? i("div", {
                staticClass: "warning-list__content-errors",
                class: {
                    "half-width": e.selectedIfc.errors && e.selectedIfc.errors.length && e.selectedIfc.warnings && e.selectedIfc.warnings.length
                }
            }, [i("div", {
                staticClass: "warning-list__content-errors__header"
            }, [i("span", {
                staticClass: "bimdata-error__picto"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    "icon-name": "BIMDataCrossIcon",
                    width: "13",
                    height: "13",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataCrossIcon")], 1)], 1), e._v(" "), i("span", {
                staticClass: "text"
            }, [e._v(e._s(e.selectedIfc.errors.length))]), e._v(" "), i("span", {
                staticClass: "error"
            }, [e._v(e._s(e.selectedIfc.errors.length > 1 ? e.$t("warningList.errors") : e.$t("warningList.error")))])]), e._v(" "), i("BIMDataPaginatedList", {
                attrs: {
                    list: e.selectedIfc.errors,
                    perPage: 30
                },
                scopedSlots: e._u([{
                    key: "element",
                    fn: function(t) {
                        var r = t.element;
                        return [i("span", {
                            staticClass: "bimdata-error__picto"
                        }, [i("BIMDataIcon", {
                            staticClass: "bimdata-fill-white",
                            attrs: {
                                "icon-name": "BIMDataCrossIcon",
                                width: "13",
                                height: "13",
                                x: "24",
                                y: "24"
                            }
                        }, [i("BIMDataCrossIcon")], 1)], 1), e._v(" "), i("span", [e._v(e._s(r))])]
                    }
                }], null, !1, 1462047028)
            })], 1) : e._e(), e._v(" "), e.selectedIfc.warnings && e.selectedIfc.warnings.length ? i("div", {
                staticClass: "warning-list__content-warnings",
                class: {
                    "half-width": e.selectedIfc.errors && e.selectedIfc.errors.length && e.selectedIfc.warnings && e.selectedIfc.warnings.length
                }
            }, [i("div", {
                staticClass: "warning-list__content-warnings__header"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-orange icon-warning",
                attrs: {
                    "icon-name": "BIMDataWarningIcon",
                    width: "19",
                    height: "19",
                    x: "19",
                    y: "19"
                }
            }, [i("BIMDataWarningIcon")], 1), e._v(" "), i("span", {
                staticClass: "text"
            }, [e._v(e._s(e.selectedIfc.warnings.length))]), e._v(" "), i("span", {
                staticClass: "warning"
            }, [e._v(e._s(e.selectedIfc.warnings.length > 1 ? e.$t("warningList.warnings") : e.$t("warningList.warning")))])], 1), e._v(" "), i("BIMDataPaginatedList", {
                attrs: {
                    list: e.selectedIfc.warnings,
                    perPage: 30
                },
                scopedSlots: e._u([{
                    key: "element",
                    fn: function(t) {
                        var r = t.element;
                        return [i("BIMDataIcon", {
                            staticClass: "bimdata-fill-orange icon-warning",
                            attrs: {
								"icon-name": "BIMDataWarningIcon",
                                width: "14",
                                height: "14",
                                x: "19",
                                y: "19"
							}
                        }, [i("BIMDataWarningIcon")], 1), e._v(" "), i("span", [e._v(e._s(r))])]
                    }
                }], null, !1, 4024449805)
            })], 1) : e._e()]), e._v(" "), i("div", {
                staticClass: "warning-list__footer"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    width: "166px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [e._v(e._s(e.$t("warningList.ok")))])], 1), e._v(" "), i("div", {
                staticClass: "warning-list__show"
            }, [i("BIMDataCheckbox", {
                attrs: {
                    text: e.$t("warningList.showWarningsAuto")
                },
                model: {
                    value: e.showWarningsAuto,
                    callback: function(t) {
                        e.showWarningsAuto = t
                    },
                    expression: "showWarningsAuto"
                }
            })], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataCrossIcon: $l,
            BIMDataNavigation: Xl,
            BIMDataPaginatedList: Ql,
            BIMDataButton: Ml,
            BIMDataCheckbox: Jl
        },
        data: () => ({
            selectedIfc: null,
            showWarningsAuto: "true" === localStorage.getItem("BIMDataViewer_displayWarningsAuto")
        }),
        props: {
            page: {
                type: Number
            }
        },
        methods: {
            previousClick() {
                this.selectedIfc = this.selectedIfcWithWarnings[this.selectedIfcWithWarnings.indexOf(this.selectedIfc) - 1]
            },
            nextClick() {
                this.selectedIfc = this.selectedIfcWithWarnings[this.selectedIfcWithWarnings.indexOf(this.selectedIfc) + 1]
            }
        },
        computed: {
            selectedIfcWithWarnings() {
                return this.$store.state.viewer.selectedIfcs.filter(e => e.errors && e.errors.length || e.warnings && e.warnings.length)
            },
            isLast() {
                return this.selectedIfcWithWarnings && this.selectedIfcWithWarnings.indexOf(this.selectedIfc) === this.selectedIfcWithWarnings.length - 1
            },
            isFirst() {
                return this.selectedIfcWithWarnings && 0 === this.selectedIfcWithWarnings.indexOf(this.selectedIfc)
            }
        },
        watch: {
            showWarningsAuto(e) {
                localStorage.setItem("BIMDataViewer_displayWarningsAuto", e)
            },
            selectedIfcWithWarnings: {
                handler(e) {
                    if (e && e.length) {
                        const t = e[this.page ? this.page - 1 : 0];
                        if (!t) throw `[Warning list] No selected ifc on page "${this.page}"`;
                        this.selectedIfc = t
                    }
                },
                immediate: !0
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const tc = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-warning",
                on: {}
            }, [this.isSelectedIfcWithWarnings ? t("BIMDataIcon", {
                staticClass: "bimdata-fill-orange icon-warning",
                attrs: {
					"icon-name": "BIMDataWarningIcon",
                    width: "19",
                    height: "19",
                    x: "19",
                    y: "19"
				}
            }, [t("BIMDataWarningIcon")], 1) : this._e()], 1)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-d66a8e5e_0", {
            source: ".bimdata-warning{width:25px;cursor:pointer}.icon-warning{margin-right:6px}.warning-list{padding:20px 0;width:1000px;min-width:900px;display:flex;flex-direction:column;align-items:center}.warning-list__header{margin-bottom:18px}.warning-list__content{width:100%;display:flex;justify-content:space-evenly}.warning-list__content .half-width{flex-basis:48%}.warning-list__content-errors,.warning-list__content-warnings{padding:0 6px;max-height:452px;flex-basis:98%;background-color:#fff;box-shadow:0 2px 10px rgba(0,0,0,.1)}.warning-list__content-errors__header,.warning-list__content-warnings__header{padding:0 12px;height:41.5px;display:flex;align-items:center}.warning-list__content-errors__header .text,.warning-list__content-warnings__header .text{margin-right:6px;font-weight:700}.warning-list__content-errors .bimdata-paginated-list,.warning-list__content-warnings .bimdata-paginated-list{padding-bottom:6px;max-height:430px}.warning-list__content-errors .bimdata-paginated-list__elements,.warning-list__content-warnings .bimdata-paginated-list__elements{max-height:371px;overflow:auto}.warning-list__content-errors .bimdata-paginated-list__elements li,.warning-list__content-warnings .bimdata-paginated-list__elements li{margin-bottom:1px;padding:.4rem 1rem;display:flex;align-items:center}.warning-list__content-errors__header span:last-child{color:#ff3d1e}.warning-list__content-errors .bimdata-paginated-list__elements li{color:#ff3d1e;background-color:rgba(255,61,30,.1)}.warning-list__content-warnings__header .bimdata-warning__bg{width:1.6rem;height:1.6rem}.warning-list__content-warnings__header .bimdata-warning__bg::after,.warning-list__content-warnings__header .bimdata-warning__bg::before{width:1.6rem;height:1.6rem}.warning-list__content-warnings__header .bimdata-warning__picto{top:9px;left:9px}.warning-list__content-warnings .bimdata-paginated-list__elements li{color:#ff9100;background-color:rgba(255,145,0,.1)}.warning-list__footer{margin-top:18px}.warning-list__show{margin-top:20px}.warning-list .warning-list__header{display:flex;justify-content:space-between}.warning-list__header__icon{cursor:pointer}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El
        },
        methods: {
            onClick() {
                this.openWarningList()
            },
            openWarningList(e) {
                this.$plugins.modalManager.pushModal(ec, {
                    args: {
                        ...e
                    }
                })
            }
        },
        mounted() {
            if (this.isSelectedIfcWithWarnings) {
                "true" === localStorage.getItem("BIMDataViewer_displayWarningsAuto") && this.$nextTick(() => this.openWarningList())
            }
        },
        computed: {
            selectedIfcs() {
                return this.$utils.getSelectedIfcs()
            },
            selectedIfcWithWarnings() {
                return this.selectedIfcs.filter(e => e.errors && e.errors.length || e.warnings && e.warnings.length)
            },
            isSelectedIfcWithWarnings() {
                return !!this.selectedIfcWithWarnings.length
            }
        },
        watch: {
            selectedIfcs(e, t) {
                const i = e.filter(e => !t.includes(e));
                1 === i.length && (i[0].errors && i[0].errors.length || i[0].warnings && i[0].warnings.length) && "true" === localStorage.getItem("BIMDataViewer_displayWarningsAuto") && this.openWarningList({
                    page: this.selectedIfcWithWarnings.indexOf(i[0]) + 1
                })
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const ic = gl({
            render: function() {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("g", {
                    attrs: {
                        transform: "translate(-437.000000, -19.000000)"
                    }
                }, [t("g", {
                    attrs: {
                        transform: "translate(434.000000, 18.000000)"
                    }
                }, [t("path", {
                    attrs: {
                        d: "M11,5.5v2.8l3.7-3.7L11,0.9v2.8c-4.1,0-7.3,3.3-7.3,7.3c0,1.4,0.4,2.8,1.1,3.9l1.3-1.3 c-0.4-0.8-0.6-1.6-0.6-2.6C5.5,8,8,5.5,11,5.5z M17.2,7.1l-1.3,1.3c0.4,0.8,0.6,1.6,0.6,2.6c0,3-2.5,5.5-5.5,5.5v-2.7l-3.7,3.7 l3.7,3.7v-2.8c4.1,0,7.3-3.3,7.3-7.3C18.3,9.6,17.9,8.2,17.2,7.1L17.2,7.1z"
                    }
                })])])
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: rc,
            mapActions: nc
        } = Ma("viewer");
    const sc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-reload"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost-icon",
                attrs: {
                    width: "32px"
                },
                on: {
                    click: e.reload
                }
            }, [i("BIMDataIcon", {
                class: {
                    "bimdata-reloading": e.reloadingAnimation
                },
                style: "--count:" + (e.reloading ? "infinite" : "1"),
                attrs: {
                    "icon-name": "reload",
                    width: "15",
                    height: "20",
                    x: "16",
                    y: "20"
                },
                nativeOn: {
                    animationend: function(t) {
                        return e.onAnimationEnd()
                    }
                }
            }, [i("BIMDataReloadIcon")], 1)], 1)], 1)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-e4554630_0", {
            source: ".bimdata-reload .bimdata-btn{justify-content:center}.bimdata-reload .bimdata-reloading{animation:.5s linear 0s var(--count,0) running reloading}@keyframes reloading{from{transform:rotate(0)}to{transform:rotate(180deg)}}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataReloadIcon: ic,
            BIMDataButton: Ml
        },
        data: () => ({
            reloading: !1,
            reloadingAnimation: !1
        }),
        computed: {
            ...rc(["selectedIfcs"])
        },
        methods: {
            ...nc(["setSelectedIfcs"]),
            async reload() {
                if (!this.reloading) {
                    const e = this.selectedIfcs;
                    this.reloading = !0, this.reloadingAnimation = !0, await this.setSelectedIfcs(), this.setSelectedIfcs(e), await Promise.all(this.selectedIfcs.map(e => new Promise(t => {
                        this.$hub.on("3d-model-loaded", ({
                            ifc: i
                        }) => {
                            e.id === i.id && t()
                        })
                    }))), this.reloading = !1
                }
            },
            onAnimationEnd() {
                this.reloadingAnimation = !1
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const oc = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                staticClass: "bimdata-fill-green",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M23 11.5332C23 17.8845 17.8513 23.0332 11.5 23.0332C5.14873 23.0332 0 17.8845 0 11.5332C0 5.18193 5.14873 0.0332031 11.5 0.0332031C17.8513 0.0332031 23 5.18193 23 11.5332ZM17.7727 10.151L16.2727 8.68536L10.7827 14.0595L7.77271 11.1282L6.27271 12.5939L10.7827 16.9909L17.7727 10.151Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ac = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M9.65649 18.8792C14.6271 18.8792 18.6565 14.8497 18.6565 9.87915C18.6565 4.90859 14.6271 0.87915 9.65649 0.87915C4.68593 0.87915 0.656494 4.90859 0.656494 9.87915C0.656494 14.8497 4.68593 18.8792 9.65649 18.8792ZM13.2501 5.37915L14.1565 6.28558L10.5629 9.87915L14.1565 13.4727L13.2501 14.3792L9.65649 10.7856L6.06292 14.3792L5.15649 13.4727L8.75007 9.87915L5.15649 6.28558L6.06292 5.37915L9.65649 8.97272L13.2501 5.37915Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const lc = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M19,15.5l-8.5,4v-7.8c0-0.3-0.2-0.5-0.5-0.5s-0.5,0.2-0.5,0.5v7.8l-8.5-4V5.8l8.8,3.8 c0.1,0.1,0.3,0.1,0.4,0L19,5.7V15.5z M19.7,4.5L10.2,0C10.1,0,9.9,0,9.8,0l-7,3.4C2.6,3.5,2.4,3.8,2.6,4.1 C2.7,4.3,3,4.4,3.2,4.3L10,1L18.3,5L10 8.7l-9.3-4c-0.2-0.1-0.3-0.1-0.5,0C0.1,4.8,0,4.9,0,5.1v10.7c0,0.2,0.1,0.4,0.3,0.4 l9.5,4.5c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0.1,0c0,0,0,0,0.1,0 c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0l9.5-4.5c0.2-0.1,0.3-0.3,0.3-0.4V5 C20,4.8,19.9,4.6,19.7,4.5z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const cc = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M5 0V6.9H5.0115L5 6.9115L9.6 11.5L5 16.1L5.0115 16.1115H5V23H18.8V16.1115H18.7885L18.8 16.1L14.2 11.5L18.8 6.9115L18.7885 6.9H18.8V0H5ZM16.5 16.675V20.7H7.3V16.675L11.9 12.075L16.5 16.675ZM11.9 10.925L7.3 6.325V2.3H16.5V6.325L11.9 10.925ZM11.9 16.1L8.45 19.55H15.35L11.9 16.1ZM15.35 6.325L11.9 9.775L8.45 6.325L15.35 6.325Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const hc = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    directives: [{
                        name: "clickaway",
                        rawName: "v-clickaway",
                        value: e.away,
                        expression: "away"
                    }],
                    staticClass: "bimdata-dropdown-list",
                    attrs: {
                        direction: e.directionClass
                    }
                }, [i("div", {
                    staticClass: "bimdata-dropdown-list__content",
                    class: {
                        active: e.displayed, disabled: e.disabled
                    },
                    on: {
                        click: e.onHeaderClick
                    }
                }, [e._t("header"), e._v(" "), i("BIMDataButton", {
                    staticClass: "bimdata-btn__radius bimdata-btn__fill bimdata-btn__fill--grey bimdata-btn__fill--icon",
                    attrs: {
                        width: "21px",
                        height: "21px"
                    }
                }, [i("BIMDataIcon", {
                    staticClass: "icon-chevron",
                    attrs: {
                        "icon-name": "chevron-right",
                        width: "10",
                        height: "10",
                        x: "13",
                        y: "23"
                    }
                }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), e._t("contentAfterBtn")], 2), e._v(" "), i("transition", {
                    attrs: {
                        name: "slide-fade-" + e.transitionName
                    }
                }, [i("BIMDataPaginatedList", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.displayed,
                        expression: "displayed"
                    }],
                    class: "submenu submenu--" + e.directionClass,
                    attrs: {
                        list: e.list,
                        perPage: e.perPage,
                        elementKey: e.elementKey
                    },
                    on: {
                        "element-click": function(t) {
                            return e.$emit("element-click", t)
                        }
                    },
                    scopedSlots: e._u([{
                        key: "element",
                        fn: function(t) {
                            var i = t.element;
                            return [e._t("element", null, {
                                element: i,
                                close: e.away
                            })]
                        }
                    }], null, !0)
                })], 1)], 1)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-5737bb26_0", {
                source: ".bimdata-dropdown-list{margin:0 12px;height:42px;position:relative;display:flex;align-items:center;justify-content:center}.bimdata-dropdown-list__content{padding:0 12px;min-width:372px;min-height:36px;display:flex;align-items:center;justify-content:space-between;background-color:#ffffff;border:1px solid #abcde1;border-radius:3px;cursor:pointer}.bimdata-dropdown-list__content .bimdata-btn{background-color:#f8f8f8}.bimdata-dropdown-list__content.active{background-color:#fff;border:none;box-shadow:0 4px 10px 0 rgba(0,0,0,.1)}.bimdata-dropdown-list__content.active .bimdata-btn svg{transform:rotate(90deg)}.bimdata-dropdown-list[direction*=up]{bottom:6px}.bimdata-dropdown-list[direction*=up] .bimdata-dropdown-list__content{width:auto;min-width:auto;justify-content:flex-start}.bimdata-dropdown-list[direction*=up] .bimdata-dropdown-list__content svg{margin:0 calc(12px / 2)}.bimdata-dropdown-list[direction*=up] .bimdata-dropdown-list__content.active .bimdata-btn svg{transform:rotate(-90deg)}.bimdata-dropdown-list .bimdata-paginated-list>ul:first-child{padding:calc(12px / 2) 0;overflow:auto;z-index:1}.bimdata-dropdown-list .bimdata-paginated-list li{display:flex;justify-content:space-between;align-items:center}",
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataIcon: El,
                BIMDataChevronRightIcon: ql,
                BIMDataPaginatedList: Ql,
                BIMDataButton: Ml
            },
            directives: {
                clickaway: Pl
            },
            props: {
                list: {
                    type: Array,
                    default: () => []
                },
                perPage: {
                    type: Number,
                    default: 10
                },
                elementKey: {
                    type: String
                },
                disabled: {
                    type: Boolean,
                    default: !1
                },
                transitionName: {
                    type: String,
                    default: "up",
                    validator: e => ["up", "down"].includes(e)
                },
                directionClass: {
                    type: String,
                    default: "down",
                    validator: e => ["down", "up", "right", "left"].includes(e)
                }
            },
            data: () => ({
                displayed: !1
            }),
            methods: {
                onHeaderClick() {
                    this.disabled || (this.displayed = !this.displayed)
                },
                away() {
                    this.displayed = !1
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        {
            mapState: dc,
            mapActions: uc,
            mapMutations: pc
        } = Ma("viewer");
    const fc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("BIMDataDropdownList", {
                staticClass: "bimdata-model",
                attrs: {
                    list: e.sortedIfcs,
                    elementKey: "id",
                    perPage: 40
                },
                on: {
                    "element-click": function(t) {
                        return e.onIfcClick(t)
                    }
                },
                scopedSlots: e._u([{
                    key: "header",
                    fn: function() {
                        return [i("div", {
                            staticClass: "bimdata-model-body"
                        }, [i("div", {
                            staticClass: "bimdata-model-body__picto"
                        }, [i("BIMDataIcon", {
                            attrs: {
                                "icon-name": "model",
                                width: "18",
                                height: "18",
                                x: "20",
                                y: "21"
                            }
                        }, [i("BIMDataModelIcon")], 1)], 1), e._v(" "), i("div", {
                            staticClass: "bimdata-model-body__number bimdata-info-length"
                        }, [i("span", [e._v(e._s(e.selectedIfcs.length))])]), e._v(" "), i("div", {
                            staticClass: "bimdata-model-body__name"
                        }, [e.selectedIfcs.length <= 1 ? i("span", {
                            style: {
                                opacity: 0 === e.selectedIfcs.length ? .7 : 1
                            }
                        }, [e._v("\n          " + e._s(e._f("middleTruncate")(e.selectedIfcs.length ? (e.selectedIfcs[0] || []).name.replace(/\.ifc$/, "") : e.$t("model.select_ifc"), 45)) + "\n        ")]) : i("span", [e._v(e._s(e.$t("model.selected_models")))]), e._v(" "), e.selectedIfcs && 1 === e.selectedIfcs.length && e.selectedIfcs[0].name.replace(/\.ifc$/, "").length > 45 ? i("BIMDataTooltip", {
                            staticClass: "bimdata-tooltip--up",
                            attrs: {
                                message: (e.selectedIfcs[0] || []).name.replace(/\.ifc$/, "")
                            }
                        }) : e._e()], 1)])]
                    },
                    proxy: !0
                }, {
                    key: "element",
                    fn: function(t) {
                        var r = t.element;
                        return ["C" !== r.status || e.$plugins.warning && r.errors && r.errors.length ? r.errors && r.errors.length ? i("div", {
                            staticClass: "bimdata-model-ifc"
                        }, [i("div", {
                            staticClass: "bimdata-model-ifc__icon"
                        }, [i("BIMDataIcon", {
                            staticClass: "bimdata-fill-orange",
                            attrs: {
								"icon-name": "BIMDataWarningIcon",
                                width: "16",
                                height: "16",
                                x: "19",
                                y: "19"
							}
                        }, [i("BIMDataWarningIcon")], 1)], 1), e._v(" "), i("BIMDataCheckbox", {
                            attrs: {
                                state: e.isIfcSelected(r),
                                text: r.name,
                                disabled: !!e.loadingIfcIds.length
                            }
                        })], 1) : "E" === r.status ? i("div", {
                            staticClass: "bimdata-model-ifc"
                        }, [i("div", {
                            staticClass: "bimdata-model-ifc__icon"
                        }, [i("BIMDataIcon", {
                            staticClass: "bimdata-fill-red",
                            attrs: {
                                "icon-name": "BIMDataFailedIcon",
                                width: "16",
                                height: "16",
                                x: "19",
                                y: "19"
                            }
                        }, [i("BIMDataFailedIcon")], 1)], 1), e._v(" "), i("BIMDataCheckbox", {
                            attrs: {
                                state: e.isIfcSelected(r),
                                text: r.name,
                                disabled: !0
                            }
                        })], 1) : "P" === r.status || "I" === r.status ? i("div", {
                            staticClass: "bimdata-model-ifc"
                        }, [i("div", {
                            staticClass: "bimdata-model-ifc__icon"
                        }, [i("BIMDataIcon", {
                            staticClass: "bimdata-fill-primary bimdata-model-ifc-waiting",
                            attrs: {
                                "icon-name": "BIMDataSandglassIcon",
                                width: "16",
                                height: "16",
                                x: "23",
                                y: "23"
                            }
                        }, [i("BIMDataSandglassIcon")], 1)], 1), e._v(" "), i("BIMDataCheckbox", {
                            attrs: {
                                state: e.isIfcSelected(r),
                                text: r.name,
                                disabled: !0
                            }
                        })], 1) : e._e() : i("div", {
                            staticClass: "bimdata-model-ifc"
                        }, [i("div", {
                            staticClass: "bimdata-model-ifc__icon"
                        }, [i("BIMDataIcon", {
                            attrs: {
                                "icon-name": "BIMDataSuccessIFCIcon",
                                width: "16",
                                height: "16",
                                x: "23",
                                y: "23"
                            }
                        }, [i("BIMDataSuccessIFCIcon")], 1)], 1), e._v(" "), i("BIMDataCheckbox", {
                            attrs: {
                                state: e.isIfcSelected(r),
                                text: r.name,
                                disabled: !!e.loadingIfcIds.length
                            }
                        })], 1), e._v(" "), e.isIfcLoading(r.id) ? i("BIMDataSpinner") : e._e()]
                    }
                }])
            })
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-41fddcc2_0", {
            source: ".bimdata-model-body{display:flex;align-items:center}.bimdata-model-body__picto{display:flex}.bimdata-model-body__number{margin-left:12px}.bimdata-model-body__name{margin:0 12px}.bimdata-model-body__name span{display:flex;font-size:.7857142857em}.bimdata-model-body__name .bimdata-tooltip{width:100%;top:40px;justify-content:center;display:none}.bimdata-model-body__name:hover .bimdata-tooltip{opacity:1;display:block}.bimdata-model-ifc{width:100%;display:flex;align-items:center}.bimdata-model-ifc__icon{width:16px;height:16px;display:flex}.bimdata-model-ifc .bimdata-checkbox{width:100%;margin-left:6px}.bimdata-model-ifc .bimdata-checkbox__text{width:calc(100% - 13px - 5px - 16px)}.bimdata-model .submenu .bimdata-paginated-list__elements{max-height:350px;min-height:100px}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataSuccessIFCIcon: oc,
            BIMDataFailedIcon: ac,
            BIMDataModelIcon: lc,
            BIMDataCheckbox: Jl,
            BIMDataDropdownList: hc,
            BIMDataSpinner: xl,
            BIMDataSandglassIcon: cc,
            BIMDataTooltip: Al
        },
        data: () => ({
            loadingIfcIds: []
        }),
        computed: {
            ...dc({
                ifcs: e => e.ifcs,
                selectedIfcs: e => e.selectedIfcs
            }),
            sortedIfcs() {
                return this.ifcs.sort((e, t) => e.updated_at > t.updated_at ? -1 : e.updated_at > t.updated_at ? 1 : 0)
            }
        },
        async created() {
            this.$hub.on("3d-model-loaded", ({
                ifc: e
            }) => {
                this.loadingIfcIds = this.loadingIfcIds.filter(t => t !== e.id)
            });
            const e = await (new this.$bimdataApiClient.IfcApi).getIfcs(this.$utils.getCloudId(), this.$utils.getProjectId());
            if (e.length) {
                const t = e.filter(e => !this.ifcs.some(t => t.id === e.id));
                t.push(...this.ifcs), this.setIfcs(t)
            }
        },
        methods: {
            ...uc(["setSelectedIfcs"]),
            ...pc({
                setIfcs: "SET_IFCS"
            }),
            isIfcSelected(e) {
                return this.selectedIfcs.some(t => t.id === e.id)
            },
            onIfcClick(e) {
                "C" === e.status && (this.isIfcSelected(e) ? this.$utils.unloadIfcs([e]) : (this.$utils.loadIfcs([e]), this.loadingIfcIds.push(e.id)))
            },
            isIfcLoading(e) {
                return this.loadingIfcIds.includes(e)
            }
        },
        mixins: [Cl]
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    var _c = {
            "shortcuts-helper": {
            }
        },
        mc = {
            "shortcuts-helper": {
                title_modal: "How To use ARK-BIM",
                title_rotate: "Rotate the 3D model",
                text_rotate: "Use the left-click of your mouse pressed to make the 3D model rotate.",
                title_zoom: "3D model zoom",
                text_zoom: "Use your mouse wheel to go closer or farther from your 3D model by zooming in and zooming out.",
                title_open: "Right-click menu",
                text_open: "Use the right-click, make the selection menu visible and chose one of the many options to enhance parts of your model.",
                shortcut_1: "Right side view",
                shortcut_2: "Front side view",
                shortcut_3: "Left side view",
                shortcut_4: "Back side view",
                shortcut_5: "Top side view",
                shortcut_6: "Bottom side view",
                shortcut_pan: "Pan tool",
                shortcut_open: "Open groups of the same level",
                shortcut_multiselect: "Multiselect",
                btn: "OK"
            }
        };
    const gc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("g", [i("path", {
                attrs: {
                    d: "M33.3412 0.994125H131.835L142.082 100.1H23.6294L33.3412 0.994125Z",
                    fill: "white"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M23.1706 100.482H142.465L132.218 0.917653V0.611771H33.0353L23.2471 100.1L23.1706 100.482ZM141.624 99.7177H24.0118L33.7235 1.37648H131.529L141.624 99.7177Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M62.4 10.4765L61.0235 47.5647H104V10.4765H62.4Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M60.6412 47.9471H104.382H104.459V10.0941H62.0941L60.6412 47.9471ZM103.618 47.1824H61.4059L62.7824 10.8588H103.618V47.1824Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M61.0235 47.5647L64.7706 62.4H100.329L104 47.5647H61.0235Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M64.4647 62.7824H100.635L104.535 47.1824H60.5647L64.4647 62.7824ZM100.024 62.0177H65.0765L61.5588 47.9471H103.541L100.024 62.0177Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M85.4941 35.4059L85.2647 54.4471L90.3118 49.6294L98.0353 50.1647L85.4941 35.4059Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M84.0412 58.1941L83.9647 32.1941L100.635 52.0765L90.6177 50.5471L84.0412 58.1941ZM86.1059 37.9294L86.1824 52.5353L89.853 48.2529L95.5118 49.0941L86.1059 37.9294Z",
                    fill: "red"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M26.5353 128.853H26.1529C17.8177 128.853 10.9353 121.971 10.9353 113.635V100.865C10.9353 92.5294 17.8177 85.6471 26.1529 85.6471H26.5353C34.8706 85.6471 41.753 92.5294 41.753 100.865V113.635C41.753 121.971 34.8706 128.853 26.5353 128.853Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M137.418 128.853H137.035C128.7 128.853 121.818 121.971 121.818 113.635V100.865C121.818 92.5294 128.7 85.6471 137.035 85.6471H137.418C145.753 85.6471 152.635 92.5294 152.635 100.865V113.635C152.635 121.971 145.753 128.853 137.418 128.853Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M25.6941 129.771H27.2235C35.8647 129.771 42.9 122.812 42.8235 114.171V100.253C42.8235 91.6882 35.8647 84.6529 27.2235 84.6529H25.6941C17.1294 84.6529 10.0941 91.6118 10.0941 100.253V114.171C10.0941 122.735 17.0529 129.771 25.6941 129.771ZM12.3882 100.176C12.3882 92.8353 18.3529 86.8706 25.6941 86.8706H27.2235C34.5647 86.8706 40.5294 92.8353 40.5294 100.176V114.094C40.5294 121.435 34.5647 127.4 27.2235 127.4H25.6941C18.3529 127.4 12.3882 121.435 12.3882 114.094V100.176Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    d: "M26.6118 105.071C25.7706 105.071 25.0824 104.382 25.0824 103.541V99.0294C25.0824 98.1882 25.7706 97.5 26.6118 97.5C27.453 97.5 28.1412 98.1882 28.1412 99.0294V103.541C28.1412 104.382 27.453 105.071 26.6118 105.071Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M15.6 84.7294C15.0647 84.7294 14.6059 84.2706 14.6059 83.7353V76.0882C14.6059 75.5529 15.0647 75.0941 15.6 75.0941C16.1353 75.0941 16.5941 75.5529 16.5941 76.0882V83.7353C16.5941 84.2706 16.1353 84.7294 15.6 84.7294Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M9.86473 91C9.86473 91.5353 9.4059 91.9941 8.87061 91.9941H1.22355C0.688255 91.9941 0.229431 91.5353 0.229431 91C0.229431 90.4647 0.688255 90.0059 1.22355 90.0059H8.87061C9.4059 90.0059 9.86473 90.4647 9.86473 91Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M12.1588 87.0235C11.7765 87.4059 11.0882 87.4059 10.7059 87.0235L3.97646 80.2941C3.59411 79.9118 3.59411 79.2235 3.97646 78.8412C4.35881 78.4588 5.04705 78.4588 5.4294 78.8412L12.1588 85.5706C12.5412 85.9529 12.5412 86.6412 12.1588 87.0235Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M87.9412 106.294H83.2V101.553H81.0589V106.294H76.3942V108.359H81.0589V113.1H83.2V108.359H87.9412V106.294Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M136.424 129.771H137.953C146.594 129.771 153.629 122.812 153.553 114.171V100.253C153.553 91.6882 146.594 84.6529 137.953 84.6529H136.424C127.859 84.6529 120.824 91.6118 120.824 100.253V114.171C120.824 122.735 127.782 129.771 136.424 129.771ZM123.118 100.176C123.118 92.8353 129.082 86.8706 136.424 86.8706H137.953C145.294 86.8706 151.259 92.8353 151.259 100.176V114.094C151.259 121.435 145.294 127.4 137.953 127.4H136.424C129.082 127.4 123.118 121.435 123.118 114.094V100.176Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    d: "M137.341 105.071C136.5 105.071 135.812 104.382 135.812 103.541V99.0294C135.812 98.1882 136.5 97.5 137.341 97.5C138.182 97.5 138.871 98.1882 138.871 99.0294V103.541C138.871 104.382 138.182 105.071 137.341 105.071Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M103.006 107.365L108.359 102.012C108.818 101.553 108.818 100.865 108.359 100.406C107.9 99.9471 107.212 99.9471 106.753 100.406L100.635 106.524C100.406 106.753 100.329 107.059 100.329 107.365C100.329 107.671 100.406 107.976 100.635 108.206L106.753 114.324C107.212 114.782 107.9 114.782 108.359 114.324C108.818 113.865 108.818 113.176 108.359 112.718L103.006 107.365Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M171.447 107.365L166.094 102.012C165.635 101.553 165.635 100.865 166.094 100.406C166.553 99.9471 167.241 99.9471 167.7 100.406L173.818 106.524C174.047 106.753 174.124 107.059 174.124 107.365C174.124 107.671 174.047 107.976 173.818 108.206L167.7 114.324C167.241 114.782 166.553 114.782 166.094 114.324C165.635 113.865 165.635 113.176 166.094 112.718L171.447 107.365Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const vc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("g", [i("path", {
                attrs: {
                    d: "M10.8606 1.10984H112.966L123.589 103.929H0.792725L10.8606 1.10984Z",
                    fill: "white"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M0.317078 104.325H123.985L113.363 1.03057V0.71347H10.5435L0.396352 103.929L0.317078 104.325ZM123.193 103.533H1.26837L11.257 1.50622H112.649L123.193 103.533Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M41.0642 10.9399L39.558 49.3881H84.1103V10.9399H41.0642Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M39.1616 49.7845H84.5067H84.586V10.5435H40.6678L39.1616 49.7845ZM83.7932 48.9917H40.0336L41.3813 11.3363H83.7932V48.9917Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M39.558 49.3881L43.4424 64.7674H80.3051L84.1103 49.3881H39.558Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M43.1253 65.1637H80.6222L84.6652 48.9917H39.0823L43.1253 65.1637ZM79.988 64.371H43.7595L40.1129 49.7845H83.6347L79.988 64.371Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M64.9259 36.8627L64.688 56.5228L69.9202 51.5285L77.9269 52.0834L64.9259 36.8627Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M63.4197 60.4073L63.3404 33.4539L80.6223 54.0653L70.2373 52.4798L63.4197 60.4073ZM65.5601 39.3995L65.6394 54.5409L69.4445 50.1016L75.3109 50.9736L65.5601 39.3995Z",
                    fill: "red"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M62.072 131.437H61.6756C53.0347 131.437 45.9 124.303 45.9 115.662V102.423C45.9 93.7819 53.0347 86.6472 61.6756 86.6472H62.072C70.7129 86.6472 77.8476 93.7819 77.8476 102.423V115.662C77.8476 124.303 70.7922 131.437 62.072 131.437Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M45.1072 115.503C45.1072 124.858 52.7176 132.468 62.072 132.468C71.4264 132.468 79.0368 124.778 79.0368 115.503V102.661C79.0368 93.3062 71.4264 85.6959 62.072 85.6959C52.7176 85.6959 45.1072 93.3062 45.1072 102.661V115.503ZM47.4855 102.581C47.4855 94.5746 53.986 87.9948 62.072 87.9948C70.0787 87.9948 76.6585 94.4953 76.6585 102.581V115.424C76.6585 123.431 70.158 130.01 62.072 130.01C54.0653 130.01 47.4855 123.51 47.4855 115.424V102.581Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M62.1513 106.783C61.2793 106.783 60.5658 106.069 60.5658 105.197V101.709C60.5658 100.837 61.2793 100.124 62.1513 100.124C63.0233 100.124 63.7368 100.837 63.7368 101.709V105.197C63.7368 106.069 63.0233 106.783 62.1513 106.783Z",
                    fill: "red"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M62.1513 98.4591C61.2793 98.4591 60.5658 97.7456 60.5658 96.8736C60.5658 96.0016 61.2793 95.2881 62.1513 95.2881C63.0233 95.2881 63.7368 96.0016 63.7368 96.8736C63.7368 97.7456 63.0233 98.4591 62.1513 98.4591Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M62.1513 111.539C61.2793 111.539 60.5658 110.826 60.5658 109.954C60.5658 109.082 61.2793 108.368 62.1513 108.368C63.0233 108.368 63.7368 109.082 63.7368 109.954C63.7368 110.826 63.0233 111.539 62.1513 111.539Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M62.1513 143.011L67.7005 137.462C68.1762 136.987 68.8896 136.987 69.3653 137.462C69.8409 137.938 69.8409 138.651 69.3653 139.127L63.0233 145.469C62.7855 145.707 62.4684 145.786 62.1513 145.786C61.8342 145.786 61.5171 145.707 61.2793 145.469L54.9373 139.127C54.4617 138.651 54.4617 137.938 54.9373 137.462C55.4129 136.987 56.1264 136.987 56.6021 137.462L62.1513 143.011Z",
                    fill: "red"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M62.1513 149.908L67.7005 144.359C68.1762 143.883 68.8896 143.883 69.3653 144.359C69.8409 144.835 69.8409 145.548 69.3653 146.024L63.0233 152.366C62.7855 152.604 62.4684 152.683 62.1513 152.683C61.8342 152.683 61.5171 152.604 61.2793 152.366L54.9373 146.024C54.4617 145.548 54.4617 144.835 54.9373 144.359C55.4129 143.883 56.1264 143.883 56.6021 144.359L62.1513 149.908Z",
                    fill: "red"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const bc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("g", [i("path", {
                attrs: {
                    d: "M31.9475 21.8475L0.859558 72.1326H145.913L115.613 21.8475H31.9475Z",
                    fill: "white"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M0.214905 72.4907H146.557L115.828 21.561H31.7326L0.214905 72.4907ZM145.34 71.7744H1.50427L32.0908 22.2056H115.398L145.34 71.7744Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M54.583 47.778L53.3652 10.8879H93.6936L93.1922 47.778H54.583Z",
                    fill: "white"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M54.2248 48.1361H93.5503L94.0518 10.5298H53.0071L54.2248 48.1361ZM92.834 47.4198H54.9411L53.7234 11.2461H93.3354L92.834 47.4198Z",
                    fill: "#9E9E9E"
                }
            }), e._v(" "), i("path", {
                staticClass: "st1",
                attrs: {
                    d: "M57.1617 0.716293L53.3652 10.8879H93.6936L90.3986 0.716293H57.1617Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M52.8638 11.2461H94.195L90.6135 0.286499H56.8752L52.8638 11.2461ZM93.1922 10.5298H53.8667L57.3766 1.00281H90.1121L93.1922 10.5298Z",
                    fill: "black"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M119.911 55.0844H84.1667C82.3759 55.0844 80.8716 53.5801 80.8716 51.7893V9.0255C80.8716 7.23472 82.3759 5.73047 84.1667 5.73047H119.911C121.701 5.73047 123.206 7.23472 123.206 9.0255V51.7893C123.206 53.5801 121.701 55.0844 119.911 55.0844Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M84.1667 55.4425H119.911C121.916 55.4425 123.564 53.795 123.564 51.7893V9.02551C123.564 7.01983 121.916 5.37231 119.911 5.37231H84.1667C82.161 5.37231 80.5135 7.01983 80.5135 9.02551V51.7893C80.5135 53.795 82.161 55.4425 84.1667 55.4425ZM81.2298 9.02551C81.2298 7.37799 82.5908 6.08863 84.1667 6.08863H119.911C121.558 6.08863 122.848 7.44962 122.848 9.02551V51.7893C122.848 53.4369 121.487 54.7262 119.911 54.7262H84.1667C82.5192 54.7262 81.2298 53.3652 81.2298 51.7893V9.02551Z",
                    fill: "red"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M73.9234 99.7822H73.5653C65.7575 99.7822 59.3107 93.3354 59.3107 85.5276V73.5652C59.3107 65.7574 65.7575 59.3106 73.5653 59.3106H73.9234C81.7312 59.3106 88.178 65.7574 88.178 73.5652V85.5276C88.178 93.4071 81.8029 99.7822 73.9234 99.7822Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M73.0638 100.713H74.4964C82.5908 100.713 89.1092 94.1234 89.1092 86.1007V73.0638C89.1092 65.0411 82.5908 58.451 74.4964 58.451H73.0638C65.0411 58.451 58.451 64.9695 58.451 73.0638V86.1007C58.451 94.1234 64.9695 100.713 73.0638 100.713ZM60.6 72.9922C60.6 66.1156 66.1872 60.5283 73.0638 60.5283H74.4964C81.373 60.5283 86.9603 66.1156 86.9603 72.9922V86.029C86.9603 92.9056 81.373 98.4929 74.4964 98.4929H73.0638C66.1872 98.4929 60.6 92.9056 60.6 86.029V72.9922Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    d: "M73.9234 77.5766C73.1355 77.5766 72.4908 76.9319 72.4908 76.1439V71.9177C72.4908 71.1298 73.1355 70.4851 73.9234 70.4851C74.7114 70.4851 75.356 71.1298 75.356 71.9177V76.1439C75.2844 76.9319 74.7114 77.5766 73.9234 77.5766Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M84.5965 58.451C85.0979 58.451 85.5277 58.0213 85.5277 57.5198V50.3567C85.5277 49.8553 85.0979 49.4255 84.5965 49.4255C84.0951 49.4255 83.6653 49.8553 83.6653 50.3567V57.5198C83.6653 58.0213 84.0951 58.451 84.5965 58.451Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M89.9688 64.3964C89.9688 64.8978 90.3986 65.3276 90.9 65.3276H98.0631C98.5646 65.3276 98.9943 64.8978 98.9943 64.3964C98.9943 63.895 98.5646 63.4652 98.0631 63.4652H90.9C90.3986 63.3936 89.9688 63.8234 89.9688 64.3964Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    d: "M87.8199 60.6716C88.1781 61.0298 88.8227 61.0298 89.1809 60.6716L95.4844 54.3681C95.8426 54.0099 95.8426 53.3652 95.4844 53.0071C95.1263 52.6489 94.4816 52.6489 94.1234 53.0071L87.8199 59.3106C87.3901 59.6688 87.3901 60.2418 87.8199 60.6716Z"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M110.312 10.1H86.0291C85.5277 10.1 85.0979 10.5298 85.0979 11.0312C85.0979 11.5326 85.5277 11.9624 86.0291 11.9624H110.312C110.814 11.9624 111.243 11.5326 111.243 11.0312C111.243 10.5298 110.814 10.1 110.312 10.1Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M93.5504 17.3347H86.0291C85.5277 17.3347 85.0979 17.7645 85.0979 18.2659C85.0979 18.7673 85.5277 19.1971 86.0291 19.1971H93.5504C94.0518 19.1971 94.4816 18.7673 94.4816 18.2659C94.4816 17.7645 94.0518 17.3347 93.5504 17.3347Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M101.072 24.5695H86.0291C85.5277 24.5695 85.0979 24.9993 85.0979 25.5007C85.0979 26.0021 85.5277 26.4319 86.0291 26.4319H101.072C101.573 26.4319 102.003 26.0021 102.003 25.5007C102.074 24.9993 101.645 24.5695 101.072 24.5695Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M98.3496 31.8042H85.9575C85.456 31.8042 85.0262 32.234 85.0262 32.7354C85.0262 33.2369 85.456 33.6666 85.9575 33.6666H98.3496C98.8511 33.6666 99.2809 33.2369 99.2809 32.7354C99.3525 32.234 98.9227 31.8042 98.3496 31.8042Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M110.885 39.039H86.0291C85.5277 39.039 85.0979 39.4688 85.0979 39.9702C85.0979 40.4716 85.5277 40.9014 86.0291 40.9014H110.885C111.387 40.9014 111.816 40.4716 111.816 39.9702C111.816 39.4688 111.387 39.039 110.885 39.039Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                attrs: {
                    d: "M104.94 47.5631H86.0291C85.5277 47.5631 85.0979 47.9929 85.0979 48.4943C85.0979 48.9957 85.5277 49.4255 86.0291 49.4255H104.94C105.441 49.4255 105.871 48.9957 105.871 48.4943C105.943 47.9929 105.513 47.5631 104.94 47.5631Z",
                    fill: "#E5E5E5"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-white",
                attrs: {
                    d: "M82.161 5.15742L82.0894 14.0397L84.4532 11.8191L88.0347 12.034L82.161 5.15742Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M81.5163 15.8305L81.4447 3.65317L89.3241 12.9652L84.5965 12.2489L81.5163 15.8305ZM82.5192 6.37515V13.1801L84.2383 11.1744L86.8887 11.6042L82.5192 6.37515Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    d: "M119.409 48.7092L118.192 49.9269C118.12 49.9986 117.977 49.9986 117.905 49.9269C117.833 49.8553 117.833 49.712 117.905 49.6404L119.123 48.4227C119.194 48.351 119.338 48.351 119.409 48.4227C119.481 48.4943 119.481 48.6376 119.409 48.7092Z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    d: "M119.123 48.7092L117.905 47.4915C117.833 47.4198 117.833 47.2766 117.905 47.2049C117.977 47.1333 118.12 47.1333 118.192 47.2049L119.409 48.4227C119.481 48.4943 119.481 48.6376 119.409 48.7092C119.338 48.7808 119.194 48.7808 119.123 48.7092Z"
                }
            }), e._v(" "), i("rect", {
                attrs: {
                    x: "81.0865",
                    y: "43.7666",
                    width: "41.9043",
                    height: "0.286525",
                    fill: "black"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const yc = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("g", {
                attrs: {
                    mask: "url(#mask0)"
                }
            }, [t("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M13.7372 6.40564C9.78899 6.40564 6.57638 9.61783 6.57638 13.566V21.0546C6.57638 25.0028 9.78899 28.2154 13.7372 28.2154H14.5709C18.5195 28.2154 21.7313 25.0028 21.7313 21.0546V13.566C21.7313 9.61783 18.5195 6.40564 14.5709 6.40564H13.7372ZM14.5709 29.4475H13.7372C9.10926 29.4475 5.34424 25.6825 5.34424 21.0546V13.566C5.34424 8.93851 9.10926 5.17349 13.7372 5.17349H14.5709C19.1989 5.17349 22.9635 8.93851 22.9635 13.566V21.0546C22.9635 25.6825 19.1989 29.4475 14.5709 29.4475Z"
                }
            })]), this._v(" "), t("path", {
                staticClass: "bimdata-fill-black",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M14.2313 16.1565C13.784 16.1565 13.4181 15.7905 13.4181 15.3433V12.9217C13.4181 12.474 13.784 12.1081 14.2313 12.1081C14.6786 12.1081 15.0449 12.474 15.0449 12.9217V15.3433C15.0449 15.7905 14.6786 16.1565 14.2313 16.1565Z"
                }
            }), this._v(" "), t("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M8.29078 5.22141C7.9889 5.22141 7.74207 4.97457 7.74207 4.6727V0.548714C7.74207 0.246839 7.9889 0 8.29078 0C8.59265 0 8.83949 0.246839 8.83949 0.548714V4.6727C8.83949 4.97457 8.59265 5.22141 8.29078 5.22141Z"
                }
            }), this._v(" "), t("g", {
                attrs: {
                    mask: "url(#mask1)"
                }
            }, [t("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M5.2217 8.60319C5.2217 8.90465 4.97486 9.15149 4.67299 9.15149H0.548592C0.247128 9.15149 -0.00012207 8.90465 -0.00012207 8.60319C-0.00012207 8.30131 0.247128 8.05447 0.548592 8.05447H4.67299C4.97486 8.05447 5.2217 8.30131 5.2217 8.60319Z"
                }
            })]), this._v(" "), t("path", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M6.45781 6.463C6.24424 6.67657 5.89513 6.67657 5.68197 6.463L2.06112 2.84215C1.84795 2.62899 1.84795 2.27947 2.06112 2.06631C2.27469 1.85274 2.62379 1.85274 2.83737 2.06631L6.45781 5.68716C6.67138 5.90032 6.67138 6.24943 6.45781 6.463Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const wc = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M6.649 0L3.32426 2.82347L0 5.64695H3.09189V9.17581H10.2066V5.64695H13.298L9.97374 2.82347L6.649 0Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Mc = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-shortcuts-helper"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__title"
            }, [i("span", [e._v(e._s(e.$t("shortcuts-helper.title_modal")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__image"
            }, [i("BIMDataIcon", {
                staticClass: "icon-shortcut-rotate",
                attrs: {
                    "icon-name": "icon-shortcut-rotate",
                    width: "175",
                    height: "130",
                    x: "175",
                    y: "130"
                }
            }, [i("BIMDataShortcutRotateIllustration")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__text"
            }, [i("h3", [e._v(e._s(e.$t("shortcuts-helper.title_rotate")))]), e._v(" "), i("p", [e._v(e._s(e.$t("shortcuts-helper.text_rotate")))])])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__image"
            }, [i("BIMDataIcon", {
                staticClass: "icon-shortcut-zoom",
                attrs: {
                    "icon-name": "icon-shortcut-zoom",
                    width: "124",
                    height: "153",
                    x: "124",
                    y: "153"
                }
            }, [i("BIMDataShortcutZoomIllustration")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__text"
            }, [i("h3", [e._v(e._s(e.$t("shortcuts-helper.title_zoom")))]), e._v(" "), i("p", [e._v(e._s(e.$t("shortcuts-helper.text_zoom")))])])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__image"
            }, [i("BIMDataIcon", {
                staticClass: "shortcut-open-illustration",
                attrs: {
                    "icon-name": "shortcut-open-illustration",
                    width: "147",
                    height: "101",
                    x: "147",
                    y: "101"
                }
            }, [i("BIMDataShortcutOpenIllustration")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-left__element__text"
            }, [i("h3", [e._v(e._s(e.$t("shortcuts-helper.title_open")))]), e._v(" "), i("p", [e._v(e._s(e.$t("shortcuts-helper.text_open")))])])])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(0), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.fit_view")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(1), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("select_options.by_object")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(2), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("select_options.by_type")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(3), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.select_all")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(4), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.deselect_all")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(5), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.hide")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(6), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.select_similar")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(7), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.isolate")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(8), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.reintegrate")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(9), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("right_click.show_all")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(10), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_1")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(11), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_2")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(12), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_3")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(13), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_4")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(14), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_5")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [e._m(15), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_6")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [i("span", {
                staticClass: "maj"
            }, [i("BIMDataIcon", {
                staticClass: "icon-alt",
                attrs: {
                    "icon-name": "icon-alt",
                    width: "14",
                    height: "10",
                    x: "14",
                    y: "10"
                }
            }, [i("BIMDataAltIcon")], 1)], 1), e._v(" "), i("span", {
                staticClass: "more"
            }, [e._v("+")]), e._v(" "), i("div", {
                staticClass: "icon"
            }, [i("BIMDataIcon", {
                staticClass: "icon-click",
                attrs: {
                    "icon-name": "icon-click",
                    width: "23",
                    height: "30",
                    x: "23",
                    y: "30"
                }
            }, [i("BIMDataClickIllustration")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_pan")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [i("span", {
                staticClass: "alt"
            }, [e._v("alt")]), e._v(" "), i("span", {
                staticClass: "more"
            }, [e._v("+")]), e._v(" "), i("div", {
                staticClass: "icon"
            }, [i("BIMDataIcon", {
                staticClass: "icon-click",
                attrs: {
                    "icon-name": "icon-click",
                    width: "23",
                    height: "30",
                    x: "23",
                    y: "30"
                }
            }, [i("BIMDataClickIllustration")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_open")))])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element"
            }, [i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [i("span", {
                staticClass: "alt"
            }, [e._v("ctrl")]), e._v(" "), i("span", {
                staticClass: "more"
            }, [e._v("+")]), e._v(" "), i("div", {
                staticClass: "icon"
            }, [i("BIMDataIcon", {
                staticClass: "icon-click",
                attrs: {
                    "icon-name": "icon-click",
                    width: "23",
                    height: "30",
                    x: "23",
                    y: "30"
                }
            }, [i("BIMDataClickIllustration")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__text"
            }, [e._v(e._s(e.$t("shortcuts-helper.shortcut_multiselect")))])])])]), e._v(" "), i("div", {
                staticClass: "bimdata-shortcuts-helper__footer"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    width: "166px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [e._v(e._s(e.$t("shortcuts-helper.btn")))])], 1)])
        },
        staticRenderFns: [function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("F")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("O")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("T")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("C")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("V")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("H")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("Y")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("I")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("U")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("R")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("1")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("2")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("3")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("4")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("5")])])
        }, function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-shortcuts-helper__content-right__element__shortcut"
            }, [t("span", {
                staticClass: "letter"
            }, [this._v("6")])])
        }]
    }, (function(e) {
        e && e("data-v-34028cad_0", {
            source: ".bimdata-shortcuts-helper{height:100%;padding:36px;width:1028px;display:flex;flex-direction:column;justify-content:space-between;overflow:auto}.bimdata-shortcuts-helper__title{margin-bottom:calc(12px * 2);text-align:center}.bimdata-shortcuts-helper__title span{font-size:2em;font-weight:700}.bimdata-shortcuts-helper__content{display:flex}.bimdata-shortcuts-helper__content-left__element,.bimdata-shortcuts-helper__content-right__element{display:flex;align-items:center}.bimdata-shortcuts-helper__content-left{display:flex;flex-direction:column;justify-content:space-between}.bimdata-shortcuts-helper__content-left__element{width:633px}.bimdata-shortcuts-helper__content-left__element__image{width:194px;display:flex;align-items:center;justify-content:center}.bimdata-shortcuts-helper__content-left__element__text{width:70%;margin-left:calc(12px * 2)}.bimdata-shortcuts-helper__content-left__element__text h3{margin-bottom:12px;font-size:1.4285714286em;font-weight:700}.bimdata-shortcuts-helper__content-left__element__text p{width:85%;font-size:.8571428571em;line-height:18px}.bimdata-shortcuts-helper__content-right{width:315px}.bimdata-shortcuts-helper__content-right__element{margin-bottom:calc(12px / 2)}.bimdata-shortcuts-helper__content-right__element__shortcut{margin-right:calc(12px / 2);width:98px;display:flex;align-items:center;justify-content:flex-end;color:#616060}.bimdata-shortcuts-helper__content-right__element__shortcut .alt,.bimdata-shortcuts-helper__content-right__element__shortcut .letter,.bimdata-shortcuts-helper__content-right__element__shortcut .maj{margin-right:calc(12px / 2);height:25px;display:flex;align-items:center;justify-content:center;border-radius:5px;background-color:#f8f8f8}.bimdata-shortcuts-helper__content-right__element__shortcut .letter{width:25px}.bimdata-shortcuts-helper__content-right__element__shortcut .maj{padding-left:8px;width:49px;justify-content:flex-start}.bimdata-shortcuts-helper__content-right__element__shortcut .alt{width:34px}.bimdata-shortcuts-helper__content-right__element__shortcut .more{margin-right:calc(12px / 2);color:#2f374a;font-weight:700}.bimdata-shortcuts-helper__content-right__element__shortcut .icon{margin-right:calc(12px / 2)}.bimdata-shortcuts-helper__footer{margin-top:2rem;display:flex;align-items:center;justify-content:center}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataShortcutRotateIllustration: gc,
            BIMDataShortcutZoomIllustration: vc,
            BIMDataShortcutOpenIllustration: bc,
            BIMDataClickIllustration: yc,
            BIMDataAltIcon: wc,
            BIMDataButton: Ml
        },
        created() {
            Hl({
                fr: _c,
                en: mc
            }, this.$i18n)
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Ac = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("div", {
                staticClass: "bimdata-help-shortcuts",
                on: {
                    click: this.onClick
                }
            }, [this._v("?")])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-518147f7_0", {
            source: ".bimdata-help-shortcuts{width:23px;height:23px;background-color:#2f374a;color:#fff;border-radius:50%;display:flex;align-items:center;justify-content:center;cursor:pointer;font-size:.8571428571em}",
            map: void 0,
            media: void 0
        })
    }), {
        mounted() {
            localStorage.getItem("BIMDataViewer_helpShown") || (this.$plugins.modalManager.pushModal(Mc), localStorage.setItem("BIMDataViewer_helpShown", !0))
        },
        methods: {
            onClick() {
                this.$plugins.modalManager.pushModal(Mc)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const xc = gl({}, (function(e) {
        e && e("data-v-3cb81fd8_0", {
            source: ".bimdata-modal-manager{position:relative;width:100%;height:100%;background-color:rgba(30,30,30,.8);left:0;top:0;z-index:2;display:flex;align-items:center;justify-content:center}.bimdata-modal-manager__content{max-height:100%;margin:1rem 0;display:block;position:absolute;background-color:#fff;overflow:auto}",
            map: void 0,
            media: void 0
        })
    }), {
        data: () => ({
            modals: []
        }),
        computed: {
            modal() {
                return this.modals.length ? this.modals[0] : null
            }
        },
        render(e) {
            return this.modal ? e("div", {
                class: ["bimdata-modal-manager"],
                on: {
                    click: this.clearModal
                }
            }, [e("div", {
                class: ["bimdata-modal-manager__content"],
                on: {
                    click(e) {
                        e.stopPropagation()
                    }
                }
            }, [e(this.modal.component, {
                on: {
                    close: this.clearModal
                },
                props: {
                    ...this.modal.cfg.args
                }
            })])]) : null
        },
        created() {
            this.$store.commit("viewer/REGISTER_MODAL_MANAGER", this)
        },
        methods: {
            pushModal(e, t = {}) {
                this.modals.push({
                    component: e,
                    cfg: t
                })
            },
            clearModal() {
                this.modals.shift()
            }
        }
    }, void 0, void 0, void 0, !1, bl, void 0, void 0);
    class Cc {
        constructor(e, t) {
            this.items = e || [], this._lastUniqueId = (t || 0) + 1
        }
        addItem() {
            let e;
            if (2 === arguments.length) {
                const t = arguments[0];
                if (e = arguments[1], this.items[t]) throw "ID clash: '" + t + "'";
                return this.items[t] = e, t
            }
            for (e = arguments[0] || {};;) {
                const t = this._lastUniqueId++;
                if (!this.items[t]) return this.items[t] = e, t
            }
        }
        removeItem(e) {
            const t = this.items[e];
            return delete this.items[e], t
        }
    }
    const Pc = {
        build: {
            version: "0.8"
        },
        client: {
            browser: navigator && navigator.userAgent ? navigator.userAgent : "n/a"
        },
        components: {
            scenes: 0,
            models: 0,
            meshes: 0,
            objects: 0
        },
        memory: {
            meshes: 0,
            positions: 0,
            colors: 0,
            normals: 0,
            uvs: 0,
            indices: 0,
            textures: 0,
            transforms: 0,
            materials: 0,
            programs: 0
        },
        frame: {
            frameCount: 0,
            fps: 0,
            useProgram: 0,
            bindTexture: 0,
            bindArray: 0,
            drawElements: 0,
            drawArrays: 0,
            tasksRun: 0,
            tasksScheduled: 0
        }
    };
    var kc = [
        ["0", 10],
        ["A", 26],
        ["a", 26],
        ["_", 1],
        ["$", 1]
    ].map((function(e) {
        for (var t = [], i = e[0].charCodeAt(0), r = i + e[1], n = i; n < r; ++n) t.push(n);
        return String.fromCharCode.apply(null, t)
    })).join("");

    function Ec(e, t) {
        return (t && 4 !== t ? [0, 6] : [0, 6, 12, 18]).map((function(t) {
            return kc.substr(parseInt(e / (1 << t)) % 64, 1)
        })).reverse().join("")
    }
    const Ic = {
            xmlToJson: function e(t, i) {
                if (t.nodeType === t.TEXT_NODE) {
                    var r = t.nodeValue;
                    if (null === r.match(/^\s+$/)) return r
                } else if (t.nodeType === t.ELEMENT_NODE || t.nodeType === t.DOCUMENT_NODE) {
                    var n = {
                        type: t.nodeName,
                        children: []
                    };
                    if (t.nodeType === t.ELEMENT_NODE)
                        for (var s = 0; s < t.attributes.length; s++) {
                            var o = t.attributes[s];
                            n[i[o.nodeName] || o.nodeName] = o.nodeValue
                        }
                    for (var a = 0; a < t.childNodes.length; a++) {
                        (s = e(t.childNodes[a], i)) && n.children.push(s)
                    }
                    return n
                }
            },
            clone: function(e) {
                return JSON.parse(JSON.stringify(e))
            },
            compressGuid: function(e) {
                var t = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map((function(t) {
                    return parseInt(e.substr(t, 2), 16)
                }));
                return Ec(t[0], 2) + [1, 4, 7, 10, 13].map((function(e) {
                    return Ec((t[e] << 16) + (t[e + 1] << 8) + t[e + 2])
                })).join("")
            },
            findNodeOfType: function(e, t) {
                var i = [],
                    r = function(e) {
                        e.type === t && i.push(e), (e.children || []).forEach((function(e) {
                            r(e)
                        }))
                    };
                return r(e), i
            },
            timeout: function(e) {
                return new Promise((function(t, i) {
                    setTimeout(t, e)
                }))
            },
            httpRequest: function(e) {
                return new Promise((function(t, i) {
                    var r = new XMLHttpRequest;
                    r.open(e.method || "GET", e.url, !0), r.onload = function(n) {
                        console.log(e.url, r.readyState, r.status), 4 === r.readyState && (200 === r.status ? t(r.responseXML) : i(r.statusText))
                    }, r.send(null)
                }))
            },
            loadJSON: function(e, t, i) {
                var r = e => {};
                t = t || r, i = i || r;
                var n = new XMLHttpRequest;
                n.overrideMimeType("application/json"), n.open("GET", e, !0), n.addEventListener("load", (function(e) {
                    var r = e.target.response;
                    if (200 === this.status) {
                        var n;
                        try {
                            n = JSON.parse(r)
                        } catch (e) {
                            i(`utils.loadJSON(): Failed to parse JSON response - ${e}`)
                        }
                        t(n)
                    } else if (0 === this.status) {
                        console.warn("loadFile: HTTP Status 0 received.");
                        try {
                            t(JSON.parse(r))
                        } catch (e) {
                            i(`utils.loadJSON(): Failed to parse JSON response - ${e}`)
                        }
                    } else i(e)
                }), !1), n.addEventListener("error", (function(e) {
                    i(e)
                }), !1), n.send(null)
            },
            loadArraybuffer: function(e, t, i) {
                var r = e => {};
                t = t || r, i = i || r;
                const n = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (n) {
                    const e = !!n[2];
                    var s = n[3];
                    s = window.decodeURIComponent(s), e && (s = window.atob(s));
                    try {
                        const e = new ArrayBuffer(s.length),
                            i = new Uint8Array(e);
                        for (var o = 0; o < s.length; o++) i[o] = s.charCodeAt(o);
                        window.setTimeout((function() {
                            t(e)
                        }), 0)
                    } catch (e) {
                        window.setTimeout((function() {
                            i(e)
                        }), 0)
                    }
                } else {
                    const r = new XMLHttpRequest;
                    r.open("GET", e, !0), r.responseType = "arraybuffer", r.onreadystatechange = function() {
                        4 === r.readyState && (200 === r.status ? t(r.response) : i("loadArrayBuffer error : " + r.response))
                    }, r.send(null)
                }
            },
            queryString: function() {
                for (var e = {}, t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
                    var r = t[i].split("=");
                    if (void 0 === e[r[0]]) e[r[0]] = decodeURIComponent(r[1]);
                    else if ("string" == typeof e[r[0]]) {
                        var n = [e[r[0]], decodeURIComponent(r[1])];
                        e[r[0]] = n
                    } else e[r[0]].push(decodeURIComponent(r[1]))
                }
                return e
            }(),
            isArray: function(e) {
                return e && !e.propertyIsEnumerable("length") && "object" == typeof e && "number" == typeof e.length
            },
            isString: function(e) {
                return "string" == typeof e || e instanceof String
            },
            isNumeric: function(e) {
                return !isNaN(parseFloat(e)) && isFinite(e)
            },
            isID: function(e) {
                return Ic.isString(e) || Ic.isNumeric(e)
            },
            isSameComponent: function(e, t) {
                return !(!e || !t) && (Ic.isNumeric(e) || Ic.isString(e) ? `${e}` : e.id) === (Ic.isNumeric(t) || Ic.isString(t) ? `${t}` : t.id)
            },
            isFunction: function(e) {
                return "function" == typeof e
            },
            isObject: function(e) {
                const t = {}.constructor;
                return !!e && e.constructor === t
            },
            copy: function(e) {
                return Ic.apply(e, {})
            },
            apply: function(e, t) {
                for (const i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                return t
            },
            apply2: function(e, t) {
                for (const i in e) e.hasOwnProperty(i) && void 0 !== e[i] && null !== e[i] && (t[i] = e[i]);
                return t
            },
            applyIf: function(e, t) {
                for (const i in e) e.hasOwnProperty(i) && (void 0 !== t[i] && null !== t[i] || (t[i] = e[i]));
                return t
            },
            isEmptyObject: function(e) {
                for (const t in e)
                    if (e.hasOwnProperty(t)) return !1;
                return !0
            },
            inQuotes: function(e) {
                return Ic.isNumeric(e) ? `${e}` : `'${e}'`
            },
            concat: function(e, t) {
                const i = new e.constructor(e.length + t.length);
                return i.set(e), i.set(t, e.length), i
            },
            flattenParentChildHierarchy: function(e) {
                var t = [];
                return function e(i) {
                    i.id = i.uuid, delete i.oid, t.push(i);
                    var r = i.children;
                    if (r)
                        for (var n = 0, s = r.length; n < s; n++) {
                            r[n].parent = i.id, e(r[n])
                        }
                    i.children = []
                }(e), t
            }
        },
        Tc = {},
        Dc = new Cc,
        Sc = new class {
            constructor() {
                this._head = [], this._headLength = 0, this._tail = [], this._index = 0, this._length = 0
            }
            get length() {
                return this._length
            }
            shift() {
                if (this._index >= this._headLength) {
                    const e = this._head;
                    if (e.length = 0, this._head = this._tail, this._tail = e, this._index = 0, this._headLength = this._head.length, !this._headLength) return
                }
                const e = this._head[this._index];
                return this._index < 0 ? delete this._head[this._index++] : this._head[this._index++] = void 0, this._length--, e
            }
            push(e) {
                return this._length++, this._tail.push(e), this
            }
            unshift(e) {
                return this._head[--this._index] = e, this._length++, this
            }
        },
        Bc = {
            sceneId: null,
            time: null,
            startTime: null,
            prevTime: null,
            deltaTime: null
        },
        jc = [];
    let Lc, Rc = 0,
        Oc = 0;
    const Fc = new function() {
            this.version = "1.0.0", this.scenes = {}, this._superTypes = {}, this._addScene = function(e) {
                if (e.id) {
                    if (Fc.scenes[e.id]) return void console.error(`[ERROR] Scene ${Ic.inQuotes(e.id)} already exists`)
                } else e.id = Dc.addItem({});
                Fc.scenes[e.id] = e;
                const t = e.ticksPerOcclusionTest,
                    i = e.ticksPerRender;
                Tc[e.id] = {
                    ticksPerOcclusionTest: t,
                    occlusionTestCountdown: t,
                    ticksPerRender: i,
                    renderCountdown: i
                }, Pc.components.scenes++, e.once("destroyed", () => {
                    Dc.removeItem(e.id), delete Fc.scenes[e.id], delete Tc[e.id], Pc.components.scenes--
                })
            }, this.clear = function() {
                let e;
                for (const t in Fc.scenes) Fc.scenes.hasOwnProperty(t) && (e = Fc.scenes[t], "default.scene" === t ? e.clear() : (e.destroy(), delete Fc.scenes[e.id]))
            }, this.scheduleTask = function(e, t) {
                Sc.push(e), Sc.push(t)
            }, this.runTasks = function(e = -1) {
                let t, i, r = (new Date).getTime(),
                    n = 0;
                for (; Sc.length > 0 && (e < 0 || r < e);) t = Sc.shift(), i = Sc.shift(), i ? t.call(i) : t(), r = (new Date).getTime(), n++;
                return n
            }, this.getNumTasks = function() {
                return Sc.length
            }
        },
        Nc = function() {
            let e = Date.now();
            if (Rc > 0) {
                Lc = e - Rc;
                var t = 1e3 / Lc;
                Oc += t, jc.push(t), jc.length >= 30 && (Oc -= jc.shift()), Pc.frame.fps = Math.round(Oc / jc.length)
            }! function(e) {
                const t = Fc.runTasks(e + 10),
                    i = Fc.getNumTasks();
                Pc.frame.tasksRun = t, Pc.frame.tasksScheduled = i, Pc.frame.tasksBudget = 10
            }(e),
            function(e) {
                for (var t in Bc.time = e, Fc.scenes)
                    if (Fc.scenes.hasOwnProperty(t)) {
                        var i = Fc.scenes[t];
                        Bc.sceneId = t, Bc.startTime = i.startTime, Bc.deltaTime = null != Bc.prevTime ? Bc.time - Bc.prevTime : 0, i.fire("tick", Bc, !0)
                    } Bc.prevTime = e
            }(e),
            function() {
                const e = Fc.scenes;
                let t, i, r, n, s;
                for (s in e) e.hasOwnProperty(s) && (t = e[s], i = Tc[s], i || (i = Tc[s] = {}), r = t.ticksPerOcclusionTest, i.ticksPerOcclusionTest !== r && (i.ticksPerOcclusionTest = r, i.renderCountdown = r), 0 == --i.occlusionTestCountdown && (t.doOcclusionTest(), i.occlusionTestCountdown = r), n = t.ticksPerRender, i.ticksPerRender !== n && (i.ticksPerRender = n, i.renderCountdown = n), 0 == --i.renderCountdown && (t.render(!1), i.renderCountdown = n))
            }(), Rc = e, window.requestAnimationFrame(Nc)
        };
    window.requestAnimationFrame(Nc);
    const Uc = Float64Array,
        Hc = new Uc(16),
        Vc = new Uc(16),
        zc = new Uc(4),
        $c = {
            MIN_DOUBLE: -Number.MAX_SAFE_INTEGER,
            MAX_DOUBLE: Number.MAX_SAFE_INTEGER,
            DEGTORAD: .0174532925,
            RADTODEG: 57.295779513,
            vec2: e => new Uc(e || 2),
            vec3: e => new Uc(e || 3),
            vec4: e => new Uc(e || 4),
            mat3: e => new Uc(e || 9),
            mat3ToMat4: (e, t = new Uc(16)) => (t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = 0, t[4] = e[3], t[5] = e[4], t[6] = e[5], t[7] = 0, t[8] = e[6], t[9] = e[7], t[10] = e[8], t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t),
            mat4: e => new Uc(e || 16),
            mat4ToMat3(e, t) {},
            doublesToFloats(e, t, i) {
                const r = new Float32Array(2);
                for (let n = 0, s = e.length; n < s; n++) $c.splitDouble(e[n], r), t[n] = r[0], i[n] = r[1]
            },
            splitDouble(e, t) {
                const i = Float32Array.from([e])[0],
                    r = e - i;
                t[0] = i, t[1] = r
            },
            createUUID: (() => {
                const e = [];
                for (let t = 0; t < 256; t++) e[t] = (t < 16 ? "0" : "") + t.toString(16);
                return () => {
                    const t = 4294967295 * Math.random() | 0,
                        i = 4294967295 * Math.random() | 0,
                        r = 4294967295 * Math.random() | 0,
                        n = 4294967295 * Math.random() | 0;
                    return `${e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]}-${e[255&i]}${e[i>>8&255]}-${e[i>>16&15|64]}${e[i>>24&255]}-${e[63&r|128]}${e[r>>8&255]}-${e[r>>16&255]}${e[r>>24&255]}${e[255&n]}${e[n>>8&255]}${e[n>>16&255]}${e[n>>24&255]}`
                }
            })(),
            clamp: (e, t, i) => Math.max(t, Math.min(i, e)),
            fmod(e, t) {
                if (e < t) return console.error("math.fmod : Attempting to find modulus within negative range - would be infinite loop - ignoring"), e;
                for (; t <= e;) e -= t;
                return e
            },
            compareVec3: (e, t) => e[0] === t[0] && e[1] === t[1] && e[2] === t[2],
            negateVec3: (e, t) => (t || (t = e), t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t),
            negateVec4: (e, t) => (t || (t = e), t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = -e[3], t),
            addVec4: (e, t, i) => (i || (i = e), i[0] = e[0] + t[0], i[1] = e[1] + t[1], i[2] = e[2] + t[2], i[3] = e[3] + t[3], i),
            addVec4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] + t, i[1] = e[1] + t, i[2] = e[2] + t, i[3] = e[3] + t, i),
            addVec3: (e, t, i) => (i || (i = e), i[0] = e[0] + t[0], i[1] = e[1] + t[1], i[2] = e[2] + t[2], i),
            addVec3Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] + t, i[1] = e[1] + t, i[2] = e[2] + t, i),
            subVec4: (e, t, i) => (i || (i = e), i[0] = e[0] - t[0], i[1] = e[1] - t[1], i[2] = e[2] - t[2], i[3] = e[3] - t[3], i),
            subVec3: (e, t, i) => (i || (i = e), i[0] = e[0] - t[0], i[1] = e[1] - t[1], i[2] = e[2] - t[2], i),
            subVec2: (e, t, i) => (i || (i = e), i[0] = e[0] - t[0], i[1] = e[1] - t[1], i),
            geometricMeanVec2(...e) {
                const t = new Uc(e[0]);
                for (let i = 1; i < e.length; i++) t[0] += e[i][0], t[1] += e[i][1];
                return t[0] /= e.length, t[1] /= e.length, t
            },
            subVec4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] - t, i[1] = e[1] - t, i[2] = e[2] - t, i[3] = e[3] - t, i),
            subScalarVec4: (e, t, i) => (i || (i = e), i[0] = t - e[0], i[1] = t - e[1], i[2] = t - e[2], i[3] = t - e[3], i),
            mulVec4: (e, t, i) => (i || (i = e), i[0] = e[0] * t[0], i[1] = e[1] * t[1], i[2] = e[2] * t[2], i[3] = e[3] * t[3], i),
            mulVec4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] * t, i[1] = e[1] * t, i[2] = e[2] * t, i[3] = e[3] * t, i),
            mulVec3Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] * t, i[1] = e[1] * t, i[2] = e[2] * t, i),
            mulVec2Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] * t, i[1] = e[1] * t, i),
            divVec3: (e, t, i) => (i || (i = e), i[0] = e[0] / t[0], i[1] = e[1] / t[1], i[2] = e[2] / t[2], i),
            divVec4: (e, t, i) => (i || (i = e), i[0] = e[0] / t[0], i[1] = e[1] / t[1], i[2] = e[2] / t[2], i[3] = e[3] / t[3], i),
            divScalarVec3: (e, t, i) => (i || (i = t), i[0] = e / t[0], i[1] = e / t[1], i[2] = e / t[2], i),
            divVec3Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] / t, i[1] = e[1] / t, i[2] = e[2] / t, i),
            divVec4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] / t, i[1] = e[1] / t, i[2] = e[2] / t, i[3] = e[3] / t, i),
            divScalarVec4: (e, t, i) => (i || (i = t), i[0] = e / t[0], i[1] = e / t[1], i[2] = e / t[2], i[3] = e / t[3], i),
            dotVec4: (e, t) => e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3],
            cross3Vec4(e, t) {
                const i = e[0],
                    r = e[1],
                    n = e[2],
                    s = t[0],
                    o = t[1],
                    a = t[2];
                return [r * a - n * o, n * s - i * a, i * o - r * s, 0]
            },
            cross3Vec3(e, t, i) {
                i || (i = e);
                const r = e[0],
                    n = e[1],
                    s = e[2],
                    o = t[0],
                    a = t[1],
                    l = t[2];
                return i[0] = n * l - s * a, i[1] = s * o - r * l, i[2] = r * a - n * o, i
            },
            sqLenVec4: e => $c.dotVec4(e, e),
            lenVec4: e => Math.sqrt($c.sqLenVec4(e)),
            dotVec3: (e, t) => e[0] * t[0] + e[1] * t[1] + e[2] * t[2],
            dotVec2: (e, t) => e[0] * t[0] + e[1] * t[1],
            sqLenVec3: e => $c.dotVec3(e, e),
            sqLenVec2: e => $c.dotVec2(e, e),
            lenVec3: e => Math.sqrt($c.sqLenVec3(e)),
            distVec3: (() => {
                const e = new Uc(3);
                return (t, i) => $c.lenVec3($c.subVec3(t, i, e))
            })(),
            lenVec2: e => Math.sqrt($c.sqLenVec2(e)),
            distVec2: (() => {
                const e = new Uc(2);
                return (t, i) => $c.lenVec2($c.subVec2(t, i, e))
            })(),
            rcpVec3: (e, t) => $c.divScalarVec3(1, e, t),
            normalizeVec4(e, t) {
                const i = 1 / $c.lenVec4(e);
                return $c.mulVec4Scalar(e, i, t)
            },
            normalizeVec3(e, t) {
                const i = 1 / $c.lenVec3(e);
                return $c.mulVec3Scalar(e, i, t)
            },
            normalizeVec2(e, t) {
                const i = 1 / $c.lenVec2(e);
                return $c.mulVec2Scalar(e, i, t)
            },
            angleVec3(e, t) {
                let i = $c.dotVec3(e, t) / Math.sqrt($c.sqLenVec3(e) * $c.sqLenVec3(t));
                return i = i < -1 ? -1 : i > 1 ? 1 : i, Math.acos(i)
            },
            vec3FromMat4Scale: (() => {
                const e = new Uc(3);
                return (t, i) => (e[0] = t[0], e[1] = t[1], e[2] = t[2], i[0] = $c.lenVec3(e), e[0] = t[4], e[1] = t[5], e[2] = t[6], i[1] = $c.lenVec3(e), e[0] = t[8], e[1] = t[9], e[2] = t[10], i[2] = $c.lenVec3(e), i)
            })(),
            vecToArray: (() => {
                function e(e) {
                    return Math.round(1e5 * e) / 1e5
                }
                return t => {
                    for (let i = 0, r = (t = Array.prototype.slice.call(t)).length; i < r; i++) t[i] = e(t[i]);
                    return t
                }
            })(),
            xyzArrayToObject: e => ({
                x: e[0],
                y: e[1],
                z: e[2]
            }),
            xyzObjectToArray: (e, t) => ((t = t || new Uc(3))[0] = e.x, t[1] = e.y, t[2] = e.z, t),
            dupMat4: e => e.slice(0, 16),
            mat4To3: e => [e[0], e[1], e[2], e[4], e[5], e[6], e[8], e[9], e[10]],
            m4s: e => [e, e, e, e, e, e, e, e, e, e, e, e, e, e, e, e],
            setMat4ToZeroes: () => $c.m4s(0),
            setMat4ToOnes: () => $c.m4s(1),
            diagonalMat4v: e => new Uc([e[0], 0, 0, 0, 0, e[1], 0, 0, 0, 0, e[2], 0, 0, 0, 0, e[3]]),
            diagonalMat4c: (e, t, i, r) => $c.diagonalMat4v([e, t, i, r]),
            diagonalMat4s: e => $c.diagonalMat4c(e, e, e, e),
            identityMat4: (e = new Uc(16)) => (e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e),
            identityMat3: (e = new Uc(9)) => (e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 1, e),
            isIdentityMat4: e => 1 === e[0] && 0 === e[1] && 0 === e[2] && 0 === e[3] && 0 === e[4] && 1 === e[5] && 0 === e[6] && 0 === e[7] && 0 === e[8] && 0 === e[9] && 1 === e[10] && 0 === e[11] && 0 === e[12] && 0 === e[13] && 0 === e[14] && 1 === e[15],
            negateMat4: (e, t) => (t || (t = e), t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = -e[3], t[4] = -e[4], t[5] = -e[5], t[6] = -e[6], t[7] = -e[7], t[8] = -e[8], t[9] = -e[9], t[10] = -e[10], t[11] = -e[11], t[12] = -e[12], t[13] = -e[13], t[14] = -e[14], t[15] = -e[15], t),
            addMat4: (e, t, i) => (i || (i = e), i[0] = e[0] + t[0], i[1] = e[1] + t[1], i[2] = e[2] + t[2], i[3] = e[3] + t[3], i[4] = e[4] + t[4], i[5] = e[5] + t[5], i[6] = e[6] + t[6], i[7] = e[7] + t[7], i[8] = e[8] + t[8], i[9] = e[9] + t[9], i[10] = e[10] + t[10], i[11] = e[11] + t[11], i[12] = e[12] + t[12], i[13] = e[13] + t[13], i[14] = e[14] + t[14], i[15] = e[15] + t[15], i),
            addMat4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] + t, i[1] = e[1] + t, i[2] = e[2] + t, i[3] = e[3] + t, i[4] = e[4] + t, i[5] = e[5] + t, i[6] = e[6] + t, i[7] = e[7] + t, i[8] = e[8] + t, i[9] = e[9] + t, i[10] = e[10] + t, i[11] = e[11] + t, i[12] = e[12] + t, i[13] = e[13] + t, i[14] = e[14] + t, i[15] = e[15] + t, i),
            addScalarMat4: (e, t, i) => $c.addMat4Scalar(t, e, i),
            subMat4: (e, t, i) => (i || (i = e), i[0] = e[0] - t[0], i[1] = e[1] - t[1], i[2] = e[2] - t[2], i[3] = e[3] - t[3], i[4] = e[4] - t[4], i[5] = e[5] - t[5], i[6] = e[6] - t[6], i[7] = e[7] - t[7], i[8] = e[8] - t[8], i[9] = e[9] - t[9], i[10] = e[10] - t[10], i[11] = e[11] - t[11], i[12] = e[12] - t[12], i[13] = e[13] - t[13], i[14] = e[14] - t[14], i[15] = e[15] - t[15], i),
            subMat4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] - t, i[1] = e[1] - t, i[2] = e[2] - t, i[3] = e[3] - t, i[4] = e[4] - t, i[5] = e[5] - t, i[6] = e[6] - t, i[7] = e[7] - t, i[8] = e[8] - t, i[9] = e[9] - t, i[10] = e[10] - t, i[11] = e[11] - t, i[12] = e[12] - t, i[13] = e[13] - t, i[14] = e[14] - t, i[15] = e[15] - t, i),
            subScalarMat4: (e, t, i) => (i || (i = t), i[0] = e - t[0], i[1] = e - t[1], i[2] = e - t[2], i[3] = e - t[3], i[4] = e - t[4], i[5] = e - t[5], i[6] = e - t[6], i[7] = e - t[7], i[8] = e - t[8], i[9] = e - t[9], i[10] = e - t[10], i[11] = e - t[11], i[12] = e - t[12], i[13] = e - t[13], i[14] = e - t[14], i[15] = e - t[15], i),
            mulMat4(e, t, i) {
                i || (i = e);
                const r = e[0],
                    n = e[1],
                    s = e[2],
                    o = e[3],
                    a = e[4],
                    l = e[5],
                    c = e[6],
                    h = e[7],
                    d = e[8],
                    u = e[9],
                    p = e[10],
                    f = e[11],
                    _ = e[12],
                    m = e[13],
                    g = e[14],
                    v = e[15],
                    b = t[0],
                    y = t[1],
                    w = t[2],
                    M = t[3],
                    A = t[4],
                    x = t[5],
                    C = t[6],
                    P = t[7],
                    k = t[8],
                    E = t[9],
                    I = t[10],
                    T = t[11],
                    D = t[12],
                    S = t[13],
                    B = t[14],
                    j = t[15];
                return i[0] = b * r + y * a + w * d + M * _, i[1] = b * n + y * l + w * u + M * m, i[2] = b * s + y * c + w * p + M * g, i[3] = b * o + y * h + w * f + M * v, i[4] = A * r + x * a + C * d + P * _, i[5] = A * n + x * l + C * u + P * m, i[6] = A * s + x * c + C * p + P * g, i[7] = A * o + x * h + C * f + P * v, i[8] = k * r + E * a + I * d + T * _, i[9] = k * n + E * l + I * u + T * m, i[10] = k * s + E * c + I * p + T * g, i[11] = k * o + E * h + I * f + T * v, i[12] = D * r + S * a + B * d + j * _, i[13] = D * n + S * l + B * u + j * m, i[14] = D * s + S * c + B * p + j * g, i[15] = D * o + S * h + B * f + j * v, i
            },
            mulMat3(e, t, i) {
                i || (i = new Uc(9));
                const r = e[0],
                    n = e[3],
                    s = e[6],
                    o = e[1],
                    a = e[4],
                    l = e[7],
                    c = e[2],
                    h = e[5],
                    d = e[8],
                    u = t[0],
                    p = t[3],
                    f = t[6],
                    _ = t[1],
                    m = t[4],
                    g = t[7],
                    v = t[2],
                    b = t[5],
                    y = t[8];
                return i[0] = r * u + n * _ + s * v, i[3] = r * p + n * m + s * b, i[6] = r * f + n * g + s * y, i[1] = o * u + a * _ + l * v, i[4] = o * p + a * m + l * b, i[7] = o * f + a * g + l * y, i[2] = c * u + h * _ + d * v, i[5] = c * p + h * m + d * b, i[8] = c * f + h * g + d * y, i
            },
            mulMat4Scalar: (e, t, i) => (i || (i = e), i[0] = e[0] * t, i[1] = e[1] * t, i[2] = e[2] * t, i[3] = e[3] * t, i[4] = e[4] * t, i[5] = e[5] * t, i[6] = e[6] * t, i[7] = e[7] * t, i[8] = e[8] * t, i[9] = e[9] * t, i[10] = e[10] * t, i[11] = e[11] * t, i[12] = e[12] * t, i[13] = e[13] * t, i[14] = e[14] * t, i[15] = e[15] * t, i),
            mulMat4v4(e, t, i = $c.vec4()) {
                const r = t[0],
                    n = t[1],
                    s = t[2],
                    o = t[3];
                return i[0] = e[0] * r + e[4] * n + e[8] * s + e[12] * o, i[1] = e[1] * r + e[5] * n + e[9] * s + e[13] * o, i[2] = e[2] * r + e[6] * n + e[10] * s + e[14] * o, i[3] = e[3] * r + e[7] * n + e[11] * s + e[15] * o, i
            },
            transposeMat4(e, t) {
                const i = e[4],
                    r = e[14],
                    n = e[8],
                    s = e[13],
                    o = e[12],
                    a = e[9];
                if (!t || e === t) {
                    const t = e[1],
                        l = e[2],
                        c = e[3],
                        h = e[6],
                        d = e[7],
                        u = e[11];
                    return e[1] = i, e[2] = n, e[3] = o, e[4] = t, e[6] = a, e[7] = s, e[8] = l, e[9] = h, e[11] = r, e[12] = c, e[13] = d, e[14] = u, e
                }
                return t[0] = e[0], t[1] = i, t[2] = n, t[3] = o, t[4] = e[1], t[5] = e[5], t[6] = a, t[7] = s, t[8] = e[2], t[9] = e[6], t[10] = e[10], t[11] = r, t[12] = e[3], t[13] = e[7], t[14] = e[11], t[15] = e[15], t
            },
            transposeMat3(e, t) {
                if (t === e) {
                    const i = e[1],
                        r = e[2],
                        n = e[5];
                    t[1] = e[3], t[2] = e[6], t[3] = i, t[5] = e[7], t[6] = r, t[7] = n
                } else t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8];
                return t
            },
            determinantMat4(e) {
                const t = e[0],
                    i = e[1],
                    r = e[2],
                    n = e[3],
                    s = e[4],
                    o = e[5],
                    a = e[6],
                    l = e[7],
                    c = e[8],
                    h = e[9],
                    d = e[10],
                    u = e[11],
                    p = e[12],
                    f = e[13],
                    _ = e[14],
                    m = e[15];
                return p * h * a * n - c * f * a * n - p * o * d * n + s * f * d * n + c * o * _ * n - s * h * _ * n - p * h * r * l + c * f * r * l + p * i * d * l - t * f * d * l - c * i * _ * l + t * h * _ * l + p * o * r * u - s * f * r * u - p * i * a * u + t * f * a * u + s * i * _ * u - t * o * _ * u - c * o * r * m + s * h * r * m + c * i * a * m - t * h * a * m - s * i * d * m + t * o * d * m
            },
            inverseMat4(e, t) {
                t || (t = e);
                const i = e[0],
                    r = e[1],
                    n = e[2],
                    s = e[3],
                    o = e[4],
                    a = e[5],
                    l = e[6],
                    c = e[7],
                    h = e[8],
                    d = e[9],
                    u = e[10],
                    p = e[11],
                    f = e[12],
                    _ = e[13],
                    m = e[14],
                    g = e[15],
                    v = i * a - r * o,
                    b = i * l - n * o,
                    y = i * c - s * o,
                    w = r * l - n * a,
                    M = r * c - s * a,
                    A = n * c - s * l,
                    x = h * _ - d * f,
                    C = h * m - u * f,
                    P = h * g - p * f,
                    k = d * m - u * _,
                    E = d * g - p * _,
                    I = u * g - p * m,
                    T = 1 / (v * I - b * E + y * k + w * P - M * C + A * x);
                return t[0] = (a * I - l * E + c * k) * T, t[1] = (-r * I + n * E - s * k) * T, t[2] = (_ * A - m * M + g * w) * T, t[3] = (-d * A + u * M - p * w) * T, t[4] = (-o * I + l * P - c * C) * T, t[5] = (i * I - n * P + s * C) * T, t[6] = (-f * A + m * y - g * b) * T, t[7] = (h * A - u * y + p * b) * T, t[8] = (o * E - a * P + c * x) * T, t[9] = (-i * E + r * P - s * x) * T, t[10] = (f * M - _ * y + g * v) * T, t[11] = (-h * M + d * y - p * v) * T, t[12] = (-o * k + a * C - l * x) * T, t[13] = (i * k - r * C + n * x) * T, t[14] = (-f * w + _ * b - m * v) * T, t[15] = (h * w - d * b + u * v) * T, t
            },
            traceMat4: e => e[0] + e[5] + e[10] + e[15],
            translationMat4v(e, t) {
                const i = t || $c.identityMat4();
                return i[12] = e[0], i[13] = e[1], i[14] = e[2], i
            },
            translationMat3v(e, t) {
                const i = t || $c.identityMat3();
                return i[6] = e[0], i[7] = e[1], i
            },
            translationMat4c: (() => {
                const e = new Uc(3);
                return (t, i, r, n) => (e[0] = t, e[1] = i, e[2] = r, $c.translationMat4v(e, n))
            })(),
            translationMat4s: (e, t) => $c.translationMat4c(e, e, e, t),
            translateMat4v: (e, t) => $c.translateMat4c(e[0], e[1], e[2], t),
            OLDtranslateMat4c(e, t, i, r) {
                const n = r[12];
                r[0] += n * e, r[4] += n * t, r[8] += n * i;
                const s = r[13];
                r[1] += s * e, r[5] += s * t, r[9] += s * i;
                const o = r[14];
                r[2] += o * e, r[6] += o * t, r[10] += o * i;
                const a = r[15];
                return r[3] += a * e, r[7] += a * t, r[11] += a * i, r
            },
            translateMat4c(e, t, i, r) {
                const n = r[3];
                r[0] += n * e, r[1] += n * t, r[2] += n * i;
                const s = r[7];
                r[4] += s * e, r[5] += s * t, r[6] += s * i;
                const o = r[11];
                r[8] += o * e, r[9] += o * t, r[10] += o * i;
                const a = r[15];
                return r[12] += a * e, r[13] += a * t, r[14] += a * i, r
            },
            setMat4Translation: (e, t, i) => (i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], i[4] = e[4], i[5] = e[5], i[6] = e[6], i[7] = e[7], i[8] = e[8], i[9] = e[9], i[10] = e[10], i[11] = e[11], i[12] = t[0], i[13] = t[1], i[14] = t[2], i[15] = e[15], i),
            rotationMat4v(e, t, i) {
                const r = $c.normalizeVec4([t[0], t[1], t[2], 0], []),
                    n = Math.sin(e),
                    s = Math.cos(e),
                    o = 1 - s,
                    a = r[0],
                    l = r[1],
                    c = r[2];
                let h, d, u, p, f, _;
                return h = a * l, d = l * c, u = c * a, p = a * n, f = l * n, _ = c * n, (i = i || $c.mat4())[0] = o * a * a + s, i[1] = o * h + _, i[2] = o * u - f, i[3] = 0, i[4] = o * h - _, i[5] = o * l * l + s, i[6] = o * d + p, i[7] = 0, i[8] = o * u + f, i[9] = o * d - p, i[10] = o * c * c + s, i[11] = 0, i[12] = 0, i[13] = 0, i[14] = 0, i[15] = 1, i
            },
            rotationMat4c: (e, t, i, r, n) => $c.rotationMat4v(e, [t, i, r], n),
            scalingMat4v: (e, t = $c.identityMat4()) => (t[0] = e[0], t[5] = e[1], t[10] = e[2], t),
            scalingMat3v: (e, t = $c.identityMat3()) => (t[0] = e[0], t[4] = e[1], t),
            scalingMat4c: (() => {
                const e = new Uc(3);
                return (t, i, r, n) => (e[0] = t, e[1] = i, e[2] = r, $c.scalingMat4v(e, n))
            })(),
            scaleMat4c: (e, t, i, r) => (r[0] *= e, r[4] *= t, r[8] *= i, r[1] *= e, r[5] *= t, r[9] *= i, r[2] *= e, r[6] *= t, r[10] *= i, r[3] *= e, r[7] *= t, r[11] *= i, r),
            scaleMat4v(e, t) {
                const i = e[0],
                    r = e[1],
                    n = e[2];
                return t[0] *= i, t[4] *= r, t[8] *= n, t[1] *= i, t[5] *= r, t[9] *= n, t[2] *= i, t[6] *= r, t[10] *= n, t[3] *= i, t[7] *= r, t[11] *= n, t
            },
            scalingMat4s: e => $c.scalingMat4c(e, e, e),
            rotationTranslationMat4(e, t, i = $c.mat4()) {
                const r = e[0],
                    n = e[1],
                    s = e[2],
                    o = e[3],
                    a = r + r,
                    l = n + n,
                    c = s + s,
                    h = r * a,
                    d = r * l,
                    u = r * c,
                    p = n * l,
                    f = n * c,
                    _ = s * c,
                    m = o * a,
                    g = o * l,
                    v = o * c;
                return i[0] = 1 - (p + _), i[1] = d + v, i[2] = u - g, i[3] = 0, i[4] = d - v, i[5] = 1 - (h + _), i[6] = f + m, i[7] = 0, i[8] = u + g, i[9] = f - m, i[10] = 1 - (h + p), i[11] = 0, i[12] = t[0], i[13] = t[1], i[14] = t[2], i[15] = 1, i
            },
            mat4ToEuler(e, t, i = $c.vec4()) {
                const r = $c.clamp,
                    n = e[0],
                    s = e[4],
                    o = e[8],
                    a = e[1],
                    l = e[5],
                    c = e[9],
                    h = e[2],
                    d = e[6],
                    u = e[10];
                return "XYZ" === t ? (i[1] = Math.asin(r(o, -1, 1)), Math.abs(o) < .99999 ? (i[0] = Math.atan2(-c, u), i[2] = Math.atan2(-s, n)) : (i[0] = Math.atan2(d, l), i[2] = 0)) : "YXZ" === t ? (i[0] = Math.asin(-r(c, -1, 1)), Math.abs(c) < .99999 ? (i[1] = Math.atan2(o, u), i[2] = Math.atan2(a, l)) : (i[1] = Math.atan2(-h, n), i[2] = 0)) : "ZXY" === t ? (i[0] = Math.asin(r(d, -1, 1)), Math.abs(d) < .99999 ? (i[1] = Math.atan2(-h, u), i[2] = Math.atan2(-s, l)) : (i[1] = 0, i[2] = Math.atan2(a, n))) : "ZYX" === t ? (i[1] = Math.asin(-r(h, -1, 1)), Math.abs(h) < .99999 ? (i[0] = Math.atan2(d, u), i[2] = Math.atan2(a, n)) : (i[0] = 0, i[2] = Math.atan2(-s, l))) : "YZX" === t ? (i[2] = Math.asin(r(a, -1, 1)), Math.abs(a) < .99999 ? (i[0] = Math.atan2(-c, l), i[1] = Math.atan2(-h, n)) : (i[0] = 0, i[1] = Math.atan2(o, u))) : "XZY" === t && (i[2] = Math.asin(-r(s, -1, 1)), Math.abs(s) < .99999 ? (i[0] = Math.atan2(d, l), i[1] = Math.atan2(o, n)) : (i[0] = Math.atan2(-c, u), i[1] = 0)), i
            },
            composeMat4: (e, t, i, r = $c.mat4()) => ($c.quaternionToRotationMat4(t, r), $c.scaleMat4v(i, r), $c.translateMat4v(e, r), r),
            decomposeMat4: (() => {
                const e = new Uc(3),
                    t = new Uc(16);
                return function(i, r, n, s) {
                    e[0] = i[0], e[1] = i[1], e[2] = i[2];
                    let o = $c.lenVec3(e);
                    e[0] = i[4], e[1] = i[5], e[2] = i[6];
                    const a = $c.lenVec3(e);
                    e[8] = i[8], e[9] = i[9], e[10] = i[10];
                    const l = $c.lenVec3(e);
                    $c.determinantMat4(i) < 0 && (o = -o), r[0] = i[12], r[1] = i[13], r[2] = i[14], t.set(i);
                    const c = 1 / o,
                        h = 1 / a,
                        d = 1 / l;
                    return t[0] *= c, t[1] *= c, t[2] *= c, t[4] *= h, t[5] *= h, t[6] *= h, t[8] *= d, t[9] *= d, t[10] *= d, $c.mat4ToQuaternion(t, n), s[0] = o, s[1] = a, s[2] = l, this
                }
            })(),
            getColMat4(e, t) {
                const i = 4 * t;
                return [e[i], e[i + 1], e[i + 2], e[i + 3]]
            },
            setRowMat4(e, t, i) {
                e[t] = i[0], e[t + 4] = i[1], e[t + 8] = i[2], e[t + 12] = i[3]
            },
            lookAtMat4v(e, t, i, r) {
                r || (r = $c.mat4());
                const n = e[0],
                    s = e[1],
                    o = e[2],
                    a = i[0],
                    l = i[1],
                    c = i[2],
                    h = t[0],
                    d = t[1],
                    u = t[2];
                if (n === h && s === d && o === u) return $c.identityMat4();
                let p, f, _, m, g, v, b, y, w, M;
                return p = n - h, f = s - d, _ = o - u, M = 1 / Math.sqrt(p * p + f * f + _ * _), p *= M, f *= M, _ *= M, m = l * _ - c * f, g = c * p - a * _, v = a * f - l * p, M = Math.sqrt(m * m + g * g + v * v), M ? (M = 1 / M, m *= M, g *= M, v *= M) : (m = 0, g = 0, v = 0), b = f * v - _ * g, y = _ * m - p * v, w = p * g - f * m, M = Math.sqrt(b * b + y * y + w * w), M ? (M = 1 / M, b *= M, y *= M, w *= M) : (b = 0, y = 0, w = 0), r[0] = m, r[1] = b, r[2] = p, r[3] = 0, r[4] = g, r[5] = y, r[6] = f, r[7] = 0, r[8] = v, r[9] = w, r[10] = _, r[11] = 0, r[12] = -(m * n + g * s + v * o), r[13] = -(b * n + y * s + w * o), r[14] = -(p * n + f * s + _ * o), r[15] = 1, r
            },
            lookAtMat4c: (e, t, i, r, n, s, o, a, l) => $c.lookAtMat4v([e, t, i], [r, n, s], [o, a, l], []),
            orthoMat4c(e, t, i, r, n, s, o) {
                o || (o = $c.mat4());
                const a = t - e,
                    l = r - i,
                    c = s - n;
                return o[0] = 2 / a, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = 2 / l, o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = -2 / c, o[11] = 0, o[12] = -(e + t) / a, o[13] = -(r + i) / l, o[14] = -(s + n) / c, o[15] = 1, o
            },
            frustumMat4v(e, t, i) {
                i || (i = $c.mat4());
                const r = [e[0], e[1], e[2], 0],
                    n = [t[0], t[1], t[2], 0];
                $c.addVec4(n, r, Hc), $c.subVec4(n, r, Vc);
                const s = 2 * r[2],
                    o = Vc[0],
                    a = Vc[1],
                    l = Vc[2];
                return i[0] = s / o, i[1] = 0, i[2] = 0, i[3] = 0, i[4] = 0, i[5] = s / a, i[6] = 0, i[7] = 0, i[8] = Hc[0] / o, i[9] = Hc[1] / a, i[10] = -Hc[2] / l, i[11] = -1, i[12] = 0, i[13] = 0, i[14] = -s * n[2] / l, i[15] = 0, i
            },
            frustumMat4(e, t, i, r, n, s, o) {
                o || (o = $c.mat4());
                const a = t - e,
                    l = r - i,
                    c = s - n;
                return o[0] = 2 * n / a, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = 2 * n / l, o[6] = 0, o[7] = 0, o[8] = (t + e) / a, o[9] = (r + i) / l, o[10] = -(s + n) / c, o[11] = -1, o[12] = 0, o[13] = 0, o[14] = -s * n * 2 / c, o[15] = 0, o
            },
            perspectiveMat4(e, t, i, r, n) {
                const s = [],
                    o = [];
                return s[2] = i, o[2] = r, o[1] = s[2] * Math.tan(e / 2), s[1] = -o[1], o[0] = o[1] * t, s[0] = -o[0], $c.frustumMat4v(s, o, n)
            },
            compareMat4: (e, t) => e[0] === t[0] && e[1] === t[1] && e[2] === t[2] && e[3] === t[3] && e[4] === t[4] && e[5] === t[5] && e[6] === t[6] && e[7] === t[7] && e[8] === t[8] && e[9] === t[9] && e[10] === t[10] && e[11] === t[11] && e[12] === t[12] && e[13] === t[13] && e[14] === t[14] && e[15] === t[15],
            transformPoint3(e, t, i = $c.vec3()) {
                const r = t[0],
                    n = t[1],
                    s = t[2];
                return i[0] = e[0] * r + e[4] * n + e[8] * s + e[12], i[1] = e[1] * r + e[5] * n + e[9] * s + e[13], i[2] = e[2] * r + e[6] * n + e[10] * s + e[14], i
            },
            transformPoint4: (e, t, i = $c.vec4()) => (i[0] = e[0] * t[0] + e[4] * t[1] + e[8] * t[2] + e[12] * t[3], i[1] = e[1] * t[0] + e[5] * t[1] + e[9] * t[2] + e[13] * t[3], i[2] = e[2] * t[0] + e[6] * t[1] + e[10] * t[2] + e[14] * t[3], i[3] = e[3] * t[0] + e[7] * t[1] + e[11] * t[2] + e[15] * t[3], i),
            transformPoints3(e, t, i) {
                const r = i || [],
                    n = t.length;
                let s, o, a, l;
                const c = e[0],
                    h = e[1],
                    d = e[2],
                    u = e[3],
                    p = e[4],
                    f = e[5],
                    _ = e[6],
                    m = e[7],
                    g = e[8],
                    v = e[9],
                    b = e[10],
                    y = e[11],
                    w = e[12],
                    M = e[13],
                    A = e[14],
                    x = e[15];
                let C;
                for (let e = 0; e < n; ++e) l = t[e], s = l[0], o = l[1], a = l[2], C = r[e] || (r[e] = [0, 0, 0]), C[0] = c * s + p * o + g * a + w, C[1] = h * s + f * o + v * a + M, C[2] = d * s + _ * o + b * a + A, C[3] = u * s + m * o + y * a + x;
                return r.length = n, r
            },
            transformPositions3(e, t, i = t) {
                let r;
                const n = t.length;
                let s, o, a;
                const l = e[0],
                    c = e[1],
                    h = e[2],
                    d = e[3],
                    u = e[4],
                    p = e[5],
                    f = e[6],
                    _ = e[7],
                    m = e[8],
                    g = e[9],
                    v = e[10],
                    b = e[11],
                    y = e[12],
                    w = e[13],
                    M = e[14],
                    A = e[15];
                for (r = 0; r < n; r += 3) s = t[r + 0], o = t[r + 1], a = t[r + 2], i[r + 0] = l * s + u * o + m * a + y, i[r + 1] = c * s + p * o + g * a + w, i[r + 2] = h * s + f * o + v * a + M, i[r + 3] = d * s + _ * o + b * a + A;
                return i
            },
            transformPositions4(e, t, i = t) {
                let r;
                const n = t.length;
                let s, o, a;
                const l = e[0],
                    c = e[1],
                    h = e[2],
                    d = e[3],
                    u = e[4],
                    p = e[5],
                    f = e[6],
                    _ = e[7],
                    m = e[8],
                    g = e[9],
                    v = e[10],
                    b = e[11],
                    y = e[12],
                    w = e[13],
                    M = e[14],
                    A = e[15];
                for (r = 0; r < n; r += 4) s = t[r + 0], o = t[r + 1], a = t[r + 2], i[r + 0] = l * s + u * o + m * a + y, i[r + 1] = c * s + p * o + g * a + w, i[r + 2] = h * s + f * o + v * a + M, i[r + 3] = d * s + _ * o + b * a + A;
                return i
            },
            transformVec3(e, t, i) {
                const r = t[0],
                    n = t[1],
                    s = t[2];
                return (i = i || this.vec3())[0] = e[0] * r + e[4] * n + e[8] * s, i[1] = e[1] * r + e[5] * n + e[9] * s, i[2] = e[2] * r + e[6] * n + e[10] * s, i
            },
            transformVec4(e, t, i) {
                const r = t[0],
                    n = t[1],
                    s = t[2],
                    o = t[3];
                return (i = i || $c.vec4())[0] = e[0] * r + e[4] * n + e[8] * s + e[12] * o, i[1] = e[1] * r + e[5] * n + e[9] * s + e[13] * o, i[2] = e[2] * r + e[6] * n + e[10] * s + e[14] * o, i[3] = e[3] * r + e[7] * n + e[11] * s + e[15] * o, i
            },
            rotateVec3X(e, t, i, r) {
                const n = [],
                    s = [];
                return n[0] = e[0] - t[0], n[1] = e[1] - t[1], n[2] = e[2] - t[2], s[0] = n[0], s[1] = n[1] * Math.cos(i) - n[2] * Math.sin(i), s[2] = n[1] * Math.sin(i) + n[2] * Math.cos(i), r[0] = s[0] + t[0], r[1] = s[1] + t[1], r[2] = s[2] + t[2], r
            },
            rotateVec3Y(e, t, i, r) {
                const n = [],
                    s = [];
                return n[0] = e[0] - t[0], n[1] = e[1] - t[1], n[2] = e[2] - t[2], s[0] = n[2] * Math.sin(i) + n[0] * Math.cos(i), s[1] = n[1], s[2] = n[2] * Math.cos(i) - n[0] * Math.sin(i), r[0] = s[0] + t[0], r[1] = s[1] + t[1], r[2] = s[2] + t[2], r
            },
            rotateVec3Z(e, t, i, r) {
                const n = [],
                    s = [];
                return n[0] = e[0] - t[0], n[1] = e[1] - t[1], n[2] = e[2] - t[2], s[0] = n[0] * Math.cos(i) - n[1] * Math.sin(i), s[1] = n[0] * Math.sin(i) + n[1] * Math.cos(i), s[2] = n[2], r[0] = s[0] + t[0], r[1] = s[1] + t[1], r[2] = s[2] + t[2], r
            },
            projectVec4(e, t) {
                const i = 1 / e[3];
                return (t = t || $c.vec2())[0] = e[0] * i, t[1] = e[1] * i, t
            },
            unprojectVec3: (() => {
                const e = new Uc(16),
                    t = new Uc(16),
                    i = new Uc(16);
                return function(r, n, s, o) {
                    return this.transformVec3(this.mulMat4(this.inverseMat4(n, e), this.inverseMat4(s, t), i), r, o)
                }
            })(),
            lerpVec3(e, t, i, r, n, s) {
                const o = s || $c.vec3(),
                    a = (e - t) / (i - t);
                return o[0] = r[0] + a * (n[0] - r[0]), o[1] = r[1] + a * (n[1] - r[1]), o[2] = r[2] + a * (n[2] - r[2]), o
            },
            lerpMat4(e, t, i, r, n, s) {
                const o = s || $c.mat4(),
                    a = (e - t) / (i - t);
                return o[0] = r[0] + a * (n[0] - r[0]), o[1] = r[1] + a * (n[1] - r[1]), o[2] = r[2] + a * (n[2] - r[2]), o[3] = r[3] + a * (n[3] - r[3]), o[4] = r[4] + a * (n[4] - r[4]), o[5] = r[5] + a * (n[5] - r[5]), o[6] = r[6] + a * (n[6] - r[6]), o[7] = r[7] + a * (n[7] - r[7]), o[8] = r[8] + a * (n[8] - r[8]), o[9] = r[9] + a * (n[9] - r[9]), o[10] = r[10] + a * (n[10] - r[10]), o[11] = r[11] + a * (n[11] - r[11]), o[12] = r[12] + a * (n[12] - r[12]), o[13] = r[13] + a * (n[13] - r[13]), o[14] = r[14] + a * (n[14] - r[14]), o[15] = r[15] + a * (n[15] - r[15]), o
            },
            flatten(e) {
                const t = [];
                let i, r, n, s, o;
                for (i = 0, r = e.length; i < r; i++)
                    for (o = e[i], n = 0, s = o.length; n < s; n++) t.push(o[n]);
                return t
            },
            identityQuaternion: (e = $c.vec4()) => (e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 1, e),
            eulerToQuaternion(e, t, i = $c.vec4()) {
                const r = e[0] * $c.DEGTORAD / 2,
                    n = e[1] * $c.DEGTORAD / 2,
                    s = e[2] * $c.DEGTORAD / 2,
                    o = Math.cos(r),
                    a = Math.cos(n),
                    l = Math.cos(s),
                    c = Math.sin(r),
                    h = Math.sin(n),
                    d = Math.sin(s);
                return "XYZ" === t ? (i[0] = c * a * l + o * h * d, i[1] = o * h * l - c * a * d, i[2] = o * a * d + c * h * l, i[3] = o * a * l - c * h * d) : "YXZ" === t ? (i[0] = c * a * l + o * h * d, i[1] = o * h * l - c * a * d, i[2] = o * a * d - c * h * l, i[3] = o * a * l + c * h * d) : "ZXY" === t ? (i[0] = c * a * l - o * h * d, i[1] = o * h * l + c * a * d, i[2] = o * a * d + c * h * l, i[3] = o * a * l - c * h * d) : "ZYX" === t ? (i[0] = c * a * l - o * h * d, i[1] = o * h * l + c * a * d, i[2] = o * a * d - c * h * l, i[3] = o * a * l + c * h * d) : "YZX" === t ? (i[0] = c * a * l + o * h * d, i[1] = o * h * l + c * a * d, i[2] = o * a * d - c * h * l, i[3] = o * a * l - c * h * d) : "XZY" === t && (i[0] = c * a * l - o * h * d, i[1] = o * h * l - c * a * d, i[2] = o * a * d + c * h * l, i[3] = o * a * l + c * h * d), i
            },
            mat4ToQuaternion(e, t = $c.vec4()) {
                const i = e[0],
                    r = e[4],
                    n = e[8],
                    s = e[1],
                    o = e[5],
                    a = e[9],
                    l = e[2],
                    c = e[6],
                    h = e[10];
                let d;
                const u = i + o + h;
                return u > 0 ? (d = .5 / Math.sqrt(u + 1), t[3] = .25 / d, t[0] = (c - a) * d, t[1] = (n - l) * d, t[2] = (s - r) * d) : i > o && i > h ? (d = 2 * Math.sqrt(1 + i - o - h), t[3] = (c - a) / d, t[0] = .25 * d, t[1] = (r + s) / d, t[2] = (n + l) / d) : o > h ? (d = 2 * Math.sqrt(1 + o - i - h), t[3] = (n - l) / d, t[0] = (r + s) / d, t[1] = .25 * d, t[2] = (a + c) / d) : (d = 2 * Math.sqrt(1 + h - i - o), t[3] = (s - r) / d, t[0] = (n + l) / d, t[1] = (a + c) / d, t[2] = .25 * d), t
            },
            vec3PairToQuaternion(e, t, i = $c.vec4()) {
                const r = Math.sqrt($c.dotVec3(e, e) * $c.dotVec3(t, t));
                let n = r + $c.dotVec3(e, t);
                return n < 1e-8 * r ? (n = 0, Math.abs(e[0]) > Math.abs(e[2]) ? (i[0] = -e[1], i[1] = e[0], i[2] = 0) : (i[0] = 0, i[1] = -e[2], i[2] = e[1])) : $c.cross3Vec3(e, t, i), i[3] = n, $c.normalizeQuaternion(i)
            },
            angleAxisToQuaternion(e, t = $c.vec4()) {
                const i = e[3] / 2,
                    r = Math.sin(i);
                return t[0] = r * e[0], t[1] = r * e[1], t[2] = r * e[2], t[3] = Math.cos(i), t
            },
            quaternionToEuler: (() => {
                const e = new Uc(16);
                return (t, i, r) => (r = r || $c.vec3(), $c.quaternionToRotationMat4(t, e), $c.mat4ToEuler(e, i, r), r)
            })(),
            mulQuaternions(e, t, i = $c.vec4()) {
                const r = e[0],
                    n = e[1],
                    s = e[2],
                    o = e[3],
                    a = t[0],
                    l = t[1],
                    c = t[2],
                    h = t[3];
                return i[0] = o * a + r * h + n * c - s * l, i[1] = o * l + n * h + s * a - r * c, i[2] = o * c + s * h + r * l - n * a, i[3] = o * h - r * a - n * l - s * c, i
            },
            vec3ApplyQuaternion(e, t, i = $c.vec3()) {
                const r = t[0],
                    n = t[1],
                    s = t[2],
                    o = e[0],
                    a = e[1],
                    l = e[2],
                    c = e[3],
                    h = c * r + a * s - l * n,
                    d = c * n + l * r - o * s,
                    u = c * s + o * n - a * r,
                    p = -o * r - a * n - l * s;
                return i[0] = h * c + p * -o + d * -l - u * -a, i[1] = d * c + p * -a + u * -o - h * -l, i[2] = u * c + p * -l + h * -a - d * -o, i
            },
            quaternionToMat4(e, t) {
                t = $c.identityMat4(t);
                const i = e[0],
                    r = e[1],
                    n = e[2],
                    s = e[3],
                    o = 2 * i,
                    a = 2 * r,
                    l = 2 * n,
                    c = o * s,
                    h = a * s,
                    d = l * s,
                    u = o * i,
                    p = a * i,
                    f = l * i,
                    _ = a * r,
                    m = l * r,
                    g = l * n;
                return t[0] = 1 - (_ + g), t[1] = p + d, t[2] = f - h, t[4] = p - d, t[5] = 1 - (u + g), t[6] = m + c, t[8] = f + h, t[9] = m - c, t[10] = 1 - (u + _), t
            },
            quaternionToRotationMat4(e, t) {
                const i = e[0],
                    r = e[1],
                    n = e[2],
                    s = e[3],
                    o = i + i,
                    a = r + r,
                    l = n + n,
                    c = i * o,
                    h = i * a,
                    d = i * l,
                    u = r * a,
                    p = r * l,
                    f = n * l,
                    _ = s * o,
                    m = s * a,
                    g = s * l;
                return t[0] = 1 - (u + f), t[4] = h - g, t[8] = d + m, t[1] = h + g, t[5] = 1 - (c + f), t[9] = p - _, t[2] = d - m, t[6] = p + _, t[10] = 1 - (c + u), t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
            },
            normalizeQuaternion(e, t = e) {
                const i = $c.lenVec4([e[0], e[1], e[2], e[3]]);
                return t[0] = e[0] / i, t[1] = e[1] / i, t[2] = e[2] / i, t[3] = e[3] / i, t
            },
            conjugateQuaternion: (e, t = e) => (t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = e[3], t),
            inverseQuaternion: (e, t) => $c.normalizeQuaternion($c.conjugateQuaternion(e, t)),
            quaternionToAngleAxis(e, t = $c.vec4()) {
                const i = (e = $c.normalizeQuaternion(e, zc))[3],
                    r = 2 * Math.acos(i),
                    n = Math.sqrt(1 - i * i);
                return n < .001 ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = e[0] / n, t[1] = e[1] / n, t[2] = e[2] / n), t[3] = r, t
            },
            AABB3: e => new Uc(e || 6),
            AABB2: e => new Uc(e || 4),
            OBB3: e => new Uc(e || 32),
            OBB2: e => new Uc(e || 16),
            Sphere3: (e, t, i, r) => new Uc([e, t, i, r]),
            transformOBB3(e, t, i = t) {
                let r;
                const n = t.length;
                let s, o, a;
                const l = e[0],
                    c = e[1],
                    h = e[2],
                    d = e[3],
                    u = e[4],
                    p = e[5],
                    f = e[6],
                    _ = e[7],
                    m = e[8],
                    g = e[9],
                    v = e[10],
                    b = e[11],
                    y = e[12],
                    w = e[13],
                    M = e[14],
                    A = e[15];
                for (r = 0; r < n; r += 4) s = t[r + 0], o = t[r + 1], a = t[r + 2], i[r + 0] = l * s + u * o + m * a + y, i[r + 1] = c * s + p * o + g * a + w, i[r + 2] = h * s + f * o + v * a + M, i[r + 3] = d * s + _ * o + b * a + A;
                return i
            },
            containsAABB3: function(e, t) {
                return e[0] <= t[0] && t[3] <= e[3] && e[1] <= t[1] && t[4] <= e[4] && e[2] <= t[2] && t[5] <= e[5]
            },
            getAABB3Diag: (() => {
                const e = new Uc(3),
                    t = new Uc(3),
                    i = new Uc(3);
                return r => (e[0] = r[0], e[1] = r[1], e[2] = r[2], t[0] = r[3], t[1] = r[4], t[2] = r[5], $c.subVec3(t, e, i), Math.abs($c.lenVec3(i)))
            })(),
            getAABB3DiagPoint: (() => {
                const e = new Uc(3),
                    t = new Uc(3),
                    i = new Uc(3);
                return (r, n) => {
                    e[0] = r[0], e[1] = r[1], e[2] = r[2], t[0] = r[3], t[1] = r[4], t[2] = r[5];
                    const s = $c.subVec3(t, e, i),
                        o = n[0] - r[0],
                        a = r[3] - n[0],
                        l = n[1] - r[1],
                        c = r[4] - n[1],
                        h = n[2] - r[2],
                        d = r[5] - n[2];
                    return s[0] += o > a ? o : a, s[1] += l > c ? l : c, s[2] += h > d ? h : d, Math.abs($c.lenVec3(s))
                }
            })(),
            getAABB3Area: e => (e[3] - e[0]) * (e[4] - e[1]) * (e[5] - e[2]),
            getAABB3Center(e, t) {
                const i = t || $c.vec3();
                return i[0] = (e[0] + e[3]) / 2, i[1] = (e[1] + e[4]) / 2, i[2] = (e[2] + e[5]) / 2, i
            },
            getAABB2Center(e, t) {
                const i = t || $c.vec2();
                return i[0] = (e[2] + e[0]) / 2, i[1] = (e[3] + e[1]) / 2, i
            },
            collapseAABB3: (e = $c.AABB3()) => (e[0] = $c.MAX_DOUBLE, e[1] = $c.MAX_DOUBLE, e[2] = $c.MAX_DOUBLE, e[3] = $c.MIN_DOUBLE, e[4] = $c.MIN_DOUBLE, e[5] = $c.MIN_DOUBLE, e),
            AABB3ToOBB3: (e, t = $c.OBB3()) => (t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = 1, t[4] = e[3], t[5] = e[1], t[6] = e[2], t[7] = 1, t[8] = e[3], t[9] = e[4], t[10] = e[2], t[11] = 1, t[12] = e[0], t[13] = e[4], t[14] = e[2], t[15] = 1, t[16] = e[0], t[17] = e[1], t[18] = e[5], t[19] = 1, t[20] = e[3], t[21] = e[1], t[22] = e[5], t[23] = 1, t[24] = e[3], t[25] = e[4], t[26] = e[5], t[27] = 1, t[28] = e[0], t[29] = e[4], t[30] = e[5], t[31] = 1, t),
            positions3ToAABB3: (() => {
                const e = new Float32Array(3);
                return (t, i, r) => {
                    i = i || $c.AABB3();
                    let n, s, o, a = $c.MAX_DOUBLE,
                        l = $c.MAX_DOUBLE,
                        c = $c.MAX_DOUBLE,
                        h = $c.MIN_DOUBLE,
                        d = $c.MIN_DOUBLE,
                        u = $c.MIN_DOUBLE;
                    for (let i = 0, p = t.length; i < p; i += 3) r ? (e[0] = t[i + 0], e[1] = t[i + 1], e[2] = t[i + 2], $c.decompressPosition(e, r, e), n = e[0], s = e[1], o = e[2]) : (n = t[i + 0], s = t[i + 1], o = t[i + 2]), n < a && (a = n), s < l && (l = s), o < c && (c = o), n > h && (h = n), s > d && (d = s), o > u && (u = o);
                    return i[0] = a, i[1] = l, i[2] = c, i[3] = h, i[4] = d, i[5] = u, i
                }
            })(),
            OBB3ToAABB3(e, t = $c.AABB3()) {
                let i, r, n, s = $c.MAX_DOUBLE,
                    o = $c.MAX_DOUBLE,
                    a = $c.MAX_DOUBLE,
                    l = $c.MIN_DOUBLE,
                    c = $c.MIN_DOUBLE,
                    h = $c.MIN_DOUBLE;
                for (let t = 0, d = e.length; t < d; t += 4) i = e[t + 0], r = e[t + 1], n = e[t + 2], i < s && (s = i), r < o && (o = r), n < a && (a = n), i > l && (l = i), r > c && (c = r), n > h && (h = n);
                return t[0] = s, t[1] = o, t[2] = a, t[3] = l, t[4] = c, t[5] = h, t
            },
            points3ToAABB3(e, t = $c.AABB3()) {
                let i, r, n, s = $c.MAX_DOUBLE,
                    o = $c.MAX_DOUBLE,
                    a = $c.MAX_DOUBLE,
                    l = $c.MIN_DOUBLE,
                    c = $c.MIN_DOUBLE,
                    h = $c.MIN_DOUBLE;
                for (let t = 0, d = e.length; t < d; t++) i = e[t][0], r = e[t][1], n = e[t][2], i < s && (s = i), r < o && (o = r), n < a && (a = n), i > l && (l = i), r > c && (c = r), n > h && (h = n);
                return t[0] = s, t[1] = o, t[2] = a, t[3] = l, t[4] = c, t[5] = h, t
            },
            points3ToSphere3: (() => {
                const e = new Float32Array(3);
                return (t, i) => {
                    i = i || $c.vec4();
                    let r, n = 0,
                        s = 0,
                        o = 0;
                    const a = t.length;
                    for (r = 0; r < a; r++) n += t[r][0], s += t[r][1], o += t[r][2];
                    i[0] = n / a, i[1] = s / a, i[2] = o / a;
                    let l, c = 0;
                    for (r = 0; r < a; r++) l = Math.abs($c.lenVec3($c.subVec3(t[r], i, e))), l > c && (c = l);
                    return i[3] = c, i
                }
            })(),
            positions3ToSphere3: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3);
                return (i, r) => {
                    r = r || $c.vec4();
                    let n, s = 0,
                        o = 0,
                        a = 0;
                    const l = i.length;
                    let c = 0;
                    for (n = 0; n < l; n += 3) s += i[n], o += i[n + 1], a += i[n + 2];
                    const h = l / 3;
                    let d;
                    for (r[0] = s / h, r[1] = o / h, r[2] = a / h, n = 0; n < l; n += 3) e[0] = i[n], e[1] = i[n + 1], e[2] = i[n + 2], d = Math.abs($c.lenVec3($c.subVec3(e, r, t))), d > c && (c = d);
                    return r[3] = c, r
                }
            })(),
            OBB3ToSphere3: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3);
                return (i, r) => {
                    r = r || $c.vec4();
                    let n, s = 0,
                        o = 0,
                        a = 0;
                    const l = i.length,
                        c = l / 4;
                    for (n = 0; n < l; n += 4) s += i[n + 0], o += i[n + 1], a += i[n + 2];
                    r[0] = s / c, r[1] = o / c, r[2] = a / c;
                    let h, d = 0;
                    for (n = 0; n < l; n += 4) e[0] = i[n + 0], e[1] = i[n + 1], e[2] = i[n + 2], h = Math.abs($c.lenVec3($c.subVec3(e, r, t))), h > d && (d = h);
                    return r[3] = d, r
                }
            })(),
            getSphere3Center: (e, t = $c.vec3()) => (t[0] = e[0], t[1] = e[1], t[2] = e[2], t),
            expandAABB3: (e, t) => (e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] > t[2] && (e[2] = t[2]), e[3] < t[3] && (e[3] = t[3]), e[4] < t[4] && (e[4] = t[4]), e[5] < t[5] && (e[5] = t[5]), e),
            expandAABB3Point3: (e, t) => (e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] > t[2] && (e[2] = t[2]), e[3] < t[0] && (e[3] = t[0]), e[4] < t[1] && (e[4] = t[1]), e[5] < t[2] && (e[5] = t[2]), e),
            expandAABB3Points3(e, t) {
                for (var i, r, n, s = 0, o = t.length; s < o; s += 3) i = t[s], r = t[s + 1], n = t[s + 2], e[0] > i && (e[0] = i), e[1] > r && (e[1] = r), e[2] > n && (e[2] = n), e[3] < i && (e[3] = i), e[4] < r && (e[4] = r), e[5] < n && (e[5] = n);
                return e
            },
            collapseAABB2: (e = $c.AABB2()) => (e[0] = $c.MAX_DOUBLE, e[1] = $c.MAX_DOUBLE, e[2] = $c.MIN_DOUBLE, e[3] = $c.MIN_DOUBLE, e),
            point3AABB3Intersect: (e, t) => e[0] > t[0] || e[3] < t[0] || e[1] > t[1] || e[4] < t[1] || e[2] > t[2] || e[5] < t[2],
            planeAABB3Intersect(e, t, i) {
                let r, n;
                return e[0] > 0 ? (r = e[0] * i[0], n = e[0] * i[3]) : (r = e[0] * i[3], n = e[0] * i[0]), e[1] > 0 ? (r += e[1] * i[1], n += e[1] * i[4]) : (r += e[1] * i[4], n += e[1] * i[1]), e[2] > 0 ? (r += e[2] * i[2], n += e[2] * i[5]) : (r += e[2] * i[5], n += e[2] * i[2]), r <= -t && n <= -t ? -1 : r >= -t && n >= -t ? 1 : 0
            },
            OBB3ToAABB2(e, t = $c.AABB2()) {
                let i, r, n, s, o = $c.MAX_DOUBLE,
                    a = $c.MAX_DOUBLE,
                    l = $c.MIN_DOUBLE,
                    c = $c.MIN_DOUBLE;
                for (let t = 0, h = e.length; t < h; t += 4) i = e[t + 0], r = e[t + 1], n = e[t + 3] || 1, s = 1 / n, i *= s, r *= s, i < o && (o = i), r < a && (a = r), i > l && (l = i), r > c && (c = r);
                return t[0] = o, t[1] = a, t[2] = l, t[3] = c, t
            },
            expandAABB2: (e, t) => (e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] < t[2] && (e[2] = t[2]), e[3] < t[3] && (e[3] = t[3]), e),
            expandAABB2Point2: (e, t) => (e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] < t[0] && (e[2] = t[0]), e[3] < t[1] && (e[3] = t[1]), e),
            AABB2ToCanvas(e, t, i, r = e) {
                const n = .5 * (e[0] + 1),
                    s = .5 * (e[1] + 1),
                    o = .5 * (e[2] + 1),
                    a = .5 * (e[3] + 1);
                return r[0] = Math.floor(n * t), r[1] = i - Math.floor(a * i), r[2] = Math.floor(o * t), r[3] = i - Math.floor(s * i), r
            },
            tangentQuadraticBezier: (e, t, i, r) => 2 * (1 - e) * (i - t) + 2 * e * (r - i),
            tangentQuadraticBezier3: (e, t, i, r, n) => -3 * t * (1 - e) * (1 - e) + 3 * i * (1 - e) * (1 - e) - 6 * e * i * (1 - e) + 6 * e * r * (1 - e) - 3 * e * e * r + 3 * e * e * n,
            tangentSpline: e => 6 * e * e - 6 * e + (3 * e * e - 4 * e + 1) + (-6 * e * e + 6 * e) + (3 * e * e - 2 * e),
            catmullRomInterpolate(e, t, i, r, n) {
                const s = .5 * (i - e),
                    o = .5 * (r - t),
                    a = n * n;
                return (2 * t - 2 * i + s + o) * (n * a) + (-3 * t + 3 * i - 2 * s - o) * a + s * n + t
            },
            b2p0(e, t) {
                const i = 1 - e;
                return i * i * t
            },
            b2p1: (e, t) => 2 * (1 - e) * e * t,
            b2p2: (e, t) => e * e * t,
            b2(e, t, i, r) {
                return this.b2p0(e, t) + this.b2p1(e, i) + this.b2p2(e, r)
            },
            b3p0(e, t) {
                const i = 1 - e;
                return i * i * i * t
            },
            b3p1(e, t) {
                const i = 1 - e;
                return 3 * i * i * e * t
            },
            b3p2: (e, t) => 3 * (1 - e) * e * e * t,
            b3p3: (e, t) => e * e * e * t,
            b3(e, t, i, r, n) {
                return this.b3p0(e, t) + this.b3p1(e, i) + this.b3p2(e, r) + this.b3p3(e, n)
            },
            triangleNormal(e, t, i, r = $c.vec3()) {
                const n = t[0] - e[0],
                    s = t[1] - e[1],
                    o = t[2] - e[2],
                    a = i[0] - e[0],
                    l = i[1] - e[1],
                    c = i[2] - e[2],
                    h = s * c - o * l,
                    d = o * a - n * c,
                    u = n * l - s * a,
                    p = Math.sqrt(h * h + d * d + u * u);
                return 0 === p ? (r[0] = 0, r[1] = 0, r[2] = 0) : (r[0] = h / p, r[1] = d / p, r[2] = u / p), r
            },
            rayTriangleIntersect: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3),
                    i = new Float32Array(3),
                    r = new Float32Array(3),
                    n = new Float32Array(3);
                return (s, o, a, l, c, h) => {
                    h = h || $c.vec3();
                    const d = $c.subVec3(l, a, e),
                        u = $c.subVec3(c, a, t),
                        p = $c.cross3Vec3(o, u, i),
                        f = $c.dotVec3(d, p);
                    if (f < 1e-6) return null;
                    const _ = $c.subVec3(s, a, r),
                        m = $c.dotVec3(_, p);
                    if (m < 0 || m > f) return null;
                    const g = $c.cross3Vec3(_, d, n),
                        v = $c.dotVec3(o, g);
                    if (v < 0 || m + v > f) return null;
                    const b = $c.dotVec3(u, g) / f;
                    return h[0] = s[0] + b * o[0], h[1] = s[1] + b * o[1], h[2] = s[2] + b * o[2], h
                }
            })(),
            rayPlaneIntersect: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3),
                    i = new Float32Array(3),
                    r = new Float32Array(3);
                return (n, s, o, a, l, c) => {
                    c = c || $c.vec3(), s = $c.normalizeVec3(s, e);
                    const h = $c.subVec3(a, o, t),
                        d = $c.subVec3(l, o, i),
                        u = $c.cross3Vec3(h, d, r);
                    $c.normalizeVec3(u, u);
                    const p = -$c.dotVec3(o, u),
                        f = -($c.dotVec3(n, u) + p) / $c.dotVec3(s, u);
                    return c[0] = n[0] + f * s[0], c[1] = n[1] + f * s[1], c[2] = n[2] + f * s[2], c
                }
            })(),
            cartesianToBarycentric: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3),
                    i = new Float32Array(3);
                return (r, n, s, o, a) => {
                    const l = $c.subVec3(o, n, e),
                        c = $c.subVec3(s, n, t),
                        h = $c.subVec3(r, n, i),
                        d = $c.dotVec3(l, l),
                        u = $c.dotVec3(l, c),
                        p = $c.dotVec3(l, h),
                        f = $c.dotVec3(c, c),
                        _ = $c.dotVec3(c, h),
                        m = d * f - u * u;
                    if (0 === m) return null;
                    const g = 1 / m,
                        v = (f * p - u * _) * g,
                        b = (d * _ - u * p) * g;
                    return a[0] = 1 - v - b, a[1] = b, a[2] = v, a
                }
            })(),
            barycentricInsideTriangle(e) {
                const t = e[1],
                    i = e[2];
                return i >= 0 && t >= 0 && i + t < 1
            },
            barycentricToCartesian(e, t, i, r, n = $c.vec3()) {
                const s = e[0],
                    o = e[1],
                    a = e[2];
                return n[0] = t[0] * s + i[0] * o + r[0] * a, n[1] = t[1] * s + i[1] * o + r[1] * a, n[2] = t[2] * s + i[2] * o + r[2] * a, n
            },
            mergeVertices(e, t, i, r) {
                const n = {},
                    s = [],
                    o = [],
                    a = t ? [] : null,
                    l = i ? [] : null,
                    c = [];
                let h, d, u, p;
                let f, _, m = 0;
                for (f = 0, _ = e.length; f < _; f += 3) h = e[f], d = e[f + 1], u = e[f + 2], p = `${Math.round(1e4*h)}_${Math.round(1e4*d)}_${Math.round(1e4*u)}`, void 0 === n[p] && (n[p] = o.length / 3, o.push(h), o.push(d), o.push(u), t && (a.push(t[f]), a.push(t[f + 1]), a.push(t[f + 2])), i && (l.push(i[m]), l.push(i[m + 1]))), s[f / 3] = n[p], m += 2;
                for (f = 0, _ = r.length; f < _; f++) c[f] = s[r[f]];
                const g = {
                    positions: o,
                    indices: c
                };
                return a && (g.normals = a), l && (g.uv = l), g
            },
            buildNormals: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3),
                    i = new Float32Array(3),
                    r = new Float32Array(3),
                    n = new Float32Array(3),
                    s = new Float32Array(3);
                return (o, a, l) => {
                    let c, h;
                    const d = new Array(o.length / 3);
                    let u, p, f, _, m, g, v;
                    for (c = 0, h = a.length; c < h; c += 3) {
                        u = a[c], p = a[c + 1], f = a[c + 2], e[0] = o[3 * u], e[1] = o[3 * u + 1], e[2] = o[3 * u + 2], t[0] = o[3 * p], t[1] = o[3 * p + 1], t[2] = o[3 * p + 2], i[0] = o[3 * f], i[1] = o[3 * f + 1], i[2] = o[3 * f + 2], $c.subVec3(t, e, r), $c.subVec3(i, e, n);
                        const l = new Float32Array(3);
                        $c.normalizeVec3($c.cross3Vec3(r, n, s), l), d[u] || (d[u] = []), d[p] || (d[p] = []), d[f] || (d[f] = []), d[u].push(l), d[p].push(l), d[f].push(l)
                    }
                    for (l = l && l.length === o.length ? l : new Float32Array(o.length), c = 0, h = d.length; c < h; c++) {
                        _ = d[c].length, m = 0, g = 0, v = 0;
                        for (let e = 0; e < _; e++) m += d[c][e][0], g += d[c][e][1], v += d[c][e][2];
                        l[3 * c] = m / _, l[3 * c + 1] = g / _, l[3 * c + 2] = v / _
                    }
                    return l
                }
            })(),
            buildTangents: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3),
                    i = new Float32Array(3),
                    r = new Float32Array(3),
                    n = new Float32Array(3),
                    s = new Float32Array(3),
                    o = new Float32Array(3);
                return (a, l, c) => {
                    const h = new Float32Array(a.length);
                    for (let d = 0; d < l.length; d += 3) {
                        let u = l[d];
                        const p = a.subarray(3 * u, 3 * u + 3),
                            f = c.subarray(2 * u, 2 * u + 2);
                        u = l[d + 1];
                        const _ = a.subarray(3 * u, 3 * u + 3),
                            m = c.subarray(2 * u, 2 * u + 2);
                        u = l[d + 2];
                        const g = a.subarray(3 * u, 3 * u + 3),
                            v = c.subarray(2 * u, 2 * u + 2),
                            b = $c.subVec3(_, p, e),
                            y = $c.subVec3(g, p, t),
                            w = $c.subVec2(m, f, i),
                            M = $c.subVec2(v, f, r),
                            A = 1 / (w[0] * M[1] - w[1] * M[0]),
                            x = $c.mulVec3Scalar($c.subVec3($c.mulVec3Scalar(b, M[1], n), $c.mulVec3Scalar(y, w[1], s), o), A, s);
                        let C;
                        for (let e = 0; e < 3; e++) C = 3 * l[d + e], h[C] += x[0], h[C + 1] += x[1], h[C + 2] += x[2]
                    }
                    return h
                }
            })(),
            buildPickTriangles(e, t, i) {
                const r = t.length,
                    n = i ? new Uint16Array(9 * r) : new Float32Array(9 * r),
                    s = new Uint8Array(12 * r);
                let o, a, l, c, h, d, u = 0,
                    p = 0,
                    f = 0;
                for (let i = 0; i < r; i += 3) d = u >> 24 & 255, h = u >> 16 & 255, c = u >> 8 & 255, l = 255 & u, a = t[i], o = 3 * a, n[p++] = e[o], n[p++] = e[o + 1], n[p++] = e[o + 2], s[f++] = l, s[f++] = c, s[f++] = h, s[f++] = d, a = t[i + 1], o = 3 * a, n[p++] = e[o], n[p++] = e[o + 1], n[p++] = e[o + 2], s[f++] = l, s[f++] = c, s[f++] = h, s[f++] = d, a = t[i + 2], o = 3 * a, n[p++] = e[o], n[p++] = e[o + 1], n[p++] = e[o + 2], s[f++] = l, s[f++] = c, s[f++] = h, s[f++] = d, u++;
                return {
                    positions: n,
                    colors: s
                }
            },
            faceToVertexNormals(e, t, i = {}) {
                const r = i.smoothNormalsAngleThreshold || 20,
                    n = {},
                    s = [],
                    o = {};
                let a, l, c, h, d;
                let u, p, f, _, m, g;
                for (p = 0, _ = e.length; p < _; p += 3) {
                    u = p / 3, l = e[p], c = e[p + 1], h = e[p + 2], d = `${Math.round(1e4*l)}_${Math.round(1e4*c)}_${Math.round(1e4*h)}`, void 0 === n[d] ? n[d] = [u] : n[d].push(u);
                    const i = $c.normalizeVec3([t[p], t[p + 1], t[p + 2]]);
                    s[u] = i, a = $c.vec4([i[0], i[1], i[2], 1]), o[u] = a
                }
                for (d in n)
                    if (n.hasOwnProperty(d)) {
                        const e = n[d],
                            t = e.length;
                        for (p = 0; p < t; p++) {
                            const i = e[p];
                            for (a = o[i], f = 0; f < t; f++) {
                                if (p === f) continue;
                                const t = e[f];
                                m = s[i], g = s[t], Math.abs($c.angleVec3(m, g) / $c.DEGTORAD) < r && (a[0] += g[0], a[1] += g[1], a[2] += g[2], a[3] += 1)
                            }
                        }
                    } for (p = 0, _ = t.length; p < _; p += 3) a = o[p / 3], t[p + 0] = a[0] / a[3], t[p + 1] = a[1] / a[3], t[p + 2] = a[2] / a[3]
            },
            canvasPosToWorldRay: (() => {
                const e = new Float32Array(16),
                    t = new Float32Array(16),
                    i = new Float32Array(4),
                    r = new Float32Array(4),
                    n = new Float32Array(4),
                    s = new Float32Array(4);
                return (o, a, l, c, h, d) => {
                    const u = $c.mulMat4(l, a, e),
                        p = $c.inverseMat4(u, t),
                        f = o.width,
                        _ = o.height,
                        m = (c[0] - f / 2) / (f / 2),
                        g = -(c[1] - _ / 2) / (_ / 2);
                    i[0] = m, i[1] = g, i[2] = -1, i[3] = 1, $c.transformVec4(p, i, r), $c.mulVec4Scalar(r, 1 / r[3]), n[0] = m, n[1] = g, n[2] = 1, n[3] = 1, $c.transformVec4(p, n, s), $c.mulVec4Scalar(s, 1 / s[3]), h[0] = s[0], h[1] = s[1], h[2] = s[2], $c.subVec3(s, r, d), $c.normalizeVec3(d)
                }
            })(),
            canvasPosToLocalRay: (() => {
                const e = new Float32Array(3),
                    t = new Float32Array(3);
                return (i, r, n, s, o, a, l) => {
                    $c.canvasPosToWorldRay(i, r, n, o, e, t), $c.worldRayToLocalRay(s, e, t, a, l)
                }
            })(),
            worldRayToLocalRay: (() => {
                const e = new Float32Array(16),
                    t = new Float32Array(4),
                    i = new Float32Array(4);
                return (r, n, s, o, a) => {
                    const l = $c.inverseMat4(r, e);
                    t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = 1, $c.transformVec4(l, t, i), o[0] = i[0], o[1] = i[1], o[2] = i[2], $c.transformVec3(l, s, a)
                }
            })(),
            buildKDTree: (() => {
                const e = new Float32Array;
                return (t, i) => {
                    const r = t.length / 3,
                        n = new Array(r);
                    for (let e = 0; e < r; ++e) n[e] = e;
                    return function t(i, r, n, s) {
                        const o = new Float32Array(6),
                            a = {
                                triangles: null,
                                left: null,
                                right: null,
                                leaf: !1,
                                splitDim: 0,
                                aabb: o
                            };
                        let l, c;
                        for (o[0] = o[1] = o[2] = Number.POSITIVE_INFINITY, o[3] = o[4] = o[5] = Number.NEGATIVE_INFINITY, l = 0, c = i.length; l < c; ++l) {
                            var h = 3 * i[l];
                            for (let e = 0; e < 3; ++e) {
                                const t = 3 * r[h + e];
                                n[t] < o[0] && (o[0] = n[t]), n[t] > o[3] && (o[3] = n[t]), n[t + 1] < o[1] && (o[1] = n[t + 1]), n[t + 1] > o[4] && (o[4] = n[t + 1]), n[t + 2] < o[2] && (o[2] = n[t + 2]), n[t + 2] > o[5] && (o[5] = n[t + 2])
                            }
                        }
                        if (i.length < 20 || s > 10) return a.triangles = i, a.leaf = !0, a;
                        e[0] = o[3] - o[0], e[1] = o[4] - o[1], e[2] = o[5] - o[2];
                        let d = 0;
                        e[1] > e[d] && (d = 1), e[2] > e[d] && (d = 2), a.splitDim = d;
                        const u = (o[d] + o[d + 3]) / 2,
                            p = new Array(i.length);
                        let f = 0;
                        const _ = new Array(i.length);
                        let m = 0;
                        for (l = 0, c = i.length; l < c; ++l) {
                            const e = r[h = 3 * i[l]],
                                t = 3 * r[h + 1],
                                s = 3 * r[h + 2];
                            n[3 * e + d] <= u || n[t + d] <= u || n[s + d] <= u ? p[f++] = i[l] : _[m++] = i[l]
                        }
                        return p.length = f, _.length = m, a.left = t(p, r, n, s + 1), a.right = t(_, r, n, s + 1), a
                    }(n, t, i, 0)
                }
            })(),
            decompressPosition(e, t, i) {
                i[0] = e[0] * t[0] + t[12], i[1] = e[1] * t[5] + t[13], i[2] = e[2] * t[10] + t[14]
            },
            decompressPositions(e, t, i = new Float32Array(e.length)) {
                for (let r = 0, n = e.length; r < n; r += 3) i[r + 0] = e[r + 0] * t[0] + t[12], i[r + 1] = e[r + 1] * t[5] + t[13], i[r + 2] = e[r + 2] * t[10] + t[14];
                return i
            },
            decompressUV(e, t, i) {
                i[0] = e[0] * t[0] + t[6], i[1] = e[1] * t[4] + t[7]
            },
            decompressUVs(e, t, i = new Float32Array(e.length)) {
                for (let r = 0, n = e.length; r < n; r += 3) i[r + 0] = e[r + 0] * t[0] + t[6], i[r + 1] = e[r + 1] * t[4] + t[7];
                return i
            },
            octDecodeVec2(e, t) {
                let i = e[0],
                    r = e[1];
                i = (2 * i + 1) / 255, r = (2 * r + 1) / 255;
                const n = 1 - Math.abs(i) - Math.abs(r);
                n < 0 && (i = (1 - Math.abs(r)) * (i >= 0 ? 1 : -1), r = (1 - Math.abs(i)) * (r >= 0 ? 1 : -1));
                const s = Math.sqrt(i * i + r * r + n * n);
                return t[0] = i / s, t[1] = r / s, t[2] = n / s, t
            },
            octDecodeVec2s(e, t) {
                for (let i = 0, r = 0, n = e.length; i < n; i += 2) {
                    let n = e[i + 0],
                        s = e[i + 1];
                    n = (2 * n + 1) / 255, s = (2 * s + 1) / 255;
                    const o = 1 - Math.abs(n) - Math.abs(s);
                    o < 0 && (n = (1 - Math.abs(s)) * (n >= 0 ? 1 : -1), s = (1 - Math.abs(n)) * (s >= 0 ? 1 : -1));
                    const a = Math.sqrt(n * n + s * s + o * o);
                    t[r + 0] = n / a, t[r + 1] = s / a, t[r + 2] = o / a, r += 3
                }
                return t
            }
        };
    $c.buildEdgeIndices = function() {
        const e = [],
            t = [],
            i = [],
            r = [],
            n = [];
        let s = 0;
        const o = new Uint16Array(3),
            a = new Uint16Array(3),
            l = new Uint16Array(3),
            c = $c.vec3(),
            h = $c.vec3(),
            d = $c.vec3(),
            u = $c.vec3(),
            p = $c.vec3(),
            f = $c.vec3(),
            _ = $c.vec3();
        return function(m, g, v, b) {
            ! function(n, s) {
                const o = {};
                let a, l, c, h;
                const d = Math.pow(10, 4);
                let u, p, f = 0;
                for (u = 0, p = n.length; u < p; u += 3) a = n[u], l = n[u + 1], c = n[u + 2], h = Math.round(a * d) + "_" + Math.round(l * d) + "_" + Math.round(c * d), void 0 === o[h] && (o[h] = f / 3, e[f++] = a, e[f++] = l, e[f++] = c), t[u / 3] = o[h];
                for (u = 0, p = s.length; u < p; u++) r[u] = t[s[u]], i[r[u]] = s[u]
            }(m, g),
            function(t, i) {
                s = 0;
                for (let m = 0, g = t; m < g; m += 3) {
                    const t = 3 * r[m],
                        g = 3 * r[m + 1],
                        v = 3 * r[m + 2];
                    i ? (o[0] = e[t], o[1] = e[t + 1], o[2] = e[t + 2], a[0] = e[g], a[1] = e[g + 1], a[2] = e[g + 2], l[0] = e[v], l[1] = e[v + 1], l[2] = e[v + 2], $c.decompressPosition(o, i, c), $c.decompressPosition(a, i, h), $c.decompressPosition(l, i, d)) : (c[0] = e[t], c[1] = e[t + 1], c[2] = e[t + 2], h[0] = e[g], h[1] = e[g + 1], h[2] = e[g + 2], d[0] = e[v], d[1] = e[v + 1], d[2] = e[v + 2]), $c.subVec3(d, h, u), $c.subVec3(c, h, p), $c.cross3Vec3(u, p, f), $c.normalizeVec3(f, _);
                    const b = n[s] || (n[s] = {
                        normal: $c.vec3()
                    });
                    b.normal[0] = _[0], b.normal[1] = _[1], b.normal[2] = _[2], s++
                }
            }(g.length, v);
            const y = [],
                w = Math.cos($c.DEGTORAD * b),
                M = {};
            let A, x, C, P, k, E, I, T, D, S, B, j = !1;
            for (let e = 0, t = g.length; e < t; e += 3) {
                const t = e / 3;
                for (let i = 0; i < 3; i++) A = r[e + i], x = r[e + (i + 1) % 3], C = Math.min(A, x), P = Math.max(A, x), k = C + "," + P, void 0 === M[k] ? M[k] = {
                    index1: C,
                    index2: P,
                    face1: t,
                    face2: void 0
                } : M[k].face2 = t
            }
            for (k in M) E = M[k], void 0 !== E.face2 && (I = n[E.face1].normal, T = n[E.face2].normal, D = $c.dotVec3(I, T), D > w) || (S = i[E.index1], B = i[E.index2], (!j && S > 65535 || B > 65535) && (j = !0), y.push(S), y.push(B));
            return j ? new Uint32Array(y) : new Uint16Array(y)
        }
    }();
    class Wc {
        get type() {
            return "Component"
        }
        get isComponent() {
            return !0
        }
        constructor(e = null, t = {}) {
            if (this.scene = null, "Scene" === this.type) this.scene = this, this.viewer = t.viewer;
            else {
                if ("Scene" === e.type) this.scene = e;
                else {
                    if (!(e instanceof Wc)) throw "Invalid param: owner must be a Component";
                    this.scene = e.scene
                }
                this._owner = e, this._renderer = this.scene._renderer
            }
            this._dontClear = !!t.dontClear, this._renderer = this.scene._renderer, this.meta = t.meta || {}, this.id = t.id, this.destroyed = !1, this._attached = {}, this._attachments = null, this._subIdMap = null, this._subIdEvents = null, this._eventSubs = null, this._eventSubsNum = null, this._events = null, this._eventCallDepth = 0, this._ownedComponents = null, this !== this.scene && this.scene._addComponent(this), this._updateScheduled = !1, e && e._own(this)
        }
        glRedraw() {
            this._renderer.imageDirty(), this.castsShadow && this._renderer.shadowsDirty()
        }
        glResort() {
            this._renderer.needStateSort()
        }
        get owner() {
            return this._owner
        }
        isType(e) {
            return this.type === e
        }
        fire(e, t, i) {
            this._events || (this._events = {}), this._eventSubs || (this._eventSubs = {}, this._eventSubsNum = {}), !0 !== i && (this._events[e] = t || !0);
            const r = this._eventSubs[e];
            let n;
            if (r)
                for (const i in r) r.hasOwnProperty(i) && (n = r[i], this._eventCallDepth++, this._eventCallDepth < 300 ? n.callback.call(n.scope, t) : this.error("fire: potential stack overflow from recursive event '" + e + "' - dropping this event"), this._eventCallDepth--)
        }
        on(e, t, i) {
            this._events || (this._events = {}), this._subIdMap || (this._subIdMap = new Cc), this._subIdEvents || (this._subIdEvents = {}), this._eventSubs || (this._eventSubs = {}), this._eventSubsNum || (this._eventSubsNum = {});
            let r = this._eventSubs[e];
            r ? this._eventSubsNum[e]++ : (r = {}, this._eventSubs[e] = r, this._eventSubsNum[e] = 1);
            const n = this._subIdMap.addItem();
            r[n] = {
                callback: t,
                scope: i || this
            }, this._subIdEvents[n] = e;
            const s = this._events[e];
            return void 0 !== s && t.call(i || this, s), n
        }
        off(e) {
            if (null == e) return;
            if (!this._subIdEvents) return;
            const t = this._subIdEvents[e];
            if (t) {
                delete this._subIdEvents[e];
                const i = this._eventSubs[t];
                i && (delete i[e], this._eventSubsNum[t]--), this._subIdMap.removeItem(e)
            }
        }
        once(e, t, i) {
            const r = this,
                n = this.on(e, (function(e) {
                    r.off(n), t.call(i || this, e)
                }), i)
        }
        hasSubs(e) {
            return this._eventSubsNum && this._eventSubsNum[e] > 0
        }
        log(e) {
            e = "[LOG]" + this._message(e), window.console.log(e), this.scene.fire("log", e)
        }
        _message(e) {
            return " [" + this.type + " " + Ic.inQuotes(this.id) + "]: " + e
        }
        warn(e) {
            e = "[WARN]" + this._message(e), window.console.warn(e), this.scene.fire("warn", e)
        }
        error(e) {
            e = "[ERROR]" + this._message(e), window.console.error(e), this.scene.fire("error", e)
        }
        _attach(e) {
            const t = e.name;
            if (!t) return void this.error("Component 'name' expected");
            let i = e.component;
            const r = e.sceneDefault,
                n = e.sceneSingleton,
                s = e.type,
                o = e.on,
                a = !1 !== e.recompiles;
            if (i && (Ic.isNumeric(i) || Ic.isString(i))) {
                const e = i;
                if (i = this.scene.components[e], !i) return void this.error("Component not found: " + Ic.inQuotes(e))
            }
            if (!i)
                if (!0 === n) {
                    const e = this.scene.types[s];
                    for (const t in e)
                        if (e.hasOwnProperty) {
                            i = e[t];
                            break
                        } if (!i) return this.error("Scene has no default component for '" + t + "'"), null
                } else if (!0 === r && (i = this.scene[t], !i)) return this.error("Scene has no default component for '" + t + "'"), null;
            if (i) {
                if (i.scene.id !== this.scene.id) return void this.error("Not in same scene: " + i.type + " " + Ic.inQuotes(i.id));
                if (s && !i.isType(s)) return void this.error("Expected a " + s + " type or subtype: " + i.type + " " + Ic.inQuotes(i.id))
            }
            this._attachments || (this._attachments = {});
            const l = this._attached[t];
            let c, h, d;
            if (l) {
                if (i && l.id === i.id) return;
                const e = this._attachments[l.id];
                for (c = e.subs, h = 0, d = c.length; h < d; h++) l.off(c[h]);
                delete this._attached[t], delete this._attachments[l.id];
                const r = e.params.onDetached;
                r && (Ic.isFunction(r) ? r(l) : r.scope ? r.callback.call(r.scope, l) : r.callback(l)), e.managingLifecycle && l.destroy()
            }
            if (i) {
                const r = {
                    params: e,
                    component: i,
                    subs: [],
                    managingLifecycle: !1
                };
                r.subs.push(i.once("destroyed", (function() {
                    r.params.component = null, this._attach(r.params)
                }), this)), a && r.subs.push(i.on("dirty", (function() {
                    this.fire("dirty", this)
                }), this)), this._attached[t] = i, this._attachments[i.id] = r;
                const n = e.onAttached;
                if (n && (Ic.isFunction(n) ? n(i) : n.scope ? n.callback.call(n.scope, i) : n.callback(i)), o) {
                    let e, t, n, s;
                    for (e in o)
                        if (o.hasOwnProperty(e)) {
                            if (t = o[e], Ic.isFunction(t) ? (n = t, s = null) : (n = t.callback, s = t.scope), !n) continue;
                            r.subs.push(i.on(e, n, s))
                        }
                }
            }
            return a && this.fire("dirty", this), this.fire(t, i), i
        }
        _checkComponent(e, t) {
            if (!t.isComponent) {
                if (!Ic.isID(t)) return void this.error("Expected a Component or ID"); {
                    const e = t;
                    if (!(t = this.scene.components[e])) return void this.error("Component not found: " + e)
                }
            }
            if (e === t.type) {
                if (t.scene.id === this.scene.id) return t;
                this.error("Not in same scene: " + t.type)
            } else this.error("Expected a " + e + " Component")
        }
        _checkComponent2(e, t) {
            if (!t.isComponent) {
                if (!Ic.isID(t)) return void this.error("Expected a Component or ID"); {
                    const e = t;
                    if (!(t = this.scene.components[e])) return void this.error("Component not found: " + e)
                }
            }
            if (t.scene.id === this.scene.id) {
                for (var i = 0, r = e.length; i < r; i++)
                    if (e[i] === t.type) return t;
                return this.error("Expected component types: " + e), null
            }
            this.error("Not in same scene: " + t.type)
        }
        _own(e) {
            this._ownedComponents || (this._ownedComponents = {}), this._ownedComponents[e.id] || (this._ownedComponents[e.id] = e), e.once("destroyed", () => {
                delete this._ownedComponents[e.id]
            }, this)
        }
        _needUpdate(e) {
            this._updateScheduled || (this._updateScheduled = !0, 0 === e ? this._doUpdate() : Fc.scheduleTask(this._doUpdate, this))
        }
        _doUpdate() {
            this._updateScheduled && (this._updateScheduled = !1, this._update && this._update())
        }
        _update() {}
        clear() {
            if (this._ownedComponents)
                for (var e in this._ownedComponents)
                    if (this._ownedComponents.hasOwnProperty(e)) {
                        this._ownedComponents[e].destroy(), delete this._ownedComponents[e]
                    }
        }
        destroy() {
            if (this.destroyed) return;
            let e, t, i, r, n, s;
            if (this.fire("destroyed", this.destroyed = !0), this._attachments)
                for (e in this._attachments)
                    if (this._attachments.hasOwnProperty(e)) {
                        for (t = this._attachments[e], i = t.component, r = t.subs, n = 0, s = r.length; n < s; n++) i.off(r[n]);
                        t.managingLifecycle && i.destroy()
                    } if (this._ownedComponents)
                for (e in this._ownedComponents) this._ownedComponents.hasOwnProperty(e) && (i = this._ownedComponents[e], i.destroy(), delete this._ownedComponents[e]);
            this.scene._removeComponent(this), this._attached = {}, this._attachments = null, this._subIdMap = null, this._subIdEvents = null, this._eventSubs = null, this._events = null, this._eventCallDepth = 0, this._ownedComponents = null, this._updateScheduled = !1
        }
    }
    class qc extends Wc {
        get type() {
            return "Spinner"
        }
        constructor(e, t = {}) {
            super(e, t), this._canvas = t.canvas, this._element = null, this._isCustom = !1, t.elementId && (this._element = document.getElementById(t.elementId), this._element ? this._adjustPosition() : this.error("Can't find given Spinner HTML element: '" + t.elementId + "' - will automatically create default element")), this._element || this._createDefaultSpinner(), this.processes = 0
        }
        _createDefaultSpinner() {
            this._injectDefaultCSS();
            const e = document.createElement("div"),
                t = e.style;
            t["z-index"] = "9000", t.position = "absolute", e.innerHTML = '<div class="sk-fading-circle">                <div class="sk-circle1 sk-circle"></div>                <div class="sk-circle2 sk-circle"></div>                <div class="sk-circle3 sk-circle"></div>                <div class="sk-circle4 sk-circle"></div>                <div class="sk-circle5 sk-circle"></div>                <div class="sk-circle6 sk-circle"></div>                <div class="sk-circle7 sk-circle"></div>                <div class="sk-circle8 sk-circle"></div>                <div class="sk-circle9 sk-circle"></div>                <div class="sk-circle10 sk-circle"></div>                <div class="sk-circle11 sk-circle"></div>                <div class="sk-circle12 sk-circle"></div>                </div>', this._canvas.parentElement.appendChild(e), this._element = e, this._isCustom = !1, this._adjustPosition()
        }
        _injectDefaultCSS() {
            if (document.getElementById("xeokit-spinner-css")) return;
            const e = document.createElement("style");
            e.innerHTML = ".sk-fading-circle {        background: transparent;        margin: 20px auto;        width: 50px;        height:50px;        position: relative;        }        .sk-fading-circle .sk-circle {        width: 120%;        height: 120%;        position: absolute;        left: 0;        top: 0;        }        .sk-fading-circle .sk-circle:before {        content: '';        display: block;        margin: 0 auto;        width: 15%;        height: 15%;        background-color: #ff8800;        border-radius: 100%;        -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;        animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;        }        .sk-fading-circle .sk-circle2 {        -webkit-transform: rotate(30deg);        -ms-transform: rotate(30deg);        transform: rotate(30deg);    }    .sk-fading-circle .sk-circle3 {        -webkit-transform: rotate(60deg);        -ms-transform: rotate(60deg);        transform: rotate(60deg);    }    .sk-fading-circle .sk-circle4 {        -webkit-transform: rotate(90deg);        -ms-transform: rotate(90deg);        transform: rotate(90deg);    }    .sk-fading-circle .sk-circle5 {        -webkit-transform: rotate(120deg);        -ms-transform: rotate(120deg);        transform: rotate(120deg);    }    .sk-fading-circle .sk-circle6 {        -webkit-transform: rotate(150deg);        -ms-transform: rotate(150deg);        transform: rotate(150deg);    }    .sk-fading-circle .sk-circle7 {        -webkit-transform: rotate(180deg);        -ms-transform: rotate(180deg);        transform: rotate(180deg);    }    .sk-fading-circle .sk-circle8 {        -webkit-transform: rotate(210deg);        -ms-transform: rotate(210deg);        transform: rotate(210deg);    }    .sk-fading-circle .sk-circle9 {        -webkit-transform: rotate(240deg);        -ms-transform: rotate(240deg);        transform: rotate(240deg);    }    .sk-fading-circle .sk-circle10 {        -webkit-transform: rotate(270deg);        -ms-transform: rotate(270deg);        transform: rotate(270deg);    }    .sk-fading-circle .sk-circle11 {        -webkit-transform: rotate(300deg);        -ms-transform: rotate(300deg);        transform: rotate(300deg);    }    .sk-fading-circle .sk-circle12 {        -webkit-transform: rotate(330deg);        -ms-transform: rotate(330deg);        transform: rotate(330deg);    }    .sk-fading-circle .sk-circle2:before {        -webkit-animation-delay: -1.1s;        animation-delay: -1.1s;    }    .sk-fading-circle .sk-circle3:before {        -webkit-animation-delay: -1s;        animation-delay: -1s;    }    .sk-fading-circle .sk-circle4:before {        -webkit-animation-delay: -0.9s;        animation-delay: -0.9s;    }    .sk-fading-circle .sk-circle5:before {        -webkit-animation-delay: -0.8s;        animation-delay: -0.8s;    }    .sk-fading-circle .sk-circle6:before {        -webkit-animation-delay: -0.7s;        animation-delay: -0.7s;    }    .sk-fading-circle .sk-circle7:before {        -webkit-animation-delay: -0.6s;        animation-delay: -0.6s;    }    .sk-fading-circle .sk-circle8:before {        -webkit-animation-delay: -0.5s;        animation-delay: -0.5s;    }    .sk-fading-circle .sk-circle9:before {        -webkit-animation-delay: -0.4s;        animation-delay: -0.4s;    }    .sk-fading-circle .sk-circle10:before {        -webkit-animation-delay: -0.3s;        animation-delay: -0.3s;    }    .sk-fading-circle .sk-circle11:before {        -webkit-animation-delay: -0.2s;        animation-delay: -0.2s;    }    .sk-fading-circle .sk-circle12:before {        -webkit-animation-delay: -0.1s;        animation-delay: -0.1s;    }    @-webkit-keyframes sk-circleFadeDelay {        0%, 39%, 100% { opacity: 0; }        40% { opacity: 1; }    }    @keyframes sk-circleFadeDelay {        0%, 39%, 100% { opacity: 0; }        40% { opacity: 1; }    }", e.id = "xeokit-spinner-css", document.body.appendChild(e)
        }
        _adjustPosition() {
            if (this._isCustom) return;
            const e = this._canvas,
                t = this._element,
                i = t.style;
            i.left = e.offsetLeft + .5 * e.clientWidth - .5 * t.clientWidth + "px", i.top = e.offsetTop + .5 * e.clientHeight - .5 * t.clientHeight + "px"
        }
        set processes(e) {
            if (e = e || 0, this._processes === e) return;
            if (e < 0) return;
            const t = this._processes;
            this._processes = e;
            const i = this._element;
            i && (i.style.visibility = this._processes > 0 ? "visible" : "hidden"), this.fire("processes", this._processes), 0 === this._processes && this._processes !== t && this.fire("zeroProcesses", this._processes)
        }
        get processes() {
            return this._processes
        }
        _destroy() {
            this._element && !this._isCustom && (this._element.parentNode.removeChild(this._element), this._element = null)
        }
    }
    const Gc = {
            WEBGL: !1,
            SUPPORTED_EXTENSIONS: {}
        },
        Yc = document.createElement("canvas");
    if (Yc) {
        const e = Yc.getContext("webgl", {
            antialias: !1
        }) || Yc.getContext("experimental-webgl", {
            antialias: !1
        });
        Gc.WEBGL = !!e, Gc.WEBGL && (Gc.ANTIALIAS = e.getContextAttributes().antialias, e.getShaderPrecisionFormat ? e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0 ? Gc.FS_MAX_FLOAT_PRECISION = "highp" : e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? Gc.FS_MAX_FLOAT_PRECISION = "mediump" : Gc.FS_MAX_FLOAT_PRECISION = "lowp" : Gc.FS_MAX_FLOAT_PRECISION = "mediump", Gc.DEPTH_BUFFER_BITS = e.getParameter(e.DEPTH_BITS), Gc.MAX_TEXTURE_SIZE = e.getParameter(e.MAX_TEXTURE_SIZE), Gc.MAX_CUBE_MAP_SIZE = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE), Gc.MAX_RENDERBUFFER_SIZE = e.getParameter(e.MAX_RENDERBUFFER_SIZE), Gc.MAX_TEXTURE_UNITS = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS), Gc.MAX_TEXTURE_IMAGE_UNITS = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS), Gc.MAX_VERTEX_ATTRIBS = e.getParameter(e.MAX_VERTEX_ATTRIBS), Gc.MAX_VERTEX_UNIFORM_VECTORS = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS), Gc.MAX_FRAGMENT_UNIFORM_VECTORS = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS), Gc.MAX_VARYING_VECTORS = e.getParameter(e.MAX_VARYING_VECTORS), e.getSupportedExtensions().forEach((function(e) {
            Gc.SUPPORTED_EXTENSIONS[e] = !0
        })), Gc.depthTexturesSupported = Gc.SUPPORTED_EXTENSIONS.WEBGL_depth_texture)
    }
    const Zc = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl", "moz-glweb20"];
    class Xc extends Wc {
        get type() {
            return "Canvas"
        }
        constructor(e, t = {}) {
            super(e, t), this.canvas = t.canvas, this.gl = null, this.webgl2 = !1, this.transparent = !!t.transparent, this.contextAttr = t.contextAttr || {}, this.contextAttr.alpha = this.transparent, this.contextAttr.preserveDrawingBuffer = !!this.contextAttr.preserveDrawingBuffer, this.contextAttr.stencil = !1, this.contextAttr.premultipliedAlpha = !!this.contextAttr.premultipliedAlpha, this.contextAttr.antialias = !1 !== this.contextAttr.antialias, this.canvas.width = this.canvas.clientWidth, this.canvas.height = this.canvas.clientHeight, this.boundary = [this.canvas.offsetLeft, this.canvas.offsetTop, this.canvas.clientWidth, this.canvas.clientHeight], this._initWebGL(t);
            const i = this;
            this.canvas.addEventListener("webglcontextlost", this._webglcontextlostListener = function(e) {
                console.time("webglcontextrestored"), i.scene._webglContextLost(), i.fire("webglcontextlost"), e.preventDefault()
            }, !1), this.canvas.addEventListener("webglcontextrestored", this._webglcontextrestoredListener = function(e) {
                i._initWebGL(), i.gl && (i.scene._webglContextRestored(i.gl), i.fire("webglcontextrestored", i.gl), e.preventDefault()), console.timeEnd("webglcontextrestored")
            }, !1);
            let r = null,
                n = null,
                s = null,
                o = null,
                a = null,
                l = null,
                c = null;
            this._tick = this.scene.on("tick", (function() {
                const e = i.canvas,
                    t = window.innerWidth !== r || window.innerHeight !== n,
                    h = e.clientWidth !== s || e.clientHeight !== o,
                    d = e.offsetLeft !== a || e.offsetTop !== l,
                    u = e.parentElement;
                if (t || h || d || u !== c) {
                    if (i._spinner._adjustPosition(), h || d) {
                        const t = e.clientWidth,
                            r = e.clientHeight;
                        if (h) {
                            let t, i = 0;
                            for (const e in Fc.scenes) Fc.scenes.hasOwnProperty(e) && (t = Fc.scenes[e], i += t.canvas.canvas.clientWidth * t.canvas.canvas.clientHeight);
                            Pc.memory.pixels = i, e.width = e.clientWidth, e.height = e.clientHeight
                        }
                        const n = i.boundary;
                        n[0] = e.offsetLeft, n[1] = e.offsetTop, n[2] = t, n[3] = r, i.fire("boundary", n), s = t, o = r
                    }
                    t && (r = window.innerWidth, n = window.innerHeight), d && (a = e.offsetLeft, l = e.offsetTop), c = u
                }
            })), this._spinner = new qc(this.scene, {
                canvas: this.canvas,
                elementId: t.spinnerElementId
            }), this.clearColorAmbient = t.clearColorAmbient
        }
        _createCanvas() {
            const e = "xeokit-canvas-" + $c.createUUID(),
                t = document.getElementsByTagName("body")[0],
                i = document.createElement("div"),
                r = i.style;
            r.height = "100%", r.width = "100%", r.padding = "0", r.margin = "0", r.background = "rgba(0,0,0,0);", r.float = "left", r.left = "0", r.top = "0", r.position = "absolute", r.opacity = "1.0", r["z-index"] = "-10000", i.innerHTML += '<canvas id="' + e + '" style="width: 100%; height: 100%; float: left; margin: 0; padding: 0;"></canvas>', t.appendChild(i), this.canvas = document.getElementById(e)
        }
        _getElementXY(e) {
            let t = 0,
                i = 0;
            for (; e;) t += e.offsetLeft - e.scrollLeft, i += e.offsetTop - e.scrollTop, e = e.offsetParent;
            return {
                x: t,
                y: i
            }
        }
        _initWebGL() {
            if (!this.gl)
                for (let e = 0; !this.gl && e < Zc.length; e++) try {
                    this.gl = this.canvas.getContext(Zc[e], this.contextAttr)
                } catch (e) {}
            if (this.gl || (this.error("Failed to get a WebGL context"), this.fire("webglContextFailed", !0, !0)), this.gl)
                if (this.webgl2) this.gl.hint(this.gl.FRAGMENT_SHADER_DERIVATIVE_HINT, this.gl.FASTEST);
                else if (Gc.SUPPORTED_EXTENSIONS.OES_standard_derivatives) {
                const e = this.gl.getExtension("OES_standard_derivatives");
                this.gl.hint(e.FRAGMENT_SHADER_DERIVATIVE_HINT_OES, this.gl.FASTEST)
            }
        }
        set clearColorAmbient(e) {
            this._clearColorAmbient = !!e
        }
        get clearColorAmbient() {
            return this._clearColorAmbient
        }
        getSnapshot(e) {
            throw "Canvas#getSnapshot() has been replaced by Viewer#getSnapshot() - use that method instead."
        }
        readPixels(e, t, i, r) {
            return this.scene._renderer.readPixels(e, t, i, r)
        }
        loseWebGLContext() {
            this.canvas.loseContext && this.canvas.loseContext()
        }
        get spinner() {
            return this._spinner
        }
        destroy() {
            this.scene.off(this._tick), this._spinner._destroy(), this.canvas.removeEventListener("webglcontextlost", this._webglcontextlostListener), this.canvas.removeEventListener("webglcontextrestored", this._webglcontextrestoredListener), this.gl = null, super.destroy()
        }
    }
    const Kc = $c.vec3(),
        Qc = function() {
            const e = new Float32Array(16),
                t = new Float64Array(4),
                i = new Float64Array(4);
            return function(r, n, s = e) {
                return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = 1, $c.transformVec4(r, t, i), $c.setMat4Translation(r, i, s), s
            }
        }();

    function Jc(e, t, i) {
        const r = Float32Array.from([e[0]])[0],
            n = e[0] - r,
            s = Float32Array.from([e[1]])[0],
            o = e[1] - s,
            a = Float32Array.from([e[2]])[0],
            l = e[2] - a;
        t[0] = r, t[1] = s, t[2] = a, i[0] = n, i[1] = o, i[2] = l
    }

    function eh(e, t, i, r) {
        const n = $c.dotVec3(t, i) + e,
            s = $c.normalizeVec3(t, Kc);
        return $c.mulVec3Scalar(s, -n, r), r
    }
    class th {
        constructor(e) {
            this._scene = e, this._matPool = [], this._matPoolNextFreeIndex = 0, this._rtcViewMats = {}, this._rtcPickViewMats = {}, this.reset()
        }
        reset() {
            this._matPoolNextFreeIndex = 0, this._rtcViewMats = {}, this._rtcPickViewMats = {}, this.lastProgramId = null, this.lastRTCCenter = null, this.withSAO = !1, this.backfaces = !1, this.frontface = !0, this.textureUnit = 0, this.drawElements = 0, this.drawArrays = 0, this.useProgram = 0, this.bindTexture = 0, this.bindArray = 0, this.pass = 0, this.shadowViewMatrix = null, this.shadowProjMatrix = null, this.pickViewMatrix = null, this.pickProjMatrix = null, this.pickInvisible = !1, this.lineWidth = 1
        }
        getRTCViewMatrix(e, t) {
            let i = this._rtcViewMats[e];
            return i || (i = this._getNewMat(), Qc(this._scene.camera.viewMatrix, t, i), this._rtcViewMats[e] = i), i
        }
        getRTCPickViewMatrix(e, t) {
            let i = this._rtcPickViewMats[e];
            if (!i) {
                i = this._getNewMat();
                const r = this.pickViewMatrix || this._scene.camera.viewMatrix;
                Qc(r, t, i), this._rtcPickViewMats[e] = i
            }
            return i
        }
        _getNewMat() {
            let e = this._matPool[this._matPoolNextFreeIndex];
            return e || (e = $c.mat4(), this._matPool[this._matPoolNextFreeIndex] = e), this._matPoolNextFreeIndex++, e
        }
    }
    const ih = function() {
        const e = document.createElement("canvas"),
            t = String.fromCharCode;
        if (!e.getContext) return {
            saveAsBMP: function() {},
            saveAsPNG: function() {},
            saveAsJPEG: function() {}
        };
        const i = !!e.getContext("2d").getImageData,
            r = !!e.toDataURL,
            n = !!window.btoa,
            s = function(e) {
                let i = "";
                const r = e.width,
                    n = e.height;
                i += "BM";
                let s = r * n * 4 + 54;
                i += t(s % 256), s = Math.floor(s / 256), i += t(s % 256), s = Math.floor(s / 256), i += t(s % 256), s = Math.floor(s / 256), i += t(s % 256), i += t(0, 0, 0, 0, 54, 0, 0, 0), i += t(40, 0, 0, 0);
                let o = r;
                i += t(o % 256), o = Math.floor(o / 256), i += t(o % 256), o = Math.floor(o / 256), i += t(o % 256), o = Math.floor(o / 256), i += t(o % 256);
                let a = n;
                i += t(a % 256), a = Math.floor(a / 256), i += t(a % 256), a = Math.floor(a / 256), i += t(a % 256), a = Math.floor(a / 256), i += t(a % 256), i += t(1, 0, 32, 0), i += t(0, 0, 0, 0);
                let l = r * n * 4;
                i += t(l % 256), l = Math.floor(l / 256), i += t(l % 256), l = Math.floor(l / 256), i += t(l % 256), l = Math.floor(l / 256), i += t(l % 256), i += t(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                const c = e.data;
                let h, d, u, p, f = "",
                    _ = n;
                do {
                    for (u = r * (_ - 1) * 4, p = "", h = 0; h < r; h++) d = 4 * h, p += t(c[u + d + 2], c[u + d + 1], c[u + d], c[u + d + 3]);
                    f += p
                } while (--_);
                return function(e) {
                    let i, r, n = "";
                    if ("string" == typeof e) n = e;
                    else
                        for (r = e, i = 0; i < r.length; i++) n += t(r[i]);
                    return btoa(n)
                }(i + f)
            },
            o = function(e) {
                window.open(e) || (document.location.href = e)
            },
            a = function(e, t) {
                return "data:" + t + ";base64," + e
            },
            l = function(e) {
                const t = document.createElement("img");
                return t.src = e, t
            },
            c = function(e, t, i, r) {
                if (t && i) {
                    const n = document.createElement("canvas");
                    n.width = t, n.height = i, n.style.width = t + "px", n.style.height = i + "px";
                    const s = n.getContext("2d");
                    return r ? (s.save(), s.scale(1, -1), s.imageSmoothingEnabled = !0, s.drawImage(e, 0, 0, e.width, e.height, 0, 0, t, -i), s.restore()) : (s.imageSmoothingEnabled = !0, s.drawImage(e, 0, 0, e.width, e.height, 0, 0, t, i)), n
                }
                return e
            };
        return {
            saveAsPNG: function(e, t, i, n, s) {
                if (!r) return !1;
                const a = c(e, i, n, s).toDataURL("image/png");
                return t ? l(a) : (o(a), !0)
            },
            saveAsJPEG: function(e, t, i, n, s) {
                if (!r) return !1;
                const a = c(e, i, n, s).toDataURL("image/jpeg");
                return 5 == a.indexOf("image/jpeg") && (t ? l(a) : (o(a), !0))
            },
            saveAsBMP: function(e, t, h, d, u) {
                if (!(r && i && n)) return !1;
                const p = function(e) {
                        const t = parseInt(e.width),
                            i = parseInt(e.height);
                        return e.getContext("2d").getImageData(0, 0, t, i)
                    }(c(e, h, d, u)),
                    f = s(p);
                return t ? l(a(f, "image/bmp")) : (o(a(f, "image/bmp")), !0)
            }
        }
    }();
    class rh {
        constructor(e, t, i) {
            i = i || {}, this.gl = t, this.allocated = !1, this.canvas = e, this.buffer = null, this.bound = !1, this.size = i.size
        }
        setSize(e) {
            this.size = e
        }
        webglContextRestored(e) {
            this.gl = e, this.buffer = null, this.allocated = !1, this.bound = !1
        }
        bind() {
            if (this._touch(), this.bound) return;
            const e = this.gl;
            e.bindFramebuffer(e.FRAMEBUFFER, this.buffer.framebuf), this.bound = !0
        }
        _touch() {
            let e, t;
            const i = this.gl;
            if (this.size ? (e = this.size[0], t = this.size[1]) : (e = i.drawingBufferWidth, t = i.drawingBufferHeight), this.buffer) {
                if (this.buffer.width === e && this.buffer.height === t) return;
                i.deleteTexture(this.buffer.texture), i.deleteFramebuffer(this.buffer.framebuf), i.deleteRenderbuffer(this.buffer.renderbuf)
            }
            const r = i.createTexture();
            i.bindTexture(i.TEXTURE_2D, r), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.NEAREST), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.NEAREST), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.CLAMP_TO_EDGE), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.CLAMP_TO_EDGE), i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, e, t, 0, i.RGBA, i.UNSIGNED_BYTE, null);
            const n = i.createRenderbuffer();
            i.bindRenderbuffer(i.RENDERBUFFER, n), i.renderbufferStorage(i.RENDERBUFFER, i.DEPTH_COMPONENT16, e, t);
            const s = i.createFramebuffer();
            if (i.bindFramebuffer(i.FRAMEBUFFER, s), i.framebufferTexture2D(i.FRAMEBUFFER, i.COLOR_ATTACHMENT0, i.TEXTURE_2D, r, 0), i.framebufferRenderbuffer(i.FRAMEBUFFER, i.DEPTH_ATTACHMENT, i.RENDERBUFFER, n), i.bindTexture(i.TEXTURE_2D, null), i.bindRenderbuffer(i.RENDERBUFFER, null), i.bindFramebuffer(i.FRAMEBUFFER, null), i.bindFramebuffer(i.FRAMEBUFFER, s), !i.isFramebuffer(s)) throw "Invalid framebuffer";
            i.bindFramebuffer(i.FRAMEBUFFER, null);
            const o = i.checkFramebufferStatus(i.FRAMEBUFFER);
            switch (o) {
                case i.FRAMEBUFFER_COMPLETE:
                    break;
                case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
                    throw "Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
                case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
                    throw "Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
                case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
                    throw "Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS";
                case i.FRAMEBUFFER_UNSUPPORTED:
                    throw "Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED";
                default:
                    throw "Incomplete framebuffer: " + o
            }
            this.buffer = {
                framebuf: s,
                renderbuf: n,
                texture: r,
                width: e,
                height: t
            }, this.bound = !1
        }
        clear() {
            if (!this.bound) throw "Render buffer not bound";
            const e = this.gl;
            e.clear(e.COLOR_BUFFER_BIT | e.DEPTH_BUFFER_BIT)
        }
        read(e, t) {
            const i = e,
                r = this.gl.drawingBufferHeight - t,
                n = new Uint8Array(4),
                s = this.gl;
            return s.readPixels(i, r, 1, 1, s.RGBA, s.UNSIGNED_BYTE, n), n
        }
        readImage(e) {
            const t = this.gl,
                i = this._getImageDataCache(),
                r = i.pixelData,
                n = i.canvas,
                s = i.imageData,
                o = i.context;
            t.readPixels(0, 0, this.buffer.width, this.buffer.height, t.RGBA, t.UNSIGNED_BYTE, r), s.data.set(r), o.putImageData(s, 0, 0);
            const a = e.width || n.width,
                l = e.height || n.height,
                c = e.format || "jpeg";
            let h;
            switch (c) {
                case "jpeg":
                    h = ih.saveAsJPEG(n, !0, a, l, !0);
                    break;
                case "png":
                    h = ih.saveAsPNG(n, !0, a, l, !0);
                    break;
                case "bmp":
                    h = ih.saveAsBMP(n, !0, a, l, !0);
                    break;
                default:
                    console.error("Unsupported image format: '" + c + "' - supported types are 'jpeg', 'bmp' and 'png' - defaulting to 'jpeg'"), h = ih.saveAsJPEG(n, !0, a, l, !0)
            }
            return h.src
        }
        _getImageDataCache() {
            const e = this.buffer.width,
                t = this.buffer.height;
            let i = this._imageDataCache;
            if (i && (i.width === e && i.height === t || (this._imageDataCache = null, i = null)), !i) {
                const r = document.createElement("canvas");
                r.width = e, r.height = t;
                const n = r.getContext("2d"),
                    s = n.createImageData(e, t);
                i = {
                    pixelData: new Uint8Array(e * t * 4),
                    canvas: r,
                    context: n,
                    imageData: s,
                    width: e,
                    height: t
                }, this._imageDataCache = i
            }
            return i
        }
        unbind() {
            const e = this.gl;
            e.bindFramebuffer(e.FRAMEBUFFER, null), this.bound = !1
        }
        getTexture() {
            const e = this;
            return this._texture || (this._texture = {
                renderBuffer: this,
                bind: function(t) {
                    return !(!e.buffer || !e.buffer.texture) && (e.gl.activeTexture(e.gl["TEXTURE" + t]), e.gl.bindTexture(e.gl.TEXTURE_2D, e.buffer.texture), !0)
                },
                unbind: function(t) {
                    e.buffer && e.buffer.texture && (e.gl.activeTexture(e.gl["TEXTURE" + t]), e.gl.bindTexture(e.gl.TEXTURE_2D, null))
                }
            })
        }
        destroy() {
            if (this.allocated) {
                const e = this.gl;
                e.deleteTexture(this.buffer.texture), e.deleteFramebuffer(this.buffer.framebuf), e.deleteRenderbuffer(this.buffer.renderbuf), this.allocated = !1, this.buffer = null, this.bound = !1
            }
            this._imageDataCache = null, this._texture = null
        }
    }
    class nh {
        constructor() {
            this.entity = null, this.primitive = null, this.primIndex = -1, this._canvasPos = new Int16Array([0, 0]), this._origin = new Float64Array([0, 0, 0]), this._direction = new Float64Array([0, 0, 0]), this._indices = new Int32Array(3), this._localPos = new Float64Array([0, 0, 0]), this._worldPos = new Float64Array([0, 0, 0]), this._viewPos = new Float64Array([0, 0, 0]), this._bary = new Float64Array([0, 0, 0]), this._worldNormal = new Float64Array([0, 0, 0]), this._uv = new Float64Array([0, 0]), this.reset()
        }
        get canvasPos() {
            return this._gotCanvasPos ? this._canvasPos : null
        }
        set canvasPos(e) {
            e ? (this._canvasPos[0] = e[0], this._canvasPos[1] = e[1], this._gotCanvasPos = !0) : this._gotCanvasPos = !1
        }
        get origin() {
            return this._gotOrigin ? this._origin : null
        }
        set origin(e) {
            e ? (this._origin[0] = e[0], this._origin[1] = e[1], this._origin[2] = e[2], this._gotOrigin = !0) : this._gotOrigin = !1
        }
        get direction() {
            return this._gotDirection ? this._direction : null
        }
        set direction(e) {
            e ? (this._direction[0] = e[0], this._direction[1] = e[1], this._direction[2] = e[2], this._gotDirection = !0) : this._gotDirection = !1
        }
        get indices() {
            return this.entity && this._gotIndices ? this._indices : null
        }
        set indices(e) {
            e ? (this._indices[0] = e[0], this._indices[1] = e[1], this._indices[2] = e[2], this._gotIndices = !0) : this._gotIndices = !1
        }
        get localPos() {
            return this.entity && this._gotLocalPos ? this._localPos : null
        }
        set localPos(e) {
            e ? (this._localPos[0] = e[0], this._localPos[1] = e[1], this._localPos[2] = e[2], this._gotLocalPos = !0) : this._gotLocalPos = !1
        }
        get worldPos() {
            return this.entity && this._gotWorldPos ? this._worldPos : null
        }
        set worldPos(e) {
            e ? (this._worldPos[0] = e[0], this._worldPos[1] = e[1], this._worldPos[2] = e[2], this._gotWorldPos = !0) : this._gotWorldPos = !1
        }
        get viewPos() {
            return this.entity && this._gotViewPos ? this._viewPos : null
        }
        set viewPos(e) {
            e ? (this._viewPos[0] = e[0], this._viewPos[1] = e[1], this._viewPos[2] = e[2], this._gotViewPos = !0) : this._gotViewPos = !1
        }
        get bary() {
            return this.entity && this._gotBary ? this._bary : null
        }
        set bary(e) {
            e ? (this._bary[0] = e[0], this._bary[1] = e[1], this._bary[2] = e[2], this._gotBary = !0) : this._gotBary = !1
        }
        get worldNormal() {
            return this.entity && this._gotWorldNormal ? this._worldNormal : null
        }
        set worldNormal(e) {
            e ? (this._worldNormal[0] = e[0], this._worldNormal[1] = e[1], this._worldNormal[2] = e[2], this._gotWorldNormal = !0) : this._gotWorldNormal = !1
        }
        get uv() {
            return this.entity && this._gotUV ? this._uv : null
        }
        set uv(e) {
            e ? (this._uv[0] = e[0], this._uv[1] = e[1], this._gotUV = !0) : this._gotUV = !1
        }
        reset() {
            this.entity = null, this.primIndex = -1, this.primitive = null, this._gotCanvasPos = !1, this._gotOrigin = !1, this._gotDirection = !1, this._gotIndices = !1, this._gotLocalPos = !1, this._gotWorldPos = !1, this._gotViewPos = !1, this._gotBary = !1, this._gotWorldNormal = !1, this._gotUV = !1
        }
    }
    class sh {
        constructor(e, t, i) {
            if (this.allocated = !1, this.compiled = !1, this.handle = e.createShader(t), this.handle) {
                if (this.allocated = !0, e.shaderSource(this.handle, i), e.compileShader(this.handle), this.compiled = e.getShaderParameter(this.handle, e.COMPILE_STATUS), !this.compiled && !e.isContextLost()) {
                    const t = i.split("\n"),
                        r = [];
                    for (let e = 0; e < t.length; e++) r.push(e + 1 + ": " + t[e] + "\n");
                    this.errors = [], this.errors.push(""), this.errors.push(e.getShaderInfoLog(this.handle)), this.errors = this.errors.concat(r.join(""))
                }
            } else this.errors = ["Failed to allocate"]
        }
        destroy() {}
    }
    class oh {
        constructor(e, t) {
            this.bindTexture = function(i, r) {
                return !!i.bind(r) && (e.uniform1i(t, r), !0)
            }
        }
    }
    class ah {
        constructor(e, t) {
            this._gl = e, this.location = t
        }
        bindArrayBuffer(e) {
            e && (e.bind(), this._gl.enableVertexAttribArray(this.location), this._gl.vertexAttribPointer(this.location, e.itemSize, e.itemType, e.normalized, e.stride, e.offset))
        }
    }
    const lh = new Cc({});

    function ch(e) {
        const t = [];
        let i, r;
        for (let n = 0, s = e.length; n < s; n++) i = e[n], r = i.indexOf("/"), r > 0 && "/" === i.charAt(r + 1) && (i = i.substring(0, r)), t.push(i);
        return t.join("\n")
    }

    function hh(e) {
        console.error(e.join("\n"))
    }
    class dh {
        constructor(e, t) {
            this.id = lh.addItem({}), this.source = t, this.init(e)
        }
        init(e) {
            if (this.gl = e, this.allocated = !1, this.compiled = !1, this.linked = !1, this.validated = !1, this.errors = null, this.uniforms = {}, this.samplers = {}, this.attributes = {}, this._vertexShader = new sh(e, e.VERTEX_SHADER, ch(this.source.vertex)), this._fragmentShader = new sh(e, e.FRAGMENT_SHADER, ch(this.source.fragment)), !this._vertexShader.allocated) return this.errors = ["Vertex shader failed to allocate"].concat(this._vertexShader.errors), void hh(this.errors);
            if (!this._fragmentShader.allocated) return this.errors = ["Fragment shader failed to allocate"].concat(this._fragmentShader.errors), void hh(this.errors);
            if (this.allocated = !0, !this._vertexShader.compiled) return this.errors = ["Vertex shader failed to compile"].concat(this._vertexShader.errors), void hh(this.errors);
            if (!this._fragmentShader.compiled) return this.errors = ["Fragment shader failed to compile"].concat(this._fragmentShader.errors), void hh(this.errors);
            let t, i, r, n, s;
            if (this.compiled = !0, this.handle = e.createProgram(), !this.handle) return void(this.errors = ["Failed to allocate program"]);
            if (e.attachShader(this.handle, this._vertexShader.handle), e.attachShader(this.handle, this._fragmentShader.handle), e.linkProgram(this.handle), this.linked = e.getProgramParameter(this.handle, e.LINK_STATUS), this.validated = !0, !this.linked || !this.validated) return this.errors = [], this.errors.push(""), this.errors.push(e.getProgramInfoLog(this.handle)), this.errors.push("\nVertex shader:\n"), this.errors = this.errors.concat(this.source.vertex), this.errors.push("\nFragment shader:\n"), this.errors = this.errors.concat(this.source.fragment), void hh(this.errors);
            const o = e.getProgramParameter(this.handle, e.ACTIVE_UNIFORMS);
            for (i = 0; i < o; ++i) r = e.getActiveUniform(this.handle, i), r && (n = r.name, "\0" === n[n.length - 1] && (n = n.substr(0, n.length - 1)), s = e.getUniformLocation(this.handle, n), r.type === e.SAMPLER_2D || r.type === e.SAMPLER_CUBE || 35682 === r.type ? this.samplers[n] = new oh(e, s) : this.uniforms[n] = s);
            const a = e.getProgramParameter(this.handle, e.ACTIVE_ATTRIBUTES);
            for (i = 0; i < a; i++) t = e.getActiveAttrib(this.handle, i), t && (s = e.getAttribLocation(this.handle, t.name), this.attributes[t.name] = new ah(e, s));
            this.allocated = !0
        }
        bind() {
            this.allocated && this.gl.useProgram(this.handle)
        }
        getLocation(e) {
            if (this.allocated) return this.uniforms[e]
        }
        getAttribute(e) {
            if (this.allocated) return this.attributes[e]
        }
        bindTexture(e, t, i) {
            if (!this.allocated) return !1;
            const r = this.samplers[e];
            return !!r && r.bindTexture(t, i)
        }
        destroy() {
            this.allocated && (lh.removeItem(this.id), this.gl.deleteProgram(this.handle), this.gl.deleteShader(this._vertexShader.handle), this.gl.deleteShader(this._fragmentShader.handle), this.handle = null, this.attributes = null, this.uniforms = null, this.samplers = null, this.allocated = !1)
        }
    }
    class uh {
        constructor(e, t, i, r, n, s, o, a, l) {
            switch (this._gl = e, this.type = t, this.allocated = !1, i.constructor) {
                case Uint8Array:
                    this.itemType = e.UNSIGNED_BYTE, this.itemByteSize = 1;
                    break;
                case Int8Array:
                    this.itemType = e.BYTE, this.itemByteSize = 1;
                    break;
                case Uint16Array:
                    this.itemType = e.UNSIGNED_SHORT, this.itemByteSize = 2;
                    break;
                case Int16Array:
                    this.itemType = e.SHORT, this.itemByteSize = 2;
                    break;
                case Uint32Array:
                    this.itemType = e.UNSIGNED_INT, this.itemByteSize = 4;
                    break;
                case Int32Array:
                    this.itemType = e.INT, this.itemByteSize = 4;
                    break;
                default:
                    this.itemType = e.FLOAT, this.itemByteSize = 4
            }
            this.usage = s, this.length = 0, this.dataLength = r, this.numItems = 0, this.itemSize = n, this.normalized = !!o, this.stride = a || 0, this.offset = l || 0, this._allocate(i)
        }
        _allocate(e) {
            if (this.allocated = !1, this._handle = this._gl.createBuffer(), !this._handle) throw "Failed to allocate WebGL ArrayBuffer";
            this._handle && (this._gl.bindBuffer(this.type, this._handle), this._gl.bufferData(this.type, e.length > this.dataLength ? e.slice(0, this.dataLength) : e, this.usage), this._gl.bindBuffer(this.type, null), this.length = e.length, this.numItems = this.length / this.itemSize, this.allocated = !0)
        }
        setData(e, t) {
            this.allocated && (e.length + (t || 0) > this.length ? (this.destroy(), this._allocate(e)) : (this._gl.bindBuffer(this.type, this._handle), t || 0 === t ? this._gl.bufferSubData(this.type, t * this.itemByteSize, e) : this._gl.bufferData(this.type, e, this.usage), this._gl.bindBuffer(this.type, null)))
        }
        bind() {
            this.allocated && this._gl.bindBuffer(this.type, this._handle)
        }
        unbind() {
            this.allocated && this._gl.bindBuffer(this.type, null)
        }
        destroy() {
            this.allocated && (this._gl.deleteBuffer(this._handle), this._handle = null, this.allocated = !1)
        }
    }
    class ph {
        constructor(e, t) {
            this.scene = e, this.aabb = $c.AABB3(), this.rtcCenter = $c.vec3(t), this.rtcCenterHash = this.rtcCenter.join(), this.numMarkers = 0, this.markers = {}, this.markerList = [], this.markerIndices = {}, this.positions = [], this.indices = [], this.positionsBuf = null, this.lenPositionsBuf = 0, this.indicesBuf = null, this.sectionPlanesActive = [], this.culledBySectionPlanes = !1, this.occlusionTestList = [], this.lenOcclusionTestList = 0, this.pixels = [], this.aabbDirty = !1, this.markerListDirty = !1, this.positionsDirty = !0, this.occlusionTestListDirty = !1
        }
        addMarker(e) {
            this.markers[e.id] = e, this.markerListDirty = !0, this.numMarkers++
        }
        markerWorldPosUpdated(e) {
            if (!this.markers[e.id]) return;
            const t = this.markerIndices[e.id];
            this.positions[3 * t + 0] = e.worldPos[0], this.positions[3 * t + 1] = e.worldPos[1], this.positions[3 * t + 2] = e.worldPos[2], this.positionsDirty = !0
        }
        removeMarker(e) {
            delete this.markers[e.id], this.markerListDirty = !0, this.numMarkers--
        }
        update() {
            this.markerListDirty && (this._buildMarkerList(), this.markerListDirty = !1, this.positionsDirty = !0, this.occlusionTestListDirty = !0), this.positionsDirty && (this._buildPositions(), this.positionsDirty = !1, this.aabbDirty = !0, this.vbosDirty = !0), this.aabbDirty && (this._buildAABB(), this.aabbDirty = !1), this.vbosDirty && (this._buildVBOs(), this.vbosDirty = !1), this.occlusionTestListDirty && this._buildOcclusionTestList(), this._updateActiveSectionPlanes()
        }
        _buildMarkerList() {
            for (var e in this.numMarkers = 0, this.markers) this.markers.hasOwnProperty(e) && (this.markerList[this.numMarkers] = this.markers[e], this.markerIndices[e] = this.numMarkers, this.numMarkers++);
            this.markerList.length = this.numMarkers
        }
        _buildPositions() {
            let e = 0;
            for (let t = 0; t < this.numMarkers; t++)
                if (this.markerList[t]) {
                    const i = this.markerList[t].worldPos;
                    this.positions[e++] = i[0], this.positions[e++] = i[1], this.positions[e++] = i[2], this.indices[t] = t
                } this.positions.length = 3 * this.numMarkers, this.indices.length = this.numMarkers
        }
        _buildAABB() {
            const e = this.aabb;
            $c.collapseAABB3(e), $c.expandAABB3Points3(e, this.positions);
            const t = this.rtcCenter;
            e[0] += t[0], e[1] += t[1], e[2] += t[2], e[3] += t[0], e[4] += t[1], e[5] += t[2]
        }
        _buildVBOs() {
            if (this.positionsBuf) {
                if (this.lenPositionsBuf === this.positions.length) return void this.positionsBuf.setData(this.positions);
                this.positionsBuf.destroy(), this.positionsBuf = null, this.indicesBuf.destroy(), this.indicesBuf = null
            }
            const e = this.scene.canvas.gl,
                t = 3 * this.numMarkers,
                i = this.numMarkers;
            this.positionsBuf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this.positions), t, 3, e.STATIC_DRAW), this.indicesBuf = new uh(e, e.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), i, 1, e.STATIC_DRAW), this.lenPositionsBuf = this.positions.length
        }
        _buildOcclusionTestList() {
            const e = this.scene.canvas,
                t = this.scene.camera.perspective.near,
                i = e.boundary,
                r = i[2],
                n = i[3];
            let s = 0;
            this.lenOcclusionTestList = 0;
            for (let e = 0; e < this.numMarkers; e++) {
                const i = this.markerList[e];
                if (i.viewPos[2] > -t) {
                    i._setVisible(!1);
                    continue
                }
                const o = i.canvasPos,
                    a = o[0],
                    l = o[1];
                a + 10 < 0 || l + 10 < 0 || a - 10 > r || l - 10 > n ? i._setVisible(!1) : !i.entity || i.entity.visible ? i.occludable ? (this.occlusionTestList[this.lenOcclusionTestList++] = i, this.pixels[s++] = a, this.pixels[s++] = l) : i._setVisible(!0) : i._setVisible(!1)
            }
        }
        _updateActiveSectionPlanes() {
            const e = this.scene._sectionPlanesState.sectionPlanes,
                t = e.length;
            if (t > 0)
                for (let i = 0; i < t; i++) {
                    const t = e[i];
                    if (t.active) {
                        const e = $c.planeAABB3Intersect(t.dir, t.dist, this.aabb);
                        if (-1 === e) return void(this.culledBySectionPlanes = !0);
                        const r = 0 === e;
                        this.sectionPlanesActive[i] = r
                    } else this.sectionPlanesActive[i] = !1
                }
            this.culledBySectionPlanes = !1
        }
        destroy() {
            this.markers = {}, this.markerList.length = 0, this.positionsBuf && this.positionsBuf.destroy(), this.indicesBuf && this.indicesBuf.destroy()
        }
    }
    const fh = $c.vec3([1, 0, 0]),
        _h = $c.vec3();
    class mh {
        constructor(e) {
            this._scene = e, this._occlusionLayers = {}, this._occlusionLayersList = [], this._occlusionLayersListDirty = !1, this._shaderSource = null, this._program = null, this._shaderSourceHash = null, this._shaderSourceDirty = !0, this._programDirty = !1, this._markersToOcclusionLayersMap = {}, this._onCameraViewMatrix = e.camera.on("viewMatrix", () => {
                this._occlusionTestListDirty = !0
            }), this._onCameraProjMatrix = e.camera.on("projMatrix", () => {
                this._occlusionTestListDirty = !0
            }), this._onCanvasBoundary = e.canvas.on("boundary", () => {
                this._occlusionTestListDirty = !0
            })
        }
        addMarker(e) {
            const t = e.rtcCenter.join();
            let i = this._occlusionLayers[t];
            i || (i = new ph(this._scene, e.rtcCenter), this._occlusionLayers[i.rtcCenterHash] = i, this._occlusionLayersListDirty = !0), i.addMarker(e), this._markersToOcclusionLayersMap[e.id] = i
        }
        markerWorldPosUpdated(e) {
            const t = this._markersToOcclusionLayersMap[e.id];
            if (!t) return void e.error("Marker has not been added to OcclusionTester");
            const i = e.rtcCenter.join();
            if (i !== t.rtcCenterHash) {
                1 === t.numMarkers ? (t.destroy(), delete this._occlusionLayers[t.rtcCenterHash], this._occlusionLayersListDirty = !0) : t.removeMarker(e);
                let r = this._occlusionLayers[i];
                r || (r = new ph(this._scene, e.rtcCenter), this._occlusionLayers[i] = t, this._occlusionLayersListDirty = !0), r.addMarker(e), this._markersToOcclusionLayersMap[e.id] = r
            } else t.markerWorldPosUpdated(e)
        }
        removeMarker(e) {
            const t = e.rtcCenter.join();
            let i = this._occlusionLayers[t];
            i && (1 === i.numMarkers ? (i.destroy(), delete this._occlusionLayers[i.rtcCenterHash], this._occlusionLayersListDirty = !0) : i.removeMarker(e), delete this._markersToOcclusionLayersMap[e.id])
        }
        get needOcclusionTest() {
            return this._occlusionTestListDirty
        }
        bindRenderBuf() {
            const e = [this._scene.canvas.canvas.id, this._scene._sectionPlanesState.getHash()].join(";");
            if (e !== this._shaderSourceHash && (this._shaderSourceHash = e, this._shaderSourceDirty = !0), this._shaderSourceDirty && (this._buildShaderSource(), this._shaderSourceDirty = !1, this._programDirty = !0), this._programDirty && (this._buildProgram(), this._programDirty = !1, this._occlusionTestListDirty = !0), this._occlusionLayersListDirty && (this._buildOcclusionLayersList(), this._occlusionLayersListDirty = !1), this._occlusionTestListDirty) {
                for (let e = 0, t = this._occlusionLayersList.length; e < t; e++) {
                    this._occlusionLayersList[e].occlusionTestListDirty = !0
                }
                this._occlusionTestListDirty = !1
            }
            this._readPixelBuf = this._readPixelBuf || (this._readPixelBuf = new rh(this._scene.canvas.canvas, this._scene.canvas.gl)), this._readPixelBuf.bind(), this._readPixelBuf.clear()
        }
        _buildOcclusionLayersList() {
            let e = 0;
            for (let t in this._occlusionLayers) this._occlusionLayers.hasOwnProperty(t) && (this._occlusionLayersList[e++] = this._occlusionLayers[t]);
            this._occlusionLayersList.length = e
        }
        _buildShaderSource() {
            this._shaderSource = {
                vertex: this._buildVertexShaderSource(),
                fragment: this._buildFragmentShaderSource()
            }
        }
        _buildVertexShaderSource() {
            const e = this._scene._sectionPlanesState.sectionPlanes.length > 0,
                t = [];
            return t.push("// OcclusionTester vertex shader"), t.push("attribute vec3 position;"), t.push("uniform mat4 modelMatrix;"), t.push("uniform mat4 viewMatrix;"), t.push("uniform mat4 projMatrix;"), e && t.push("varying vec4 vWorldPosition;"), t.push("void main(void) {"), t.push("vec4 worldPosition = vec4(position, 1.0); "), t.push("   vec4 viewPosition = viewMatrix * worldPosition;"), e && t.push("   vWorldPosition = worldPosition;"), t.push("   gl_Position = projMatrix * viewPosition;"), t.push("   gl_PointSize = 20.0;"), t.push("}"), t
        }
        _buildFragmentShaderSource() {
            const e = this._scene._sectionPlanesState,
                t = e.sectionPlanes.length > 0,
                i = [];
            if (i.push("// OcclusionTester fragment shader"), i.push("precision lowp float;"), t) {
                i.push("varying vec4 vWorldPosition;");
                for (var r = 0; r < e.sectionPlanes.length; r++) i.push("uniform bool sectionPlaneActive" + r + ";"), i.push("uniform vec3 sectionPlanePos" + r + ";"), i.push("uniform vec3 sectionPlaneDir" + r + ";")
            }
            if (i.push("void main(void) {"), t) {
                i.push("  float dist = 0.0;");
                for (r = 0; r < e.sectionPlanes.length; r++) i.push("if (sectionPlaneActive" + r + ") {"), i.push("   dist += clamp(dot(-sectionPlaneDir" + r + ".xyz, vWorldPosition.xyz - sectionPlanePos" + r + ".xyz), 0.0, 1000.0);"), i.push("}");
                i.push("  if (dist > 0.0) { discard; }")
            }
            return i.push("   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); "), i.push("}"), i
        }
        _buildProgram() {
            this._program && this._program.destroy();
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position")
        }
        drawMarkers() {
            const e = this._scene,
                t = e.canvas.gl,
                i = this._program,
                r = e._sectionPlanesState,
                n = e.camera;
            i.bind(), t.uniformMatrix4fv(this._uProjMatrix, !1, n._project._state.matrix);
            for (let e = 0, i = this._occlusionLayersList.length; e < i; e++) {
                const i = this._occlusionLayersList[e];
                if (i.update(), i.culledBySectionPlanes) continue;
                const s = i.rtcCenter;
                t.uniformMatrix4fv(this._uViewMatrix, !1, Qc(n.viewMatrix, s));
                const o = r.sectionPlanes.length;
                if (o > 0) {
                    const e = r.sectionPlanes;
                    for (let r = 0; r < o; r++) {
                        const n = this._uSectionPlanes[r],
                            o = i.sectionPlanesActive[r];
                        if (t.uniform1i(n.active, o ? 1 : 0), o) {
                            const i = e[r];
                            t.uniform3fv(n.pos, eh(i.dist, i.dir, s, _h)), t.uniform3fv(n.dir, i.dir)
                        }
                    }
                }
                this._aPosition.bindArrayBuffer(i.positionsBuf);
                const a = i.indicesBuf;
                a.bind(), t.drawElements(t.POINTS, a.numItems, a.itemType, 0)
            }
        }
        doOcclusionTest() {
            {
                const e = 255 * fh[0],
                    t = 255 * fh[1],
                    i = 255 * fh[2];
                for (let r = 0, n = this._occlusionLayersList.length; r < n; r++) {
                    const n = this._occlusionLayersList[r];
                    for (let r = 0; r < n.lenOcclusionTestList; r++) {
                        const s = n.occlusionTestList[r],
                            o = 2 * r,
                            a = this._readPixelBuf.read(n.pixels[o], n.pixels[o + 1]),
                            l = a[0] === e && a[1] === t && a[2] === i;
                        s._setVisible(l)
                    }
                }
            }
        }
        unbindRenderBuf() {
            this._readPixelBuf.unbind()
        }
        destroy() {
            if (!this.destroyed) {
                for (let e = 0, t = this._occlusionLayersList.length; e < t; e++) {
                    this._occlusionLayersList[e].destroy()
                }
                this._program && this._program.destroy(), this._scene.camera.off(this._onCameraViewMatrix), this._scene.camera.off(this._onCameraProjMatrix), this._scene.canvas.off(this._onCanvasBoundary), this.destroyed = !0
            }
        }
    }
    const gh = $c.vec2();
    class vh {
        constructor(e) {
            this._scene = e, this._program = null, this._programError = !1, this._aPosition = null, this._aUV = null, this._uDepthTexture = "uDepthTexture", this._uCameraNear = null, this._uCameraFar = null, this._uCameraProjectionMatrix = null, this._uCameraInverseProjectionMatrix = null, this._uScale = null, this._uIntensity = null, this._uBias = null, this._uKernelRadius = null, this._uMinResolution = null, this._uRandomSeed = null, this._uvBuf = null, this._positionsBuf = null, this._indicesBuf = null, this.init()
        }
        init() {
            const e = this._scene.canvas.gl;
            if (this._program = new dh(e, {
                    vertex: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                    \n                    attribute vec3 aPosition;\n                    attribute vec2 aUV;            \n                    varying vec2 vUV;\n                    void main () {\n                        gl_Position = vec4(aPosition, 1.0);\n                        vUV = aUV;\n                    }"],
                    fragment: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                    \n                    #extension GL_OES_standard_derivatives : require\n                \n                #define NORMAL_TEXTURE 0\n                #define PI 3.14159265359\n                #define PI2 6.28318530718\n                #define EPSILON 1e-6\n                #define NUM_SAMPLES 7\n                #define NUM_RINGS 4\n\n                precision highp float;\n            \n                varying vec2        vUV;\n            \n                uniform sampler2D   uDepthTexture;\n               \n                uniform float       uCameraNear;\n                uniform float       uCameraFar;\n                uniform mat4        uProjectMatrix;\n                uniform mat4        uInverseProjectMatrix;\n                \n                uniform bool        uPerspective;\n\n                uniform float       uScale;\n                uniform float       uIntensity;\n                uniform float       uBias;\n                uniform float       uKernelRadius;\n                uniform float       uMinResolution;\n                uniform vec2        uViewport;\n                uniform float       uRandomSeed;\n\n                float pow2( const in float x ) { return x*x; }\n                \n                highp float rand( const in vec2 uv ) {\n                    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n                    highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n                    return fract(sin(sn) * c);\n                }\n\n                vec3 packNormalToRGB( const in vec3 normal ) {\n                    return normalize( normal ) * 0.5 + 0.5;\n                }\n\n                vec3 unpackRGBToNormal( const in vec3 rgb ) {\n                    return 2.0 * rgb.xyz - 1.0;\n                }\n\n                const float packUpscale = 256. / 255.;\n                const float unpackDownScale = 255. / 256.; \n\n                const vec3 packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n                const vec4 unPackFactors = unpackDownScale / vec4( packFactors, 1. );   \n\n                const float shiftRights = 1. / 256.;\n\n                vec4 packDepthToRGBA( const in float v ) {\n                    vec4 r = vec4( fract( v * packFactors ), v );\n                    r.yzw -= r.xyz * shiftRights; \n                    return r * packUpscale;\n                }\n\n                float unpackRGBAToDepth( const in vec4 v ) {\n                    return dot( v, unPackFactors );\n                }\n                \n                float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n                    return ( near * far ) / ( ( far - near ) * invClipZ - far );\n                }\n\n                float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n                    return linearClipZ * ( near - far ) - near;\n                }\n                \n                float getDepth( const in vec2 screenPos ) {\n                \treturn unpackRGBAToDepth( texture2D( uDepthTexture, screenPos ) );\n                }\n\n                float getViewZ( const in float depth ) {\n                     if (uPerspective) {\n                         return perspectiveDepthToViewZ( depth, uCameraNear, uCameraFar );\n                     } else {\n                        return orthographicDepthToViewZ( depth, uCameraNear, uCameraFar );\n                     }\n                }\n\n                vec3 getViewPos( const in vec2 screenPos, const in float depth, const in float viewZ ) {\n                \tfloat clipW = uProjectMatrix[2][3] * viewZ + uProjectMatrix[3][3];\n                \tvec4 clipPosition = vec4( ( vec3( screenPos, depth ) - 0.5 ) * 2.0, 1.0 );\n                \tclipPosition *= clipW; \n                \treturn ( uInverseProjectMatrix * clipPosition ).xyz;\n                }\n\n                vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPos ) {               \n                    return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );\n                }\n\n                float scaleDividedByCameraFar;\n                float minResolutionMultipliedByCameraFar;\n\n                float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\n                \tvec3 viewDelta = sampleViewPosition - centerViewPosition;\n                \tfloat viewDistance = length( viewDelta );\n                \tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\n                \treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - uBias) / (1.0 + pow2( scaledScreenDistance ) );\n                }\n\n                const float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );\n                const float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );\n\n                float getAmbientOcclusion( const in vec3 centerViewPosition ) {\n            \n                \tscaleDividedByCameraFar = uScale / uCameraFar;\n                \tminResolutionMultipliedByCameraFar = uMinResolution * uCameraFar;\n                \tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUV );\n\n                \tfloat angle = rand( vUV + uRandomSeed ) * PI2;\n                \tvec2 radius = vec2( uKernelRadius * INV_NUM_SAMPLES ) / uViewport;\n                \tvec2 radiusStep = radius;\n\n                \tfloat occlusionSum = 0.0;\n                \tfloat weightSum = 0.0;\n\n                \tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {\n                \t\tvec2 sampleUv = vUV + vec2( cos( angle ), sin( angle ) ) * radius;\n                \t\tradius += radiusStep;\n                \t\tangle += ANGLE_STEP;\n\n                \t\tfloat sampleDepth = getDepth( sampleUv );\n                \t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {\n                \t\t\tcontinue;\n                \t\t}\n\n                \t\tfloat sampleViewZ = getViewZ( sampleDepth );\n                \t\tvec3 sampleViewPosition = getViewPos( sampleUv, sampleDepth, sampleViewZ );\n                \t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\n                \t\tweightSum += 1.0;\n                \t}\n\n                \tif( weightSum == 0.0 ) discard;\n\n                \treturn occlusionSum * ( uIntensity / weightSum );\n                }\n\n                void main() {\n                \n                \tfloat centerDepth = getDepth( vUV );\n                \t\n                \tif( centerDepth >= ( 1.0 - EPSILON ) ) {\n                \t\tdiscard;\n                \t}\n\n                \tfloat centerViewZ = getViewZ( centerDepth );\n                \tvec3 viewPosition = getViewPos( vUV, centerDepth, centerViewZ );\n\n                \tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );\n                \n                \tgl_FragColor = packDepthToRGBA(  1.0- ambientOcclusion );\n                }"]
                }), this._program.errors) return console.error(this._program.errors.join("\n")), void(this._programError = !0);
            const t = new Float32Array([1, 1, 0, 1, 0, 0, 1, 0]),
                i = new Float32Array([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0]),
                r = new Uint8Array([0, 1, 2, 0, 2, 3]);
            this._positionsBuf = new uh(e, e.ARRAY_BUFFER, i, i.length, 3, e.STATIC_DRAW), this._uvBuf = new uh(e, e.ARRAY_BUFFER, t, t.length, 2, e.STATIC_DRAW), this._indicesBuf = new uh(e, e.ELEMENT_ARRAY_BUFFER, r, r.length, 1, e.STATIC_DRAW), this._program.bind(), this._uCameraNear = this._program.getLocation("uCameraNear"), this._uCameraFar = this._program.getLocation("uCameraFar"), this._uCameraProjectionMatrix = this._program.getLocation("uProjectMatrix"), this._uCameraInverseProjectionMatrix = this._program.getLocation("uInverseProjectMatrix"), this._uPerspective = this._program.getLocation("uPerspective"), this._uScale = this._program.getLocation("uScale"), this._uIntensity = this._program.getLocation("uIntensity"), this._uBias = this._program.getLocation("uBias"), this._uKernelRadius = this._program.getLocation("uKernelRadius"), this._uMinResolution = this._program.getLocation("uMinResolution"), this._uViewport = this._program.getLocation("uViewport"), this._uRandomSeed = this._program.getLocation("uRandomSeed"), this._aPosition = this._program.getAttribute("aPosition"), this._aUV = this._program.getAttribute("aUV")
        }
        render(e) {
            if (this._programError) return;
            this._getInverseProjectMat || (this._getInverseProjectMat = (() => {
                let e = !0;
                this._scene.camera.on("projMatrix", (function() {
                    e = !0
                }));
                const t = $c.mat4();
                return () => (e && $c.inverseMat4(r.camera.projMatrix, t), t)
            })());
            const t = this._scene.canvas.gl,
                i = this._program,
                r = this._scene,
                n = r.sao,
                s = t.drawingBufferWidth,
                o = t.drawingBufferHeight,
                a = r.camera.project._state,
                l = a.near,
                c = a.far,
                h = a.matrix,
                d = this._getInverseProjectMat(),
                u = Math.random(),
                p = "perspective" === r.camera.projection;
            gh[0] = s, gh[1] = o, t.getExtension("OES_standard_derivatives"), t.viewport(0, 0, s, o), t.clearColor(0, 0, 0, 1), t.disable(t.DEPTH_TEST), t.disable(t.BLEND), t.frontFace(t.CCW), t.clear(t.COLOR_BUFFER_BIT), i.bind(), t.uniform1f(this._uCameraNear, l), t.uniform1f(this._uCameraFar, c), t.uniformMatrix4fv(this._uCameraProjectionMatrix, !1, h), t.uniformMatrix4fv(this._uCameraInverseProjectionMatrix, !1, d), t.uniform1i(this._uPerspective, p), t.uniform1f(this._uScale, n.scale), t.uniform1f(this._uIntensity, n.intensity), t.uniform1f(this._uBias, n.bias), t.uniform1f(this._uKernelRadius, n.kernelRadius), t.uniform1f(this._uMinResolution, n.minResolution), t.uniform2fv(this._uViewport, gh), t.uniform1f(this._uRandomSeed, u), i.bindTexture(this._uDepthTexture, e, 0), this._aUV.bindArrayBuffer(this._uvBuf), this._aPosition.bindArrayBuffer(this._positionsBuf), this._indicesBuf.bind(), t.drawElements(t.TRIANGLES, this._indicesBuf.numItems, this._indicesBuf.itemType, 0)
        }
        destroy() {
            this._program.destroy()
        }
    }
    class bh {
        constructor(e) {
            this._scene = e, this._program = null, this._programError = !1, this._uColorTexture = "uColorTexture", this._uOcclusionTexture = "uOcclusionTexture", this._aPosition = null, this._aUV = null, this._uvBuf = null, this._positionsBuf = null, this._indicesBuf = null, this.init()
        }
        init() {
            const e = this._scene.canvas.gl;
            if (this._program = new dh(e, {
                    vertex: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                    \n                    attribute   vec3 aPosition;\n                    attribute   vec2 aUV;\n            \n                    varying     vec2 vUV;\n            \n                    void main () {\n                       gl_Position = vec4(aPosition, 1.0);\n                       vUV = aUV;\n                    }"],
                    fragment: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                    \n                    \n                    const float packUpscale = 256. / 255.;\n                    const float unpackDownScale = 255. / 256.; \n\n                    const vec3 packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n                    const vec4 unPackFactors = unpackDownScale / vec4( packFactors, 1. );   \n\n                    const float shiftRights = 1. / 256.;\n\n                    vec4 packDepthToRGBA( const in float v ) {\n                        vec4 r = vec4( fract( v * packFactors ), v );\n                        r.yzw -= r.xyz * shiftRights; \n                        return r * packUpscale;\n                    }\n                \n                    varying vec2        vUV;\n                    \n                    uniform sampler2D   uColorTexture;\n                    uniform sampler2D   uOcclusionTexture;\n                    \n                    uniform float       uOcclusionScale;\n                    uniform float       uOcclusionCutoff;\n                    \n                    float unpackRGBAToDepth( const in vec4 v ) {\n                        return dot( v, unPackFactors );\n                    }\n                    \n                    void main() {\n                        vec4 color      = texture2D(uColorTexture, vUV);\n                        float ambient   = smoothstep(uOcclusionCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, vUV))) * uOcclusionScale;\n                        gl_FragColor    = vec4(color.rgb * (ambient), color.a);\n                    }"]
                }), this._program.errors) return console.error(this._program.errors.join("\n")), void(this._programError = !0);
            const t = new Float32Array([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0]),
                i = new Float32Array([1, 1, 0, 1, 0, 0, 1, 0]),
                r = new Uint8Array([0, 1, 2, 0, 2, 3]);
            this._positionsBuf = new uh(e, e.ARRAY_BUFFER, t, t.length, 3, e.STATIC_DRAW), this._uvBuf = new uh(e, e.ARRAY_BUFFER, i, i.length, 2, e.STATIC_DRAW), this._indicesBuf = new uh(e, e.ELEMENT_ARRAY_BUFFER, r, r.length, 1, e.STATIC_DRAW), this._uColorTexture = "uColorTexture", this._uOcclusionTexture = "uOcclusionTexture", this._aPosition = this._program.getAttribute("aPosition"), this._aUV = this._program.getAttribute("aUV"), this._uOcclusionScale = this._program.getLocation("uOcclusionScale"), this._uOcclusionCutoff = this._program.getLocation("uOcclusionCutoff")
        }
        render(e, t) {
            if (this._programError) return;
            const i = this._scene.canvas.gl,
                r = this._program,
                n = i.drawingBufferWidth,
                s = i.drawingBufferHeight;
            i.viewport(0, 0, n, s), i.clearColor(0, 0, 0, 1), i.disable(i.DEPTH_TEST), i.disable(i.BLEND), i.frontFace(i.CCW), i.clear(i.COLOR_BUFFER_BIT), r.bind(), r.bindTexture(this._uColorTexture, e, 0), r.bindTexture(this._uOcclusionTexture, t, 2), i.uniform1f(this._uOcclusionScale, 1), i.uniform1f(this._uOcclusionCutoff, .01), this._aUV.bindArrayBuffer(this._uvBuf), this._aPosition.bindArrayBuffer(this._positionsBuf), this._indicesBuf.bind(), i.drawElements(i.TRIANGLES, this._indicesBuf.numItems, this._indicesBuf.itemType, 0)
        }
        destroy() {
            this._program.destroy()
        }
    }
    class yh {
        constructor(e) {
            this._scene = e, this._texelOffset = new Float32Array([0, 0]), this._program = null, this._programError = !1, this._uDepthTexture = "uDepthTexture", this._uOcclusionTexture = "uOcclusionTexture", this._aPosition = null, this._aUV = null, this._uvBuf = null, this._positionsBuf = null, this._indicesBuf = null, this.init()
        }
        init() {
            const e = this._scene.canvas.gl;
            if (this._program = new dh(e, {
                    vertex: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                    \n                    attribute   vec3 aPosition;\n                    attribute   vec2 aUV;\n            \n                    varying     vec2 vUV;\n            \n                    void main () {\n                       gl_Position = vec4(aPosition, 1.0);\n                       vUV = aUV;\n                    }"],
                    fragment: ["#ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                    precision highp int;\n                    #else\n                    precision mediump float;\n                    precision mediump int;\n                    #endif\n                       \n                    varying vec2        vUV;\n                    \n                    uniform sampler2D   uDepthTexture;\n                    uniform sampler2D   uOcclusionTexture;\n                    \n                    uniform float       uOcclusionScale;\n                    uniform float       uOcclusionCutoff;\n                    \n                    uniform vec2        uTexelOffset;\n                    \n                    const float unpackDownScale = 255. / 256.; \n                                   \n                    const vec3 packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n                    const vec4 unPackFactors = unpackDownScale / vec4( packFactors, 1. );  \n                \n                    float unpackRGBAToDepth( const in vec4 v ) {\n                        return dot( v, unPackFactors );\n                    }\n                    \n                    const float packUpscale = 256. / 255.;\n       \n                    const float shiftRights = 1. / 256.;\n\n                    vec4 packDepthToRGBA( const in float v ) {\n                        vec4 r = vec4( fract( v * packFactors ), v );\n                        r.yzw -= r.xyz * shiftRights; \n                        return r * packUpscale;\n                    }\n                \n                    void main() {\n                    \n                        float centerOcclusion = unpackRGBAToDepth(texture2D(uOcclusionTexture, vUV));\n                        float centerDepth   = unpackRGBAToDepth(texture2D(uDepthTexture, vUV));\n                        \n                        float gaussian[5];\n                        \n                        gaussian[0] = 0.153170;\n                        gaussian[1] = 0.144893;\n                        gaussian[2] = 0.122649;\n                        gaussian[3] = 0.092902;\n                        gaussian[4] = 0.062970;\n                        \n                        float totalWeight = gaussian[0];\n                        float sum = centerOcclusion * totalWeight;\n            \n                        for (int r = 1; r <= 4; ++r) {\n                            \n                            vec2 uv = vUV + uTexelOffset * float(r) * 2.0;\n                            \n                            float occlusionSample = unpackRGBAToDepth(texture2D(uOcclusionTexture, uv));\n                            float depthSample = unpackRGBAToDepth(texture2D(uDepthTexture, uv));\n                            \n                            float weight = gaussian[r];\n                            weight *= max(0.0, 1.0 - 10.0 * abs(depthSample - centerDepth));\n                            \n                            sum += occlusionSample * weight;\n                            \n                            totalWeight += weight;\n                        }\n                        \n                        for (int r = 1; r <= 4; ++r) {\n                            \n                            vec2 uv = vUV + uTexelOffset * -float(r) * 2.0;\n                            \n                            float occlusionSample = unpackRGBAToDepth(texture2D(uOcclusionTexture, uv));\n                            float depthSample = unpackRGBAToDepth(texture2D(uDepthTexture, uv));\n                            \n                            float weight = gaussian[r];\n                            weight *= max(0.0, 1.0 - 10.0 * abs(depthSample - centerDepth));\n                            \n                            sum += occlusionSample * weight;\n                            \n                            totalWeight += weight;\n                        }\n                     \n                        float blurredOcclusion =  (sum / (totalWeight + 0.0001));\n                     \n                        gl_FragColor = packDepthToRGBA(blurredOcclusion);\n                       \n                    }"]
                }), this._program.errors) return console.error(this._program.errors.join("\n")), void(this._programError = !0);
            const t = new Float32Array([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0]),
                i = new Float32Array([1, 1, 0, 1, 0, 0, 1, 0]),
                r = new Uint8Array([0, 1, 2, 0, 2, 3]);
            this._positionsBuf = new uh(e, e.ARRAY_BUFFER, t, t.length, 3, e.STATIC_DRAW), this._uvBuf = new uh(e, e.ARRAY_BUFFER, i, i.length, 2, e.STATIC_DRAW), this._indicesBuf = new uh(e, e.ELEMENT_ARRAY_BUFFER, r, r.length, 1, e.STATIC_DRAW), this._uDepthTexture = "uDepthTexture", this._uOcclusionTexture = "uOcclusionTexture", this._aPosition = this._program.getAttribute("aPosition"), this._aUV = this._program.getAttribute("aUV"), this._uOcclusionScale = this._program.getLocation("uOcclusionScale"), this._uOcclusionCutoff = this._program.getLocation("uOcclusionCutoff"), this._uTexelOffset = this._program.getLocation("uTexelOffset")
        }
        render(e, t, i) {
            if (this._programError) return;
            const r = this._scene.canvas.gl,
                n = this._program,
                s = r.drawingBufferWidth,
                o = r.drawingBufferHeight;
            0 === i ? (this._texelOffset[0] = 1 / s, this._texelOffset[1] = 0) : (this._texelOffset[0] = 0, this._texelOffset[1] = 1 / o), r.viewport(0, 0, s, o), r.clearColor(0, 0, 0, 1), r.disable(r.DEPTH_TEST), r.disable(r.BLEND), r.frontFace(r.CCW), r.clear(r.COLOR_BUFFER_BIT), n.bind(), n.bindTexture(this._uDepthTexture, e, 1), n.bindTexture(this._uOcclusionTexture, t, 2), r.uniform1f(this._uOcclusionScale, .9), r.uniform1f(this._uOcclusionCutoff, .3), r.uniform2fv(this._uTexelOffset, this._texelOffset), this._aUV.bindArrayBuffer(this._uvBuf), this._aPosition.bindArrayBuffer(this._positionsBuf), this._indicesBuf.bind(), r.drawElements(r.TRIANGLES, this._indicesBuf.numItems, this._indicesBuf.itemType, 0)
        }
        destroy() {
            this._program.destroy()
        }
    }
    const wh = function(e, t) {
        t = t || {};
        const i = new th(e),
            r = e.canvas.canvas,
            n = e.canvas.gl,
            s = !!t.transparent,
            o = t.alphaDepthMask,
            a = new Cc({});
        let l = {},
            c = {},
            h = !0,
            d = !0,
            u = !0;
        const p = new rh(r, n),
            f = new rh(r, n),
            _ = new rh(r, n),
            m = new rh(r, n),
            g = new rh(r, n);
        let v = !1;
        const b = new vh(e),
            y = new yh(e),
            w = new bh(e);

        function M() {
            h && (! function() {
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const t = l[e],
                            i = t.drawableMap,
                            r = t.drawableListPreCull;
                        let n = 0;
                        for (let e in i) i.hasOwnProperty(e) && (r[n++] = i[e]);
                        r.length = n
                    }
            }(), h = !1, d = !0), d && (! function() {
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const t = l[e];
                        t.isStateSortable && t.drawableListPreCull.sort(t.stateSortCompare)
                    }
            }(), d = !1, u = !0), u && function() {
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const t = l[e],
                            i = t.drawableListPreCull,
                            r = t.drawableList;
                        let n = 0;
                        for (let e = 0, t = i.length; e < t; e++) {
                            const t = i[e];
                            t.rebuildRenderFlags(), t.renderFlags.culled || (r[n++] = t)
                        }
                        r.length = n
                    }
            }()
        }

        function A(e) {
            if (!e.castsShadow) return;
            const t = e.getShadowRenderBuf();
            if (t) {
                t.bind(), i.reset(), i.backfaces = !0, i.frontface = !0, i.shadowViewMatrix = e.getShadowViewMatrix(), i.shadowProjMatrix = e.getShadowProjMatrix(), n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 1), n.enable(n.DEPTH_TEST), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT);
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const t = l[e].drawableList;
                        for (let e = 0, r = t.length; e < r; e++) {
                            const r = t[e];
                            !1 !== r.visible && r.castsShadow && r.drawShadow && (r.renderFlags.normalFillOpaque && r.drawShadow(i))
                        }
                    } t.unbind()
            }
        }
        this._occlusionTester = null, this.needStateSort = function() {
            d = !0
        }, this.shadowsDirty = function() {}, this.imageDirty = function() {
            u = !0
        }, this.webglContextLost = function() {}, this.webglContextRestored = function(e) {
            m.webglContextRestored(e), g.webglContextRestored(e), p.webglContextRestored(e), f.webglContextRestored(e), _.webglContextRestored(e), b.init(), y.init(), w.init(), u = !0
        }, this.addDrawable = function(e, t) {
            const i = t.type;
            if (!i) return void console.error("Renderer#addDrawable() : drawable with ID " + e + " has no 'type' - ignoring");
            let r = l[i];
            r || (r = {
                type: t.type,
                count: 0,
                isStateSortable: t.isStateSortable,
                stateSortCompare: t.stateSortCompare,
                drawableMap: {},
                drawableListPreCull: [],
                drawableList: []
            }, l[i] = r), r.count++, r.drawableMap[e] = t, c[e] = t, h = !0
        }, this.removeDrawable = function(e) {
            const t = c[e];
            if (!t) return void console.error("Renderer#removeDrawable() : drawable not found with ID " + e + " - ignoring");
            const i = t.type,
                r = l[i];
            --r.count <= 0 ? delete l[i] : delete r.drawableMap[e], delete c[e], h = !0
        }, this.getPickID = function(e) {
            return a.addItem(e)
        }, this.putPickID = function(e) {
            a.removeItem(e)
        }, this.clear = function(t) {
            if (t = t || {}, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), s) n.clearColor(0, 0, 0, 0);
            else {
                const i = t.ambientColor || e.canvas.backgroundColor || this.lights.getAmbientColor();
                n.clearColor(i[0], i[1], i[2], 1)
            }
            n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT | n.STENCIL_BUFFER_BIT)
        }, this.render = function(t) {
            (t = t || {}).force && (u = !0), M(), u && (! function(t) {
                Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint && n.getExtension("OES_element_index_uint");
                e.sao.possible && function(t) {
                    const r = e.sao;
                    p.bind(), p.clear(),
                        function(e) {
                            i.reset(), i.pass = e.pass, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.frontFace(n.CCW), n.enable(n.CULL_FACE), n.depthMask(!0), !1 !== e.clear && n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT | n.STENCIL_BUFFER_BIT);
                            for (let e in l)
                                if (l.hasOwnProperty(e)) {
                                    const t = l[e].drawableList;
                                    for (let e = 0, r = t.length; e < r; e++) {
                                        const r = t[e];
                                        !0 !== r.culled && !1 !== r.visible && r.drawDepth && (r.renderFlags.normalFillOpaque && r.drawDepth(i))
                                    }
                                }
                        }(t), p.unbind(), f.bind(), f.clear(), b.render(p.getTexture(), null), f.unbind(), r.blur && (_.bind(), _.clear(), y.render(p.getTexture(), f.getTexture(), 0), _.unbind(), f.bind(), f.clear(), y.render(p.getTexture(), _.getTexture(), 1), f.unbind())
                }(t);
                (function() {
                    let t = e._lightsState.lights;
                    for (let e = 0, i = t.length; e < i; e++) {
                        const i = t[e];
                        i.castsShadow && A(i)
                    }
                })(), x(t)
            }(t), Pc.frame.frameCount++, u = !1)
        };
        const x = function() {
            const t = [],
                r = [],
                a = [],
                c = [],
                h = [],
                d = [],
                u = [],
                p = [],
                _ = [],
                m = [],
                g = [],
                v = [],
                b = [],
                y = [],
                w = [],
                M = [];
            return function(A) {
                const x = e._lightsState.getAmbientColor();
                if (i.reset(), i.pass = A.pass, i.withSAO = !1, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), s) n.clearColor(0, 0, 0, 0);
                else {
                    const t = e.canvas.backgroundColor || x;
                    n.clearColor(t[0], t[1], t[2], 1)
                }
                n.enable(n.DEPTH_TEST), n.frontFace(n.CCW), n.enable(n.CULL_FACE), n.depthMask(!0), n.lineWidth(1), i.lineWidth = 1;
                const C = e.sao.possible;
                let P, k, E;
                i.occlusionTexture = C ? f.getTexture() : null;
                const I = Date.now();
                !1 !== A.clear && n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT | n.STENCIL_BUFFER_BIT);
                let T = 0,
                    D = 0,
                    S = 0,
                    B = 0,
                    j = 0,
                    L = 0,
                    R = 0,
                    O = 0,
                    F = 0,
                    N = 0,
                    U = 0,
                    H = 0,
                    V = 0,
                    z = 0,
                    $ = 0,
                    W = 0;
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const n = l[e].drawableList;
                        for (P = 0, k = n.length; P < k; P++) {
                            if (E = n[P], !0 === E.culled || !1 === E.visible) continue;
                            const e = E.renderFlags;
                            e.normalFillOpaque && (C && E.saoEnabled ? t[T++] = E : E.drawNormalFillOpaque(i)), e.normalEdgesOpaque && (r[D++] = E), e.normalFillTransparent && (a[S++] = E), e.normalEdgesTransparent && (c[B++] = E), e.xrayedFillTransparent && (u[R++] = E), e.xrayedFillOpaque && (h[j++] = E), e.xrayedEdgesTransparent && (p[O++] = E), e.xrayedEdgesOpaque && (d[L++] = E), e.highlightedFillTransparent && (g[U++] = E), e.highlightedFillOpaque && (_[F++] = E), e.highlightedEdgesTransparent && (v[H++] = E), e.highlightedEdgesOpaque && (m[N++] = E), e.selectedFillTransparent && (w[$++] = E), e.selectedFillOpaque && (b[V++] = E), e.selectedEdgesTransparent && (M[W++] = E), e.selectedEdgesOpaque && (y[z++] = E)
                        }
                    } if (T > 0)
                    for (i.withSAO = !0, P = 0; P < T; P++) t[P].drawNormalFillOpaque(i);
                if (D > 0)
                    for (P = 0; P < D; P++) r[P].drawNormalEdgesOpaque(i);
                if (j > 0)
                    for (P = 0; P < j; P++) h[P].drawXRayedFillOpaque(i);
                if (L > 0)
                    for (P = 0; P < L; P++) d[P].drawXRayedEdgesOpaque(i);
                if (R > 0 || O > 0 || S > 0) {
                    if (n.enable(n.CULL_FACE), n.enable(n.BLEND), s ? (n.blendEquation(n.FUNC_ADD), n.blendFuncSeparate(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA, n.ONE, n.ONE_MINUS_SRC_ALPHA)) : (n.blendEquation(n.FUNC_ADD), n.blendFunc(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA)), i.backfaces = !1, o || n.depthMask(!1), O > 0)
                        for (P = 0; P < O; P++) p[P].drawXRayedEdgesTransparent(i);
                    if (R > 0)
                        for (P = 0; P < R; P++) u[P].drawXRayedFillTransparent(i);
                    if (S > 0)
                        for (P = 0; P < S; P++) E = a[P], E.drawNormalFillTransparent(i);
                    if (B > 0)
                        for (P = 0; P < B; P++) E = c[P], E.drawNormalEdgesTransparent(i);
                    n.disable(n.BLEND), o || n.depthMask(!0)
                }
                if (F > 0 || N > 0) {
                    if (i.lastProgramId = null, n.clear(n.DEPTH_BUFFER_BIT), N > 0)
                        for (P = 0; P < N; P++) m[P].drawHighlightedEdgesOpaque(i);
                    if (F > 0)
                        for (P = 0; P < F; P++) _[P].drawHighlightedFillOpaque(i)
                }
                if (U > 0 || H > 0 || F > 0) {
                    if (i.lastProgramId = null, n.clear(n.DEPTH_BUFFER_BIT), n.enable(n.CULL_FACE), n.enable(n.BLEND), s ? (n.blendEquation(n.FUNC_ADD), n.blendFuncSeparate(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA, n.ONE, n.ONE_MINUS_SRC_ALPHA)) : n.blendFunc(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA), H > 0)
                        for (P = 0; P < H; P++) v[P].drawHighlightedEdgesTransparent(i);
                    if (U > 0)
                        for (P = 0; P < U; P++) g[P].drawHighlightedFillTransparent(i);
                    n.disable(n.BLEND)
                }
                if (V > 0 || z > 0) {
                    if (i.lastProgramId = null, n.clear(n.DEPTH_BUFFER_BIT), z > 0)
                        for (P = 0; P < z; P++) y[P].drawSelectedEdgesOpaque(i);
                    if (V > 0)
                        for (P = 0; P < V; P++) b[P].drawSelectedFillOpaque(i)
                }
                if ($ > 0 || W > 0) {
                    if (i.lastProgramId = null, n.clear(n.DEPTH_BUFFER_BIT), n.enable(n.CULL_FACE), n.enable(n.BLEND), s ? (n.blendEquation(n.FUNC_ADD), n.blendFuncSeparate(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA, n.ONE, n.ONE_MINUS_SRC_ALPHA)) : n.blendFunc(n.SRC_ALPHA, n.ONE_MINUS_SRC_ALPHA), W > 0)
                        for (P = 0; P < W; P++) M[P].drawSelectedEdgesTransparent(i);
                    if ($ > 0)
                        for (P = 0; P < $; P++) w[P].drawSelectedFillTransparent(i);
                    n.disable(n.BLEND)
                }
                const q = Date.now(),
                    G = Pc.frame;
                G.renderTime = (q - I) / 1e3, G.drawElements = i.drawElements, G.drawElements = i.drawElements, G.useProgram = i.useProgram, G.bindTexture = i.bindTexture, G.bindArray = i.bindArray;
                const Y = Gc.MAX_TEXTURE_UNITS;
                for (let e = 0; e < Y; e++) n.activeTexture(n.TEXTURE0 + e);
                n.bindTexture(n.TEXTURE_CUBE_MAP, null), n.bindTexture(n.TEXTURE_2D, null);
                const Z = Gc.MAX_VERTEX_ATTRIBS;
                for (let e = 0; e < Z; e++) n.disableVertexAttribArray(e)
            }
        }();
        this.pick = function() {
            const t = $c.vec3(),
                s = $c.mat4(),
                o = $c.mat4(),
                c = $c.vec3([0, 1, 0]),
                h = ($c.frustumMat4(-1, 1, -1, 1, .1, 2e3), new nh);
            return function(d, u = h) {
                let p, f, _, g, v;
                u.reset(), M(), Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint && n.getExtension("OES_element_index_uint");
                let b = null,
                    y = null;
                if (u.pickSurface = d.pickSurface, d.canvasPos) p = d.canvasPos[0], f = d.canvasPos[1], b = e.camera.viewMatrix, y = e.camera.projMatrix, u.canvasPos = d.canvasPos;
                else {
                    const i = $c.frustumMat4(-1, 1, -1, 1, .1, e.camera.project.far, s);
                    d.matrix ? (b = d.matrix, y = i) : (_ = d.origin || $c.vec3([0, 0, 0]), g = d.direction || $c.vec3([0, 0, 1]), v = $c.addVec3(_, g, t), b = $c.lookAtMat4v(_, v, c, o), y = i, u.origin = _, u.direction = g), p = .5 * r.clientWidth, f = .5 * r.clientHeight
                }
                m.bind();
                const w = function(e, t, r, s, o) {
                    let c, h;
                    i.reset(), i.backfaces = !0, i.frontface = !0, i.pickViewMatrix = r, i.pickProjMatrix = s, i.pickInvisible = !!o.pickInvisible, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.enable(n.CULL_FACE), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT);
                    const d = o.includeEntityIds,
                        u = o.excludeEntityIds;
                    for (let e in l)
                        if (l.hasOwnProperty(e)) {
                            const t = l[e].drawableList;
                            for (c = 0, h = t.length; c < h; c++) {
                                const e = t[c];
                                !e.drawPickMesh || !0 === e.culled || !0 !== o.pickInvisible && !1 === e.visible || !1 === e.pickable || (d && !d[e.id] || u && u[e.id] || e.drawPickMesh(i))
                            }
                        } const p = m.read(Math.round(e), Math.round(t));
                    let f = p[0] + 256 * p[1] + 256 * p[2] * 256 + 256 * p[3] * 256 * 256;
                    if (f < 0) return;
                    return a.items[f]
                }(p, f, b, y, d);
                if (!w) return m.unbind(), null;
                const A = w.delegatePickedEntity ? w.delegatePickedEntity() : w;
                return A ? (d.pickSurface && (w.canPickTriangle && w.canPickTriangle() ? (! function(e, t, r, s, o, a) {
                    if (!e.drawPickTriangles) return;
                    i.reset(), i.backfaces = !0, i.frontface = !0, i.pickViewMatrix = s, i.pickProjMatrix = o, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.enable(n.CULL_FACE), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT), e.drawPickTriangles(i);
                    const l = m.read(t, r);
                    let c = l[0] + 256 * l[1] + 256 * l[2] * 256 + 256 * l[3] * 256 * 256;
                    c *= 3, a.primIndex = c
                }(w, p, f, b, y, u), w.pickTriangleSurface(b, y, u)) : w.canPickWorldPos && w.canPickWorldPos() && (C(w, p, f, b, y, u), function(e, t, r, s, o, a) {
                    i.reset(), i.backfaces = !0, i.frontface = !0, i.pickViewMatrix = s, i.pickProjMatrix = o, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.enable(n.CULL_FACE), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT), e.drawPickNormals(i);
                    const l = m.read(Math.round(t), Math.round(r)),
                        c = [l[0] / 256 - .5, l[1] / 256 - .5, l[2] / 256 - .5];
                    $c.normalizeVec3(c), a.worldNormal = c
                }(w, p, f, b, y, u))), m.unbind(), u.entity = A, u) : null
            }
        }();
        const C = function() {
            const e = $c.vec4(),
                t = $c.vec4(),
                s = $c.vec4(),
                o = $c.vec4(),
                a = $c.vec4(),
                l = $c.mat4(),
                c = $c.mat4(),
                h = $c.mat4();
            return function(d, u, p, f, _, g) {
                i.reset(), i.backfaces = !0, i.frontface = !0, i.pickViewMatrix = f, i.pickProjMatrix = _, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.enable(n.CULL_FACE), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT), d.drawPickDepths(i);
                const v = function(e) {
                        const t = [e[0] / 256, e[1] / 256, e[2] / 256, e[3] / 256];
                        return $c.dotVec4(t, [1 / 16777216, 1 / 65536, 1 / 256, 1])
                    }(m.read(Math.round(u), Math.round(p))),
                    b = (u - r.width / 2) / (r.width / 2),
                    y = -(p - r.height / 2) / (r.height / 2),
                    w = d.rtcCenter;
                let M;
                if (w) {
                    const e = Qc(f, w, l);
                    M = $c.mulMat4(_, e, c)
                } else M = $c.mulMat4(_, f, c);
                const A = $c.inverseMat4(M, h);
                e[0] = b, e[1] = y, e[2] = -1, e[3] = 1;
                let x = $c.transformVec4(A, e);
                x = $c.mulVec4Scalar(x, 1 / x[3]), t[0] = b, t[1] = y, t[2] = 1, t[3] = 1;
                let C = $c.transformVec4(A, t);
                C = $c.mulVec4Scalar(C, 1 / C[3]);
                const P = $c.subVec3(C, x, s),
                    k = $c.addVec3(x, $c.mulVec4Scalar(P, v, o), a);
                w && $c.addVec3(k, w), g.worldPos = k
            }
        }();
        this.addMarker = function(t) {
            this._occlusionTester = this._occlusionTester || new mh(e), this._occlusionTester.addMarker(t)
        }, this.markerWorldPosUpdated = function(e) {
            this._occlusionTester.markerWorldPosUpdated(e)
        }, this.removeMarker = function(e) {
            this._occlusionTester.removeMarker(e)
        }, this.doOcclusionTest = function() {
            if (this._occlusionTester && this._occlusionTester.needOcclusionTest) {
                M(), this._occlusionTester.bindRenderBuf(), i.reset(), i.backfaces = !0, i.frontface = !0, n.viewport(0, 0, n.drawingBufferWidth, n.drawingBufferHeight), n.clearColor(0, 0, 0, 0), n.enable(n.DEPTH_TEST), n.enable(n.CULL_FACE), n.disable(n.BLEND), n.clear(n.COLOR_BUFFER_BIT | n.DEPTH_BUFFER_BIT);
                for (let e in l)
                    if (l.hasOwnProperty(e)) {
                        const t = l[e].drawableList;
                        for (let e = 0, r = t.length; e < r; e++) {
                            const r = t[e];
                            r.drawOcclusion && !0 !== r.culled && !1 !== r.visible && !1 !== r.pickable && r.drawOcclusion(i)
                        }
                    } this._occlusionTester.drawMarkers(i), this._occlusionTester.doOcclusionTest(), this._occlusionTester.unbindRenderBuf()
            }
        }, this.readPixels = function(e, t, i, r) {
            let n, s, o, a;
            for (g.bind(), g.clear(), this.render({
                    force: !0,
                    opaqueOnly: r
                }), s = 0; s < i; s++) o = 2 * s, a = 4 * s, n = g.read(e[o], e[o + 1]), t[a] = n[0], t[a + 1] = n[1], t[a + 2] = n[2], t[a + 3] = n[3];
            g.unbind(), u = !0
        }, this.beginSnapshot = function() {
            g.bind(), g.clear(), v = !0
        }, this.renderSnapshot = function() {
            v && (g.clear(), this.render({
                force: !0,
                opaqueOnly: !1
            }), u = !0)
        }, this.readSnapshot = function(e) {
            return g.readImage(e)
        }, this.endSnapshot = function() {
            v && (g.unbind(), v = !1)
        }, this.destroy = function() {
            l = {}, c = {}, m.destroy(), g.destroy(), p.destroy(), f.destroy(), _.destroy(), b.destroy(), y.destroy(), w.destroy(), this._occlusionTester && this._occlusionTester.destroy()
        }
    };
    class Mh extends Wc {
        constructor(e, t = {}) {
            super(e, t), this.KEY_BACKSPACE = 8, this.KEY_TAB = 9, this.KEY_ENTER = 13, this.KEY_SHIFT = 16, this.KEY_CTRL = 17, this.KEY_ALT = 18, this.KEY_PAUSE_BREAK = 19, this.KEY_CAPS_LOCK = 20, this.KEY_ESCAPE = 27, this.KEY_PAGE_UP = 33, this.KEY_PAGE_DOWN = 34, this.KEY_END = 35, this.KEY_HOME = 36, this.KEY_LEFT_ARROW = 37, this.KEY_UP_ARROW = 38, this.KEY_RIGHT_ARROW = 39, this.KEY_DOWN_ARROW = 40, this.KEY_INSERT = 45, this.KEY_DELETE = 46, this.KEY_NUM_0 = 48, this.KEY_NUM_1 = 49, this.KEY_NUM_2 = 50, this.KEY_NUM_3 = 51, this.KEY_NUM_4 = 52, this.KEY_NUM_5 = 53, this.KEY_NUM_6 = 54, this.KEY_NUM_7 = 55, this.KEY_NUM_8 = 56, this.KEY_NUM_9 = 57, this.KEY_A = 65, this.KEY_B = 66, this.KEY_C = 67, this.KEY_D = 68, this.KEY_E = 69, this.KEY_F = 70, this.KEY_G = 71, this.KEY_H = 72, this.KEY_I = 73, this.KEY_J = 74, this.KEY_K = 75, this.KEY_L = 76, this.KEY_M = 77, this.KEY_N = 78, this.KEY_O = 79, this.KEY_P = 80, this.KEY_Q = 81, this.KEY_R = 82, this.KEY_S = 83, this.KEY_T = 84, this.KEY_U = 85, this.KEY_V = 86, this.KEY_W = 87, this.KEY_X = 88, this.KEY_Y = 89, this.KEY_Z = 90, this.KEY_LEFT_WINDOW = 91, this.KEY_RIGHT_WINDOW = 92, this.KEY_SELECT_KEY = 93, this.KEY_NUMPAD_0 = 96, this.KEY_NUMPAD_1 = 97, this.KEY_NUMPAD_2 = 98, this.KEY_NUMPAD_3 = 99, this.KEY_NUMPAD_4 = 100, this.KEY_NUMPAD_5 = 101, this.KEY_NUMPAD_6 = 102, this.KEY_NUMPAD_7 = 103, this.KEY_NUMPAD_8 = 104, this.KEY_NUMPAD_9 = 105, this.KEY_MULTIPLY = 106, this.KEY_ADD = 107, this.KEY_SUBTRACT = 109, this.KEY_DECIMAL_POINT = 110, this.KEY_DIVIDE = 111, this.KEY_F1 = 112, this.KEY_F2 = 113, this.KEY_F3 = 114, this.KEY_F4 = 115, this.KEY_F5 = 116, this.KEY_F6 = 117, this.KEY_F7 = 118, this.KEY_F8 = 119, this.KEY_F9 = 120, this.KEY_F10 = 121, this.KEY_F11 = 122, this.KEY_F12 = 123, this.KEY_NUM_LOCK = 144, this.KEY_SCROLL_LOCK = 145, this.KEY_SEMI_COLON = 186, this.KEY_EQUAL_SIGN = 187, this.KEY_COMMA = 188, this.KEY_DASH = 189, this.KEY_PERIOD = 190, this.KEY_FORWARD_SLASH = 191, this.KEY_GRAVE_ACCENT = 192, this.KEY_OPEN_BRACKET = 219, this.KEY_BACK_SLASH = 220, this.KEY_CLOSE_BRACKET = 221, this.KEY_SINGLE_QUOTE = 222, this.KEY_SPACE = 32, this.element = t.element, this.altDown = !1, this.ctrlDown = !1, this.mouseDownLeft = !1, this.mouseDownMiddle = !1, this.mouseDownRight = !1, this.keyDown = [], this.enabled = !0, this.keyboardEnabled = !0, this.mouseover = !1, this.mouseCanvasPos = $c.vec2(), this._bindEvents()
        }
        _bindEvents() {
            if (!this._eventsBound) {
                document.addEventListener("keydown", this._keyDownListener = e => {
                    this.enabled && this.keyboardEnabled && "INPUT" !== e.target.tagName && "TEXTAREA" !== e.target.tagName && (e.keyCode === this.KEY_CTRL ? this.ctrlDown = !0 : e.keyCode === this.KEY_ALT ? this.altDown = !0 : e.keyCode === this.KEY_SHIFT && (this.shiftDown = !0), this.keyDown[e.keyCode] = !0, this.fire("keydown", e.keyCode, !0))
                }, !1), document.addEventListener("keyup", this._keyUpListener = e => {
                    this.enabled && this.keyboardEnabled && "INPUT" !== e.target.tagName && "TEXTAREA" !== e.target.tagName && (e.keyCode === this.KEY_CTRL ? this.ctrlDown = !1 : e.keyCode === this.KEY_ALT ? this.altDown = !1 : e.keyCode === this.KEY_SHIFT && (this.shiftDown = !1), this.keyDown[e.keyCode] = !1, this.fire("keyup", e.keyCode, !0))
                }), this.element.addEventListener("mouseenter", this._mouseEnterListener = e => {
                    this.enabled && (this.mouseover = !0, this._getMouseCanvasPos(e), this.fire("mouseenter", this.mouseCanvasPos, !0))
                }), this.element.addEventListener("mouseleave", this._mouseLeaveListener = e => {
                    this.enabled && (this.mouseover = !1, this._getMouseCanvasPos(e), this.fire("mouseleave", this.mouseCanvasPos, !0))
                }), this.element.addEventListener("mousedown", this._mouseDownListener = e => {
                    if (this.enabled) {
                        switch (e.which) {
                            case 1:
                                this.mouseDownLeft = !0;
                                break;
                            case 2:
                                this.mouseDownMiddle = !0;
                                break;
                            case 3:
                                this.mouseDownRight = !0
                        }
                        this._getMouseCanvasPos(e), this.element.focus(), this.fire("mousedown", this.mouseCanvasPos, !0), this.mouseover && e.preventDefault()
                    }
                }), document.addEventListener("mouseup", this._mouseUpListener = e => {
                    if (this.enabled) {
                        switch (e.which) {
                            case 1:
                                this.mouseDownLeft = !1;
                                break;
                            case 2:
                                this.mouseDownMiddle = !1;
                                break;
                            case 3:
                                this.mouseDownRight = !1
                        }
                        this.fire("mouseup", this.mouseCanvasPos, !0)
                    }
                }, !0), document.addEventListener("click", this._clickListener = e => {
                    if (this.enabled) {
                        switch (e.which) {
                            case 1:
                                this.mouseDownLeft = !1, this.mouseDownRight = !1;
                                break;
                            case 2:
                                this.mouseDownMiddle = !1;
                                break;
                            case 3:
                                this.mouseDownLeft = !1, this.mouseDownRight = !1
                        }
                        this._getMouseCanvasPos(e), this.fire("click", this.mouseCanvasPos, !0), this.mouseover && e.preventDefault()
                    }
                }), document.addEventListener("dblclick", this._dblClickListener = e => {
                    if (this.enabled) {
                        switch (e.which) {
                            case 1:
                                this.mouseDownLeft = !1, this.mouseDownRight = !1;
                                break;
                            case 2:
                                this.mouseDownMiddle = !1;
                                break;
                            case 3:
                                this.mouseDownLeft = !1, this.mouseDownRight = !1
                        }
                        this._getMouseCanvasPos(e), this.fire("dblclick", this.mouseCanvasPos, !0), this.mouseover && e.preventDefault()
                    }
                }), this.element.addEventListener("mousemove", this._mouseMoveListener = e => {
                    this.enabled && (this._getMouseCanvasPos(e), this.fire("mousemove", this.mouseCanvasPos, !0), this.mouseover && e.preventDefault())
                }), this.element.addEventListener("wheel", this._mouseWheelListener = (e, t) => {
                    if (!this.enabled) return;
                    const i = Math.max(-1, Math.min(1, 40 * -e.deltaY));
                    this.fire("mousewheel", i, !0)
                }, {
                    passive: !0
                }); {
                    let e, t;
                    const i = 2;
                    this.on("mousedown", i => {
                        e = i[0], t = i[1]
                    }), this.on("mouseup", r => {
                        e >= r[0] - i && e <= r[0] + i && t >= r[1] - i && t <= r[1] + i && this.fire("mouseclicked", r, !0)
                    })
                } {
                    const e = {
                        "landscape-primary": 90,
                        "landscape-secondary": -90,
                        "portrait-secondary": 180,
                        "portrait-primary": 0
                    };
                    let t, i;
                    const r = $c.vec3(),
                        n = $c.vec3(),
                        s = {
                            orientation: null,
                            orientationAngle: 0
                        },
                        o = {
                            orientationAngle: 0,
                            acceleration: null,
                            accelerationIncludingGravity: n,
                            rotationRate: $c.vec3(),
                            interval: 0
                        },
                        a = {
                            alpha: 0,
                            beta: 0,
                            gamma: 0,
                            absolute: !1
                        };
                    window.OrientationChangeEvent && window.addEventListener("orientationchange", this._orientationchangedListener = () => {
                        t = window.screen.orientation || window.screen.mozOrientation || window.msOrientation || null, i = t && e[t] || 0, s.orientation = t, s.orientationAngle = i, this.fire("orientationchange", s)
                    }, !1), window.DeviceMotionEvent && window.addEventListener("devicemotion", this._deviceMotionListener = e => {
                        o.interval = e.interval, o.orientationAngle = i;
                        const t = e.acceleration;
                        t ? (r[0] = t.x, r[1] = t.y, r[2] = t.z, o.acceleration = r) : o.acceleration = null;
                        const s = e.accelerationIncludingGravity;
                        s ? (n[0] = s.x, n[1] = s.y, n[2] = s.z, o.accelerationIncludingGravity = n) : o.accelerationIncludingGravity = null, o.rotationRate = e.rotationRate, this.fire("devicemotion", o)
                    }, !1), window.DeviceOrientationEvent && window.addEventListener("deviceorientation", this._deviceOrientListener = e => {
                        a.gamma = e.gamma, a.beta = e.beta, a.alpha = e.alpha, a.absolute = e.absolute, this.fire("deviceorientation", a)
                    }, !1)
                }
                this._eventsBound = !0
            }
        }
        _unbindEvents() {
            this._eventsBound && (document.removeEventListener("keydown", this._keyDownListener), document.removeEventListener("keyup", this._keyUpListener), this.element.removeEventListener("mouseenter", this._mouseEnterListener), this.element.removeEventListener("mouseleave", this._mouseLeaveListener), this.element.removeEventListener("mousedown", this._mouseDownListener), document.removeEventListener("mouseup", this._mouseDownListener), document.removeEventListener("click", this._clickListener), document.removeEventListener("dblclick", this._dblClickListener), this.element.removeEventListener("mousemove", this._mouseMoveListener), this.element.removeEventListener("wheel", this._mouseWheelListener), window.OrientationChangeEvent && window.removeEventListener("orientationchange", this._orientationchangedListener), window.DeviceMotionEvent && window.removeEventListener("devicemotion", this._deviceMotionListener), window.DeviceOrientationEvent && window.removeEventListener("deviceorientation", this._deviceOrientListener), this._eventsBound = !1)
        }
        _getMouseCanvasPos(e) {
            if (e) {
                let t = e.target,
                    i = 0,
                    r = 0;
                for (; t.offsetParent;) i += t.offsetLeft, r += t.offsetTop, t = t.offsetParent;
                this.mouseCanvasPos[0] = e.pageX - i, this.mouseCanvasPos[1] = e.pageY - r
            } else e = window.event, this.mouseCanvasPos[0] = e.x, this.mouseCanvasPos[1] = e.y
        }
        setEnabled(e) {
            this.enabled !== e && this.fire("enabled", this.enabled = e)
        }
        getEnabled() {
            return this.enabled
        }
        setKeyboardEnabled(e) {
            this.keyboardEnabled = e
        }
        getKeyboardEnabled() {
            return this.keyboardEnabled
        }
        destroy() {
            super.destroy(), this._unbindEvents()
        }
    }
    const Ah = new Cc({});
    class xh {
        constructor(e) {
            this.id = Ah.addItem({});
            for (const t in e) e.hasOwnProperty(t) && (this[t] = e[t])
        }
        destroy() {
            Ah.removeItem(this.id)
        }
    }
    class Ch extends Wc {
        get type() {
            return "Viewport"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                boundary: [0, 0, 100, 100]
            }), this.boundary = t.boundary, this.autoBoundary = t.autoBoundary
        }
        set boundary(e) {
            if (!this._autoBoundary) {
                if (!e) {
                    const t = this.scene.canvas.boundary;
                    e = [0, 0, t[2], t[3]]
                }
                this._state.boundary = e, this.glRedraw(), this.fire("boundary", this._state.boundary)
            }
        }
        get boundary() {
            return this._state.boundary
        }
        set autoBoundary(e) {
            (e = !!e) !== this._autoBoundary && (this._autoBoundary = e, this._autoBoundary ? this._onCanvasSize = this.scene.canvas.on("boundary", (function(e) {
                const t = e[2],
                    i = e[3];
                this._state.boundary = [0, 0, t, i], this.glRedraw(), this.fire("boundary", this._state.boundary)
            }), this) : this._onCanvasSize && (this.scene.canvas.off(this._onCanvasSize), this._onCanvasSize = null), this.fire("autoBoundary", this._autoBoundary))
        }
        get autoBoundary() {
            return this._autoBoundary
        }
        _getState() {
            return this._state
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    class Ph extends Wc {
        get type() {
            return "Perspective"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                matrix: $c.mat4(),
                near: .1,
                far: 2e3
            }), this._dirty = !1, this._fov = 60, this._canvasResized = this.scene.canvas.on("boundary", this._needUpdate, this), this.fov = t.fov, this.fovAxis = t.fovAxis, this.near = t.near, this.far = t.far
        }
        _update() {
            const e = this.scene.viewport.boundary,
                t = e[2] / e[3];
            let i = this._fov;
            const r = this._fovAxis;
            ("x" === r || "min" === r && t < 1 || "max" === r && t > 1) && (i /= t), i = Math.min(i, 120), $c.perspectiveMat4(i * (Math.PI / 180), t, this._state.near, this._state.far, this._state.matrix), this.glRedraw(), this.fire("matrix", this._state.matrix)
        }
        set fov(e) {
            this._fov = null != e ? e : 60, this._needUpdate(0), this.fire("fov", this._fov)
        }
        get fov() {
            return this._fov
        }
        set fovAxis(e) {
            e = e || "min", this._fovAxis !== e && ("x" !== e && "y" !== e && "min" !== e && (this.error("Unsupported value for 'fovAxis': " + e + " - defaulting to 'min'"), e = "min"), this._fovAxis = e, this._needUpdate(0), this.fire("fovAxis", this._fovAxis))
        }
        get fovAxis() {
            return this._fovAxis
        }
        set near(e) {
            const t = null != e ? e : .1;
            this._state.near !== t && (this._state.near = t, this._needUpdate(0), this.fire("near", this._state.near))
        }
        get near() {
            return this._state.near
        }
        set far(e) {
            const t = null != e ? e : 2e3;
            this._state.far !== t && (this._state.far = t, this._needUpdate(0), this.fire("far", this._state.far))
        }
        get far() {
            return this._state.far
        }
        get matrix() {
            return this._updateScheduled && this._doUpdate(), this._state.matrix
        }
        destroy() {
            super.destroy(), this._state.destroy(), super.destroy(), this.scene.canvas.off(this._canvasResized)
        }
    }
    class kh extends Wc {
        get type() {
            return "Ortho"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                matrix: $c.mat4(),
                near: .1,
                far: 2e3
            }), this.scale = t.scale, this.near = t.near, this.far = t.far, this._onCanvasBoundary = this.scene.canvas.on("boundary", this._needUpdate, this)
        }
        _update() {
            const e = this.scene,
                t = .5 * this._scale,
                i = e.viewport.boundary,
                r = i[2],
                n = i[3],
                s = r / n;
            let o, a, l, c;
            r > n ? (o = -t, a = t, l = t / s, c = -t / s) : (o = -t * s, a = t * s, l = t, c = -t), $c.orthoMat4c(o, a, c, l, this._state.near, this._state.far, this._state.matrix), this.glRedraw(), this.fire("matrix", this._state.matrix)
        }
        set scale(e) {
            null == e && (e = 1), e <= 0 && (e = .01), this._scale = e, this._needUpdate(0), this.fire("scale", this._scale)
        }
        get scale() {
            return this._scale
        }
        set near(e) {
            const t = null != e ? e : .1;
            this._state.near !== t && (this._state.near = t, this._needUpdate(0), this.fire("near", this._state.near))
        }
        get near() {
            return this._state.near
        }
        set far(e) {
            const t = null != e ? e : 2e3;
            this._state.far !== t && (this._state.far = t, this._needUpdate(0), this.fire("far", this._state.far))
        }
        get far() {
            return this._state.far
        }
        get matrix() {
            return this._updateScheduled && this._doUpdate(), this._state.matrix
        }
        destroy() {
            super.destroy(), this._state.destroy(), this.scene.canvas.off(this._onCanvasBoundary)
        }
    }
    class Eh extends Wc {
        get type() {
            return "Frustum"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                matrix: $c.mat4(),
                near: .1,
                far: 1e4
            }), this._left = -1, this._right = 1, this._bottom = -1, this._top = 1, this.left = t.left, this.right = t.right, this.bottom = t.bottom, this.top = t.top, this.near = t.near, this.far = t.far
        }
        _update() {
            $c.frustumMat4(this._left, this._right, this._bottom, this._top, this._state.near, this._state.far, this._state.matrix), this.glRedraw(), this.fire("matrix", this._state.matrix)
        }
        set left(e) {
            this._left = null != e ? e : -1, this._needUpdate(0), this.fire("left", this._left)
        }
        get left() {
            return this._left
        }
        set right(e) {
            this._right = null != e ? e : 1, this._needUpdate(0), this.fire("right", this._right)
        }
        get right() {
            return this._right
        }
        set top(e) {
            this._top = null != e ? e : 1, this._needUpdate(0), this.fire("top", this._top)
        }
        get top() {
            return this._top
        }
        set bottom(e) {
            this._bottom = null != e ? e : -1, this._needUpdate(0), this.fire("bottom", this._bottom)
        }
        get bottom() {
            return this._bottom
        }
        set near(e) {
            this._state.near = null != e ? e : .1, this._needUpdate(0), this.fire("near", this._state.near)
        }
        get near() {
            return this._state.near
        }
        set far(e) {
            this._state.far = null != e ? e : 1e4, this._needUpdate(0), this.fire("far", this._state.far)
        }
        get far() {
            return this._state.far
        }
        get matrix() {
            return this._updateScheduled && this._doUpdate(), this._state.matrix
        }
        destroy() {
            super.destroy(), this._state.destroy(), super.destroy()
        }
    }
    class Ih extends Wc {
        get type() {
            return "CustomProjection"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                matrix: $c.mat4()
            }), this.matrix = t.matrix
        }
        set matrix(e) {
            this._state.matrix.set(e || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this.glRedraw(), this.fire("far", this._state.matrix)
        }
        get matrix() {
            return this._state.matrix
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const Th = $c.vec3(),
        Dh = $c.vec3(),
        Sh = $c.vec3(),
        Bh = $c.vec3(),
        jh = $c.vec3(),
        Lh = $c.vec3(),
        Rh = $c.mat4(),
        Oh = $c.mat4(),
        Fh = $c.vec3(),
        Nh = $c.vec3(),
        Uh = $c.vec3(),
        Hh = $c.vec3();
    class Vh extends Wc {
        get type() {
            return "Camera"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                deviceMatrix: $c.mat4(),
                hasDeviceMatrix: !1,
                matrix: $c.mat4(),
                normalMatrix: $c.mat4()
            }), this._perspective = new Ph(this), this._ortho = new kh(this), this._frustum = new Eh(this), this._customProjection = new Ih(this), this._project = this._perspective, this._eye = $c.vec3([0, 0, 10]), this._look = $c.vec3([0, 0, 0]), this._up = $c.vec3([0, 1, 0]), this._worldUp = $c.vec3([0, 1, 0]), this._worldRight = $c.vec3([1, 0, 0]), this._worldForward = $c.vec3([0, 0, -1]), this.deviceMatrix = t.deviceMatrix, this.eye = t.eye, this.look = t.look, this.up = t.up, this.worldAxis = t.worldAxis, this.gimbalLock = t.gimbalLock, this.constrainPitch = t.constrainPitch, this.projection = t.projection, this._perspective.on("matrix", () => {
                "perspective" === this._projectionType && this.fire("projMatrix", this._perspective.matrix)
            }), this._ortho.on("matrix", () => {
                "ortho" === this._projectionType && this.fire("projMatrix", this._ortho.matrix)
            }), this._frustum.on("matrix", () => {
                "frustum" === this._projectionType && this.fire("projMatrix", this._frustum.matrix)
            }), this._customProjection.on("matrix", () => {
                "customProjection" === this._projectionType && this.fire("projMatrix", this._customProjection.matrix)
            })
        }
        _update() {
            const e = this._state;
            let t;
            "ortho" === this.projection ? ($c.subVec3(this._eye, this._look, Fh), $c.normalizeVec3(Fh, Nh), $c.mulVec3Scalar(Nh, 1e3, Uh), $c.addVec3(this._look, Uh, Hh), t = Hh) : t = this._eye, e.hasDeviceMatrix ? ($c.lookAtMat4v(t, this._look, this._up, Oh), $c.mulMat4(e.deviceMatrix, Oh, e.matrix)) : $c.lookAtMat4v(t, this._look, this._up, e.matrix), $c.inverseMat4(this._state.matrix, this._state.normalMatrix), $c.transposeMat4(this._state.normalMatrix), this.glRedraw(), this.fire("matrix", this._state.matrix), this.fire("viewMatrix", this._state.matrix)
        }
        orbitYaw(e) {
            let t = $c.subVec3(this._eye, this._look, Th);
            $c.rotationMat4v(.0174532925 * e, this._gimbalLock ? this._worldUp : this._up, Rh), t = $c.transformPoint3(Rh, t, Dh), this.eye = $c.addVec3(this._look, t, Sh), this.up = $c.transformPoint3(Rh, this._up, Bh)
        }
        orbitPitch(e) {
            if (this._constrainPitch && (e = $c.dotVec3(this._up, this._worldUp) / $c.DEGTORAD) < 1) return;
            let t = $c.subVec3(this._eye, this._look, Th);
            const i = $c.cross3Vec3($c.normalizeVec3(t, Dh), $c.normalizeVec3(this._up, Sh));
            $c.rotationMat4v(.0174532925 * e, i, Rh), t = $c.transformPoint3(Rh, t, Bh), this.up = $c.transformPoint3(Rh, this._up, jh), this.eye = $c.addVec3(t, this._look, Lh)
        }
        yaw(e) {
            let t = $c.subVec3(this._look, this._eye, Th);
            $c.rotationMat4v(.0174532925 * e, this._gimbalLock ? this._worldUp : this._up, Rh), t = $c.transformPoint3(Rh, t, Dh), this.look = $c.addVec3(t, this._eye, Sh), this._gimbalLock && (this.up = $c.transformPoint3(Rh, this._up, Bh))
        }
        pitch(e) {
            if (this._constrainPitch && (e = $c.dotVec3(this._up, this._worldUp) / $c.DEGTORAD) < 1) return;
            let t = $c.subVec3(this._look, this._eye, Th);
            const i = $c.cross3Vec3($c.normalizeVec3(t, Dh), $c.normalizeVec3(this._up, Sh));
            $c.rotationMat4v(.0174532925 * e, i, Rh), this.up = $c.transformPoint3(Rh, this._up, Lh), t = $c.transformPoint3(Rh, t, Bh), this.look = $c.addVec3(t, this._eye, jh)
        }
        pan(e) {
            const t = $c.subVec3(this._eye, this._look, Th),
                i = [0, 0, 0];
            let r;
            if (0 !== e[0]) {
                const n = $c.cross3Vec3($c.normalizeVec3(t, []), $c.normalizeVec3(this._up, Dh));
                r = $c.mulVec3Scalar(n, e[0]), i[0] += r[0], i[1] += r[1], i[2] += r[2]
            }
            0 !== e[1] && (r = $c.mulVec3Scalar($c.normalizeVec3(this._up, Sh), e[1]), i[0] += r[0], i[1] += r[1], i[2] += r[2]), 0 !== e[2] && (r = $c.mulVec3Scalar($c.normalizeVec3(t, Bh), e[2]), i[0] += r[0], i[1] += r[1], i[2] += r[2]), this.eye = $c.addVec3(this._eye, i, jh), this.look = $c.addVec3(this._look, i, Lh)
        }
        zoom(e) {
            const t = $c.subVec3(this._eye, this._look, Th),
                i = Math.abs($c.lenVec3(t, Dh)),
                r = Math.abs(i + e);
            if (r < .5) return;
            const n = $c.normalizeVec3(t, Sh);
            this.eye = $c.addVec3(this._look, $c.mulVec3Scalar(n, r), Bh)
        }
        set eye(e) {
            this._eye.set(e || [0, 0, 10]), this._needUpdate(0), this.fire("eye", this._eye)
        }
        get eye() {
            return this._eye
        }
        set look(e) {
            this._look.set(e || [0, 0, 0]), this._needUpdate(0), this.fire("look", this._look)
        }
        get look() {
            return this._look
        }
        set up(e) {
            this._up.set(e || [0, 1, 0]), this._needUpdate(0), this.fire("up", this._up)
        }
        get up() {
            return this._up
        }
        set deviceMatrix(e) {
            this._state.deviceMatrix.set(e || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this._state.hasDeviceMatrix = !!e, this._needUpdate(0), this.fire("deviceMatrix", this._state.deviceMatrix)
        }
        get deviceMatrix() {
            return this._state.deviceMatrix
        }
        set worldAxis(e) {
            e = e || [1, 0, 0, 0, 1, 0, 0, 0, 1], this._worldAxis ? this._worldAxis.set(e) : this._worldAxis = $c.vec3(e), this._worldRight[0] = this._worldAxis[0], this._worldRight[1] = this._worldAxis[1], this._worldRight[2] = this._worldAxis[2], this._worldUp[0] = this._worldAxis[3], this._worldUp[1] = this._worldAxis[4], this._worldUp[2] = this._worldAxis[5], this._worldForward[0] = this._worldAxis[6], this._worldForward[1] = this._worldAxis[7], this._worldForward[2] = this._worldAxis[8], this.fire("worldAxis", this._worldAxis)
        }
        get worldAxis() {
            return this._worldAxis
        }
        get worldUp() {
            return this._worldUp
        }
        get xUp() {
            return this._worldUp[0] > this._worldUp[1] && this._worldUp[0] > this._worldUp[2]
        }
        get yUp() {
            return this._worldUp[1] > this._worldUp[0] && this._worldUp[1] > this._worldUp[2]
        }
        get zUp() {
            return this._worldUp[2] > this._worldUp[0] && this._worldUp[2] > this._worldUp[1]
        }
        get worldRight() {
            return this._worldRight
        }
        get worldForward() {
            return this._worldForward
        }
        set gimbalLock(e) {
            this._gimbalLock = !1 !== e, this.fire("gimbalLock", this._gimbalLock)
        }
        get gimbalLock() {
            return this._gimbalLock
        }
        set constrainPitch(e) {
            this._constrainPitch = !!e, this.fire("constrainPitch", this._constrainPitch)
        }
        get eyeLookDist() {
            return $c.lenVec3($c.subVec3(this._look, this._eye, Th))
        }
        get matrix() {
            return this._updateScheduled && this._doUpdate(), this._state.matrix
        }
        get viewMatrix() {
            return this._updateScheduled && this._doUpdate(), this._state.matrix
        }
        get normalMatrix() {
            return this._updateScheduled && this._doUpdate(), this._state.normalMatrix
        }
        get viewNormalMatrix() {
            return this._updateScheduled && this._doUpdate(), this._state.normalMatrix
        }
        get projMatrix() {
            return this[this.projection].matrix
        }
        get perspective() {
            return this._perspective
        }
        get ortho() {
            return this._ortho
        }
        get frustum() {
            return this._frustum
        }
        get customProjection() {
            return this._customProjection
        }
        set projection(e) {
            e = e || "perspective", this._projectionType !== e && ("perspective" === e ? this._project = this._perspective : "ortho" === e ? this._project = this._ortho : "frustum" === e ? this._project = this._frustum : "customProjection" === e ? this._project = this._customProjection : (this.error("Unsupported value for 'projection': " + e + " defaulting to 'perspective'"), this._project = this._perspective, e = "perspective"), this._project._update(), this._projectionType = e, this.glRedraw(), this._update(), this.fire("dirty"), this.fire("projection", this._projectionType), this.fire("projMatrix", this._project.matrix))
        }
        get projection() {
            return this._projectionType
        }
        get project() {
            return this._project
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    class zh extends Wc {
        get type() {
            return "Light"
        }
        get isLight() {
            return !0
        }
        constructor(e, t = {}) {
            super(e, t)
        }
    }
    class $h extends zh {
        get type() {
            return "DirLight"
        }
        constructor(e, t = {}) {
            super(e, t), this._shadowRenderBuf = null, this._shadowViewMatrix = null, this._shadowProjMatrix = null, this._shadowViewMatrixDirty = !0, this._shadowProjMatrixDirty = !0;
            const i = this.scene.camera,
                r = this.scene.canvas;
            this._onCameraViewMatrix = i.on("viewMatrix", () => {
                this._shadowViewMatrixDirty = !0
            }), this._onCameraProjMatrix = i.on("projMatrix", () => {
                this._shadowProjMatrixDirty = !0
            }), this._onCanvasBoundary = r.on("boundary", () => {
                this._shadowProjMatrixDirty = !0
            }), this._state = new xh({
                type: "dir",
                dir: $c.vec3([1, 1, 1]),
                color: $c.vec3([.7, .7, .8]),
                intensity: 1,
                space: t.space || "view",
                castsShadow: !1,
                getShadowViewMatrix: () => {
                    if (this._shadowViewMatrixDirty) {
                        this._shadowViewMatrix || (this._shadowViewMatrix = $c.identityMat4());
                        const e = this.scene.camera,
                            t = this._state.dir,
                            i = e.look,
                            r = [i[0] - t[0], i[1] - t[1], i[2] - t[2]],
                            n = [0, 1, 0];
                        $c.lookAtMat4v(r, i, n, this._shadowViewMatrix), this._shadowViewMatrixDirty = !1
                    }
                    return this._shadowViewMatrix
                },
                getShadowProjMatrix: () => (this._shadowProjMatrixDirty && (this._shadowProjMatrix || (this._shadowProjMatrix = $c.identityMat4()), $c.orthoMat4c(-40, 40, -40, 40, -40, 80, this._shadowProjMatrix), this._shadowProjMatrixDirty = !1), this._shadowProjMatrix),
                getShadowRenderBuf: () => (this._shadowRenderBuf || (this._shadowRenderBuf = new rh(this.scene.canvas.canvas, this.scene.canvas.gl, {
                    size: [1024, 1024]
                })), this._shadowRenderBuf)
            }), this.dir = t.dir, this.color = t.color, this.intensity = t.intensity, this.castsShadow = t.castsShadow, this.scene._lightCreated(this)
        }
        set dir(e) {
            this._state.dir.set(e || [1, 1, 1]), this._shadowViewMatrixDirty = !0, this.glRedraw()
        }
        get dir() {
            return this._state.dir
        }
        set color(e) {
            this._state.color.set(e || [.7, .7, .8]), this.glRedraw()
        }
        get color() {
            return this._state.color
        }
        set intensity(e) {
            e = void 0 !== e ? e : 1, this._state.intensity = e, this.glRedraw()
        }
        get intensity() {
            return this._state.intensity
        }
        set castsShadow(e) {
            e = !!e, this._state.castsShadow !== e && (this._state.castsShadow = e, this._shadowViewMatrixDirty = !0, this.glRedraw())
        }
        get castsShadow() {
            return this._state.castsShadow
        }
        destroy() {
            const e = this.scene.camera,
                t = this.scene.canvas;
            e.off(this._onCameraViewMatrix), e.off(this._onCameraProjMatrix), t.off(this._onCanvasBoundary), super.destroy(), this._state.destroy(), this._shadowRenderBuf && this._shadowRenderBuf.destroy(), this.scene._lightDestroyed(this), this.glRedraw()
        }
    }
    class Wh extends zh {
        get type() {
            return "AmbientLight"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = {
                type: "ambient",
                color: $c.vec3([.7, .7, .7]),
                intensity: 1
            }, this.color = t.color, this.intensity = t.intensity, this.scene._lightCreated(this)
        }
        set color(e) {
            this._state.color.set(e || [.7, .7, .8]), this.glRedraw()
        }
        get color() {
            return this._state.color
        }
        set intensity(e) {
            this._state.intensity = void 0 !== e ? e : 1, this.glRedraw()
        }
        get intensity() {
            return this._state.intensity
        }
        destroy() {
            super.destroy()
        }
    }
    class qh extends Wc {
        get type() {
            return "Geometry"
        }
        get isGeometry() {
            return !0
        }
        constructor(e, t = {}) {
            super(e, t), Pc.memory.meshes++
        }
        destroy() {
            super.destroy(), Pc.memory.meshes--
        }
    }
    var Gh = function() {
        const e = [],
            t = [],
            i = [],
            r = [],
            n = [];
        let s = 0;
        const o = new Uint16Array(3),
            a = new Uint16Array(3),
            l = new Uint16Array(3),
            c = $c.vec3(),
            h = $c.vec3(),
            d = $c.vec3(),
            u = $c.vec3(),
            p = $c.vec3(),
            f = $c.vec3(),
            _ = $c.vec3();
        return function(m, g, v, b) {
            ! function(n, s) {
                const o = {};
                let a, l, c, h;
                const d = Math.pow(10, 4);
                let u, p, f = 0;
                for (u = 0, p = n.length; u < p; u += 3) a = n[u], l = n[u + 1], c = n[u + 2], h = Math.round(a * d) + "_" + Math.round(l * d) + "_" + Math.round(c * d), void 0 === o[h] && (o[h] = f / 3, e[f++] = a, e[f++] = l, e[f++] = c), t[u / 3] = o[h];
                for (u = 0, p = s.length; u < p; u++) r[u] = t[s[u]], i[r[u]] = s[u]
            }(m, g),
            function(t, i) {
                s = 0;
                for (let m = 0, g = t; m < g; m += 3) {
                    const t = 3 * r[m],
                        g = 3 * r[m + 1],
                        v = 3 * r[m + 2];
                    i ? (o[0] = e[t], o[1] = e[t + 1], o[2] = e[t + 2], a[0] = e[g], a[1] = e[g + 1], a[2] = e[g + 2], l[0] = e[v], l[1] = e[v + 1], l[2] = e[v + 2], $c.decompressPosition(o, i, c), $c.decompressPosition(a, i, h), $c.decompressPosition(l, i, d)) : (c[0] = e[t], c[1] = e[t + 1], c[2] = e[t + 2], h[0] = e[g], h[1] = e[g + 1], h[2] = e[g + 2], d[0] = e[v], d[1] = e[v + 1], d[2] = e[v + 2]), $c.subVec3(d, h, u), $c.subVec3(c, h, p), $c.cross3Vec3(u, p, f), $c.normalizeVec3(f, _);
                    const b = n[s] || (n[s] = {
                        normal: $c.vec3()
                    });
                    b.normal[0] = _[0], b.normal[1] = _[1], b.normal[2] = _[2], s++
                }
            }(g.length, v);
            const y = [],
                w = Math.cos($c.DEGTORAD * b),
                M = {};
            let A, x, C, P, k, E, I, T, D, S, B, j = !1;
            for (let e = 0, t = g.length; e < t; e += 3) {
                const t = e / 3;
                for (let i = 0; i < 3; i++) A = r[e + i], x = r[e + (i + 1) % 3], C = Math.min(A, x), P = Math.max(A, x), k = C + "," + P, void 0 === M[k] ? M[k] = {
                    index1: C,
                    index2: P,
                    face1: t,
                    face2: void 0
                } : M[k].face2 = t
            }
            for (k in M) E = M[k], void 0 !== E.face2 && (I = n[E.face1].normal, T = n[E.face2].normal, D = $c.dotVec3(I, T), D > w) || (S = i[E.index1], B = i[E.index2], (!j && S > 65535 || B > 65535) && (j = !0), y.push(S), y.push(B));
            return j ? new Uint32Array(y) : new Uint16Array(y)
        }
    }();

    function Yh(e, t, i, r) {
        let n = e[t] / (Math.abs(e[t]) + Math.abs(e[t + 1]) + Math.abs(e[t + 2])),
            s = e[t + 1] / (Math.abs(e[t]) + Math.abs(e[t + 1]) + Math.abs(e[t + 2]));
        if (e[t + 2] < 0) {
            let e = (1 - Math.abs(s)) * (n >= 0 ? 1 : -1),
                t = (1 - Math.abs(n)) * (s >= 0 ? 1 : -1);
            n = e, s = t
        }
        return new Int8Array([Math[i](127.5 * n + (n < 0 ? -1 : 0)), Math[r](127.5 * s + (s < 0 ? -1 : 0))])
    }

    function Zh(e) {
        let t = e[0],
            i = e[1];
        t /= t < 0 ? 127 : 128, i /= i < 0 ? 127 : 128;
        const r = 1 - Math.abs(t) - Math.abs(i);
        r < 0 && (t = (1 - Math.abs(i)) * (t >= 0 ? 1 : -1), i = (1 - Math.abs(t)) * (i >= 0 ? 1 : -1));
        const n = Math.sqrt(t * t + i * i + r * r);
        return [t / n, i / n, r / n]
    }

    function Xh(e, t, i) {
        return e[t] * i[0] + e[t + 1] * i[1] + e[t + 2] * i[2]
    }
    const Kh = {
            getPositionsBounds: function(e) {
                const t = new Float32Array(3),
                    i = new Float32Array(3);
                let r, n;
                for (r = 0; r < 3; r++) t[r] = Number.MAX_VALUE, i[r] = -Number.MAX_VALUE;
                for (r = 0; r < e.length; r += 3)
                    for (n = 0; n < 3; n++) t[n] = Math.min(t[n], e[r + n]), i[n] = Math.max(i[n], e[r + n]);
                return {
                    min: t,
                    max: i
                }
            },
            createPositionsDecodeMatrix: function() {
                const e = $c.mat4(),
                    t = $c.mat4();
                return function(i, r) {
                    r = r || $c.mat4();
                    const n = i[0],
                        s = i[1],
                        o = i[2],
                        a = i[3] - n,
                        l = i[4] - s,
                        c = i[5] - o;
                    return $c.identityMat4(e), $c.translationMat4v(i, e), $c.identityMat4(t), $c.scalingMat4v([a / 65535, l / 65535, c / 65535], t), $c.mulMat4(e, t, r), r
                }
            }(),
            compressPositions: function() {
                const e = $c.mat4(),
                    t = $c.mat4();
                return function(i, r, n) {
                    const s = new Uint16Array(i.length);
                    var o = new Float32Array([n[0] !== r[0] ? 65535 / (n[0] - r[0]) : 0, n[1] !== r[1] ? 65535 / (n[1] - r[1]) : 0, n[2] !== r[2] ? 65535 / (n[2] - r[2]) : 0]);
                    let a;
                    for (a = 0; a < i.length; a += 3) s[a + 0] = Math.floor((i[a + 0] - r[0]) * o[0]), s[a + 1] = Math.floor((i[a + 1] - r[1]) * o[1]), s[a + 2] = Math.floor((i[a + 2] - r[2]) * o[2]);
                    return $c.identityMat4(e), $c.translationMat4v(r, e), $c.identityMat4(t), $c.scalingMat4v([(n[0] - r[0]) / 65535, (n[1] - r[1]) / 65535, (n[2] - r[2]) / 65535], t), {
                        quantized: s,
                        decodeMatrix: $c.mulMat4(e, t, $c.identityMat4())
                    }
                }
            }(),
            decompressPositions: function(e, t, i = new Float32Array(e.length)) {
                for (let r = 0, n = e.length; r < n; r += 3) i[r + 0] = e[r + 0] * t[0] + t[12], i[r + 1] = e[r + 1] * t[5] + t[13], i[r + 2] = e[r + 2] * t[10] + t[14];
                return i
            },
            decompressPosition: function(e, t, i) {
                return i[0] = e[0] * t[0] + t[12], i[1] = e[1] * t[5] + t[13], i[2] = e[2] * t[10] + t[14], i
            },
            decompressAABB: function(e, t, i = e) {
                return i[0] = e[0] * t[0] + t[12], i[1] = e[1] * t[5] + t[13], i[2] = e[2] * t[10] + t[14], i[3] = e[3] * t[0] + t[12], i[4] = e[4] * t[5] + t[13], i[5] = e[5] * t[10] + t[14], i
            },
            getUVBounds: function(e) {
                const t = new Float32Array(2),
                    i = new Float32Array(2);
                let r, n;
                for (r = 0; r < 2; r++) t[r] = Number.MAX_VALUE, i[r] = -Number.MAX_VALUE;
                for (r = 0; r < e.length; r += 2)
                    for (n = 0; n < 2; n++) t[n] = Math.min(t[n], e[r + n]), i[n] = Math.max(i[n], e[r + n]);
                return {
                    min: t,
                    max: i
                }
            },
            compressUVs: function() {
                const e = $c.mat3(),
                    t = $c.mat3();
                return function(i, r, n) {
                    const s = new Uint16Array(i.length),
                        o = new Float32Array([65535 / (n[0] - r[0]), 65535 / (n[1] - r[1])]);
                    let a;
                    for (a = 0; a < i.length; a += 2) s[a + 0] = Math.floor((i[a + 0] - r[0]) * o[0]), s[a + 1] = Math.floor((i[a + 1] - r[1]) * o[1]);
                    return $c.identityMat3(e), $c.translationMat3v(r, e), $c.identityMat3(t), $c.scalingMat3v([(n[0] - r[0]) / 65535, (n[1] - r[1]) / 65535], t), {
                        quantized: s,
                        decodeMatrix: $c.mulMat3(e, t, $c.identityMat3())
                    }
                }
            }(),
            decompressUVs: function(e, t, i = new Float32Array(e.length)) {
                for (let r = 0, n = e.length; r < n; r += 3) i[r + 0] = e[r + 0] * t[0] + t[6], i[r + 1] = e[r + 1] * t[4] + t[7];
                return i
            },
            decompressUV: function(e, t, i) {
                i[0] = e[0] * t[0] + t[6], i[1] = e[1] * t[4] + t[7]
            },
            compressNormals: function(e) {
                const t = new Int8Array(e.length);
                let i, r, n, s, o;
                for (let a = 0; a < e.length; a += 3) n = i = Yh(e, a, "floor", "floor"), r = Zh(i), s = o = Xh(e, a, r), i = Yh(e, a, "ceil", "floor"), r = Zh(i), s = Xh(e, a, r), s > o && (n = i, o = s), i = Yh(e, a, "floor", "ceil"), r = Zh(i), s = Xh(e, a, r), s > o && (n = i, o = s), i = Yh(e, a, "ceil", "ceil"), r = Zh(i), s = Xh(e, a, r), s > o && (n = i, o = s), t[a] = n[0], t[a + 1] = n[1];
                return t
            },
            decompressNormals: function(e, t) {
                for (let i = 0, r = 0, n = e.length; i < n; i += 2) {
                    let n = e[i + 0],
                        s = e[i + 1];
                    n = (2 * n + 1) / 255, s = (2 * s + 1) / 255;
                    const o = 1 - Math.abs(n) - Math.abs(s);
                    o < 0 && (n = (1 - Math.abs(s)) * (n >= 0 ? 1 : -1), s = (1 - Math.abs(n)) * (s >= 0 ? 1 : -1));
                    const a = Math.sqrt(n * n + s * s + o * o);
                    t[r + 0] = n / a, t[r + 1] = s / a, t[r + 2] = o / a, r += 3
                }
                return t
            },
            decompressNormal: function(e, t) {
                let i = e[0],
                    r = e[1];
                i = (2 * i + 1) / 255, r = (2 * r + 1) / 255;
                const n = 1 - Math.abs(i) - Math.abs(r);
                n < 0 && (i = (1 - Math.abs(r)) * (i >= 0 ? 1 : -1), r = (1 - Math.abs(i)) * (r >= 0 ? 1 : -1));
                const s = Math.sqrt(i * i + r * r + n * n);
                return t[0] = i / s, t[1] = r / s, t[2] = n / s, t
            }
        },
        Qh = Pc.memory,
        Jh = Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint,
        ed = Jh ? Uint32Array : Uint16Array,
        td = $c.AABB3();
    class id extends qh {
        get type() {
            return "ReadableGeometry"
        }
        get isReadableGeometry() {
            return !0
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                compressGeometry: !!t.compressGeometry,
                primitive: null,
                primitiveName: null,
                positions: null,
                normals: null,
                colors: null,
                uv: null,
                indices: null,
                positionsDecodeMatrix: null,
                uvDecodeMatrix: null,
                positionsBuf: null,
                normalsBuf: null,
                colorsbuf: null,
                uvBuf: null,
                indicesBuf: null,
                hash: ""
            }), this._numTriangles = 0, this._edgeThreshold = t.edgeThreshold || 10, this._edgeIndicesBuf = null, this._pickTrianglePositionsBuf = null, this._pickTriangleColorsBuf = null, this._aabbDirty = !0, this._boundingSphere = !0, this._aabb = null, this._aabbDirty = !0, this._obb = null, this._obbDirty = !0;
            const i = this._state,
                r = this.scene.canvas.gl;
            switch (t.primitive = t.primitive || "triangles", t.primitive) {
                case "points":
                    i.primitive = r.POINTS, i.primitiveName = t.primitive;
                    break;
                case "lines":
                    i.primitive = r.LINES, i.primitiveName = t.primitive;
                    break;
                case "line-loop":
                    i.primitive = r.LINE_LOOP, i.primitiveName = t.primitive;
                    break;
                case "line-strip":
                    i.primitive = r.LINE_STRIP, i.primitiveName = t.primitive;
                    break;
                case "triangles":
                    i.primitive = r.TRIANGLES, i.primitiveName = t.primitive;
                    break;
                case "triangle-strip":
                    i.primitive = r.TRIANGLE_STRIP, i.primitiveName = t.primitive;
                    break;
                case "triangle-fan":
                    i.primitive = r.TRIANGLE_FAN, i.primitiveName = t.primitive;
                    break;
                default:
                    this.error("Unsupported value for 'primitive': '" + t.primitive + "' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'."), i.primitive = r.TRIANGLES, i.primitiveName = t.primitive
            }
            if (t.positions)
                if (this._state.compressGeometry) {
                    const e = Kh.getPositionsBounds(t.positions),
                        r = Kh.compressPositions(t.positions, e.min, e.max);
                    i.positions = r.quantized, i.positionsDecodeMatrix = r.decodeMatrix
                } else i.positions = t.positions.constructor === Float32Array ? t.positions : new Float32Array(t.positions);
            if (t.colors && (i.colors = t.colors.constructor === Float32Array ? t.colors : new Float32Array(t.colors)), t.uv)
                if (this._state.compressGeometry) {
                    const e = Kh.getUVBounds(t.uv),
                        r = Kh.compressUVs(t.uv, e.min, e.max);
                    i.uv = r.quantized, i.uvDecodeMatrix = r.decodeMatrix
                } else i.uv = t.uv.constructor === Float32Array ? t.uv : new Float32Array(t.uv);
            if (t.normals && (this._state.compressGeometry ? i.normals = Kh.compressNormals(t.normals) : i.normals = t.normals.constructor === Float32Array ? t.normals : new Float32Array(t.normals)), t.indices) {
                if (!Jh && t.indices.constructor === Uint32Array) return void this.error("This WebGL implementation does not support Uint32Array");
                i.indices = t.indices.constructor === Uint32Array || t.indices.constructor === Uint16Array ? t.indices : new ed(t.indices), "triangles" === this._state.primitiveName && (this._numTriangles = t.indices.length / 3)
            }
            this._buildHash(), Qh.meshes++, this._buildVBOs()
        }
        _buildVBOs() {
            const e = this._state,
                t = this.scene.canvas.gl;
            if (e.indices && (e.indicesBuf = new uh(t, t.ELEMENT_ARRAY_BUFFER, e.indices, e.indices.length, 1, t.STATIC_DRAW), Qh.indices += e.indicesBuf.numItems), e.positions && (e.positionsBuf = new uh(t, t.ARRAY_BUFFER, e.positions, e.positions.length, 3, t.STATIC_DRAW), Qh.positions += e.positionsBuf.numItems), e.normals) {
                let i = e.compressGeometry;
                e.normalsBuf = new uh(t, t.ARRAY_BUFFER, e.normals, e.normals.length, 3, t.STATIC_DRAW, i), Qh.normals += e.normalsBuf.numItems
            }
            e.colors && (e.colorsBuf = new uh(t, t.ARRAY_BUFFER, e.colors, e.colors.length, 4, t.STATIC_DRAW), Qh.colors += e.colorsBuf.numItems), e.uv && (e.uvBuf = new uh(t, t.ARRAY_BUFFER, e.uv, e.uv.length, 2, t.STATIC_DRAW), Qh.uvs += e.uvBuf.numItems)
        }
        _buildHash() {
            const e = this._state,
                t = ["/g"];
            t.push("/" + e.primitive + ";"), e.positions && t.push("p"), e.colors && t.push("c"), (e.normals || e.autoVertexNormals) && t.push("n"), e.uv && t.push("u"), e.compressGeometry && t.push("cp"), t.push(";"), e.hash = t.join("")
        }
        _getEdgeIndices() {
            return this._edgeIndicesBuf || this._buildEdgeIndices(), this._edgeIndicesBuf
        }
        _getPickTrianglePositions() {
            return this._pickTrianglePositionsBuf || this._buildPickTriangleVBOs(), this._pickTrianglePositionsBuf
        }
        _getPickTriangleColors() {
            return this._pickTriangleColorsBuf || this._buildPickTriangleVBOs(), this._pickTriangleColorsBuf
        }
        _buildEdgeIndices() {
            const e = this._state;
            if (!e.positions || !e.indices) return;
            const t = this.scene.canvas.gl,
                i = Gh(e.positions, e.indices, e.positionsDecodeMatrix, this._edgeThreshold);
            this._edgeIndicesBuf = new uh(t, t.ELEMENT_ARRAY_BUFFER, i, i.length, 1, t.STATIC_DRAW), Qh.indices += this._edgeIndicesBuf.numItems
        }
        _buildPickTriangleVBOs() {
            const e = this._state;
            if (!e.positions || !e.indices) return;
            const t = this.scene.canvas.gl,
                i = $c.buildPickTriangles(e.positions, e.indices, e.compressGeometry),
                r = i.positions,
                n = i.colors;
            this._pickTrianglePositionsBuf = new uh(t, t.ARRAY_BUFFER, r, r.length, 3, t.STATIC_DRAW), this._pickTriangleColorsBuf = new uh(t, t.ARRAY_BUFFER, n, n.length, 4, t.STATIC_DRAW, !0), Qh.positions += this._pickTrianglePositionsBuf.numItems, Qh.colors += this._pickTriangleColorsBuf.numItems
        }
        _buildPickVertexVBOs() {}
        _webglContextLost() {
            this._sceneVertexBufs && this._sceneVertexBufs.webglContextLost()
        }
        _webglContextRestored() {
            this._sceneVertexBufs && this._sceneVertexBufs.webglContextRestored(), this._buildVBOs(), this._edgeIndicesBuf = null, this._pickVertexPositionsBuf = null, this._pickTrianglePositionsBuf = null, this._pickTriangleColorsBuf = null, this._pickVertexPositionsBuf = null, this._pickVertexColorsBuf = null
        }
        get primitive() {
            return this._state.primitiveName
        }
        get compressGeometry() {
            return this._state.compressGeometry
        }
        get positions() {
            return this._state.positions ? this._state.compressGeometry ? (this._decompressedPositions || (this._decompressedPositions = new Float32Array(this._state.positions.length), Kh.decompressPositions(this._state.positions, this._state.positionsDecodeMatrix, this._decompressedPositions)), this._decompressedPositions) : this._state.positions : null
        }
        set positions(e) {
            const t = this._state,
                i = t.positions;
            if (i)
                if (i.length === e.length) {
                    if (this._state.compressGeometry) {
                        const i = Kh.getPositionsBounds(e),
                            r = Kh.compressPositions(e, i.min, i.max);
                        e = r.quantized, t.positionsDecodeMatrix = r.decodeMatrix
                    }
                    i.set(e), t.positionsBuf && t.positionsBuf.setData(i), this._setAABBDirty(), this.glRedraw()
                } else this.error("can't update geometry positions - new positions are wrong length");
            else this.error("can't update geometry positions - geometry has no positions")
        }
        get normals() {
            if (this._state.normals) {
                if (!this._state.compressGeometry) return this._state.normals;
                if (!this._decompressedNormals) {
                    const e = this._state.normals.length,
                        t = e + e / 2;
                    this._decompressedNormals = new Float32Array(t), Kh.decompressNormals(this._state.normals, this._decompressedNormals)
                }
                return this._decompressedNormals
            }
        }
        set normals(e) {
            if (this._state.compressGeometry) return void this.error("can't update geometry normals - quantized geometry is immutable");
            const t = this._state,
                i = t.normals;
            i ? i.length === e.length ? (i.set(e), t.normalsBuf && t.normalsBuf.setData(i), this.glRedraw()) : this.error("can't update geometry normals - new normals are wrong length") : this.error("can't update geometry normals - geometry has no normals")
        }
        get uv() {
            return this._state.uv ? this._state.compressGeometry ? (this._decompressedUV || (this._decompressedUV = new Float32Array(this._state.uv.length), Kh.decompressUVs(this._state.uv, this._state.uvDecodeMatrix, this._decompressedUV)), this._decompressedUV) : this._state.uv : null
        }
        set uv(e) {
            if (this._state.compressGeometry) return void this.error("can't update geometry UVs - quantized geometry is immutable");
            const t = this._state,
                i = t.uv;
            i ? i.length === e.length ? (i.set(e), t.uvBuf && t.uvBuf.setData(i), this.glRedraw()) : this.error("can't update geometry UVs - new UVs are wrong length") : this.error("can't update geometry UVs - geometry has no UVs")
        }
        get colors() {
            return this._state.colors
        }
        set colors(e) {
            if (this._state.compressGeometry) return void this.error("can't update geometry colors - quantized geometry is immutable");
            const t = this._state,
                i = t.colors;
            i ? i.length === e.length ? (i.set(e), t.colorsBuf && t.colorsBuf.setData(i), this.glRedraw()) : this.error("can't update geometry colors - new colors are wrong length") : this.error("can't update geometry colors - geometry has no colors")
        }
        get indices() {
            return this._state.indices
        }
        get aabb() {
            return this._aabbDirty && (this._aabb || (this._aabb = $c.AABB3()), $c.positions3ToAABB3(this._state.positions, this._aabb, this._state.positionsDecodeMatrix), this._aabbDirty = !1), this._aabb
        }
        get obb() {
            return this._obbDirty && (this._obb || (this._obb = $c.OBB3()), $c.positions3ToAABB3(this._state.positions, td, this._state.positionsDecodeMatrix), $c.AABB3ToOBB3(td, this._obb), this._obbDirty = !1), this._obb
        }
        get numTriangles() {
            return this._numTriangles
        }
        _setAABBDirty() {
            this._aabbDirty || (this._aabbDirty = !0, this._aabbDirty = !0, this._obbDirty = !0)
        }
        _getState() {
            return this._state
        }
        destroy() {
            super.destroy();
            const e = this._state;
            e.indicesBuf && e.indicesBuf.destroy(), e.positionsBuf && e.positionsBuf.destroy(), e.normalsBuf && e.normalsBuf.destroy(), e.uvBuf && e.uvBuf.destroy(), e.colorsBuf && e.colorsBuf.destroy(), this._edgeIndicesBuf && this._edgeIndicesBuf.destroy(), this._pickTrianglePositionsBuf && this._pickTrianglePositionsBuf.destroy(), this._pickTriangleColorsBuf && this._pickTriangleColorsBuf.destroy(), this._pickVertexPositionsBuf && this._pickVertexPositionsBuf.destroy(), this._pickVertexColorsBuf && this._pickVertexColorsBuf.destroy(), e.destroy(), Qh.meshes--
        }
    }

    function rd(e = {}) {
        let t = e.xSize || 1;
        t < 0 && (console.error("negative xSize not allowed - will invert"), t *= -1);
        let i = e.ySize || 1;
        i < 0 && (console.error("negative ySize not allowed - will invert"), i *= -1);
        let r = e.zSize || 1;
        r < 0 && (console.error("negative zSize not allowed - will invert"), r *= -1);
        const n = e.center,
            s = n ? n[0] : 0,
            o = n ? n[1] : 0,
            a = n ? n[2] : 0,
            l = -t + s,
            c = -i + o,
            h = -r + a,
            d = t + s,
            u = i + o,
            p = r + a;
        return Ic.apply(e, {
            positions: [d, u, p, l, u, p, l, c, p, d, c, p, d, u, p, d, c, p, d, c, h, d, u, h, d, u, p, d, u, h, l, u, h, l, u, p, l, u, p, l, u, h, l, c, h, l, c, p, l, c, h, d, c, h, d, c, p, l, c, p, d, c, h, l, c, h, l, u, h, d, u, h],
            normals: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],
            uv: [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
            indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        })
    }
    class nd extends Wc {
        get type() {
            return "Material"
        }
        constructor(e, t = {}) {
            super(e, t), Pc.memory.materials++
        }
        destroy() {
            super.destroy(), Pc.memory.materials--
        }
    }
    const sd = {
            opaque: 0,
            mask: 1,
            blend: 2
        },
        od = ["opaque", "mask", "blend"];
    class ad extends nd {
        get type() {
            return "PhongMaterial"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                type: "PhongMaterial",
                ambient: $c.vec3([1, 1, 1]),
                diffuse: $c.vec3([1, 1, 1]),
                specular: $c.vec3([1, 1, 1]),
                emissive: $c.vec3([0, 0, 0]),
                alpha: null,
                shininess: null,
                reflectivity: null,
                alphaMode: null,
                alphaCutoff: null,
                lineWidth: null,
                pointSize: null,
                backfaces: null,
                frontface: null,
                hash: null
            }), this.ambient = t.ambient, this.diffuse = t.diffuse, this.specular = t.specular, this.emissive = t.emissive, this.alpha = t.alpha, this.shininess = t.shininess, this.reflectivity = t.reflectivity, this.lineWidth = t.lineWidth, this.pointSize = t.pointSize, t.ambientMap && (this._ambientMap = this._checkComponent("Texture", t.ambientMap)), t.diffuseMap && (this._diffuseMap = this._checkComponent("Texture", t.diffuseMap)), t.specularMap && (this._specularMap = this._checkComponent("Texture", t.specularMap)), t.emissiveMap && (this._emissiveMap = this._checkComponent("Texture", t.emissiveMap)), t.alphaMap && (this._alphaMap = this._checkComponent("Texture", t.alphaMap)), t.reflectivityMap && (this._reflectivityMap = this._checkComponent("Texture", t.reflectivityMap)), t.normalMap && (this._normalMap = this._checkComponent("Texture", t.normalMap)), t.occlusionMap && (this._occlusionMap = this._checkComponent("Texture", t.occlusionMap)), t.diffuseFresnel && (this._diffuseFresnel = this._checkComponent("Fresnel", t.diffuseFresnel)), t.specularFresnel && (this._specularFresnel = this._checkComponent("Fresnel", t.specularFresnel)), t.emissiveFresnel && (this._emissiveFresnel = this._checkComponent("Fresnel", t.emissiveFresnel)), t.alphaFresnel && (this._alphaFresnel = this._checkComponent("Fresnel", t.alphaFresnel)), t.reflectivityFresnel && (this._reflectivityFresnel = this._checkComponent("Fresnel", t.reflectivityFresnel)), this.alphaMode = t.alphaMode, this.alphaCutoff = t.alphaCutoff, this.backfaces = t.backfaces, this.frontface = t.frontface, this._makeHash()
        }
        _makeHash() {
            const e = this._state,
                t = ["/p"];
            this._normalMap && (t.push("/nm"), this._normalMap.hasMatrix && t.push("/mat")), this._ambientMap && (t.push("/am"), this._ambientMap.hasMatrix && t.push("/mat"), t.push("/" + this._ambientMap.encoding)), this._diffuseMap && (t.push("/dm"), this._diffuseMap.hasMatrix && t.push("/mat"), t.push("/" + this._diffuseMap.encoding)), this._specularMap && (t.push("/sm"), this._specularMap.hasMatrix && t.push("/mat")), this._emissiveMap && (t.push("/em"), this._emissiveMap.hasMatrix && t.push("/mat"), t.push("/" + this._emissiveMap.encoding)), this._alphaMap && (t.push("/opm"), this._alphaMap.hasMatrix && t.push("/mat")), this._reflectivityMap && (t.push("/rm"), this._reflectivityMap.hasMatrix && t.push("/mat")), this._occlusionMap && (t.push("/ocm"), this._occlusionMap.hasMatrix && t.push("/mat")), this._diffuseFresnel && t.push("/df"), this._specularFresnel && t.push("/sf"), this._emissiveFresnel && t.push("/ef"), this._alphaFresnel && t.push("/of"), this._reflectivityFresnel && t.push("/rf"), t.push(";"), e.hash = t.join("")
        }
        set ambient(e) {
            let t = this._state.ambient;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.ambient = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = .2, t[1] = .2, t[2] = .2), this.glRedraw()
        }
        get ambient() {
            return this._state.ambient
        }
        set diffuse(e) {
            let t = this._state.diffuse;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.diffuse = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1), this.glRedraw()
        }
        get diffuse() {
            return this._state.diffuse
        }
        set specular(e) {
            let t = this._state.specular;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.specular = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1), this.glRedraw()
        }
        get specular() {
            return this._state.specular
        }
        set emissive(e) {
            let t = this._state.emissive;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.emissive = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 0, t[1] = 0, t[2] = 0), this.glRedraw()
        }
        get emissive() {
            return this._state.emissive
        }
        set alpha(e) {
            e = null != e ? e : 1, this._state.alpha !== e && (this._state.alpha = e, this.glRedraw())
        }
        get alpha() {
            return this._state.alpha
        }
        set shininess(e) {
            this._state.shininess = void 0 !== e ? e : 80, this.glRedraw()
        }
        get shininess() {
            return this._state.shininess
        }
        set lineWidth(e) {
            this._state.lineWidth = e || 1, this.glRedraw()
        }
        get lineWidth() {
            return this._state.lineWidth
        }
        set pointSize(e) {
            this._state.pointSize = e || 1, this.glRedraw()
        }
        get pointSize() {
            return this._state.pointSize
        }
        set reflectivity(e) {
            this._state.reflectivity = void 0 !== e ? e : 1, this.glRedraw()
        }
        get reflectivity() {
            return this._state.reflectivity
        }
        get normalMap() {
            return this._normalMap
        }
        get ambientMap() {
            return this._ambientMap
        }
        get diffuseMap() {
            return this._diffuseMap
        }
        get specularMap() {
            return this._specularMap
        }
        get emissiveMap() {
            return this._emissiveMap
        }
        get alphaMap() {
            return this._alphaMap
        }
        get reflectivityMap() {
            return this._reflectivityMap
        }
        get occlusionMap() {
            return this._occlusionMap
        }
        get diffuseFresnel() {
            return this._diffuseFresnel
        }
        get specularFresnel() {
            return this._specularFresnel
        }
        get emissiveFresnel() {
            return this._emissiveFresnel
        }
        get alphaFresnel() {
            return this._alphaFresnel
        }
        get reflectivityFresnel() {
            return this._reflectivityFresnel
        }
        set alphaMode(e) {
            let t = sd[e = e || "opaque"];
            void 0 === t && (this.error("Unsupported value for 'alphaMode': " + e + " - defaulting to 'opaque'"), t = "opaque"), this._state.alphaMode !== t && (this._state.alphaMode = t, this.glRedraw())
        }
        get alphaMode() {
            return od[this._state.alphaMode]
        }
        set alphaCutoff(e) {
            null == e && (e = .5), this._state.alphaCutoff !== e && (this._state.alphaCutoff = e)
        }
        get alphaCutoff() {
            return this._state.alphaCutoff
        }
        set backfaces(e) {
            e = !!e, this._state.backfaces !== e && (this._state.backfaces = e, this.glRedraw())
        }
        get backfaces() {
            return this._state.backfaces
        }
        set frontface(e) {
            e = "cw" !== e, this._state.frontface !== e && (this._state.frontface = e, this.glRedraw())
        }
        get frontface() {
            return this._state.frontface ? "ccw" : "cw"
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const ld = {
        default: {
            fill: !0,
            fillColor: [.4, .4, .4],
            fillAlpha: .2,
            edges: !0,
            edgeColor: [.2, .2, .2],
            edgeAlpha: .5,
            edgeWidth: 1
        },
        defaultWhiteBG: {
            fill: !0,
            fillColor: [1, 1, 1],
            fillAlpha: .6,
            edgeColor: [.2, .2, .2],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        defaultLightBG: {
            fill: !0,
            fillColor: [.4, .4, .4],
            fillAlpha: .2,
            edges: !0,
            edgeColor: [.2, .2, .2],
            edgeAlpha: .5,
            edgeWidth: 1
        },
        defaultDarkBG: {
            fill: !0,
            fillColor: [.4, .4, .4],
            fillAlpha: .2,
            edges: !0,
            edgeColor: [.5, .5, .5],
            edgeAlpha: .5,
            edgeWidth: 1
        },
        phosphorous: {
            fill: !0,
            fillColor: [0, 0, 0],
            fillAlpha: .4,
            edges: !0,
            edgeColor: [.9, .9, .9],
            edgeAlpha: .5,
            edgeWidth: 2
        },
        sunset: {
            fill: !0,
            fillColor: [.9, .9, .6],
            fillAlpha: .2,
            edges: !0,
            edgeColor: [.9, .9, .9],
            edgeAlpha: .5,
            edgeWidth: 1
        },
        vectorscope: {
            fill: !0,
            fillColor: [0, 0, 0],
            fillAlpha: .7,
            edges: !0,
            edgeColor: [.2, 1, .2],
            edgeAlpha: 1,
            edgeWidth: 2
        },
        battlezone: {
            fill: !0,
            fillColor: [0, 0, 0],
            fillAlpha: 1,
            edges: !0,
            edgeColor: [.2, 1, .2],
            edgeAlpha: 1,
            edgeWidth: 3
        },
        sepia: {
            fill: !0,
            fillColor: [.970588207244873, .7965892553329468, .6660899519920349],
            fillAlpha: .4,
            edges: !0,
            edgeColor: [.529411792755127, .4577854573726654, .4100345969200134],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        yellowHighlight: {
            fill: !0,
            fillColor: [1, 1, 0],
            fillAlpha: .5,
            edges: !0,
            edgeColor: [.529411792755127, .4577854573726654, .4100345969200134],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        greenSelected: {
            fill: !0,
            fillColor: [0, 1, 0],
            fillAlpha: .5,
            edges: !0,
            edgeColor: [.4577854573726654, .529411792755127, .4100345969200134],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        gamegrid: {
            fill: !0,
            fillColor: [.2, .2, .7],
            fillAlpha: .9,
            edges: !0,
            edgeColor: [.4, .4, 1.6],
            edgeAlpha: .8,
            edgeWidth: 3
        }
    };
    class cd extends nd {
        get type() {
            return "EmphasisMaterial"
        }
        get presets() {
            return ld
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                type: "EmphasisMaterial",
                fill: null,
                fillColor: null,
                fillAlpha: null,
                edges: null,
                edgeColor: null,
                edgeAlpha: null,
                edgeWidth: null,
                backfaces: !0
            }), this._preset = "default", t.preset ? (this.preset = t.preset, void 0 !== t.fill && (this.fill = t.fill), t.fillColor && (this.fillColor = t.fillColor), void 0 !== t.fillAlpha && (this.fillAlpha = t.fillAlpha), void 0 !== t.edges && (this.edges = t.edges), t.edgeColor && (this.edgeColor = t.edgeColor), void 0 !== t.edgeAlpha && (this.edgeAlpha = t.edgeAlpha), void 0 !== t.edgeWidth && (this.edgeWidth = t.edgeWidth), void 0 !== t.backfaces && (this.backfaces = t.backfaces)) : (this.fill = t.fill, this.fillColor = t.fillColor, this.fillAlpha = t.fillAlpha, this.edges = t.edges, this.edgeColor = t.edgeColor, this.edgeAlpha = t.edgeAlpha, this.edgeWidth = t.edgeWidth, this.backfaces = t.backfaces)
        }
        set fill(e) {
            e = !1 !== e, this._state.fill !== e && (this._state.fill = e, this.glRedraw())
        }
        get fill() {
            return this._state.fill
        }
        set fillColor(e) {
            let t = this._state.fillColor;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.fillColor = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = .4, t[1] = .4, t[2] = .4), this.glRedraw()
        }
        get fillColor() {
            return this._state.fillColor
        }
        set fillAlpha(e) {
            e = null != e ? e : .2, this._state.fillAlpha !== e && (this._state.fillAlpha = e, this.glRedraw())
        }
        get fillAlpha() {
            return this._state.fillAlpha
        }
        set edges(e) {
            e = !1 !== e, this._state.edges !== e && (this._state.edges = e, this.glRedraw())
        }
        get edges() {
            return this._state.edges
        }
        set edgeColor(e) {
            let t = this._state.edgeColor;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.edgeColor = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = .2, t[1] = .2, t[2] = .2), this.glRedraw()
        }
        get edgeColor() {
            return this._state.edgeColor
        }
        set edgeAlpha(e) {
            e = null != e ? e : .5, this._state.edgeAlpha !== e && (this._state.edgeAlpha = e, this.glRedraw())
        }
        get edgeAlpha() {
            return this._state.edgeAlpha
        }
        set edgeWidth(e) {
            this._state.edgeWidth = e || 1, this.glRedraw()
        }
        get edgeWidth() {
            return this._state.edgeWidth
        }
        set backfaces(e) {
            e = !!e, this._state.backfaces !== e && (this._state.backfaces = e, this.glRedraw())
        }
        get backfaces() {
            return this._state.backfaces
        }
        set preset(e) {
            if (e = e || "default", this._preset === e) return;
            const t = ld[e];
            t ? (this.fill = t.fill, this.fillColor = t.fillColor, this.fillAlpha = t.fillAlpha, this.edges = t.edges, this.edgeColor = t.edgeColor, this.edgeAlpha = t.edgeAlpha, this.edgeWidth = t.edgeWidth, this._preset = e) : this.error("unsupported preset: '" + e + "' - supported values are " + Object.keys(ld).join(", "))
        }
        get preset() {
            return this._preset
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const hd = {
        default: {
            edgeColor: [0, 0, 0],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        defaultWhiteBG: {
            edgeColor: [.2, .2, .2],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        defaultLightBG: {
            edgeColor: [.2, .2, .2],
            edgeAlpha: 1,
            edgeWidth: 1
        },
        defaultDarkBG: {
            edgeColor: [.5, .5, .5],
            edgeAlpha: 1,
            edgeWidth: 1
        }
    };
    class dd extends nd {
        get type() {
            return "EdgeMaterial"
        }
        get presets() {
            return hd
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                type: "EdgeMaterial",
                edges: null,
                edgeColor: null,
                edgeAlpha: null,
                edgeWidth: null
            }), this._preset = "default", t.preset ? (this.preset = t.preset, t.edgeColor && (this.edgeColor = t.edgeColor), void 0 !== t.edgeAlpha && (this.edgeAlpha = t.edgeAlpha), void 0 !== t.edgeWidth && (this.edgeWidth = t.edgeWidth)) : (this.edgeColor = t.edgeColor, this.edgeAlpha = t.edgeAlpha, this.edgeWidth = t.edgeWidth), this.edges = !1 !== t.edges
        }
        set edges(e) {
            e = !1 !== e, this._state.edges !== e && (this._state.edges = e, this.glRedraw())
        }
        get edges() {
            return this._state.edges
        }
        set edgeColor(e) {
            let t = this._state.edgeColor;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.edgeColor = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = .2, t[1] = .2, t[2] = .2), this.glRedraw()
        }
        get edgeColor() {
            return this._state.edgeColor
        }
        set edgeAlpha(e) {
            e = null != e ? e : 1, this._state.edgeAlpha !== e && (this._state.edgeAlpha = e, this.glRedraw())
        }
        get edgeAlpha() {
            return this._state.edgeAlpha
        }
        set edgeWidth(e) {
            this._state.edgeWidth = e || 1, this.glRedraw()
        }
        get edgeWidth() {
            return this._state.edgeWidth
        }
        set preset(e) {
            if (e = e || "default", this._preset === e) return;
            const t = hd[e];
            t ? (this.edgeColor = t.edgeColor, this.edgeAlpha = t.edgeAlpha, this.edgeWidth = t.edgeWidth, this._preset = e) : this.error("unsupported preset: '" + e + "' - supported values are " + Object.keys(hd).join(", "))
        }
        get preset() {
            return this._preset
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const ud = {
        meters: {
            abbrev: "m"
        },
        metres: {
            abbrev: "m"
        },
        centimeters: {
            abbrev: "cm"
        },
        centimetres: {
            abbrev: "cm"
        },
        millimeters: {
            abbrev: "mm"
        },
        millimetres: {
            abbrev: "mm"
        },
        yards: {
            abbrev: "yd"
        },
        feet: {
            abbrev: "ft"
        },
        inches: {
            abbrev: "in"
        }
    };
    class pd extends Wc {
        constructor(e, t = {}) {
            super(e, t), this._units = "meters", this._scale = 1, this._origin = $c.vec3([0, 0, 0]), this.units = t.units, this.scale = t.scale, this.origin = t.origin
        }
        get unitsInfo() {
            return ud
        }
        set units(e) {
            e || (e = "meters"), ud[e] || (this.error("Unsupported value for 'units': " + e + " defaulting to 'meters'"), e = "meters"), this._units = e, this.fire("units", this._units)
        }
        get units() {
            return this._units
        }
        set scale(e) {
            (e = e || 1) <= 0 ? this.error("scale value should be larger than zero") : (this._scale = e, this.fire("scale", this._scale))
        }
        get scale() {
            return this._scale
        }
        set origin(e) {
            if (!e) return this._origin[0] = 0, this._origin[1] = 0, void(this._origin[2] = 0);
            this._origin[0] = e[0], this._origin[1] = e[1], this._origin[2] = e[2], this.fire("origin", this._origin)
        }
        get origin() {
            return this._origin
        }
        worldToRealPos(e, t = $c.vec3(3)) {
            t[0] = this._origin[0] + this._scale * e[0], t[1] = this._origin[1] + this._scale * e[1], t[2] = this._origin[2] + this._scale * e[2]
        }
        realToWorldPos(e, t = $c.vec3(3)) {
            return t[0] = (e[0] - this._origin[0]) / this._scale, t[1] = (e[1] - this._origin[1]) / this._scale, t[2] = (e[2] - this._origin[2]) / this._scale, t
        }
    }
    class fd extends Wc {
        constructor(e, t = {}) {
            super(e, t), this._supported = Gc.SUPPORTED_EXTENSIONS.OES_standard_derivatives, this.enabled = t.enabled, this.kernelRadius = t.kernelRadius, this.intensity = t.intensity, this.bias = t.bias, this.scale = t.scale, this.minResolution = t.minResolution, this.blur = t.blur, this.blendCutoff = t.blendCutoff, this.blendFactor = t.blendFactor
        }
        get supported() {
            return this._supported
        }
        set enabled(e) {
            e = !!e, this._enabled !== e && (this._enabled = e, this.scene._needRecompile = !0, this.glRedraw())
        }
        get enabled() {
            return this._enabled
        }
        get possible() {
            if (!this._supported) return !1;
            if (!this._enabled) return !1;
            const e = this.scene.camera.projection;
            return "customProjection" !== e && "frustum" !== e
        }
        get active() {
            return this._active
        }
        set kernelRadius(e) {
            null == e && (e = 100), this._kernelRadius !== e && (this._kernelRadius = e, this.glRedraw())
        }
        get kernelRadius() {
            return this._kernelRadius
        }
        set intensity(e) {
            null == e && (e = .2), this._intensity !== e && (this._intensity = e, this.glRedraw())
        }
        get intensity() {
            return this._intensity
        }
        set bias(e) {
            null == e && (e = .5), this._bias !== e && (this._bias = e, this.glRedraw())
        }
        get bias() {
            return this._bias
        }
        set scale(e) {
            null == e && (e = 500), this._scale !== e && (this._scale = e, this.glRedraw())
        }
        get scale() {
            return this._scale
        }
        set minResolution(e) {
            null == e && (e = 0), this._minResolution !== e && (this._minResolution = e, this.glRedraw())
        }
        get minResolution() {
            return this._minResolution
        }
        set blur(e) {
            e = !1 !== e, this._blur !== e && (this._blur = e, this.glRedraw())
        }
        get blur() {
            return this._blur
        }
        set blendCutoff(e) {
            null == e && (e = .2), this._blendCutoff !== e && (this._blendCutoff = e, this.glRedraw())
        }
        get blendCutoff() {
            return this._blendCutoff
        }
        set blendFactor(e) {
            null == e && (e = 1), this._blendFactor !== e && (this._blendFactor = e, this.glRedraw())
        }
        get blendFactor() {
            return this._blendFactor
        }
        destroy() {
            super.destroy()
        }
    }

    function _d(e, t) {
        const i = {};
        let r, n;
        for (let s = 0, o = t.length; s < o; s++) r = t[s], n = e.component[r], n ? n.isEntity ? i[r] = !0 : e.warn("pick(): Component is not an Entity: " + r) : e.warn("pick(): Component not found: " + r);
        return i
    }
    class md extends Wc {
        get type() {
            return "Scene"
        }
        constructor(e = {}) {
            super(null, e);
            const t = e.canvasElement || document.getElementById(e.canvasId);
            if (!(t instanceof HTMLCanvasElement)) throw "Mandatory config expected: valid canvasId or canvasElement";
            const i = !!e.transparent,
                r = !!e.alphaDepthMask;
            this._aabbDirty = !0, this.loading = 0, this.startTime = (new Date).getTime(), this.models = {}, this.objects = {}, this._numObjects = 0, this.visibleObjects = {}, this._numVisibleObjects = 0, this.xrayedObjects = {}, this._numXRayedObjects = 0, this.highlightedObjects = {}, this._numHighlightedObjects = 0, this.selectedObjects = {}, this._numSelectedObjects = 0, this.colorizedObjects = {}, this._numColorizedObjects = 0, this.opacityObjects = {}, this._numOpacityObjects = 0, this.offsetObjects = {}, this._numOffsetObjects = 0, this._modelIds = null, this._objectIds = null, this._visibleObjectIds = null, this._xrayedObjectIds = null, this._highlightedObjectIds = null, this._selectedObjectIds = null, this._colorizedObjectIds = null, this._opacityObjectIds = null, this._offsetObjectIds = null, this._collidables = {}, this._compilables = {}, this._needRecompile = !1, this.types = {}, this.components = {}, this.sectionPlanes = {}, this.lights = {}, this.lightMaps = {}, this.reflectionMaps = {}, this.realWorldOffset = e.realWorldOffset || new Float64Array([0, 0, 0]), this.canvas = new Xc(this, {
                dontClear: !0,
                canvas: t,
                spinnerElementId: e.spinnerElementId,
                transparent: i,
                backgroundColor: e.backgroundColor,
                webgl2: !1 !== e.webgl2,
                contextAttr: e.contextAttr || {},
                clearColorAmbient: e.clearColorAmbient,
                premultipliedAlpha: e.premultipliedAlpha
            }), this.canvas.on("boundary", () => {
                this.glRedraw()
            }), this.canvas.on("webglContextFailed", () => {
                alert("xeokit failed to find WebGL!")
            }), this._renderer = new wh(this, {
                transparent: i,
                alphaDepthMask: r
            }), this._sectionPlanesState = new function() {
                this.sectionPlanes = [];
                let e = null;
                this.getHash = function() {
                    if (e) return e;
                    const t = this.sectionPlanes;
                    if (0 === t.length) return this.hash = ";";
                    let i;
                    const r = [];
                    for (let e = 0, n = t.length; e < n; e++) i = t[e], r.push("cp");
                    return r.push(";"), e = r.join(""), e
                }, this.addSectionPlane = function(t) {
                    this.sectionPlanes.push(t), e = null
                }, this.removeSectionPlane = function(t) {
                    for (let i = 0, r = this.sectionPlanes.length; i < r; i++)
                        if (this.sectionPlanes[i].id === t.id) return this.sectionPlanes.splice(i, 1), void(e = null)
                }
            }, this._lightsState = new function() {
                const e = $c.vec3([0, 0, 0]),
                    t = $c.vec3();
                this.lights = [], this.reflectionMaps = [], this.lightMaps = [];
                let i = null,
                    r = null;
                this.getHash = function() {
                    if (i) return i;
                    const e = [],
                        t = this.lights;
                    let r;
                    for (let i = 0, n = t.length; i < n; i++) r = t[i], e.push("/"), e.push(r.type), e.push("world" === r.space ? "w" : "v"), r.castsShadow && e.push("sh");
                    return this.lightMaps.length > 0 && e.push("/lm"), this.reflectionMaps.length > 0 && e.push("/rm"), e.push(";"), i = e.join(""), i
                }, this.addLight = function(e) {
                    this.lights.push(e), r = null, i = null
                }, this.removeLight = function(e) {
                    for (let t = 0, n = this.lights.length; t < n; t++) {
                        if (this.lights[t].id === e.id) return this.lights.splice(t, 1), r && r.id === e.id && (r = null), void(i = null)
                    }
                }, this.addReflectionMap = function(e) {
                    this.reflectionMaps.push(e), i = null
                }, this.removeReflectionMap = function(e) {
                    for (let t = 0, r = this.reflectionMaps.length; t < r; t++)
                        if (this.reflectionMaps[t].id === e.id) return this.reflectionMaps.splice(t, 1), void(i = null)
                }, this.addLightMap = function(e) {
                    this.lightMaps.push(e), i = null
                }, this.removeLightMap = function(e) {
                    for (let t = 0, r = this.lightMaps.length; t < r; t++)
                        if (this.lightMaps[t].id === e.id) return this.lightMaps.splice(t, 1), void(i = null)
                }, this.getAmbientColor = function() {
                    if (!r)
                        for (let e = 0, t = this.lights.length; e < t; e++) {
                            const t = this.lights[e];
                            if ("ambient" === t.type) {
                                r = t;
                                break
                            }
                        }
                    if (r) {
                        const e = r.color,
                            i = r.intensity;
                        return t[0] = e[0] * i, t[1] = e[1] * i, t[2] = e[2] * i, t
                    }
                    return e
                }
            }, this.input = new Mh(this, {
                dontClear: !0,
                element: this.canvas.canvas
            }), this.metrics = new pd(this, {
                units: e.units,
                scale: e.scale,
                origin: e.origin
            }), this.sao = new fd(this, {
                enabled: e.saoEnabled
            }), this.ticksPerRender = e.ticksPerRender, this.ticksPerOcclusionTest = e.ticksPerOcclusionTest, this.passes = e.passes, this.clearEachPass = e.clearEachPass, this.gammaInput = e.gammaInput, this.gammaOutput = e.gammaOutput, this.gammaFactor = e.gammaFactor, Fc._addScene(this), this._initDefaults(), this._viewport = new Ch(this, {
                id: "default.viewport",
                autoBoundary: !0,
                dontClear: !0
            }), this._camera = new Vh(this, {
                id: "default.camera",
                dontClear: !0
            }), new Wh(this, {
                color: [1, 1, 1],
                intensity: .7
            }), new $h(this, {
                dir: [.8, -.6, -.8],
                color: [1, 1, 1],
                intensity: .9,
                space: "view"
            }), new $h(this, {
                dir: [-.8, -.4, -.4],
                color: [1, 1, 1],
                intensity: .9,
                space: "view"
            }), new $h(this, {
                dir: [.2, -.8, .8],
                color: [.7, .7, .7],
                intensity: .9,
                space: "view"
            }), this._camera.on("dirty", () => {
                this._renderer.imageDirty()
            })
        }
        _initDefaults() {
            let e;
            e = this.geometry, e = this.material, e = this.xrayMaterial, e = this.edgeMaterial, e = this.selectedMaterial, e = this.highlightMaterial
        }
        _addComponent(e) {
            if (e.id && this.components[e.id] && (this.error("Component " + Ic.inQuotes(e.id) + " already exists in Scene - ignoring ID, will randomly-generate instead"), e.id = null), !e.id)
                for (void 0 === window.nextID && (window.nextID = 0), e.id = "__" + window.nextID++; this.components[e.id];) e.id = $c.createUUID();
            this.components[e.id] = e;
            const t = e.type;
            let i = this.types[e.type];
            i || (i = this.types[t] = {}), i[e.id] = e, e.compile && (this._compilables[e.id] = e), e.isDrawable && (this._renderer.addDrawable(e.id, e), this._collidables[e.id] = e)
        }
        _removeComponent(e) {
            var t = e.id,
                i = e.type;
            delete this.components[t];
            const r = this.types[i];
            r && (delete r[t], Ic.isEmptyObject(r) && delete this.types[i]), e.compile && delete this._compilables[e.id], e.isDrawable && (this._renderer.removeDrawable(e.id), delete this._collidables[e.id])
        }
        _sectionPlaneCreated(e) {
            this.sectionPlanes[e.id] = e, this.scene._sectionPlanesState.addSectionPlane(e._state), this.scene.fire("sectionPlaneCreated", e, !0), this._needRecompile = !0
        }
        _lightCreated(e) {
            this.lights[e.id] = e, this.scene._lightsState.addLight(e._state), this._needRecompile = !0
        }
        _lightMapCreated(e) {
            this.lightMaps[e.id] = e, this.scene._lightsState.addLightMap(e._state), this._needRecompile = !0
        }
        _reflectionMapCreated(e) {
            this.reflectionMaps[e.id] = e, this.scene._lightsState.addReflectionMap(e._state), this._needRecompile = !0
        }
        _sectionPlaneDestroyed(e) {
            delete this.sectionPlanes[e.id], this.scene._sectionPlanesState.removeSectionPlane(e._state), this.scene.fire("sectionPlaneDestroyed", e, !0), this._needRecompile = !0
        }
        _lightDestroyed(e) {
            delete this.lights[e.id], this.scene._lightsState.removeLight(e._state), this._needRecompile = !0
        }
        _lightMapDestroyed(e) {
            delete this.lightMaps[e.id], this.scene._lightsState.removeLightMap(e._state), this._needRecompile = !0
        }
        _reflectionMapDestroyed(e) {
            delete this.reflectionMaps[e.id], this.scene._lightsState.removeReflectionMap(e._state), this._needRecompile = !0
        }
        _registerModel(e) {
            this.models[e.id] = e, this._modelIds = null
        }
        _deregisterModel(e) {
            delete this.models[e.id], this._modelIds = null
        }
        _registerObject(e) {
            this.objects[e.id] = e, this._numObjects++, this._objectIds = null
        }
        _deregisterObject(e) {
            delete this.objects[e.id], this._numObjects--, this._objectIds = null
        }
        _objectVisibilityUpdated(e, t = !0) {
            e.visible ? (this.visibleObjects[e.id] = e, this._numVisibleObjects++) : (delete this.visibleObjects[e.id], this._numVisibleObjects--), this._visibleObjectIds = null, t && this.fire("objectVisibility", e, !0)
        }
        _objectXRayedUpdated(e) {
            e.xrayed ? (this.xrayedObjects[e.id] = e, this._numXRayedObjects++) : (delete this.xrayedObjects[e.id], this._numXRayedObjects--), this._xrayedObjectIds = null
        }
        _objectHighlightedUpdated(e) {
            e.highlighted ? (this.highlightedObjects[e.id] = e, this._numHighlightedObjects++) : (delete this.highlightedObjects[e.id], this._numHighlightedObjects--), this._highlightedObjectIds = null
        }
        _objectSelectedUpdated(e) {
            e.selected ? (this.selectedObjects[e.id] = e, this._numSelectedObjects++) : (delete this.selectedObjects[e.id], this._numSelectedObjects--), this._selectedObjectIds = null
        }
        _objectColorizeUpdated(e, t) {
            t ? (this.colorizedObjects[e.id] = e, this._numColorizedObjects++) : (delete this.colorizedObjects[e.id], this._numColorizedObjects--), this._colorizedObjectIds = null
        }
        _objectOpacityUpdated(e, t) {
            t ? (this.opacityObjects[e.id] = e, this._numOpacityObjects++) : (delete this.opacityObjects[e.id], this._numOpacityObjects--), this._opacityObjectIds = null
        }
        _objectOffsetUpdated(e, t) {
            !t || 0 === t[0] && 0 === t[1] && 0 === t[2] ? (this.offsetObjects[e.id] = e, this._numOffsetObjects++) : (delete this.offsetObjects[e.id], this._numOffsetObjects--), this._offsetObjectIds = null
        }
        _webglContextLost() {
            this.canvas.spinner.processes++;
            for (const e in this.components)
                if (this.components.hasOwnProperty(e)) {
                    const t = this.components[e];
                    t._webglContextLost && t._webglContextLost()
                } this._renderer.webglContextLost()
        }
        _webglContextRestored() {
            const e = this.canvas.gl;
            for (const t in this.components)
                if (this.components.hasOwnProperty(t)) {
                    const i = this.components[t];
                    i._webglContextRestored && i._webglContextRestored(e)
                } this._renderer.webglContextRestored(e), this.canvas.spinner.processes--
        }
        doOcclusionTest() {
            this._needRecompile && (this._recompile(), this._needRecompile = !1), this._renderer.doOcclusionTest()
        }
        render(e) {
            e && Fc.runTasks();
            const t = {
                sceneId: null,
                pass: 0
            };
            this._needRecompile && (this._recompile(), this._renderer.imageDirty(), this._needRecompile = !1), t.sceneId = this.id;
            const i = this._passes,
                r = this._clearEachPass;
            let n, s;
            for (n = 0; n < i; n++) t.pass = n, this.fire("rendering", t, !0), s = r || 0 === n, this._renderer.render({
                pass: n,
                clear: s,
                force: e
            }), this.fire("rendered", t, !0);
            this._saveAmbientColor()
        }
        _recompile() {
            for (const e in this._compilables) this._compilables.hasOwnProperty(e) && this._compilables[e].compile();
            this._renderer.shadowsDirty(), this.fire("compile", this, !0)
        }
        _saveAmbientColor() {
            const e = this.canvas;
            if (e.transparent || e.backgroundImage || e.backgroundColor) this._lastAmbientColor = null;
            else {
                const t = this._lightsState.getAmbientColor();
                this._lastAmbientColor && this._lastAmbientColor[0] === t[0] && this._lastAmbientColor[1] === t[1] && this._lastAmbientColor[2] === t[2] && this._lastAmbientColor[3] === t[3] || (e.backgroundColor = t, this._lastAmbientColor || (this._lastAmbientColor = $c.vec4([0, 0, 0, 1])), this._lastAmbientColor.set(t))
            }
        }
        get modelIds() {
            return this._modelIds || (this._modelIds = Object.keys(this.models)), this._modelIds
        }
        get numObjects() {
            return this._numObjects
        }
        get objectIds() {
            return this._objectIds || (this._objectIds = Object.keys(this.objects)), this._objectIds
        }
        get numVisibleObjects() {
            return this._numVisibleObjects
        }
        get visibleObjectIds() {
            return this._visibleObjectIds || (this._visibleObjectIds = Object.keys(this.visibleObjects)), this._visibleObjectIds
        }
        get numXRayedObjects() {
            return this._numXRayedObjects
        }
        get xrayedObjectIds() {
            return this._xrayedObjectIds || (this._xrayedObjectIds = Object.keys(this.xrayedObjects)), this._xrayedObjectIds
        }
        get numHighlightedObjects() {
            return this._numHighlightedObjects
        }
        get highlightedObjectIds() {
            return this._highlightedObjectIds || (this._highlightedObjectIds = Object.keys(this.highlightedObjects)), this._highlightedObjectIds
        }
        get numSelectedObjects() {
            return this._numSelectedObjects
        }
        get selectedObjectIds() {
            return this._selectedObjectIds || (this._selectedObjectIds = Object.keys(this.selectedObjects)), this._selectedObjectIds
        }
        get numColorizedObjects() {
            return this._numColorizedObjects
        }
        get colorizedObjectIds() {
            return this._colorizedObjectIds || (this._colorizedObjectIds = Object.keys(this.colorizedObjects)), this._colorizedObjectIds
        }
        get opacityObjectIds() {
            return this._opacityObjectIds || (this._opacityObjectIds = Object.keys(this.opacityObjects)), this._opacityObjectIds
        }
        get offsetObjectIds() {
            return this._offsetObjectIds || (this._offsetObjectIds = Object.keys(this.offsetObjects)), this._offsetObjectIds
        }
        set ticksPerRender(e) {
            null == e ? e = 1 : (!Ic.isNumeric(e) || e <= 0) && (this.error("Unsupported value for 'ticksPerRender': '" + e + "' - should be an integer greater than zero."), e = 1), e !== this._ticksPerRender && (this._ticksPerRender = e)
        }
        get ticksPerRender() {
            return this._ticksPerRender
        }
        set ticksPerOcclusionTest(e) {
            null == e ? e = 20 : (!Ic.isNumeric(e) || e <= 0) && (this.error("Unsupported value for 'ticksPerOcclusionTest': '" + e + "' - should be an integer greater than zero."), e = 20), e !== this._ticksPerOcclusionTest && (this._ticksPerOcclusionTest = e)
        }
        get ticksPerOcclusionTest() {
            return this._ticksPerOcclusionTest
        }
        set passes(e) {
            null == e ? e = 1 : (!Ic.isNumeric(e) || e <= 0) && (this.error("Unsupported value for 'passes': '" + e + "' - should be an integer greater than zero."), e = 1), e !== this._passes && (this._passes = e, this.glRedraw())
        }
        get passes() {
            return this._passes
        }
        set clearEachPass(e) {
            (e = !!e) !== this._clearEachPass && (this._clearEachPass = e, this.glRedraw())
        }
        get clearEachPass() {
            return this._clearEachPass
        }
        set gammaInput(e) {
            (e = !1 !== e) !== this._renderer.gammaInput && (this._renderer.gammaInput = e, this._needRecompile = !0)
        }
        get gammaInput() {
            return this._renderer.gammaInput
        }
        set gammaOutput(e) {
            (e = !1 !== e) !== this._renderer.gammaOutput && (this._renderer.gammaOutput = e, this._needRecompile = !0)
        }
        get gammaOutput() {
            return this._renderer.gammaOutput
        }
        set gammaFactor(e) {
            (e = null == e ? 2.2 : e) !== this._renderer.gammaFactor && (this._renderer.gammaFactor = e, this.glRedraw())
        }
        get gammaFactor() {
            return this._renderer.gammaFactor
        }
        get geometry() {
            return this.components["default.geometry"] || rd(id)
        }
        get material() {
            return this.components["default.material"] || new ad(this, {
                id: "default.material",
                emissive: [.4, .4, .4],
                dontClear: !0
            })
        }
        get xrayMaterial() {
            return this.components["default.xrayMaterial"] || new cd(this, {
                id: "default.xrayMaterial",
                preset: "sepia",
                dontClear: !0
            })
        }
        get highlightMaterial() {
            return this.components["default.highlightMaterial"] || new cd(this, {
                id: "default.highlightMaterial",
                preset: "yellowHighlight",
                dontClear: !0
            })
        }
        get selectedMaterial() {
            return this.components["default.selectedMaterial"] || new cd(this, {
                id: "default.selectedMaterial",
                preset: "greenSelected",
                dontClear: !0
            })
        }
        get edgeMaterial() {
            return this.components["default.edgeMaterial"] || new dd(this, {
                id: "default.edgeMaterial",
                preset: "default",
                edgeColor: [0.4, 0.4, 0.4],
                edgeAlpha: 1.0,
                edgeWidth: 0.3,
            })
        }
        get viewport() {
            return this._viewport
        }
        get camera() {
            return this._camera
        }
        get center() {
            if (this._aabbDirty || !this._center) {
                this._center && this._center || (this._center = $c.vec3());
                const e = this.aabb;
                this._center[0] = (e[0] + e[3]) / 2, this._center[1] = (e[1] + e[4]) / 2, this._center[2] = (e[2] + e[5]) / 2
            }
            return this._center
        }
        get aabb() {
            if (this._aabbDirty) {
                this._aabb || (this._aabb = $c.AABB3());
                let e, t = $c.MAX_DOUBLE,
                    i = $c.MAX_DOUBLE,
                    r = $c.MAX_DOUBLE,
                    n = $c.MIN_DOUBLE,
                    s = $c.MIN_DOUBLE,
                    o = $c.MIN_DOUBLE;
                const a = this._collidables;
                let l, c = !1;
                for (const h in a)
                    if (a.hasOwnProperty(h)) {
                        if (l = a[h], !1 === l.collidable) continue;
                        e = l.aabb, e[0] < t && (t = e[0]), e[1] < i && (i = e[1]), e[2] < r && (r = e[2]), e[3] > n && (n = e[3]), e[4] > s && (s = e[4]), e[5] > o && (o = e[5]), c = !0
                    } c || (t = -100, i = -100, r = -100, n = 100, s = 100, o = 100), this._aabb[0] = t, this._aabb[1] = i, this._aabb[2] = r, this._aabb[3] = n, this._aabb[4] = s, this._aabb[5] = o, this._aabbDirty = !1
            }
            return this._aabb
        }
        _setAABBDirty() {
            this._aabbDirty = !0, this.fire("boundary")
        }
        pick(e, t) {
            if (0 === this.canvas.boundary[2] || 0 === this.canvas.boundary[3]) return this.error("Picking not allowed while canvas has zero width or height"), null;
            (e = e || {}).pickSurface = e.pickSurface || e.rayPick, e.canvasPos || e.matrix || e.origin && e.direction || this.warn("picking without canvasPos, matrix, or ray origin and direction");
            const i = e.includeEntities || e.include;
            i && (e.includeEntityIds = _d(this, i));
            const r = e.excludeEntities || e.exclude;
            return r && (e.excludeEntityIds = _d(this, r)), this._needRecompile && (this._recompile(), this._renderer.imageDirty(), this._needRecompile = !1), (t = this._renderer.pick(e, t)) ? (t.entity.fire && t.entity.fire("picked", t), t) : void 0
        }
        clear() {
            var e;
            for (const t in this.components) this.components.hasOwnProperty(t) && ((e = this.components[t])._dontClear || e.destroy())
        }
        clearLights() {
            const e = Object.keys(this.lights);
            for (let t = 0, i = e.length; t < i; t++) this.lights[e[t]].destroy()
        }
        clearSectionPlanes() {
            const e = Object.keys(this.sectionPlanes);
            for (let t = 0, i = e.length; t < i; t++) this.sectionPlanes[e[t]].destroy()
        }
        getAABB(e) {
            if (void 0 === e) return this.aabb;
            if (Ic.isString(e)) {
                const t = this.objects[e];
                if (t && t.aabb) return t.aabb;
                e = [e]
            }
            if (0 === e.length) return this.aabb;
            let t, i = $c.MAX_DOUBLE,
                r = $c.MAX_DOUBLE,
                n = $c.MAX_DOUBLE,
                s = $c.MIN_DOUBLE,
                o = $c.MIN_DOUBLE,
                a = $c.MIN_DOUBLE;
            if (this._withEntities(e, this.objects, e => {
                    if (e.collidable) {
                        const l = e.aabb;
                        l[0] < i && (i = l[0]), l[1] < r && (r = l[1]), l[2] < n && (n = l[2]), l[3] > s && (s = l[3]), l[4] > o && (o = l[4]), l[5] > a && (a = l[5]), t = !0
                    }
                }), t) {
                const e = $c.AABB3();
                return e[0] = i, e[1] = r, e[2] = n, e[3] = s, e[4] = o, e[5] = a, e
            }
            return this.aabb
        }
        setObjectsVisible(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.visible !== t;
                return e.visible = t, i
            })
        }
        setObjectsCollidable(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.collidable !== t;
                return e.collidable = t, i
            })
        }
        setObjectsCulled(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.culled !== t;
                return e.culled = t, i
            })
        }
        setObjectsSelected(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.selected !== t;
                return e.selected = t, i
            })
        }
        setObjectsHighlighted(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.highlighted !== t;
                return e.highlighted = t, i
            })
        }
        setObjectsXRayed(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.xrayed !== t;
                return e.xrayed = t, i
            })
        }
        setObjectsEdges(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.edges !== t;
                return e.edges = t, i
            })
        }
        setObjectsColorized(e, t) {
            return this._withEntities(e, this.objects, e => {
                e.colorize = t
            })
        }
        setObjectsOpacity(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.opacity !== t;
                return e.opacity = t, i
            })
        }
        setObjectsPickable(e, t) {
            return this._withEntities(e, this.objects, e => {
                const i = e.pickable !== t;
                return e.pickable = t, i
            })
        }
        setObjectsOffset(e, t) {
            this._withEntities(e, this.objects, e => {
                e.offset = t
            })
        }
        _withEntities(e, t, i) {
            Ic.isString(e) && (e = [e]);
            let r = !1;
            for (let n = 0, s = e.length; n < s; n++) {
                let s = t[e[n]];
                s && (r = i(s) || r)
            }
            return r
        }
        destroy() {
            super.destroy();
            for (const e in this.components) this.components.hasOwnProperty(e) && this.components[e].destroy();
            this.canvas.gl = null, this.components = null, this.models = null, this.objects = null, this.visibleObjects = null, this.xrayedObjects = null, this.highlightedObjects = null, this.selectedObjects = null, this.colorizedObjects = null, this.opacityObjects = null, this.sectionPlanes = null, this.lights = null, this.lightMaps = null, this.reflectionMaps = null, this._objectIds = null, this._visibleObjectIds = null, this._xrayedObjectIds = null, this._highlightedObjectIds = null, this._selectedObjectIds = null, this._colorizedObjectIds = null, this.types = null, this.components = null, this.canvas = null, this._renderer = null, this.input = null, this._viewport = null, this._camera = null
        }
    }
    const gd = $c.vec3(),
        vd = $c.vec3(),
        bd = $c.vec3(),
        yd = $c.vec3(),
        wd = $c.vec3();
    class Md extends Wc {
        get type() {
            return "CameraFlightAnimation"
        }
        constructor(e, t = {}) {
            super(e, t), this._look1 = $c.vec3(), this._eye1 = $c.vec3(), this._up1 = $c.vec3(), this._look2 = $c.vec3(), this._eye2 = $c.vec3(), this._up2 = $c.vec3(), this._orthoScale1 = 1, this._orthoScale2 = 1, this._flying = !1, this._flyEyeLookUp = !1, this._flyingEye = !1, this._flyingLook = !1, this._callback = null, this._callbackScope = null, this._time1 = null, this._time2 = null, this.easing = !1 !== t.easing, this.duration = t.duration, this.fit = t.fit, this.fitFOV = t.fitFOV, this.trail = t.trail
        }
        flyTo(e, t, i) {
            e = e || this.scene, this._flying && this.stop(), this._flying = !1, this._flyingEye = !1, this._flyingLook = !1, this._flyingEyeLookUp = !1, this._callback = t, this._callbackScope = i;
            const r = this.scene.camera,
                n = !!e.projection && e.projection !== r.projection;
            let s, o, a, l, c;
            if (this._eye1[0] = r.eye[0], this._eye1[1] = r.eye[1], this._eye1[2] = r.eye[2], this._look1[0] = r.look[0], this._look1[1] = r.look[1], this._look1[2] = r.look[2], this._up1[0] = r.up[0], this._up1[1] = r.up[1], this._up1[2] = r.up[2], this._orthoScale1 = r.ortho.scale, this._orthoScale2 = e.orthoScale || this._orthoScale1, e.aabb) s = e.aabb;
            else if (6 === e.length) s = e;
            else if (e.eye && e.look || e.up) o = e.eye, a = e.look, l = e.up;
            else if (e.eye) o = e.eye;
            else if (e.look) a = e.look;
            else {
                let r = e;
                if ((Ic.isNumeric(r) || Ic.isString(r)) && (c = r, r = this.scene.components[c], !r)) return this.error("Component not found: " + Ic.inQuotes(c)), void(t && (i ? t.call(i) : t()));
                n || (s = r.aabb || this.scene.aabb)
            }
            const h = e.poi;
            if (s) {
                if (s[3] < s[0] || s[4] < s[1] || s[5] < s[2]) return;
                if (s[3] === s[0] && s[4] === s[1] && s[5] === s[2]) return;
                s = s.slice();
                const t = $c.getAABB3Center(s);
                this._look2 = h || t;
                const i = $c.subVec3(this._eye1, this._look1, gd),
                    r = $c.normalizeVec3(i),
                    n = h ? $c.getAABB3DiagPoint(s, h) : $c.getAABB3Diag(s),
                    o = e.fitFOV || this._fitFOV,
                    a = Math.abs(n / Math.tan(o * $c.DEGTORAD));
                this._orthoScale2 = 1.1 * n, this._eye2[0] = this._look2[0] + r[0] * a, this._eye2[1] = this._look2[1] + r[1] * a, this._eye2[2] = this._look2[2] + r[2] * a, this._up2[0] = this._up1[0], this._up2[1] = this._up1[1], this._up2[2] = this._up1[2], this._flyingEyeLookUp = !0
            } else(o || a || l) && (this._flyingEyeLookUp = !!o && !!a && !!l, this._flyingEye = !!o && !a, this._flyingLook = !!a && !o, o && (this._eye2[0] = o[0], this._eye2[1] = o[1], this._eye2[2] = o[2]), a && (this._look2[0] = a[0], this._look2[1] = a[1], this._look2[2] = a[2]), l && (this._up2[0] = l[0], this._up2[1] = l[1], this._up2[2] = l[2]));
            n ? ("ortho" === e.projection && "ortho" !== r.projection && (this._projection2 = "ortho", this._projMatrix1 = r.projMatrix.slice(), r.ortho.scale = this._orthoScale2, this._projMatrix2 = r.ortho.matrix.slice(), r.projection = "customProjection"), "perspective" === e.projection && "perspective" !== r.projection && (this._projection2 = "perspective", this._projMatrix1 = r.projMatrix.slice(), this._projMatrix2 = r.perspective.matrix.slice(), r.projection = "customProjection")) : this._projection2 = null, this.fire("started", e, !0), this._time1 = Date.now(), this._time2 = this._time1 + (e.duration ? 1e3 * e.duration : this._duration), this._flying = !0, Fc.scheduleTask(this._update, this)
        }
        jumpTo(e) {
            this._jumpTo(e)
        }
        _jumpTo(e) {
            this._flying && this.stop();
            const t = this.scene.camera;
            var i, r, n, s, o;
            if (e.aabb) i = e.aabb;
            else if (6 === e.length) i = e;
            else if (e.eye || e.look || e.up) n = e.eye, s = e.look, o = e.up;
            else {
                let t = e;
                if ((Ic.isNumeric(t) || Ic.isString(t)) && (r = t, t = this.scene.components[r], !t)) return void this.error("Component not found: " + Ic.inQuotes(r));
                i = t.aabb || this.scene.aabb
            }
            const a = e.poi;
            if (i) {
                if (i[3] <= i[0] || i[4] <= i[1] || i[5] <= i[2]) return;
                var l = a ? $c.getAABB3DiagPoint(i, a) : $c.getAABB3Diag(i);
                let r;
                s = a || $c.getAABB3Center(i, s), this._trail ? $c.subVec3(t.look, s, wd) : $c.subVec3(t.eye, t.look, wd), $c.normalizeVec3(wd), r = (void 0 !== e.fit ? e.fit : this._fit) ? Math.abs(l / Math.tan((e.fitFOV || this._fitFOV) * $c.DEGTORAD)) : $c.lenVec3($c.subVec3(t.eye, t.look, gd)), $c.mulVec3Scalar(wd, r), t.eye = $c.addVec3(s, wd, gd), t.look = s, this.scene.camera.ortho.scale = 1.1 * l
            } else(n || s || o) && (n && (t.eye = n), s && (t.look = s), o && (t.up = o));
            e.projection && (t.projection = e.projection)
        }
        _update() {
            if (!this._flying) return;
            let e = (Date.now() - this._time1) / (this._time2 - this._time1);
            const t = e >= 1;
            e > 1 && (e = 1);
            const i = this.easing ? Md._ease(e, 0, 1, 1) : e,
                r = this.scene.camera;
            if (this._flyingEye || this._flyingLook ? this._flyingEye ? ($c.subVec3(r.eye, r.look, wd), r.eye = $c.lerpVec3(i, 0, 1, this._eye1, this._eye2, bd), r.look = $c.subVec3(bd, wd, vd)) : this._flyingLook && (r.look = $c.lerpVec3(i, 0, 1, this._look1, this._look2, vd), r.up = $c.lerpVec3(i, 0, 1, this._up1, this._up2, yd)) : this._flyingEyeLookUp && (r.eye = $c.lerpVec3(i, 0, 1, this._eye1, this._eye2, bd), r.look = $c.lerpVec3(i, 0, 1, this._look1, this._look2, vd), r.up = $c.lerpVec3(i, 0, 1, this._up1, this._up2, yd)), this._projection2) {
                const t = "ortho" === this._projection2 ? Md._easeOutExpo(e, 0, 1, 1) : Md._easeInCubic(e, 0, 1, 1);
                r.customProjection.matrix = $c.lerpMat4(t, 0, 1, this._projMatrix1, this._projMatrix2)
            } else r.ortho.scale = this._orthoScale1 + e * (this._orthoScale2 - this._orthoScale1);
            t ? this.stop() : Fc.scheduleTask(this._update, this)
        }
        static _ease(e, t, i, r) {
            return -i * (e /= r) * (e - 2) + t
        }
        static _easeInCubic(e, t, i, r) {
            return i * (e /= r) * e * e + t
        }
        static _easeOutExpo(e, t, i, r) {
            return i * (1 - Math.pow(2, -10 * e / r)) + t
        }
        stop() {
            if (!this._flying) return;
            this._flying = !1, this._time1 = null, this._time2 = null, this._projection2 && (this.scene.camera.projection = this._projection2);
            const e = this._callback;
            e && (this._callback = null, this._callbackScope ? e.call(this._callbackScope) : e()), this.fire("stopped", !0, !0)
        }
        cancel() {
            this._flying && (this._flying = !1, this._time1 = null, this._time2 = null, this._callback && (this._callback = null), this.fire("canceled", !0, !0))
        }
        set duration(e) {
            this._duration = e ? 1e3 * e : 500, this.stop()
        }
        get duration() {
            return this._duration / 1e3
        }
        set fit(e) {
            this._fit = !1 !== e
        }
        get fit() {
            return this._fit
        }
        set fitFOV(e) {
            this._fitFOV = e || 45
        }
        get fitFOV() {
            return this._fitFOV
        }
        set trail(e) {
            this._trail = !!e
        }
        get trail() {
            return this._trail
        }
        destroy() {
            this.stop(), super.destroy()
        }
    }
    const Ad = $c.vec4(),
        xd = $c.vec4(),
        Cd = $c.vec4(),
        Pd = $c.vec3();
    class kd {
        constructor(e) {
            this._scene = e, this._inverseProjectMat = $c.mat4(), this._transposedProjectMat = $c.mat4(), this._inverseViewMat = $c.mat4(), this._projMatDirty = !0, this._viewMatDirty = !0, this._sceneDiagSizeDirty = !0, this._sceneDiagSize = 1, this._onCameraProjMatrix = this._scene.camera.on("projMatrix", () => {
                this._projMatDirty = !0
            }), this._onCameraViewMatrix = this._scene.camera.on("viewMatrix", () => {
                this._viewMatDirty = !0
            }), this._onSceneBoundary = this._scene.scene.on("boundary", () => {
                this._sceneDiagSizeDirty = !0
            })
        }
        _getInverseProjectMat() {
            return this._projMatDirty && $c.inverseMat4(this._scene.camera.projMatrix, this._inverseProjectMat), this._inverseProjectMat
        }
        _getTransposedProjectMat() {
            return this._projMatDirty && $c.transposeMat4(this._scene.camera.projMatrix, this._transposedProjectMat), this._transposedProjectMat
        }
        _getInverseViewMat() {
            return this._viewMatDirty && $c.inverseMat4(this._scene.camera.viewMatrix, this._inverseViewMat), this._inverseViewMat
        }
        _getSceneDiagSize() {
            return this._sceneDiagSizeDirty && (this._sceneDiagSize = $c.getAABB3Diag(this._scene.aabb)), this._sceneDiagSize
        }
        _unproject(e, t, i, r) {
            const n = this._scene.canvas.canvas,
                s = this._getInverseProjectMat(),
                o = this._getInverseViewMat(),
                a = n.offsetWidth / 2,
                l = n.offsetHeight / 2;
            Ad[0] = (e[0] - a) / a, Ad[1] = (e[1] - l) / l, Ad[2] = t, Ad[3] = 1, $c.mulMat4v4(s, Ad, i), $c.mulVec3Scalar(i, 1 / i[3]), i[3] = 1, i[1] *= -1, $c.mulMat4v4(o, i, r)
        }
        dollyToCanvasPos(e, t) {
            const i = this._getTransposedProjectMat(),
                r = i.subarray(8, 12),
                n = i.subarray(12),
                s = [0, 0, -this._getSceneDiagSize(), 1],
                o = $c.dotVec4(s, r) / $c.dotVec4(s, n);
            this._unproject(e, o, xd, Cd), this.dollyToWorldPos(Cd, t)
        }
        dollyToWorldPos(e, t) {
            const i = this._scene.camera,
                r = $c.subVec3(e, i.eye, Pd);
            if ($c.lenVec3(r) < t) return;
            $c.normalizeVec3(r);
            const n = r[0] * t,
                s = r[1] * t,
                o = r[2] * t,
                a = i.eye,
                l = i.look;
            i.eye = [a[0] + n, a[1] + s, a[2] + o], i.look = [l[0] + n, l[1] + s, l[2] + o]
        }
        destroy() {
            this._scene.camera.off(this._onCameraProjMatrix), this._scene.camera.off(this._onCameraViewMatrix), this._scene.scene.off(this._onSceneBoundary)
        }
    }
    class Ed {
        constructor(e) {
            this._scene = e, this._pivotWorldPos = $c.vec3(), this._cameraOffset = $c.vec3(), this._azimuth = 0, this._polar = 0, this._radius = 0, this._pivoting = !1, this._shown = !1, this._pivotViewPos = $c.vec4(), this._pivotProjPos = $c.vec4(), this._pivotCanvasPos = $c.vec2(), this._cameraDirty = !0, this._onViewMatrix = this._scene.camera.on("viewMatrix", () => {
                this._cameraDirty = !0
            }), this._onProjMatrix = this._scene.camera.on("projMatrix", () => {
                this._cameraDirty = !0
            }), this._onTick = this._scene.on("tick", () => {
                this.updatePivotElement()
            })
        }
        updatePivotElement() {
            const e = this._scene.camera,
                t = this._scene.canvas;
            if (this._pivoting && this._cameraDirty) {
                $c.transformPoint3(e.viewMatrix, this._pivotWorldPos, this._pivotViewPos), this._pivotViewPos[3] = 1, $c.transformPoint4(e.projMatrix, this._pivotViewPos, this._pivotProjPos);
                const i = t.boundary,
                    r = i[2],
                    n = i[3];
                this._pivotCanvasPos[0] = Math.floor((1 + this._pivotProjPos[0] / this._pivotProjPos[3]) * r / 2), this._pivotCanvasPos[1] = Math.floor((1 - this._pivotProjPos[1] / this._pivotProjPos[3]) * n / 2);
                const s = t.canvas.getBoundingClientRect();
                this._pivotElement && (this._pivotElement.style.left = Math.floor(s.left + this._pivotCanvasPos[0]) - 12 + "px", this._pivotElement.style.top = Math.floor(s.top + this._pivotCanvasPos[1]) - 12 + "px"), this._cameraDirty = !1
            }
        }
        setPivotElement(e) {
            this._pivotElement = e
        }
        startPivot(e) {
            const t = this._scene.camera;
            e ? this._pivotWorldPos.set(e) : this._pivotWorldPos.set(t.look);
            let i = $c.lookAtMat4v(t.eye, t.look, t.worldUp);
            $c.transformPoint3(i, this._pivotWorldPos, this._cameraOffset), this._cameraOffset[2] += $c.distVec3(t.eye, this._pivotWorldPos), i = $c.inverseMat4(i);
            const r = $c.transformVec3(i, this._cameraOffset),
                n = $c.vec3();
            if ($c.subVec3(t.eye, this._pivotWorldPos, n), $c.addVec3(n, r), t.zUp) {
                const e = n[1];
                n[1] = n[2], n[2] = e
            }
            this._radius = $c.lenVec3(n), this._polar = Math.acos(n[1] / this._radius), this._azimuth = Math.atan2(n[0], n[2]), this._pivoting = !0
        }
        getPivoting() {
            return this._pivoting
        }
        setPivotPos(e) {
            this._pivotWorldPos.set(e)
        }
        getPivotPos() {
            return this._pivotWorldPos
        }
        continuePivot(e, t) {
            if (!this._pivoting) return;
            if (0 === e && 0 === t) return;
            const i = this._scene.camera;
            var r = -e;
            const n = -t;
            1 === i.worldUp[2] && (r = -r), this._azimuth += .01 * -r, this._polar += .01 * n, this._polar = $c.clamp(this._polar, .001, Math.PI - .001);
            const s = [this._radius * Math.sin(this._polar) * Math.sin(this._azimuth), this._radius * Math.cos(this._polar), this._radius * Math.sin(this._polar) * Math.cos(this._azimuth)];
            if (1 === i.worldUp[2]) {
                const e = s[1];
                s[1] = s[2], s[2] = e
            }
            const o = $c.lenVec3($c.subVec3(i.look, i.eye, $c.vec3()));
            $c.addVec3(s, this._pivotWorldPos);
            let a = $c.lookAtMat4v(s, this._pivotWorldPos, i.worldUp);
            a = $c.inverseMat4(a);
            const l = $c.transformVec3(a, this._cameraOffset);
            a[12] -= l[0], a[13] -= l[1], a[14] -= l[2];
            const c = [a[8], a[9], a[10]];
            i.eye = [a[12], a[13], a[14]], $c.subVec3(i.eye, $c.mulVec3Scalar(c, o), i.look), i.up = [a[4], a[5], a[6]], this.showPivot()
        }
        showPivot() {
            this._shown || (null !== this._hideTimeout && (window.clearTimeout(this._hideTimeout), this._hideTimeout = null), this._pivotElement && (this.updatePivotElement(), this._pivotElement.style.visibility = "visible", this._shown = !0, this._hideTimeout = window.setTimeout(() => {
                this.hidePivot()
            }, 1e3)))
        }
        hidePivot() {
            this._shown && (null !== this._hideTimeout && (window.clearTimeout(this._hideTimeout), this._hideTimeout = null), this._pivotElement && (this._pivotElement.style.visibility = "hidden"), this._shown = !1)
        }
        endPivot() {
            this._pivoting = !1
        }
        destroy() {
            this._scene.camera.off(this._onViewMatrix), this._scene.camera.off(this._onProjMatrix), this._scene.off(this._onTick)
        }
    }
    class Id {
        constructor(e, t) {
            this._scene = e.scene, this._cameraControl = e, this._scene.canvas.canvas.oncontextmenu = function(e) {
                e.preventDefault()
            }, this._configs = t, this.schedulePickEntity = !1, this.schedulePickSurface = !1, this.pickCursorPos = $c.vec2(), this.picked = !1, this.pickedSurface = !1, this.pickResult = null, this._lastPickedEntityId = null, this._needFireEvents = !1
        }
        update() {
            if (!this._configs.pointerEnabled) return;
            if (!this.schedulePickEntity && !this.schedulePickSurface) return;
            this.picked = !1, this.pickedSurface = !1, this._needFireEvents = !1;
            const e = this._cameraControl.hasSubs("hoverSurface");
            if (this.schedulePickSurface && this.pickResult && this.pickResult.worldPos) {
                const t = this.pickResult.canvasPos;
                if (t[0] === this.pickCursorPos[0] && t[1] === this.pickCursorPos[1]) return this.picked = !0, this.pickedSurface = !0, this._needFireEvents = e, this.schedulePickEntity = !1, void(this.schedulePickSurface = !1)
            }
            if (this.schedulePickEntity && this.pickResult) {
                const e = this.pickResult.canvasPos;
                if (e[0] === this.pickCursorPos[0] && e[1] === this.pickCursorPos[1]) return this.picked = !0, this.pickedSurface = !1, this._needFireEvents = !1, this.schedulePickEntity = !1, void(this.schedulePickSurface = !1)
            }
            this.schedulePickSurface ? (this.pickResult = this._scene.pick({
                pickSurface: !0,
                pickSurfaceNormal: !0,
                canvasPos: this.pickCursorPos
            }), this.pickResult && (this.picked = !0, this.pickedSurface = !0, this._needFireEvents = !0)) : (this.pickResult = this._scene.pick({
                canvasPos: this.pickCursorPos
            }), this.pickResult && (this.picked = !0, this.pickedSurface = !1, this._needFireEvents = !0)), this.schedulePickEntity = !1, this.schedulePickSurface = !1
        }
        fireEvents() {
            if (this._needFireEvents) {
                if (this.picked && this.pickResult && this.pickResult.entity) {
                    const e = this.pickResult.entity.id;
                    this._lastPickedEntityId !== e && (void 0 !== this._lastPickedEntityId && this._cameraControl.fire("hoverOut", {
                        entity: this._scene.objects[this._lastPickedEntityId]
                    }, !0), this._cameraControl.fire("hoverEnter", this.pickResult, !0), this._lastPickedEntityId = e), this._cameraControl.fire("hover", this.pickResult, !0), this.pickResult.worldPos && (this.pickedSurface = !0, this._cameraControl.fire("hoverSurface", this.pickResult, !0))
                } else void 0 !== this._lastPickedEntityId && (this._cameraControl.fire("hoverOut", {
                    entity: this._scene.objects[this._lastPickedEntityId]
                }, !0), this._lastPickedEntityId = void 0), this._cameraControl.fire("hoverOff", {
                    canvasPos: this.pickCursorPos
                }, !0);
                this.pickResult = null, this._needFireEvents = !1
            }
        }
        destroy() {
            this._scene.off(this._onTick)
        }
    }
    const Td = $c.vec2();
    class Dd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = t.pickController;
            let o, a, l = 0,
                c = 0,
                h = 0,
                d = 0;
            this._down = !1;
            let u = !1;
            const p = $c.vec3();
            let f = !0;
            const _ = this._scene.canvas.canvas,
                m = [];
            document.addEventListener("keydown", this._documentKeyDownHandler = t => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const n = t.keyCode;
                m[n] = !0
            }), document.addEventListener("keyup", this._documentKeyUpHandler = t => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const n = t.keyCode;
                m[n] = !1
            }), _.addEventListener("mousedown", this._mouseDownHandler = t => {
                if (i.active && i.pointerEnabled) switch (this._down = !0, t.which) {
                    case 1:
                        m[e.input.KEY_SHIFT] || i.planView ? (_.style.cursor = "move", l = r.pointerCanvasPos[0], c = r.pointerCanvasPos[1], h = r.pointerCanvasPos[0], d = r.pointerCanvasPos[1], s.pickCursorPos = r.pointerCanvasPos, s.schedulePickSurface = !0, s.update(), s.picked && s.pickedSurface && s.pickResult ? (u = !0, p.set(s.pickResult.worldPos)) : u = !1) : (_.style.cursor = "move", l = r.pointerCanvasPos[0], c = r.pointerCanvasPos[1], h = r.pointerCanvasPos[0], d = r.pointerCanvasPos[1]);
                        break;
                    case 2:
                        o = !0, i.panRightClick || (_.style.cursor = "move", l = r.pointerCanvasPos[0], c = r.pointerCanvasPos[1], h = r.pointerCanvasPos[0], d = r.pointerCanvasPos[1]);
                        break;
                    case 3:
                        a = !0, i.panRightClick && (_.style.cursor = "move", l = r.pointerCanvasPos[0], c = r.pointerCanvasPos[1], h = r.pointerCanvasPos[0], d = r.pointerCanvasPos[1], s.pickCursorPos = r.pointerCanvasPos, s.schedulePickSurface = !0, s.update(), s.picked && s.pickedSurface && s.pickResult ? (u = !0, p.set(s.pickResult.worldPos)) : u = !1)
                }
            }), _.addEventListener("mousemove", this._mouseMoveHandler = t => {
                if (!i.active || !i.pointerEnabled) return;
                if (!r.mouseover) return;
                if (n.inputFromMouse = !0, f = !0, !this._down) return;
                const s = e.canvas.boundary,
                    h = s[2] - s[0],
                    d = s[3] - s[1],
                    _ = r.pointerCanvasPos[0],
                    g = r.pointerCanvasPos[1];
                if (m[e.input.KEY_SHIFT] || i.planView || !i.panRightClick && o || i.panRightClick && a) {
                    const t = _ - l,
                        i = g - c,
                        r = e.camera;
                    if ("perspective" === r.projection) {
                        const s = Math.abs(u ? $c.lenVec3($c.subVec3(p, e.camera.eye, [])) : e.camera.eyeLookDist) * Math.tan(r.perspective.fov / 2 * Math.PI / 180);
                        n.panDeltaX += 1.5 * t * s / d, n.panDeltaY += 1.5 * i * s / d
                    } else n.panDeltaX += .5 * r.ortho.scale * (t / d), n.panDeltaY += .5 * r.ortho.scale * (i / d)
                } else i.planView || (n.rotateDeltaY -= (_ - l) / h * i.dragRotationRate / 2, n.rotateDeltaX += (g - c) / d * (i.dragRotationRate / 4));
                l = _, c = g
            }), document.addEventListener("mouseup", this._documentMouseUpHandler = e => {
                if (i.active && i.pointerEnabled) {
                    switch (e.which) {
                        case 1:
                            break;
                        case 2:
                            o = !1;
                            break;
                        case 3:
                            a = !1
                    }
                    this._down = !1
                }
            }), _.addEventListener("mouseup", this._mouseUpHandler = e => {
                if (i.active && i.pointerEnabled) {
                    switch (e.which) {
                        case 3:
                            ! function(e, t) {
                                if (e) {
                                    let i = e.target,
                                        r = 0,
                                        n = 0;
                                    for (; i.offsetParent;) r += i.offsetLeft, n += i.offsetTop, i = i.offsetParent;
                                    t[0] = e.pageX - r, t[1] = e.pageY - n
                                } else e = window.event, t[0] = e.x, t[1] = e.y
                            }(e, Td);
                            const i = Td[0],
                                r = Td[1];
                            Math.abs(i - h) < 3 && Math.abs(r - d) < 3 && t.cameraControl.fire("rightClick", {
                                canvasPos: Td,
                                event: e
                            }, !0)
                    }
                    _.style.removeProperty("cursor")
                }
            }), _.addEventListener("mouseenter", this._mouseEnterHandler = () => {
                i.active && i.pointerEnabled && (this._down = !1)
            }), _.addEventListener("mouseleave", this._mouseLeaveHandler = () => {
                i.active && i.pointerEnabled && (n.panDeltaX = 0, n.panDeltaY = 0, n.rotateDeltaX = 0, n.rotateDeltaY = 0, this._down = !1)
            });
            let g = null;
            _.addEventListener("wheel", this._mouseWheelHandler = e => {
                if (!i.active || !i.pointerEnabled) return;
                const t = performance.now() / 1e3;
                var s = null !== g ? t - g : 0;
                g = t, s > .05 && (s = .05), s < 1 / 60 && (s = 1 / 60);
                const o = Math.max(-1, Math.min(1, 40 * -e.deltaY));
                if (0 === o) return;
                const a = o / Math.abs(o);
                n.dollyDelta += -a * s * i.mouseWheelDollyRate, f && (r.followPointerDirty = !0, f = !1), e.preventDefault()
            })
        }
        reset() {
            this._down = !1
        }
        destroy() {
            const e = this._scene.canvas.canvas;
            document.removeEventListener("keydown", this._documentKeyDownHandler), document.removeEventListener("keyup", this._documentKeyUpHandler), e.removeEventListener("mousedown", this._mouseDownHandler), e.removeEventListener("mousemove", this._mouseMoveHandler), document.removeEventListener("mouseup", this._documentMouseUpHandler), e.removeEventListener("mouseup", this._mouseUpHandler), e.removeEventListener("mouseenter", this._mouseEnterHandler), e.removeEventListener("mouseleave", this._mouseLeaveHandler), e.removeEventListener("wheel", this._mouseWheelHandler)
        }
    }
    const Sd = $c.vec3(),
        Bd = $c.vec3(),
        jd = $c.vec3(),
        Ld = $c.vec3(),
        Rd = $c.vec3(),
        Od = {
            eye: $c.vec3(),
            look: $c.vec3(),
            up: $c.vec3()
        };
    class Fd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = t.cameraControl,
                o = e.camera;
            document.addEventListener("keydown", this._documentKeyDownHandler = n => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const a = s._isKeyDownForAction(s.AXIS_VIEW_RIGHT),
                    l = s._isKeyDownForAction(s.AXIS_VIEW_BACK),
                    c = s._isKeyDownForAction(s.AXIS_VIEW_LEFT),
                    h = s._isKeyDownForAction(s.AXIS_VIEW_FRONT),
                    d = s._isKeyDownForAction(s.AXIS_VIEW_TOP),
                    u = s._isKeyDownForAction(s.AXIS_VIEW_BOTTOM);
                if (!(a || l || c || h || d || u)) return;
                const p = e.aabb,
                    f = $c.getAABB3Diag(p);
                $c.getAABB3Center(p, Sd);
                const _ = Math.abs(f / Math.tan(t.cameraFlight.fitFOV * $c.DEGTORAD));
                a ? (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldRight, _, Bd), Rd)), Od.look.set(Sd), Od.up.set(o.worldUp)) : l ? (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldForward, _, Bd), Rd)), Od.look.set(Sd), Od.up.set(o.worldUp)) : c ? (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldRight, -_, Bd), Rd)), Od.look.set(Sd), Od.up.set(o.worldUp)) : h ? (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldForward, -_, Bd), Rd)), Od.look.set(Sd), Od.up.set(o.worldUp)) : d ? (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldUp, _, Bd), Rd)), Od.look.set(Sd), Od.up.set($c.normalizeVec3($c.mulVec3Scalar(o.worldForward, 1, jd), Ld))) : u && (Od.eye.set($c.addVec3(Sd, $c.mulVec3Scalar(o.worldUp, -_, Bd), Rd)), Od.look.set(Sd), Od.up.set($c.normalizeVec3($c.mulVec3Scalar(o.worldForward, -1, jd)))), !i.firstPerson && i.followPointer && t.pivotController.startPivot(Sd), t.cameraFlight.duration > 0 ? t.cameraFlight.flyTo(Od, () => {
                    t.pivotController.getPivoting() && i.followPointer && t.pivotController.showPivot()
                }) : (t.cameraFlight.jumpTo(Od), t.pivotController.getPivoting() && i.followPointer && t.pivotController.showPivot())
            })
        }
        reset() {}
        destroy() {
            document.removeEventListener("keydown", this._documentKeyDownHandler)
        }
    }
    class Nd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = t.pickController,
                o = t.pivotController,
                a = t.cameraControl;
            this._clicks = 0, this._timeout = null, this._lastPickedEntityId = null;
            let l = !1,
                c = !1;
            const h = this._scene.canvas.canvas,
                d = i => {
                    let r;
                    i && i.worldPos && (r = i.worldPos);
                    const n = i ? i.entity.aabb : e.aabb;
                    if (r) {
                        const i = e.camera;
                        $c.subVec3(i.eye, i.look, []);
                        t.cameraFlight.flyTo({
                            aabb: n
                        })
                    } else t.cameraFlight.flyTo({
                        aabb: n
                    })
                };
            h.addEventListener("mousemove", this._canvasMouseMoveHandler = t => {
                if (!i.active || !i.pointerEnabled) return;
                if (l || c) return;
                const n = a.hasSubs("hover"),
                    o = a.hasSubs("hoverOut"),
                    h = a.hasSubs("hoverOff"),
                    d = a.hasSubs("hoverSurface");
                if (n || o || h || d)
                    if (s.pickCursorPos = r.pointerCanvasPos, s.schedulePickEntity = !0, s.schedulePickSurface = d, s.update(), s.pickResult) {
                        const t = s.pickResult.entity.id;
                        this._lastPickedEntityId !== t && (void 0 !== this._lastPickedEntityId && a.fire("hoverOut", {
                            entity: e.objects[this._lastPickedEntityId]
                        }, !0), a.fire("hoverEnter", s.pickResult, !0), this._lastPickedEntityId = t), a.fire("hover", s.pickResult, !0), s.pickResult.worldPos && a.fire("hoverSurface", s.pickResult, !0)
                    } else void 0 !== this._lastPickedEntityId && (a.fire("hoverOut", {
                        entity: e.objects[this._lastPickedEntityId]
                    }, !0), this._lastPickedEntityId = void 0), a.fire("hoverOff", {
                        canvasPos: s.pickCursorPos
                    }, !0)
            }), h.addEventListener("mousedown", this._canvasMouseDownHandler = e => {
                1 === e.which && (l = !0), 3 === e.which && (c = !0), 1 === e.which && i.active && i.pointerEnabled && (r.mouseDownClientX = e.clientX, r.mouseDownClientY = e.clientY, r.mouseDownCursorX = r.pointerCanvasPos[0], r.mouseDownCursorY = r.pointerCanvasPos[1], !i.firstPerson && i.followPointer && (s.pickCursorPos = r.pointerCanvasPos, s.schedulePickSurface = !0, s.update(), 1 === e.which && (s.pickResult ? o.startPivot(s.pickResult.worldPos) : o.startPivot())))
            }), document.addEventListener("mouseup", this._documentMouseUpHandler = e => {
                1 === e.which && (l = !1), 3 === e.which && (c = !1)
            }), h.addEventListener("mouseup", this._canvasMouseUpHandler = n => {
                if (!i.active || !i.pointerEnabled) return;
                if (!(1 === n.which)) return;
                if (o.hidePivot(), Math.abs(n.clientX - r.mouseDownClientX) > 3 || Math.abs(n.clientY - r.mouseDownClientY) > 3) return;
                const l = a.hasSubs("picked"),
                    c = a.hasSubs("pickedNothing"),
                    h = a.hasSubs("pickedSurface"),
                    u = a.hasSubs("doublePicked"),
                    p = a.hasSubs("doublePickedSurface"),
                    f = a.hasSubs("doublePickedNothing");
                if (!(i.doublePickFlyTo || u || p || f)) return (l || c || h) && (s.pickCursorPos = r.pointerCanvasPos, s.schedulePickEntity = !0, s.schedulePickSurface = h, s.update(), s.pickResult ? (a.fire("picked", s.pickResult, !0), s.pickedSurface && a.fire("pickedSurface", s.pickResult, !0)) : a.fire("pickedNothing", {
                    canvasPos: r.pointerCanvasPos
                }, !0)), void(this._clicks = 0);
                if (this._clicks++, 1 === this._clicks) this._timeout = setTimeout(() => {
                    s.pickCursorPos = r.pointerCanvasPos, s.schedulePickEntity = i.doublePickFlyTo, s.schedulePickSurface = h, s.update(), s.pickResult ? (a.fire("picked", s.pickResult, !0), s.pickedSurface && (a.fire("pickedSurface", s.pickResult, !0), !i.firstPerson && i.followPointer && (t.pivotController.startPivot(s.pickResult.worldPos), t.pivotController.showPivot()))) : a.fire("pickedNothing", {
                        canvasPos: r.pointerCanvasPos
                    }, !0), this._clicks = 0
                }, 250);
                else {
                    if (null !== this._timeout && (window.clearTimeout(this._timeout), this._timeout = null), s.pickCursorPos = r.pointerCanvasPos, s.schedulePickEntity = i.doublePickFlyTo, s.schedulePickSurface = s.schedulePickEntity && p, s.update(), s.pickResult) {
                        if (a.fire("doublePicked", s.pickResult, !0), s.pickedSurface && a.fire("doublePickedSurface", s.pickResult, !0), i.doublePickFlyTo && (d(s.pickResult), !i.firstPerson && i.followPointer)) {
                            const e = s.pickResult.entity.aabb,
                                i = $c.getAABB3Center(e);
                            t.pivotController.startPivot(i), t.pivotController.showPivot()
                        }
                    } else if (a.fire("doublePickedNothing", {
                            canvasPos: r.pointerCanvasPos
                        }, !0), i.doublePickFlyTo && (d(), !i.firstPerson && i.followPointer)) {
                        const i = e.aabb,
                            r = $c.getAABB3Center(i);
                        t.pivotController.startPivot(r), t.pivotController.showPivot()
                    }
                    this._clicks = 0
                }
            }, !1)
        }
        reset() {
            this._clicks = 0, this._lastPickedEntityId = null, this._timeout && (window.clearTimeout(this._timeout), this._timeout = null)
        }
        destroy() {
            const e = this._scene.canvas.canvas;
            e.removeEventListener("mousemove", this._canvasMouseMoveHandler), e.removeEventListener("mousedown", this._canvasMouseDownHandler), document.removeEventListener("mouseup", this._documentMouseUpHandler), e.removeEventListener("mouseup", this._canvasMouseUpHandler), this._timeout && (window.clearTimeout(this._timeout), this._timeout = null)
        }
    }
    class Ud {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = e.input,
                o = [],
                a = e.canvas.canvas;
            t.pickController;
            let l = !0;
            document.addEventListener("mousemove", this._documentMouseMoveHandler = () => {
                l = !0
            }), document.addEventListener("keydown", this._documentKeyDownHandler = t => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const n = t.keyCode;
                o[n] = !0, n === s.KEY_SHIFT && (a.style.cursor = "move")
            }), document.addEventListener("keyup", this._documentKeyUpHandler = t => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const n = t.keyCode;
                o[n] = !1, n === s.KEY_SHIFT && (a.style.cursor = "default")
            }), this._onTick = e.on("tick", a => {
                if (!i.active || !i.pointerEnabled || !e.input.keyboardEnabled) return;
                if (!r.mouseover) return;
                const c = t.cameraControl,
                    h = a.deltaTime / 1e3;
                if (!i.planView) {
                    const e = c._isKeyDownForAction(c.ROTATE_Y_POS, o),
                        r = c._isKeyDownForAction(c.ROTATE_Y_NEG, o),
                        s = c._isKeyDownForAction(c.ROTATE_X_POS, o),
                        a = c._isKeyDownForAction(c.ROTATE_X_NEG, o),
                        l = h * i.keyboardRotationRate;
                    (e || r || s || a) && (!i.firstPerson && i.followPointer && t.pivotController.startPivot(), e ? n.rotateDeltaY += l : r && (n.rotateDeltaY -= l), s ? n.rotateDeltaX += l : a && (n.rotateDeltaX -= l), !i.firstPerson && i.followPointer && t.pivotController.startPivot())
                }
                if (!o[s.KEY_CTRL] && !o[s.KEY_ALT]) {
                    const e = c._isKeyDownForAction(c.DOLLY_BACKWARDS, o),
                        s = c._isKeyDownForAction(c.DOLLY_FORWARDS, o);
                    if (e || s) {
                        const o = h * i.keyboardDollyRate;
                        !i.firstPerson && i.followPointer && t.pivotController.startPivot(), s ? n.dollyDelta -= o : e && (n.dollyDelta += o), l && (r.followPointerDirty = !0, l = !1)
                    }
                }
                const d = c._isKeyDownForAction(c.PAN_FORWARDS, o),
                    u = c._isKeyDownForAction(c.PAN_BACKWARDS, o),
                    p = c._isKeyDownForAction(c.PAN_LEFT, o),
                    f = c._isKeyDownForAction(c.PAN_RIGHT, o),
                    _ = c._isKeyDownForAction(c.PAN_UP, o),
                    m = c._isKeyDownForAction(c.PAN_DOWN, o),
                    g = (o[s.KEY_ALT] ? .3 : 1) * h * i.keyboardPanRate;
                (d || u || p || f || _ || m) && (!i.firstPerson && i.followPointer && t.pivotController.startPivot(), m ? n.panDeltaY += g : _ && (n.panDeltaY += -g), f ? n.panDeltaX += -g : p && (n.panDeltaX += g), u ? n.panDeltaZ += g : d && (n.panDeltaZ += -g))
            })
        }
        reset() {}
        destroy() {
            this._scene.off(this._onTick), document.removeEventListener("mousemove", this._documentMouseMoveHandler), document.removeEventListener("keydown", this._documentKeyDownHandler), document.removeEventListener("keyup", this._documentKeyUpHandler)
        }
    }
    const Hd = $c.vec3();
    class Vd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = e.camera,
                o = t.pickController,
                a = t.pivotController,
                l = t.panController;
            let c = 1,
                h = 1;
            this._onTick = e.on("tick", t => {
                if (!i.active || !i.pointerEnabled) return;
                let d = "default";
                if (Math.abs(n.dollyDelta) < .001 && (n.dollyDelta = 0), Math.abs(n.rotateDeltaX) < .001 && (n.rotateDeltaX = 0), Math.abs(n.rotateDeltaY) < .001 && (n.rotateDeltaY = 0), 0 === n.rotateDeltaX && 0 === n.rotateDeltaY || (n.dollyDelta = 0), i.firstPerson && !i.followPointer);
                else if (--c <= 0 && (c = 1, 0 !== n.dollyDelta)) {
                    if (0 === n.rotateDeltaY && 0 === n.rotateDeltaX && i.followPointer && r.followPointerDirty) {
                        if (o.pickCursorPos = r.pointerCanvasPos, o.schedulePickSurface = !0, o.update(), o.pickResult && o.pickResult.worldPos) {
                            const e = o.pickResult.worldPos;
                            a.setPivotPos(e), a.hidePivot()
                        } else h = 1;
                        r.followPointerDirty = !1
                    }
                    const t = Math.abs($c.lenVec3($c.subVec3(a.getPivotPos(), e.camera.eye, Hd)));
                    h = t / i.dollyProximityThreshold, h < i.dollyMinSpeed && (h = i.dollyMinSpeed)
                }
                let u = n.dollyDelta * h;
                if (0 === n.rotateDeltaY && 0 === n.rotateDeltaX || (a.getPivoting() && i.followPointer ? (a.continuePivot(n.rotateDeltaY, n.rotateDeltaX), a.showPivot()) : (0 !== n.rotateDeltaX && (i.firstPerson ? s.pitch(-n.rotateDeltaX) : s.orbitPitch(n.rotateDeltaX)), 0 !== n.rotateDeltaY && (i.firstPerson ? s.yaw(n.rotateDeltaY) : s.orbitYaw(n.rotateDeltaY))), n.rotateDeltaX *= i.rotationInertia, n.rotateDeltaY *= i.rotationInertia, d = "grabbing"), Math.abs(n.panDeltaX) < .001 && (n.panDeltaX = 0), Math.abs(n.panDeltaY) < .001 && (n.panDeltaY = 0), Math.abs(n.panDeltaZ) < .001 && (n.panDeltaZ = 0), 0 !== n.panDeltaX || 0 !== n.panDeltaY || 0 !== n.panDeltaZ) {
                    a.getPivoting() && i.followPointer && a.showPivot();
                    const e = $c.vec3();
                    let t, r;
                    if (e[0] = n.panDeltaX, e[1] = n.panDeltaY, e[2] = n.panDeltaZ, i.constrainVertical) {
                        s.xUp ? (t = s.eye[0], r = s.look[0]) : s.yUp ? (t = s.eye[1], r = s.look[1]) : s.zUp && (t = s.eye[2], r = s.look[2]), s.pan(e);
                        const i = s.eye,
                            n = s.look;
                        s.xUp ? (i[0] = t, n[0] = r) : s.yUp ? (i[1] = t, n[1] = r) : s.zUp && (i[2] = t, n[2] = r), s.eye = i, s.look = n
                    } else s.pan(e);
                    d = "grabbing"
                }
                if (n.panDeltaX *= i.panInertia, n.panDeltaY *= i.panInertia, n.panDeltaZ *= i.panInertia, 0 !== u) {
                    if (d = u < 0 ? "zoom-in" : "zoom-out", i.firstPerson) {
                        let e, t;
                        if (i.constrainVertical && (s.xUp ? (e = s.eye[0], t = s.look[0]) : s.yUp ? (e = s.eye[1], t = s.look[1]) : s.zUp && (e = s.eye[2], t = s.look[2])), n.inputFromMouse && i.followPointer ? l.dollyToCanvasPos(r.pointerCanvasPos, -u) : s.pan([0, 0, u]), i.constrainVertical) {
                            const i = s.eye,
                                r = s.look;
                            s.xUp ? (i[0] = e, r[0] = t) : s.yUp ? (i[1] = e, r[1] = t) : s.zUp && (i[2] = e, r[2] = t), s.eye = i, s.look = r
                        }
                    } else i.planView ? n.inputFromMouse && i.followPointer ? u > 0 ? s.pan([0, 0, u]) : l.dollyToWorldPos(a.getPivotPos(), -u) : l.dollyToCanvasPos(r.pointerCanvasPos, -u) : i.followPointer ? l.dollyToWorldPos(a.getPivotPos(), -u) : s.zoom(u);
                    s.ortho.scale = s.ortho.scale + .5 * u, n.dollyDelta *= i.dollyInertia
                }
                o.fireEvents(), document.body.style.cursor = d
            })
        }
        destroy() {
            this._scene.off(this._onTick)
        }
    }
    class zd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = this._scene.canvas.canvas;
            s.addEventListener("mouseenter", this._mouseEnterHandler = () => {
                r.mouseover = !0
            }), s.addEventListener("mouseleave", this._mouseLeaveHandler = () => {
                r.mouseover = !1, s.style.cursor = "default"
            }), s.addEventListener("mousemove", this._mouseMoveHandler = e => {
                $d(e, r.pointerCanvasPos)
            }), s.addEventListener("mousedown", this._mouseDownHandler = e => {
                i.active && i.pointerEnabled && ($d(e, r.pointerCanvasPos), r.mouseover = !0)
            }), s.addEventListener("mouseup", this._mouseUpHandler = e => {
                i.active && i.pointerEnabled
            })
        }
        reset() {}
        destroy() {
            const e = this._scene.canvas.canvas;
            e.removeEventListener("mousemove", this._mouseMoveHandler), e.removeEventListener("mouseenter", this._mouseEnterHandler), e.removeEventListener("mouseleave", this._mouseLeaveHandler), e.removeEventListener("mousedown", this._mouseDownHandler), e.removeEventListener("mouseup", this._mouseUpHandler)
        }
    }

    function $d(e, t) {
        if (e) {
            let i = e.target,
                r = 0,
                n = 0;
            for (; i.offsetParent;) r += i.offsetLeft, n += i.offsetTop, i = i.offsetParent;
            t[0] = e.pageX - r, t[1] = e.pageY - n
        } else e = window.event, t[0] = e.x, t[1] = e.y;
        return t
    }
    class Wd {
        constructor(e, t, i, r, n) {
            this._scene = e;
            const s = t.pickController,
                o = t.pivotController,
                a = $c.vec2();
            let l = -1;
            const c = [];
            let h = 0;
            const d = $c.vec2(),
                u = ($c.vec2(), this._scene.canvas.canvas);
            let p = !1;
            this._onTick = e.on("tick", () => {
                p = !1
            }), u.addEventListener("touchstart", this._canvasTouchStartHandler = e => {
                if (!i.active || !i.pointerEnabled) return;
                const t = e.touches,
                    n = e.changedTouches;
                if (r.touchStartTime = Date.now(), 1 === t.length && 1 === n.length ? (l = r.touchStartTime, a[0] = t[0].pageX, a[1] = t[0].pageY, i.followPointer && (s.pickCursorPos = a, s.schedulePickSurface = !0, s.update(), i.planView || (s.picked && s.pickedSurface && s.pickResult ? (o.startPivot(s.pickResult.worldPos), o.showPivot()) : (o.startPivot(), o.showPivot())))) : l = -1, 2 === t.length) {
                    const e = t[0],
                        i = t[1],
                        r = $c.geometricMeanVec2([e.pageX, e.pageY], [i.pageX, i.pageY]);
                    s.pickCursorPos = r, s.schedulePickSurface = !0, s.update()
                }
                for (; c.length < t.length;) c.push($c.vec2());
                for (let e = 0, i = t.length; e < i; ++e) c[e][0] = t[e].pageX, c[e][1] = t[e].pageY;
                h = t.length, e.stopPropagation()
            }, {
                passive: !0
            }), u.addEventListener("touchmove", this._canvasTouchMoveHandler = t => {
                if (!i.active || !i.pointerEnabled) return;
                if (p) return;
                p = !0;
                const o = e.canvas.boundary,
                    a = o[2] - o[0],
                    l = o[3] - o[1],
                    u = t.touches;
                if (t.touches.length === h) {
                    if (1 === h) {
                        const t = u[0];
                        if (i.planView) {
                            $c.subVec2([t.pageX, t.pageY], c[0], d);
                            const r = d[0],
                                s = d[1],
                                o = e.camera;
                            if ("perspective" === o.projection) {
                                const t = Math.abs(e.camera.eyeLookDist) * Math.tan(o.perspective.fov / 2 * Math.PI / 180);
                                n.panDeltaX += r * t / l * i.touchPanRate, n.panDeltaY += s * t / l * i.touchPanRate
                            } else n.panDeltaX += .5 * o.ortho.scale * (r / l) * i.touchPanRate, n.panDeltaY += .5 * o.ortho.scale * (s / l) * i.touchPanRate
                        } else n.rotateDeltaY -= (t.pageX - c[0][0]) / a * i.dragRotationRate / 2, n.rotateDeltaX += (t.pageY - c[0][1]) / l * (i.dragRotationRate / 4)
                    } else if (2 === h) {
                        const t = u[0],
                            o = u[1],
                            a = $c.geometricMeanVec2(c[0], c[1]),
                            h = $c.geometricMeanVec2([t.pageX, t.pageY], [o.pageX, o.pageY]),
                            d = $c.vec2();
                        $c.subVec2(a, h, d);
                        const p = d[0],
                            f = d[1],
                            _ = e.camera;
                        if ("perspective" === _.projection) {
                            const t = s.pickResult ? s.pickResult.worldPos : e.center,
                                r = Math.abs($c.lenVec3($c.subVec3(t, e.camera.eye, []))) * Math.tan(_.perspective.fov / 2 * Math.PI / 180);
                            n.panDeltaX -= p * r / l * i.touchPanRate, n.panDeltaY -= f * r / l * i.touchPanRate
                        } else n.panDeltaX -= .5 * _.ortho.scale * (p / l) * i.touchPanRate, n.panDeltaY -= .5 * _.ortho.scale * (f / l) * i.touchPanRate;
                        const m = $c.distVec2([t.pageX, t.pageY], [o.pageX, o.pageY]),
                            g = $c.distVec2(c[0], c[1]);
                        n.dollyDelta = (g - m) * i.touchDollyRate, r.pointerCanvasPos = h
                    }
                    for (let e = 0; e < h; ++e) c[e][0] = u[e].pageX, c[e][1] = u[e].pageY;
                    t.stopPropagation()
                }
            }, {
                passive: !0
            })
        }
        reset() {}
        destroy() {
            const e = this._scene.canvas.canvas;
            e.removeEventListener("touchstart", this._canvasTouchStartHandler), e.removeEventListener("touchmove", this._canvasTouchMoveHandler), this._scene.off(this._onTick)
        }
    }
    class qd extends Wc {
        constructor(e, t = {}) {
            super(e, t), this.PAN_LEFT = 0, this.PAN_RIGHT = 1, this.PAN_UP = 2, this.PAN_DOWN = 3, this.PAN_FORWARDS = 4, this.PAN_BACKWARDS = 5, this.ROTATE_X_POS = 6, this.ROTATE_X_NEG = 7, this.ROTATE_Y_POS = 8, this.ROTATE_Y_NEG = 9, this.DOLLY_FORWARDS = 10, this.DOLLY_BACKWARDS = 11, this.AXIS_VIEW_RIGHT = 12, this.AXIS_VIEW_BACK = 13, this.AXIS_VIEW_LEFT = 14, this.AXIS_VIEW_FRONT = 15, this.AXIS_VIEW_TOP = 16, this.AXIS_VIEW_BOTTOM = 17, this._keyMap = {}, this.scene.canvas.canvas.oncontextmenu = e => {
                e.preventDefault()
            }, this._configs = {
                tapInterval: 150,
                doubleTapInterval: 325,
                tapDistanceThreshold: 4,
                active: !0,
                keyboardLayout: "qwerty",
                navMode: "orbit",
                planView: !1,
                firstPerson: !1,
                followPointer: !1,
                doublePickFlyTo: !0,
                panRightClick: !0,
                showPivot: !1,
                pointerEnabled: !0,
                constrainVertical: !1,
                dragRotationRate: 360,
                keyboardRotationRate: 90,
                rotationInertia: 0,
                keyboardPanRate: 1,
                touchPanRate: 1,
                panInertia: .5,
                keyboardDollyRate: 10,
                mouseWheelDollyRate: 10,
                touchDollyRate: .05,
                dollyInertia: .75,
                dollyProximityThreshold: 30,
                dollyMinSpeed: 1
            }, this._states = {
                pointerCanvasPos: $c.vec2(),
                mouseover: !1,
                inputFromMouse: !1,
                followPointerDirty: !0,
                mouseDownClientX: 0,
                mouseDownClientY: 0,
                mouseDownCursorX: 0,
                mouseDownCursorY: 0,
                touchStartTime: null,
                activeTouches: [],
                tapStartPos: $c.vec2(),
                tapStartTime: -1,
                lastTapTime: -1
            }, this._updates = {
                rotateDeltaX: 0,
                rotateDeltaY: 0,
                panDeltaX: 0,
                panDeltaY: 0,
                panDeltaZ: 0,
                dollyDelta: 0
            };
            const i = this.scene;
            this._controllers = {
                cameraControl: this,
                pickController: new Id(this, this._configs),
                pivotController: new Ed(i),
                panController: new kd(this.scene),
                cameraFlight: new Md(this, {
                    duration: .5
                })
            }, this._handlers = [new zd(this.scene, this._controllers, this._configs, this._states, this._updates), new Wd(this.scene, this._controllers, this._configs, this._states, this._updates), new Dd(this.scene, this._controllers, this._configs, this._states, this._updates), new Fd(this.scene, this._controllers, this._configs, this._states, this._updates), new Nd(this.scene, this._controllers, this._configs, this._states, this._updates), new Ud(this.scene, this._controllers, this._configs, this._states, this._updates)], this._cameraUpdater = new Vd(this.scene, this._controllers, this._configs, this._states, this._updates), this.navMode = t.navMode, t.planView && (this.planView = t.planView), this.constrainVertical = t.constrainVertical, t.keyboardLayout ? this.keyboardLayout = t.keyboardLayout : this.keyMap = t.keyMap, this.doublePickFlyTo = t.doublePickFlyTo, this.panRightClick = t.panRightClick, this.active = t.active, this.followPointer = t.followPointer, this.rotationInertia = t.rotationInertia, this.keyboardPanRate = t.keyboardPanRate, this.touchPanRate = t.touchPanRate, this.keyboardRotationRate = t.keyboardRotationRate, this.dragRotationRate = t.dragRotationRate, this.touchDollyRate = t.touchDollyRate, this.dollyInertia = t.dollyInertia, this.dollyProximityThreshold = t.dollyProximityThreshold, this.dollyMinSpeed = t.dollyMinSpeed, this.panInertia = t.panInertia, this.pointerEnabled = !0, this.keyboardDollyRate = t.keyboardDollyRate, this.mouseWheelDollyRate = t.mouseWheelDollyRate
        }
        set keyMap(e) {
            if (e = e || "qwerty", Ic.isString(e)) {
                const t = this.scene.input,
                    i = {};
                switch (e) {
                    default:
                        this.error("Unsupported value for 'keyMap': " + e + " defaulting to 'qwerty'");
                    case "qwerty":
                        i[this.PAN_LEFT] = [t.KEY_A], i[this.PAN_RIGHT] = [t.KEY_D], i[this.PAN_UP] = [t.KEY_Z], i[this.PAN_DOWN] = [t.KEY_X], i[this.PAN_BACKWARDS] = [], i[this.PAN_FORWARDS] = [], i[this.DOLLY_FORWARDS] = [t.KEY_W, t.KEY_ADD], i[this.DOLLY_BACKWARDS] = [t.KEY_S, t.KEY_SUBTRACT], i[this.ROTATE_X_POS] = [t.KEY_DOWN_ARROW], i[this.ROTATE_X_NEG] = [t.KEY_UP_ARROW], i[this.ROTATE_Y_POS] = [t.KEY_Q, t.KEY_LEFT_ARROW], i[this.ROTATE_Y_NEG] = [t.KEY_E, t.KEY_RIGHT_ARROW], i[this.AXIS_VIEW_RIGHT] = [t.KEY_NUM_1], i[this.AXIS_VIEW_BACK] = [t.KEY_NUM_2], i[this.AXIS_VIEW_LEFT] = [t.KEY_NUM_3], i[this.AXIS_VIEW_FRONT] = [t.KEY_NUM_4], i[this.AXIS_VIEW_TOP] = [t.KEY_NUM_5], i[this.AXIS_VIEW_BOTTOM] = [t.KEY_NUM_6];
                        break;
                    case "azerty":
                        i[this.PAN_LEFT] = [t.KEY_Q], i[this.PAN_RIGHT] = [t.KEY_D], i[this.PAN_UP] = [t.KEY_W], i[this.PAN_DOWN] = [t.KEY_X], i[this.PAN_BACKWARDS] = [], i[this.PAN_FORWARDS] = [], i[this.DOLLY_FORWARDS] = [t.KEY_Z, t.KEY_ADD], i[this.DOLLY_BACKWARDS] = [t.KEY_S, t.KEY_SUBTRACT], i[this.ROTATE_X_POS] = [t.KEY_DOWN_ARROW], i[this.ROTATE_X_NEG] = [t.KEY_UP_ARROW], i[this.ROTATE_Y_POS] = [t.KEY_A, t.KEY_LEFT_ARROW], i[this.ROTATE_Y_NEG] = [t.KEY_E, t.KEY_RIGHT_ARROW], i[this.AXIS_VIEW_RIGHT] = [t.KEY_NUM_1], i[this.AXIS_VIEW_BACK] = [t.KEY_NUM_2], i[this.AXIS_VIEW_LEFT] = [t.KEY_NUM_3], i[this.AXIS_VIEW_FRONT] = [t.KEY_NUM_4], i[this.AXIS_VIEW_TOP] = [t.KEY_NUM_5], i[this.AXIS_VIEW_BOTTOM] = [t.KEY_NUM_6]
                }
                this._keyMap = i
            } else {
                const t = e;
                this._keyMap = t
            }
        }
        get keyMap() {
            return this._keyMap
        }
        _isKeyDownForAction(e, t) {
            const i = this._keyMap[e];
            if (!i) return !1;
            t || (t = this.scene.input.keyDown);
            for (let e = 0, r = i.length; e < r; e++) {
                if (t[i[e]]) return !0
            }
            return !1
        }
        set pivotElement(e) {
            this._controllers.pivotController.setPivotElement(e)
        }
        set active(e) {
            this._configs.active = !1 !== e
        }
        get active() {
            return this._configs.active
        }
        set navMode(e) {
            "firstPerson" !== (e = e || "orbit") && "orbit" !== e && "planView" !== e && (this.error("Unsupported value for navMode: " + e + " - supported values are 'orbit', 'firstPerson' and 'planView' - defaulting to 'orbit'"), e = "orbit"), this._configs.firstPerson = "firstPerson" === e, this._configs.planView = "planView" === e, (this._configs.firstPerson || this._configs.planView) && (this._controllers.pivotController.hidePivot(), this._controllers.pivotController.endPivot()), this._configs.navMode = e
        }
        get navMode() {
            return this._configs.navMode
        }
        set pointerEnabled(e) {
            this._reset(), this._configs.pointerEnabled = !!e
        }
        _reset() {
            for (let e = 0, t = this._handlers.length; e < t; e++) {
                const t = this._handlers[e];
                t.reset && t.reset()
            }
            this._updates.panDeltaX = 0, this._updates.panDeltaY = 0, this._updates.rotateDeltaX = 0, this._updates.rotateDeltaY = 0, this._updates.dolyDelta = 0
        }
        get pointerEnabled() {
            return this._configs.pointerEnabled
        }
        set followPointer(e) {
            this._configs.followPointer = !!e
        }
        get followPointer() {
            return this._configs.followPointer
        }
        set pivotPos(e) {
            this._controllers.pivotController.setPivotPos(e)
        }
        get pivotPos() {
            return this._controllers.pivotController.getPivotPos()
        }
        set dollyToPointer(e) {
            this.warn("dollyToPointer property is deprecated - replaced with followPointer"), this.followPointer = e
        }
        get dollyToPointer() {
            return this.warn("dollyToPointer property is deprecated - replaced with followPointer"), this.followPointer = value
        }
        set panToPointer(e) {
            this.warn("panToPointer property is deprecated - replaced with followPointer")
        }
        get panToPointer() {
            return this.warn("panToPointer property is deprecated - replaced with followPointer"), !1
        }
        set planView(e) {
            this._configs.planView = !!e, this._configs.firstPerson = !1, this._configs.planView && (this._controllers.pivotController.hidePivot(), this._controllers.pivotController.endPivot()), this.warn("planView property is deprecated - replaced with navMode")
        }
        get planView() {
            return this.warn("planView property is deprecated - replaced with navMode"), this._configs.planView
        }
        set firstPerson(e) {
            this.warn("firstPerson property is deprecated - replaced with navMode"), this._configs.firstPerson = !!e, this._configs.planView = !1, this._configs.firstPerson && (this._controllers.pivotController.hidePivot(), this._controllers.pivotController.endPivot())
        }
        get firstPerson() {
            return this.warn("firstPerson property is deprecated - replaced with navMode"), this._configs.firstPerson
        }
        set constrainVertical(e) {
            this._configs.constrainVertical = !!e
        }
        get constrainVertical() {
            return this._configs.constrainVertical
        }
        set doublePickFlyTo(e) {
            this._configs.doublePickFlyTo = !1 !== e
        }
        get doublePickFlyTo() {
            return this._configs.doublePickFlyTo
        }
        set panRightClick(e) {
            this._configs.panRightClick = !1 !== e
        }
        get panRightClick() {
            return this._configs.panRightClick
        }
        set rotationInertia(e) {
            this._configs.rotationInertia = null != e ? e : 0
        }
        get rotationInertia() {
            return this._configs.rotationInertia
        }
        set keyboardPanRate(e) {
            this._configs.keyboardPanRate = null != e ? e : 5
        }
        set touchPanRate(e) {
            this._configs.touchPanRate = null != e ? e : 1
        }
        get touchPanRate() {
            return this._configs.touchPanRate
        }
        get keyboardPanRate() {
            return this._configs.keyboardPanRate
        }
        set keyboardRotationRate(e) {
            this._configs.keyboardRotationRate = null != e ? e : 90
        }
        get keyboardRotationRate() {
            return this._configs.keyboardRotationRate
        }
        set dragRotationRate(e) {
            this._configs.dragRotationRate = null != e ? e : 360
        }
        get dragRotationRate() {
            return this._configs.dragRotationRate
        }
        set keyboardDollyRate(e) {
            this._configs.keyboardDollyRate = null != e ? e : 15
        }
        get keyboardDollyRate() {
            return this._configs.keyboardDollyRate
        }
        set touchDollyRate(e) {
            this._configs.touchDollyRate = null != e ? e : .05
        }
        get touchDollyRate() {
            return this._configs.touchDollyRate
        }
        set mouseWheelDollyRate(e) {
            this._configs.mouseWheelDollyRate = null != e ? e : 15
        }
        get mouseWheelDollyRate() {
            return this._configs.mouseWheelDollyRate
        }
        set dollyInertia(e) {
            this._configs.dollyInertia = null != e ? e : .75
        }
        get dollyInertia() {
            return this._configs.dollyInertia
        }
        set dollyProximityThreshold(e) {
            this._configs.dollyProximityThreshold = null != e ? e : 35
        }
        get dollyProximityThreshold() {
            return this._configs.dollyProximityThreshold
        }
        set dollyMinSpeed(e) {
            this._configs.dollyMinSpeed = null != e ? e : .05
        }
        get dollyMinSpeed() {
            return this._configs.dollyMinSpeed
        }
        set panInertia(e) {
            this._configs.panInertia = null != e ? e : .5
        }
        get panInertia() {
            return this._configs.panInertia
        }
        set keyboardLayout(e) {
            "qwerty" !== (e = e || "qwerty") && "azerty" !== e && (this.error("Unsupported value for keyboardLayout - defaulting to 'qwerty'"), e = "qwerty"), this._configs.keyboardLayout = e, this.keyMap = this._configs.keyboardLayout
        }
        get keyboardLayout() {
            return this._configs.keyboardLayout
        }
        destroy() {
            this._destroyHandlers(), this._destroyControllers(), this._cameraUpdater.destroy(), super.destroy()
        }
        _destroyHandlers() {
            for (let e = 0, t = this._handlers.length; e < t; e++) {
                const t = this._handlers[e];
                t.destroy && t.destroy()
            }
        }
        _destroyControllers() {
            for (let e = 0, t = this._controllers.length; e < t; e++) {
                const t = this._controllers[e];
                t.destroy && t.destroy()
            }
        }
    }
    class Gd {
        constructor(e, t, i, r, n, s, o, a, l) {
            this.id = t, this.projectId = i, this.revisionId = r, this.author = n, this.createdAt = s, this.creatingApplication = o, this.schema = a, this.metaScene = e, this.rootMetaObject = l
        }
        getJSON() {
            var e = [];
            return function t(i) {
                var r = {
                    id: i.id,
                    extId: i.extId,
                    type: i.type,
                    name: i.name
                };
                i.parent && (r.parent = i.parent.id), e.push(r);
                var n = i.children;
                if (n)
                    for (var s = 0, o = n.length; s < o; s++) t(n[s])
            }(this.rootMetaObject), {
                id: this.id,
                projectId: this.projectId,
                revisionId: this.revisionId,
                metaObjects: e
            }
        }
    }
    class Yd {
        constructor(e, t, i, r, n, s, o, a) {
            this.metaModel = e, this.id = t, this.name = i, this.type = r, n && (this.properties = n), null != s && (this.parent = s), null != o && (this.children = o), null != a && (this.external = a)
        }
        getObjectIDsInSubtree() {
            const e = [];
            return function t(i) {
                if (!i) return;
                e.push(i.id);
                const r = i.children;
                if (r)
                    for (var n = 0, s = r.length; n < s; n++) t(r[n])
            }(this), e
        }
        withMetaObjectsInSubtree(e) {
            ! function t(i) {
                if (!i) return;
                e(i);
                const r = i.children;
                if (r)
                    for (var n = 0, s = r.length; n < s; n++) t(r[n])
            }(this)
        }
        getObjectIDsInSubtreeByType(e) {
            const t = {};
            for (var i = 0, r = e.length; i < r; i++) t[e[i]] = e[i];
            const n = [];
            return function e(i) {
                if (!i) return;
                t[i.type] && n.push(i.id);
                const r = i.children;
                if (r)
                    for (var s = 0, o = r.length; s < o; s++) e(r[s])
            }(this), n
        }
        getJSON() {
            var e = {
                id: this.id,
                type: this.type,
                name: this.name
            };
            return this.parent && (e.parent = this.parent.id), e
        }
    }
    class Zd {
        constructor(e, t) {
            this.viewer = e, this.scene = t, this.metaModels = {}, this.metaObjects = {}, this.metaObjectsByType = {}, this._typeCounts = {}, this._eventSubs = {}
        }
        on(e, t) {
            let i = this._eventSubs[e];
            i || (i = [], this._eventSubs[e] = i), i.push(t)
        }
        fire(e, t) {
            const i = this._eventSubs[e];
            if (i)
                for (let e = 0, r = i.length; e < r; e++) i[e](t)
        }
        off(e) {}
        createMetaModel(e, t, i = {}) {
            const r = t.projectId || "none",
                n = t.revisionId || "none",
                s = t.metaObjects,
                o = t.author,
                a = t.createdAt,
                l = t.creatingApplication,
                c = t.schema,
                h = new Gd(this, e, r, n, o, a, l, c, null);
            this.metaModels[e] = h;
            for (let e = 0, t = s.length; e < t; e++) {
                const t = s[e],
                    i = t.type,
                    r = t.id,
                    n = t.name,
                    o = t.properties,
                    a = null,
                    l = null,
                    c = t.external,
                    d = new Yd(h, r, n, i, o, a, l, c);
                this.metaObjects[r] = d, (this.metaObjectsByType[i] || (this.metaObjectsByType[i] = {}))[r] = d, void 0 === this._typeCounts[i] ? this._typeCounts[i] = 1 : this._typeCounts[i]++
            }
            for (let e = 0, t = s.length; e < t; e++) {
                const t = s[e],
                    i = t.id,
                    r = this.metaObjects[i];
                if (r)
                    if (void 0 === t.parent || null === t.parent) h.rootMetaObject = r;
                    else if (t.parent) {
                    let e = this.metaObjects[t.parent];
                    e && (r.parent = e, e.children = e.children || [], e.children.push(r))
                }
            }
            return this.fire("metaModelCreated", e), h
        }
        destroyMetaModel(e) {
            const t = this.metaModels[e];
            if (!t) return;
            const i = this.metaObjects,
                r = this.metaObjectsByType;
            let n = e => {
                delete i[e.id];
                const t = r[e.type];
                t && t[e.id] && (delete t[e.id], 0 == --this._typeCounts[e.type] && (delete this._typeCounts[e.type], delete r[e.type]));
                const s = e.children;
                if (s)
                    for (let e = 0, t = s.length; e < t; e++) {
                        const t = s[e];
                        n(t)
                    }
            };
            n(t.rootMetaObject), delete this.metaModels[e], this.fire("metaModelDestroyed", e)
        }
        getObjectIDsByType(e) {
            const t = this.metaObjectsByType[e];
            return t ? Object.keys(t) : []
        }
        getObjectIDsInSubtree(e, t, i) {
            const r = [],
                n = this.metaObjects[e],
                s = t && t.length > 0 ? Xd(t) : null,
                o = i && i.length > 0 ? Xd(i) : null;
            return function e(t) {
                if (!t) return;
                var i = !0;
                o && o[t.type] ? i = !1 : s && !s[t.type] && (i = !1), i && r.push(t.id);
                const n = t.children;
                if (n)
                    for (var a = 0, l = n.length; a < l; a++) e(n[a])
            }(n), r
        }
        withMetaObjectsInSubtree(e, t) {
            const i = this.metaObjects[e];
            i && i.withMetaObjectsInSubtree(t)
        }
    }

    function Xd(e) {
        const t = {};
        for (var i = 0, r = e.length; i < r; i++) t[e[i]] = !0;
        return t
    }
    class Kd {
        constructor(e) {
            this.language = "en", this.scene = new md({
                viewer: this,
                canvasId: e.canvasId,
                canvasElement: e.canvasElement,
                webgl2: !1,
                contextAttr: {
                    preserveDrawingBuffer: !1 !== e.preserveDrawingBuffer,
                    premultipliedAlpha: !!e.premultipliedAlpha,
                    antialias: !1 !== e.antialias
                },
                spinnerElementId: e.spinnerElementId,
                transparent: !1 !== e.transparent,
                gammaInput: !0,
                gammaOutput: !0,
                clearColorAmbient: e.clearColorAmbient,
                ticksPerRender: 1,
                ticksPerOcclusionTest: 20,
                units: e.units,
                scale: e.scale,
                origin: e.origin,
                saoEnabled: e.saoEnabled,
                alphaDepthMask: !1 !== e.alphaDepthMask
            }), this.metaScene = new Zd(this, this.scene), this.id = e.id || this.scene.id, this.camera = this.scene.camera, this.cameraFlight = new Md(this.scene, {
                duration: .5
            }), this.cameraControl = new qd(this.scene, {
                doublePickFlyTo: !0
            }), this._plugins = [], this._eventSubs = {}
        }
        on(e, t) {
            let i = this._eventSubs[e];
            i || (i = [], this._eventSubs[e] = i), i.push(t)
        }
        fire(e, t) {
            const i = this._eventSubs[e];
            if (i)
                for (let e = 0, r = i.length; e < r; e++) i[e](t)
        }
        off(e) {}
        log(e) {
            console.log(`[xeokit viewer ${this.id}]: ${e}`)
        }
        error(e) {
            console.error(`[xeokit viewer ${this.id}]: ${e}`)
        }
        addPlugin(e) {
            this._plugins.push(e)
        }
        removePlugin(e) {
            for (let t = 0, i = this._plugins.length; t < i; t++) {
                const i = this._plugins[t];
                if (i === e) return i.clear && i.clear(), void this._plugins.splice(t, 1)
            }
        }
        sendToPlugins(e, t) {
            for (let i = 0, r = this._plugins.length; i < r; i++) {
                const r = this._plugins[i];
                r.send && r.send(e, t)
            }
        }
        clear() {
            throw 'Viewer#clear() no longer implemented - use \'#sendToPlugins("clear") instead'
        }
        resetView() {
            throw "Viewer#resetView() no longer implemented - use CameraMemento & ObjectsMemento classes instead"
        }
        beginSnapshot() {
            this._snapshotBegun || (this.scene._renderer.beginSnapshot(), this._snapshotBegun = !0)
        }
        getSnapshot(e = {}) {
            const t = !this._snapshotBegun;
            this._snapshotBegun || this.beginSnapshot(), this.sendToPlugins("snapshotStarting");
            const i = void 0 !== e.width && void 0 !== e.height,
                r = this.scene.canvas.canvas,
                n = r.clientWidth,
                s = r.clientHeight,
                o = r.style.width,
                a = r.style.height,
                l = e.width ? Math.floor(e.width) : r.width,
                c = e.height ? Math.floor(e.height) : r.height;
            i && (r.style.width = l + "px", r.style.height = c + "px"), this.scene._renderer.renderSnapshot();
            const h = this.scene._renderer.readSnapshot(e);
            return i && (r.style.width = o, r.style.height = a, r.width = n, r.height = s, this.scene.glRedraw()), this.sendToPlugins("snapshotFinished"), t && this.endSnapshot(), h
        }
        endSnapshot() {
            this._snapshotBegun && (this.scene._renderer.endSnapshot(), this.scene._renderer.render({
                force: !0
            }), this._snapshotBegun = !1)
        }
        destroy() {
            const e = this._plugins.slice();
            for (let t = 0, i = e.length; t < i; t++) {
                e[t].destroy()
            }
            this.scene.destroy()
        }
    }
    class Qd {
        constructor(e, t, i, r, n = null, s = 0) {
            this.model = e, this.object = null, this.parent = null, this.id = t, this.pickId = this.model.scene._renderer.getPickID(this), this.aabb = $c.AABB3(), this._layer = n, this._portionId = s, this._color = [i[0], i[1], i[2], r], this._colorize = [i[0], i[1], i[2], r], this._colorizing = !1, this.numTriangles = 0, this.rtcCenter = null
        }
        _initFlags(e) {
            this._layer.initFlags(this._portionId, e)
        }
        _setVisible(e) {
            this._layer.setVisible(this._portionId, e)
        }
        _setColor(e) {
            this._color[0] = e[0], this._color[1] = e[1], this._color[2] = e[2], this._colorizing || this._layer.setColor(this._portionId, this._color, !1)
        }
        _setColorize(e) {
            e ? (this._colorize[0] = e[0], this._colorize[1] = e[1], this._colorize[2] = e[2], this._layer.setColor(this._portionId, this._colorize, !1), this._colorizing = !0) : (this._layer.setColor(this._portionId, this._color, !1), this._colorizing = !1)
        }
        _setOpacity(e) {
            this._color[3] = e, this._colorize[3] = e;
            this._colorizing ? this._layer.setColor(this._portionId, this._colorize, !0) : this._layer.setColor(this._portionId, this._color, !0)
        }
        _setOffset(e) {
            this._layer.setOffset(this._portionId, e)
        }
        _setHighlighted(e) {
            this._layer.setHighlighted(this._portionId, e)
        }
        _setXRayed(e) {
            this._layer.setXRayed(this._portionId, e)
        }
        _setSelected(e) {
            this._layer.setSelected(this._portionId, e)
        }
        _setEdges(e) {
            this._layer.setEdges(this._portionId, e)
        }
        _setClippable(e) {
            this._layer.setClippable(this._portionId, e)
        }
        _setCollidable(e) {
            this._layer.setCollidable(this._portionId, e)
        }
        _setPickable(e) {
            this._layer.setPickable(this._portionId, e)
        }
        _setCulled(e) {
            this._layer.setCulled(this._portionId, e)
        }
        canPickTriangle() {
            return !1
        }
        drawPickTriangles(e) {}
        pickTriangleSurface(e) {}
        canPickWorldPos() {
            return !0
        }
        drawPickDepths(e) {
            this.model.drawPickDepths(e)
        }
        drawPickNormals(e) {
            this.model.drawPickNormals(e)
        }
        delegatePickedEntity() {
            return this.parent
        }
        _destroy() {
            this.model.scene._renderer.putPickID(this.pickId)
        }
    }
    const Jd = 1,
        eu = 4,
        tu = 8,
        iu = 16,
        ru = 32,
        nu = 256,
        su = 512,
        ou = 1024,
        au = 2048,
        lu = new Float32Array([0, 0, 0]),
        cu = new Uint16Array([0, 0, 0]);
    class hu {
        constructor(e, t, i, r, n, s) {
            this._isObject = t, this.scene = e.scene, this.model = e, this.meshes = r, this._numTriangles = 0;
            for (var o = 0, a = this.meshes.length; o < a; o++) {
                const e = this.meshes[o];
                e.parent = this, this._numTriangles += e.numTriangles
            }
            this.id = i, this._flags = n, this._aabb = s, this._offsetAABB = $c.AABB3(s), this._offset = $c.vec3(), this._isObject && e.scene._registerObject(this)
        }
        get isEntity() {
            return !0
        }
        get isModel() {
            return !1
        }
        get isObject() {
            return this._isObject
        }
        get aabb() {
            return this._offsetAABB
        }
        get numTriangles() {
            return this._numTriangles
        }
        set visible(e) {
            if (!!(this._flags & Jd) !== e) {
                this._flags = e ? this._flags | Jd : this._flags & ~Jd;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setVisible(this._flags);
                this._isObject && this.model.scene._objectVisibilityUpdated(this), this.model.glRedraw()
            }
        }
        get visible() {
            return this._getFlag(Jd)
        }
        _getFlag(e) {
            return !!(this._flags & e)
        }
        set highlighted(e) {
            if (!!(this._flags & su) !== e) {
                this._flags = e ? this._flags | su : this._flags & ~su;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setHighlighted(this._flags);
                this._isObject && this.model.scene._objectHighlightedUpdated(this), this.model.glRedraw()
            }
        }
        get highlighted() {
            return this._getFlag(su)
        }
        set xrayed(e) {
            if (!!(this._flags & nu) !== e) {
                this._flags = e ? this._flags | nu : this._flags & ~nu;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setXRayed(this._flags);
                this._isObject && this.model.scene._objectXRayedUpdated(this), this.model.glRedraw()
            }
        }
        get xrayed() {
            return this._getFlag(nu)
        }
        set selected(e) {
            if (!!(this._flags & ou) !== e) {
                this._flags = e ? this._flags | ou : this._flags & ~ou;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setSelected(this._flags);
                this._isObject && this.model.scene._objectSelectedUpdated(this), this.model.glRedraw()
            }
        }
        get selected() {
            return this._getFlag(ou)
        }
        set edges(e) {
            if (!!(this._flags & au) !== e) {
                this._flags = e ? this._flags | au : this._flags & ~au;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setEdges(this._flags);
                this.model.glRedraw()
            }
        }
        get edges() {
            return this._getFlag(au)
        }
        set culled(e) {
            if (!!(this._flags & eu) !== e) {
                this._flags = e ? this._flags | eu : this._flags & ~eu;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setCulled(this._flags);
                this.model.glRedraw()
            }
        }
        get culled() {
            return this._getFlag(eu)
        }
        set clippable(e) {
            if (!!(this._flags & iu) !== e) {
                this._flags = e ? this._flags | iu : this._flags & ~iu;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setClippable(this._flags);
                this.model.glRedraw()
            }
        }
        get clippable() {
            return this._getFlag(iu)
        }
        set collidable(e) {
            if (!!(this._flags & ru) !== e) {
                this._flags = e ? this._flags | ru : this._flags & ~ru;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setCollidable(this._flags)
            }
        }
        get collidable() {
            return this._getFlag(ru)
        }
        set pickable(e) {
            if (!!(this._flags & tu) !== e) {
                this._flags = e ? this._flags | tu : this._flags & ~tu;
                for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setPickable(this._flags)
            }
        }
        get pickable() {
            return this._getFlag(tu)
        }
        set colorize(e) {
            if (e) {
                cu[0] = Math.floor(255 * e[0]), cu[1] = Math.floor(255 * e[1]), cu[2] = Math.floor(255 * e[2]);
                for (let e = 0, t = this.meshes.length; e < t; e++) this.meshes[e]._setColorize(cu)
            } else
                for (let e = 0, t = this.meshes.length; e < t; e++) this.meshes[e]._setColorize(null);
            if (this._isObject) {
                const t = !!e;
                this.scene._objectColorizeUpdated(this, t)
            }
            this.model.glRedraw()
        }
        get colorize() {
            if (0 === this.meshes.length) return null;
            const e = this.meshes[0]._colorize;
            return lu[0] = e[0] / 255, lu[1] = e[1] / 255, lu[2] = e[2] / 255, lu
        }
        set opacity(e) {
            if (0 === this.meshes.length) return;
            const t = null != e;
            if (t) {
                if (e < 0 ? e = 0 : e > 1 && (e = 1), e = Math.floor(255 * e), this.meshes[0]._colorize[3] / 255 === e) return
            } else e = 255;
            for (let t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._setOpacity(e);
            this._isObject && this.scene._objectOpacityUpdated(this, t), this.model.glRedraw()
        }
        get opacity() {
            return this.meshes.length > 0 ? this.meshes[0]._colorize[3] / 255 : 1
        }
        set offset(e) {
            e ? (this._offset[0] = e[0], this._offset[1] = e[1], this._offset[2] = e[2]) : (this._offset[0] = 0, this._offset[1] = 0, this._offset[2] = 0);
            for (let e = 0, t = this.meshes.length; e < t; e++) this.meshes[e]._setOffset(this._offset);
            this._offsetAABB[0] = this._aabb[0] + this._offset[0], this._offsetAABB[1] = this._aabb[1] + this._offset[1], this._offsetAABB[2] = this._aabb[2] + this._offset[2], this._offsetAABB[3] = this._aabb[3] + this._offset[0], this._offsetAABB[4] = this._aabb[4] + this._offset[1], this._offsetAABB[5] = this._aabb[5] + this._offset[2], this.scene._aabbDirty = !0, this.scene._objectOffsetUpdated(this, e), this.model._aabbDirty = !0, this.model.glRedraw()
        }
        get offset() {
            return this._offset
        }
        set castsShadow(e) {}
        get castsShadow() {
            return !1
        }
        set receivesShadow(e) {}
        get receivesShadow() {
            return !1
        }
        get saoEnabled() {
            return this.model.saoEnabled
        }
        _finalize() {
            const e = this.model.scene;
            this._isObject && (this.visible && e._objectVisibilityUpdated(this), this.highlighted && e._objectHighlightedUpdated(this), this.xrayed && e._objectXRayedUpdated(this), this.selected && e._objectSelectedUpdated(this));
            for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._initFlags(this._flags)
        }
        _destroy() {
            const e = this.model.scene;
            this._isObject && (e._deregisterObject(this), this.visible && e._objectVisibilityUpdated(this, !1), this.xrayed && e._objectXRayedUpdated(this), this.selected && e._objectSelectedUpdated(this), this.highlighted && e._objectHighlightedUpdated(this), this.scene._objectColorizeUpdated(this, !1), this.scene._objectOpacityUpdated(this, !1), this.scene._objectOffsetUpdated(this, !1));
            for (var t = 0, i = this.meshes.length; t < i; t++) this.meshes[t]._destroy();
            e._aabbDirty = !0
        }
    }
    const du = new class {
        constructor() {
            this._uint8Arrays = {}, this._float32Arrays = {}
        }
        _clear() {
            this._uint8Arrays = {}, this._float32Arrays = {}
        }
        getUInt8Array(e) {
            let t = this._uint8Arrays[e];
            return t || (t = new Uint8Array(e), this._uint8Arrays[e] = t), t
        }
        getFloat32Array(e) {
            let t = this._float32Arrays[e];
            return t || (t = new Float32Array(e), this._float32Arrays[e] = t), t
        }
    };
    const uu = 0,
        pu = 1,
        fu = 3,
        _u = 5,
        mu = 7,
        gu = function(e, t) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState,
                    i = e._lightsState,
                    r = t.sectionPlanes.length > 0;
                let n, s, o;
                const a = [];
                for (a.push("// Batched geometry drawing vertex shader"), a.push("uniform int renderPass;"), a.push("attribute vec3 position;"), a.push("attribute vec3 normal;"), a.push("attribute vec4 color;"), a.push("attribute vec4 flags;"), a.push("attribute vec4 flags2;"), a.push("attribute vec3 offset;"), a.push("uniform mat4 viewMatrix;"), a.push("uniform mat4 projMatrix;"), a.push("uniform mat4 viewNormalMatrix;"), a.push("uniform mat4 positionsDecodeMatrix;"), a.push("uniform vec4 lightAmbient;"), n = 0, s = i.lights.length; n < s; n++) o = i.lights[n], "ambient" !== o.type && (a.push("uniform vec4 lightColor" + n + ";"), "dir" === o.type && a.push("uniform vec3 lightDir" + n + ";"), "point" === o.type && a.push("uniform vec3 lightPos" + n + ";"), "spot" === o.type && (a.push("uniform vec3 lightPos" + n + ";"), a.push("uniform vec3 lightDir" + n + ";")));
                a.push("vec3 octDecode(vec2 oct) {"), a.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), a.push("    if (v.z < 0.0) {"), a.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), a.push("    }"), a.push("    return normalize(v);"), a.push("}"), r && (a.push("varying vec4 vWorldPosition;"), a.push("varying vec4 vFlags2;"));
                for (a.push("varying vec4 vColor;"), a.push("void main(void) {"), a.push("bool visible      = (float(flags.x) > 0.0);"), a.push("bool xrayed       = (float(flags.y) > 0.0);"), a.push("bool highlighted  = (float(flags.z) > 0.0);"), a.push("bool selected     = (float(flags.w) > 0.0);"), a.push("bool culled       = (float(flags2.w) > 0.0);"), a.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"), a.push(`if (\n    culled || !visible || \n    (renderPass == ${uu} && (transparent || xrayed)) || \n    (renderPass == ${pu} && (!transparent || xrayed || highlighted || selected)) || \n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) || \n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), a.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), a.push("} else {"), a.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), a.push("worldPosition.xyz = worldPosition.xyz + offset;"), a.push("vec4 viewPosition  = viewMatrix * worldPosition; "), a.push("vec4 worldNormal =  vec4(octDecode(normal.xy), 0.0); "), a.push("vec3 viewNormal = normalize((viewNormalMatrix * worldNormal).xyz);"), a.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"), a.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"), a.push("float lambertian = 1.0;"), n = 0, s = i.lights.length; n < s; n++)
                    if (o = i.lights[n], "ambient" !== o.type) {
                        if ("dir" === o.type) "view" === o.space ? a.push("viewLightDir = normalize(lightDir" + n + ");") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightDir" + n + ", 0.0)).xyz);");
                        else if ("point" === o.type) "view" === o.space ? a.push("viewLightDir = normalize(lightPos" + n + " - viewPosition.xyz);") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightPos" + n + ", 0.0)).xyz);");
                        else {
                            if ("spot" !== o.type) continue;
                            "view" === o.space ? a.push("viewLightDir = normalize(lightDir" + n + ");") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightDir" + n + ", 0.0)).xyz);")
                        }
                        a.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"), a.push("reflectedColor += lambertian * (lightColor" + n + ".rgb * lightColor" + n + ".a);")
                    } a.push("vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));"), a.push("vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);"), r && (a.push("vWorldPosition = worldPosition;"), a.push("vFlags2 = flags2;"));
                return a.push("gl_Position = projMatrix * viewPosition;"), a.push("}"), a.push("}"), a
            }(e), this.fragment = function(e, t) {
                const i = e._sectionPlanesState;
                let r, n;
                const s = i.sectionPlanes.length > 0,
                    o = [];
                o.push("// Batched geometry drawing fragment shader"), o.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), o.push("precision highp float;"), o.push("precision highp int;"), o.push("#else"), o.push("precision mediump float;"), o.push("precision mediump int;"), o.push("#endif"), t && (o.push("uniform sampler2D uOcclusionTexture;"), o.push("uniform vec4      uSAOParams;"), o.push("const float       packUpscale = 256. / 255.;"), o.push("const float       unpackDownScale = 255. / 256.;"), o.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"), o.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"), o.push("float unpackRGBAToDepth( const in vec4 v ) {"), o.push("    return dot( v, unPackFactors );"), o.push("}"));
                if (s)
                    for (o.push("varying vec4 vWorldPosition;"), o.push("varying vec4 vFlags2;"), r = 0, n = i.sectionPlanes.length; r < n; r++) o.push("uniform bool sectionPlaneActive" + r + ";"), o.push("uniform vec3 sectionPlanePos" + r + ";"), o.push("uniform vec3 sectionPlaneDir" + r + ";");
                if (o.push("varying vec4 vColor;"), o.push("void main(void) {"), s) {
                    for (o.push("  bool clippable = (float(vFlags2.x) > 0.0);"), o.push("  if (clippable) {"), o.push("  float dist = 0.0;"), r = 0, n = i.sectionPlanes.length; r < n; r++) o.push("if (sectionPlaneActive" + r + ") {"), o.push("   dist += clamp(dot(-sectionPlaneDir" + r + ".xyz, vWorldPosition.xyz - sectionPlanePos" + r + ".xyz), 0.0, 1000.0);"), o.push("}");
                    o.push("  if (dist > 0.0) { discard; }"), o.push("}")
                }
                t ? (o.push("   float viewportWidth     = uSAOParams[0];"), o.push("   float viewportHeight    = uSAOParams[1];"), o.push("   float blendCutoff       = uSAOParams[2];"), o.push("   float blendFactor       = uSAOParams[3];"), o.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"), o.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;"), o.push("   gl_FragColor            = vec4(vColor.rgb * ambient, vColor.a);")) : o.push("   gl_FragColor            = vColor;");
                return o.push("}"), o
            }(e, t)
        };
    const vu = $c.vec4(),
        bu = $c.vec3();
    class yu {
        constructor(e, t) {
            this._scene = e, this._withSAO = t, this._hash = this._getHash(), this._shaderSource = new gu(this._scene, this._withSAO), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            const e = this._scene;
            return [e._lightsState.getHash(), e._sectionPlanesState.getHash(), this._withSAO ? "sao" : "nosao"].join(";")
        }
        drawLayer(e, t, i) {
            const r = this._scene,
                n = t.model,
                s = r.canvas.gl,
                o = t._state,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let l = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e), l = !0), s.uniformMatrix4fv(this._uViewMatrix, !1, a ? Qc(n.viewMatrix, a) : n.viewMatrix), s.uniformMatrix4fv(this._uViewNormalMatrix, !1, n.viewNormalMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = n.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = l.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (a) {
                                const t = eh(r.dist, r.dir, a, bu);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            s.uniform1i(this._uRenderPass, i), s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aNormal && this._aNormal.bindArrayBuffer(o.normalsBuf), this._aColor && this._aColor.bindArrayBuffer(o.colorsBuf), this._aFlags && this._aFlags.bindArrayBuffer(o.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(o.flags2Buf), this._aOffset && this._aOffset.bindArrayBuffer(o.offsetsBuf), o.indicesBuf.bind(), s.drawElements(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._lightsState,
                r = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const n = this._program;
            this._uRenderPass = n.getLocation("renderPass"), this._uPositionsDecodeMatrix = n.getLocation("positionsDecodeMatrix"), this._uViewMatrix = n.getLocation("viewMatrix"), this._uViewNormalMatrix = n.getLocation("viewNormalMatrix"), this._uProjMatrix = n.getLocation("projMatrix"), this._uLightAmbient = [], this._uLightColor = [], this._uLightDir = [], this._uLightPos = [], this._uLightAttenuation = [];
            const s = i.lights;
            let o;
            for (let e = 0, t = s.length; e < t; e++) switch (o = s[e], o.type) {
                case "ambient":
                    this._uLightAmbient[e] = n.getLocation("lightAmbient");
                    break;
                case "dir":
                    this._uLightColor[e] = n.getLocation("lightColor" + e), this._uLightPos[e] = null, this._uLightDir[e] = n.getLocation("lightDir" + e);
                    break;
                case "point":
                    this._uLightColor[e] = n.getLocation("lightColor" + e), this._uLightPos[e] = n.getLocation("lightPos" + e), this._uLightDir[e] = null, this._uLightAttenuation[e] = n.getLocation("lightAttenuation" + e);
                    break;
                case "spot":
                    this._uLightColor[e] = n.getLocation("lightColor" + e), this._uLightPos[e] = n.getLocation("lightPos" + e), this._uLightDir[e] = n.getLocation("lightDir" + e), this._uLightAttenuation[e] = n.getLocation("lightAttenuation" + e)
            }
            this._uSectionPlanes = [];
            for (let e = 0, t = r.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: n.getLocation("sectionPlaneActive" + e),
                pos: n.getLocation("sectionPlanePos" + e),
                dir: n.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = n.getAttribute("position"), this._aOffset = n.getAttribute("offset"), this._aNormal = n.getAttribute("normal"), this._aColor = n.getAttribute("color"), this._aFlags = n.getAttribute("flags"), this._aFlags2 = n.getAttribute("flags2"), this._withSAO && (this._uOcclusionTexture = "uOcclusionTexture", this._uSAOParams = n.getLocation("uSAOParams"))
        }
        _bindProgram(e) {
            const t = this._scene,
                i = t.canvas.gl,
                r = this._program,
                n = t._lightsState.lights,
                s = t.camera;
            r.bind(), i.uniformMatrix4fv(this._uProjMatrix, !1, s._project._state.matrix);
            for (let e = 0, t = n.length; e < t; e++) {
                const t = n[e];
                this._uLightAmbient[e] ? i.uniform4f(this._uLightAmbient[e], t.color[0], t.color[1], t.color[2], t.intensity) : (this._uLightColor[e] && i.uniform4f(this._uLightColor[e], t.color[0], t.color[1], t.color[2], t.intensity), this._uLightPos[e] && (i.uniform3fv(this._uLightPos[e], t.pos), this._uLightAttenuation[e] && i.uniform1f(this._uLightAttenuation[e], t.attenuation)), this._uLightDir[e] && i.uniform3fv(this._uLightDir[e], t.dir))
            }
            if (this._withSAO) {
                const r = t.sao;
                if (r.possible) {
                    const t = i.drawingBufferWidth,
                        n = i.drawingBufferHeight;
                    vu[0] = t, vu[1] = n, vu[2] = r.blendCutoff, vu[3] = r.blendFactor, i.uniform4fv(this._uSAOParams, vu), this._program.bindTexture(this._uOcclusionTexture, e.occlusionTexture, 0)
                }
            }
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const wu = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState,
                i = (e._lightsState, t.sectionPlanes.length > 0),
                r = [];
            r.push("// Batched fill vertex shader"), r.push("uniform int renderPass;"), r.push("attribute vec3 position;"), r.push("attribute vec3 offset;"), r.push("attribute vec4 flags;"), r.push("attribute vec4 flags2;"), r.push("uniform mat4 viewMatrix;"), r.push("uniform mat4 projMatrix;"), r.push("uniform mat4 positionsDecodeMatrix;"), r.push("uniform vec4 color;"), i && (r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;"));
            r.push("void main(void) {"), r.push("bool visible      = (float(flags.x) > 0.0);"), r.push("bool xrayed       = (float(flags.y) > 0.0);"), r.push("bool highlighted  = (float(flags.z) > 0.0);"), r.push("bool selected     = (float(flags.w) > 0.0);"), r.push("bool clippable    = (float(flags2.x) > 0.0);"), r.push("bool culled       = (float(flags2.w) > 0.0);"), r.push("bool transparent  = (color.a < 1.0);"), r.push(`if (\n    culled || !visible ||\n    (renderPass == ${uu} && (transparent || xrayed)) || \n    (renderPass == ${pu} && (!transparent || xrayed || highlighted || selected)) || \n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) || \n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), r.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), r.push("} else {"), r.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), r.push("      worldPosition.xyz = worldPosition.xyz + offset;"), r.push("vec4 viewPosition  = viewMatrix * worldPosition; "), i && (r.push("vWorldPosition = worldPosition;"), r.push("vFlags2 = flags2;"));
            return r.push("gl_Position = projMatrix * viewPosition;"), r.push("}"), r.push("}"), r
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState;
            let i, r;
            const n = t.sectionPlanes.length > 0,
                s = [];
            if (s.push("// Batched fill fragment shader"), s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), s.push("precision highp float;"), s.push("precision highp int;"), s.push("#else"), s.push("precision mediump float;"), s.push("precision mediump int;"), s.push("#endif"), n)
                for (s.push("varying vec4 vWorldPosition;"), s.push("varying vec4 vFlags2;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("uniform bool sectionPlaneActive" + i + ";"), s.push("uniform vec3 sectionPlanePos" + i + ";"), s.push("uniform vec3 sectionPlaneDir" + i + ";");
            if (s.push("uniform vec4 color;"), s.push("void main(void) {"), n) {
                for (s.push("  bool clippable = (float(vFlags2.x) > 0.0);"), s.push("  if (clippable) {"), s.push("  float dist = 0.0;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("if (sectionPlaneActive" + i + ") {"), s.push("   dist += clamp(dot(-sectionPlaneDir" + i + ".xyz, vWorldPosition.xyz - sectionPlanePos" + i + ".xyz), 0.0, 1000.0);"), s.push("}");
                s.push("  if (dist > 0.0) { discard; }"), s.push("}")
            }
            return s.push("gl_FragColor = color;"), s.push("}"), s
        }(e)
    };
    const Mu = new Float32Array([1, 1, 1]),
        Au = $c.vec3();
    class xu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new wu(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t, i) {
            const r = t.model,
                n = r.scene,
                s = n.canvas.gl,
                o = t._state,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0);
            const c = a ? Qc(r.viewMatrix, a) : r.viewMatrix;
            if (s.uniformMatrix4fv(this._uViewMatrix, !1, c), s.uniformMatrix4fv(this._uModelMatrix, !1, r.worldMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = n._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = n._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = r.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = l.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (a) {
                                const t = eh(r.dist, r.dir, a, Au);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            if (s.uniform1i(this._uRenderPass, i), i === _u) {
                const e = n.xrayMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else if (i === fu) {
                const e = n.highlightMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else if (i === mu) {
                const e = n.selectedMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else s.uniform4fv(this._uColor, Mu);
            s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(o.offsetsBuf), this._aFlags && this._aFlags.bindArrayBuffer(o.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(o.flags2Buf), o.indicesBuf.bind(), s.drawElements(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uModelMatrix = r.getLocation("modelMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uColor = r.getLocation("color"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const Cu = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Batched geometry edges drawing vertex shader"), i.push("uniform int renderPass;"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("uniform vec4 color;"), i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool xrayed       = (float(flags.y) > 0.0);"), i.push("bool highlighted  = (float(flags.z) > 0.0);"), i.push("bool selected     = (float(flags.w) > 0.0);"), i.push("bool edges        = (float(flags2.y) > 0.0);"), i.push("bool culled       = (float(flags2.w) > 0.0);"), i.push("bool transparent  = (color.a < 1.0);"), i.push(`if (\n    culled || !visible ||\n    (renderPass == ${uu} && (!edges || transparent || xrayed)) ||\n    (renderPass == ${pu} &&  (!edges || !transparent || xrayed || highlighted || selected)) ||\n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) ||\n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("  vWorldPosition = worldPosition;"), i.push("  vFlags2 = flags2;"));
            return i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState;
            let i, r;
            const n = t.sectionPlanes.length > 0,
                s = [];
            if (s.push("// Batched geometry edges drawing fragment shader"), s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), s.push("precision highp float;"), s.push("precision highp int;"), s.push("#else"), s.push("precision mediump float;"), s.push("precision mediump int;"), s.push("#endif"), n)
                for (s.push("varying vec4 vWorldPosition;"), s.push("varying vec4 vFlags2;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("uniform bool sectionPlaneActive" + i + ";"), s.push("uniform vec3 sectionPlanePos" + i + ";"), s.push("uniform vec3 sectionPlaneDir" + i + ";");
            if (s.push("uniform vec4 color;"), s.push("void main(void) {"), n) {
                for (s.push("  bool clippable = (float(vFlags2.x) > 0.0);"), s.push("  if (clippable) {"), s.push("  float dist = 0.0;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("if (sectionPlaneActive" + i + ") {"), s.push("   dist += clamp(dot(-sectionPlaneDir" + i + ".xyz, vWorldPosition.xyz - sectionPlanePos" + i + ".xyz), 0.0, 1000.0);"), s.push("}");
                s.push("  if (dist > 0.0) { discard; }"), s.push("}")
            }
            return s.push("gl_FragColor = color;"), s.push("}"), s
        }(e)
    };
    const Pu = $c.vec3();
    class ku {
        constructor(e) {
            this._scene = e, this._shaderSource = new Cu(this._scene), this._allocate(), this._hash = this._getHash()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t, i) {
            const r = t.model,
                n = r.scene,
                s = n.canvas.gl,
                o = t._state,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0);
            const c = a ? Qc(r.viewMatrix, a) : r.viewMatrix;
            if (s.uniformMatrix4fv(this._uViewMatrix, !1, c), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = n._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = n._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = r.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = l.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (a) {
                                const t = eh(r.dist, r.dir, a, Pu);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            let h;
            h = i === _u ? n.xrayMaterial._state : i === fu ? n.highlightMaterial._state : i === mu ? n.selectedMaterial._state : n.edgeMaterial._state;
            const d = h.edgeColor,
                u = h.edgeAlpha;
            s.uniform4f(this._uColor, d[0], d[1], d[2], u), e.lineWidth !== h.edgeWidth && (s.lineWidth(h.edgeWidth), e.lineWidth = h.edgeWidth), s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), s.uniform1i(this._uRenderPass, i), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(o.offsetsBuf), this._aFlags && this._aFlags.bindArrayBuffer(o.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(o.flags2Buf), o.edgeIndicesBuf.bind(), s.drawElements(s.LINES, o.edgeIndicesBuf.numItems, o.edgeIndicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uColor = r.getLocation("color"), this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Eu {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched geometry picking vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 pickColor;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("varying vec4 vPickColor;"), i.push("void main(void) {"), i.push("  bool visible   = (float(flags.x) > 0.0);"), i.push("  bool pickable  = (float(flags2.z) > 0.0);"), i.push("  bool culled    = (float(flags2.w) > 0.0);"), i.push("  if (culled || (!pickInvisible && !visible) ||  !pickable) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "), i.push("      vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
                return i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched geometry picking fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("varying vec4 vPickColor;"), r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("   gl_FragColor = vPickColor; "), r.push("}"), r
            }(e)
        }
    }
    const Iu = $c.vec3();
    class Tu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Eu(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = t._state.rtcCenter;
            this._program || this._allocate(t);
            let a = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e), a = !0);
            const l = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                c = o ? Qc(l, o) : l;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, c), o ? e.lastRTCCenter && $c.compareVec3(o, e.lastRTCCenter) || (e.lastRTCCenter = o, a = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, a = !0), a) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        a = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[a + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (o) {
                                const t = eh(i.dist, i.dir, o, Iu);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aFlags && this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), this._aPickColor && this._aPickColor.bindArrayBuffer(s.pickColorsBuf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aPickColor = r.getAttribute("pickColor"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram(e) {
            const t = this._scene,
                i = t.canvas.gl,
                r = this._program,
                n = t.camera;
            r.bind(), i.uniform1i(this._uPickInvisible, e.pickInvisible), i.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix || n.project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Du {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched geometry depth vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("  bool visible   = (float(flags.x) > 0.0);"), i.push("  bool pickable  = (float(flags2.z) > 0.0);"), i.push("  bool culled    = (float(flags2.w) > 0.0);"), i.push("  if (culled || (!pickInvisible && !visible) || !pickable) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
                return i.push("      vViewPosition = viewPosition;"), i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched geometry depth fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), r.push("uniform float zNear;"), r.push("uniform float zFar;"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("varying vec4 vViewPosition;"), r.push("vec4 packDepth(const in float depth) {"), r.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"), r.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"), r.push("  vec4 res = fract(depth * bitShift);"), r.push("  res -= res.xxyz * bitMask;"), r.push("  return res;"), r.push("}"), r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("    float zNormalizedDepth = abs((zNear + vViewPosition.z) / (zFar - zNear));"), r.push("    gl_FragColor = packDepth(zNormalizedDepth); "), r.push("}"), r
            }(e)
        }
    }
    const Su = $c.vec3();
    class Bu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Du(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = r.camera.project._state,
                a = t._state.rtcCenter;
            this._program || this._allocate();
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0), n.uniform1i(this._uPickInvisible, e.pickInvisible);
            const c = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                h = a ? Qc(c, a) : c;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, h), n.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), n.uniform1f(this._uZNear, o.near), n.uniform1f(this._uZFar, o.far), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Su);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aFlags && this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._uZNear = r.getLocation("zNear"), this._uZFar = r.getLocation("zFar")
        }
        _bindProgram() {
            this._program.bind()
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class ju {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched geometry normals vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec3 normal;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), i.push("vec3 octDecode(vec2 oct) {"), i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), i.push("    if (v.z < 0.0) {"), i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), i.push("    }"), i.push("    return normalize(v);"), i.push("}"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("varying vec3 vWorldNormal;"), i.push("void main(void) {"), i.push("  bool visible   = (float(flags.x) > 0.0);"), i.push("  bool pickable  = (float(flags2.z) > 0.0);"), i.push("  bool culled    = (float(flags2.w) > 0.0);"), i.push("  if (culled || (!pickInvisible && !visible) ||  !pickable) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "), i.push("      vec3 worldNormal =  octDecode(normal.xy); "), i.push("      vWorldNormal = worldNormal;"), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
                return i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched geometry normals fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("varying vec3 vWorldNormal;"), r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);"), r.push("}"), r
            }(e)
        }
    }
    const Lu = $c.vec3();
    class Ru {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new ju(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = t._state.rtcCenter;
            this._program || this._allocate(t);
            let a = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), a = !0), n.uniform1i(this._uPickInvisible, e.pickInvisible);
            const l = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                c = o ? Qc(l, o) : l;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, c), n.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), o ? e.lastRTCCenter && $c.compareVec3(o, e.lastRTCCenter) || (e.lastRTCCenter = o, a = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, a = !0), a) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        a = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[a + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (o) {
                                const t = eh(i.dist, i.dir, o, Lu);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aNormal && this._aNormal.bindArrayBuffer(s.normalsBuf), this._aFlags && this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            var e = this._scene;
            const t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aNormal = r.getAttribute("normal"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram() {
            this._program.bind()
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Ou {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched occlusion vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("void main(void) {"), i.push("  bool visible   = (float(flags.x) > 0.0);"), i.push("  bool culled   = (float(flags2.w) > 0.0);"), i.push("  bool transparent  = ((float(color.a) / 255.0) < 1.0);"), i.push("  if (culled || !visible || transparent) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
                return i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched occlusion fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "), r.push("}"), r
            }(e)
        }
    }
    const Fu = $c.vec3();
    class Nu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Ou(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = r.camera,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0);
            const c = a ? Qc(i.viewMatrix, a) : i.viewMatrix;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, c), n.uniformMatrix4fv(this._uProjMatrix, !1, o._project._state.matrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Fu);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aColor && this._aColor.bindArrayBuffer(s.colorsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram() {
            this._program.bind()
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Uu {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched geometry depth vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("  bool visible        = (float(flags.x) > 0.0);"), i.push("  bool xrayed         = (float(flags.y) > 0.0);"), i.push("  bool transparent    = ((float(color.a) / 255.0) < 1.0);"), i.push("  bool culled         = (float(flags2.w) > 0.0);"), i.push("  if (culled || !visible || transparent || xrayed) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
                return i.push("      vViewPosition = viewPosition;"), i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched geometry depth fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (let e = 0; e < t.sectionPlanes.length; e++) r.push("uniform bool sectionPlaneActive" + e + ";"), r.push("uniform vec3 sectionPlanePos" + e + ";"), r.push("uniform vec3 sectionPlaneDir" + e + ";")
                }
                if (r.push("varying vec4 vViewPosition;"), r.push("const float   packUpScale = 256. / 255.;"), r.push("const float   unpackDownscale = 255. / 256.;"), r.push("const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"), r.push("const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );"), r.push("const float   shiftRight8 = 1. / 256.;"), r.push("vec4 packDepthToRGBA( const in float v ) {"), r.push("    vec4 r = vec4( fract( v * packFactors ), v );"), r.push("    r.yzw -= r.xyz * shiftRight8;"), r.push("    return r * packUpScale;"), r.push("}"), r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("    gl_FragColor = packDepthToRGBA( gl_FragCoord.z); "), r.push("}"), r
            }(e)
        }
    }
    const Hu = $c.vec3();
    class Vu {
        constructor(e) {
            this._scene = e, this._shaderSource = new Uu(this._scene), this._allocate(this._scene), this._hash = this._getHash()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let a = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), a = !0), n.uniformMatrix4fv(this._uViewMatrix, !1, o ? Qc(i.viewMatrix, o) : i.viewMatrix), o ? e.lastRTCCenter && $c.compareVec3(o, e.lastRTCCenter) || (e.lastRTCCenter = o, a = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, a = !0), a) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        a = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[a + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (o) {
                                const t = eh(i.dist, i.dir, o, Hu);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aColor.bindArrayBuffer(s.colorsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind(), t.uniformMatrix4fv(this._uProjMatrix, !1, e.camera.projMatrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null, Pc.memory.programs--
        }
    }
    class zu {
        constructor(e) {
            this.vertex = function(e) {
                const t = e._sectionPlanesState.sectionPlanes.length > 0,
                    i = [];
                i.push("// Batched geometry normals vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec3 normal;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 viewNormalMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), i.push("vec3 octDecode(vec2 oct) {"), i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), i.push("    if (v.z < 0.0) {"), i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), i.push("    }"), i.push("    return normalize(v);"), i.push("}"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
                i.push("varying vec3 vViewNormal;"), i.push("void main(void) {"), i.push("  bool visible        = (float(flags.x) > 0.0);"), i.push("  bool xrayed         = (float(flags.y) > 0.0);"), i.push("  bool transparent    = ((float(color.a) / 255.0) < 1.0);"), i.push("  bool culled         = (float(flags2.w) > 0.0);"), i.push("  if (culled || !visible || transparent || xrayed) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition   = viewMatrix * worldPosition; "), i.push("      vec4 worldNormal    = vec4(octDecode(normal.xy), 0.0); "), i.push("      vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);"), t && (i.push("      vWorldPosition  = worldPosition;"), i.push("      vFlags2         = flags2;"));
                return i.push("      vViewNormal = viewNormal;"), i.push("      gl_Position = projMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
            }(e), this.fragment = function(e) {
                const t = e._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Batched geometry normals fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                    for (let e = 0; e < t.sectionPlanes.length; e++) r.push("uniform bool sectionPlaneActive" + e + ";"), r.push("uniform vec3 sectionPlanePos" + e + ";"), r.push("uniform vec3 sectionPlaneDir" + e + ";")
                }
                if (r.push("varying vec3 vViewNormal;"), r.push("vec3 packNormalToRGB( const in vec3 normal ) {"), r.push("    return normalize( normal ) * 0.5 + 0.5;"), r.push("}"), r.push("void main(void) {"), i) {
                    r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                    r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
                }
                return r.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "), r.push("}"), r
            }(e)
        }
    }
    const $u = $c.vec3();
    $c.mat4();
    class Wu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new zu(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let a = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(t), a = !0), n.uniformMatrix4fv(this._uViewMatrix, !1, o ? Qc(i.viewMatrix, o) : i.viewMatrix), n.uniformMatrix4fv(this._uViewNormalMatrix, !1, i.viewNormalMatrix), o ? e.lastRTCCenter && $c.compareVec3(o, e.lastRTCCenter) || (e.lastRTCCenter = o, a = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, a = !0), a) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        a = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[a + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (o) {
                                const t = eh(i.dist, i.dir, o, $u);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset.bindArrayBuffer(s.offsetsBuf), this._aNormal.bindArrayBuffer(s.normalsBuf), this._aColor.bindArrayBuffer(s.colorsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(s.flags2Buf), s.indicesBuf.bind(), n.drawElements(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uViewNormalMatrix = r.getLocation("viewNormalMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aNormal = r.getAttribute("normal"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 && (this._aFlags2 = r.getAttribute("flags2"))
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const qu = function(e, t) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Batched geometry shadow vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("uniform mat4 shadowViewMatrix;"), i.push("uniform mat4 shadowProjMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("  bool visible        = (float(flags.x) > 0.0);"), i.push("  bool transparent    = ((float(color.a) / 255.0) < 1.0);"), i.push("  if (!visible || transparent) {"), i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("  } else {"), i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("      worldPosition.xyz = worldPosition.xyz + offset;"), i.push("      vec4 viewPosition  = shadowViewMatrix * worldPosition; "), t && (i.push("      vWorldPosition = worldPosition;"), i.push("      vFlags2 = flags2;"));
            return i.push("      vViewPosition = viewPosition;"), i.push("      gl_Position = shadowProjMatrix * viewPosition;"), i.push("  }"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Batched geometry shadow fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (let e = 0; e < t.sectionPlanes.length; e++) r.push("uniform bool sectionPlaneActive" + e + ";"), r.push("uniform vec3 sectionPlanePos" + e + ";"), r.push("uniform vec3 sectionPlaneDir" + e + ";")
            }
            if (r.push("varying vec4 vViewPosition;"), r.push("vec4 encodeFloat( const in float v ) {"), r.push("  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);"), r.push("  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);"), r.push("  vec4 comp = fract(v * bitShift);"), r.push("  comp -= comp.xxyz * bitMask;"), r.push("  return comp;"), r.push("}"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("      float dist = 0.0;");
                for (var n = 0; n < t.sectionPlanes.length; n++) r.push("      if (sectionPlaneActive" + n + ") {"), r.push("          dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("      }");
                r.push("      if (dist > 0.0) { discard; }"), r.push("  }")
            }
            return r.push("    gl_FragColor = encodeFloat( gl_FragCoord.z); "), r.push("}"), r
        }(e)
    };
    const Gu = $c.vec3();
    class Yu {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new qu(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = this._scene,
                r = i.canvas.gl,
                n = t._state;
            this._program || this._allocate(), e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), r.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(n.positionsBuf), this._aColor && this._aColor.bindArrayBuffer(n.colorsBuf), this._aFlags && this._aFlags.bindArrayBuffer(n.flagsBuf), this._aFlags2 && this._aFlags2.bindArrayBuffer(n.flags2Buf), this._aOffset && this._aOffset.bindArrayBuffer(n.offsetsBuf), n.indicesBuf.bind();
            const s = i._sectionPlanesState.sectionPlanes.length;
            if (s > 0) {
                const e = i._sectionPlanesState.sectionPlanes,
                    n = t.layerIndex * s,
                    o = model.renderFlags,
                    a = t._state.rtcCenter;
                for (let t = 0; t < s; t++) {
                    const i = this._uSectionPlanes[t],
                        s = o.sectionPlanesActivePerLayer[n + t];
                    if (r.uniform1i(i.active, s ? 1 : 0), s) {
                        const n = e[t];
                        if (a) {
                            const e = eh(n.dist, n.dir, a, Gu);
                            r.uniform3fv(i.pos, e)
                        } else r.uniform3fv(i.pos, n.pos);
                        r.uniform3fv(i.dir, n.dir)
                    }
                }
            }
            r.drawElements(n.primitive, n.indicesBuf.numItems, n.indicesBuf.itemType, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uShadowViewMatrix = r.getLocation("shadowViewMatrix"), this._uShadowProjMatrix = r.getLocation("shadowProjMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2")
        }
        _bindProgram(e) {
            const t = this._scene.canvas.gl;
            this._program.bind(), t.uniformMatrix4fv(this._uShadowViewMatrix, !1, e.shadowViewMatrix), t.uniformMatrix4fv(this._uShadowProjMatrix, !1, e.shadowProjMatrix), this._lastLightId = null
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Zu {
        constructor(e) {
            this._scene = e
        }
        _compile() {
            this.drawRenderer && !this.drawRenderer.getValid() && (this.drawRenderer.destroy(), this.drawRenderer = null), this.drawRendererWithSAO && !this.drawRendererWithSAO.getValid() && (this.drawRendererWithSAO.destroy(), this.drawRendererWithSAO = null), this.depthRenderer && !this.depthRenderer.getValid() && (this.depthRenderer.destroy(), this.depthRenderer = null), this.normalsRenderer && !this.normalsRenderer.getValid() && (this.normalsRenderer.destroy(), this.normalsRenderer = null), this.fillRenderer && !this.fillRenderer.getValid() && (this.fillRenderer.destroy(), this.fillRenderer = null), this.edgesRenderer && !this.edgesRenderer.getValid() && (this.edgesRenderer.destroy(), this.edgesRenderer = null), this.pickMeshRenderer && !this.pickMeshRenderer.getValid() && (this.pickMeshRenderer.destroy(), this.pickMeshRenderer = null), this.pickDepthRenderer && !this.pickDepthRenderer.getValid() && (this.pickDepthRenderer.destroy(), this.pickDepthRenderer = null), this.pickNormalsRenderer && !1 === this.pickNormalsRenderer.getValid() && (this.pickNormalsRenderer.destroy(), this.pickNormalsRenderer = null), this.occlusionRenderer && !1 === this.occlusionRenderer.getValid() && (this.occlusionRenderer.destroy(), this.occlusionRenderer = null), this.shadowRenderer && !this.shadowRenderer.getValid() && (this.shadowRenderer.destroy(), this.shadowRenderer = null), this._createRenderers()
        }
        _createRenderers() {
            if (this.drawRenderer || (this.drawRenderer = new yu(this._scene)), !this.drawRendererWithSAO) {
                const e = !0;
                this.drawRendererWithSAO = new yu(this._scene, e)
            }
            this.fillRenderer || (this.fillRenderer = new xu(this._scene)), this.edgesRenderer || (this.edgesRenderer = new ku(this._scene)), this.pickMeshRenderer || (this.pickMeshRenderer = new Tu(this._scene)), this.pickDepthRenderer || (this.pickDepthRenderer = new Bu(this._scene)), this.pickNormalsRenderer || (this.pickNormalsRenderer = new Ru(this._scene)), this.occlusionRenderer || (this.occlusionRenderer = new Nu(this._scene)), this.depthRenderer || (this.depthRenderer = new Vu(this._scene)), this.normalsRenderer || (this.normalsRenderer = new Wu(this._scene)), this.shadowRenderer || (this.shadowRenderer = new Yu(this._scene))
        }
        _destroy() {
            this.drawRenderer && this.drawRenderer.destroy(), this.drawRendererWithSAO && this.drawRendererWithSAO.destroy(), this.depthRenderer && this.depthRenderer.destroy(), this.normalsRenderer && this.normalsRenderer.destroy(), this.fillRenderer && this.fillRenderer.destroy(), this.edgesRenderer && this.edgesRenderer.destroy(), this.pickMeshRenderer && this.pickMeshRenderer.destroy(), this.pickDepthRenderer && this.pickDepthRenderer.destroy(), this.pickNormalsRenderer && this.pickNormalsRenderer.destroy(), this.occlusionRenderer && this.occlusionRenderer.destroy(), this.shadowRenderer && this.shadowRenderer.destroy()
        }
    }
    const Xu = {};
    const Ku = Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint ? 5e6 : 65530,
        Qu = 3 * Ku;
    class Ju {
        constructor() {
            this.maxVerts = Ku, this.maxIndices = Qu, this.positions = [], this.colors = [], this.normals = [], this.pickColors = [], this.flags = [], this.flags2 = [], this.offsets = [], this.indices = [], this.edgeIndices = []
        }
    }
    const ep = $c.mat4(),
        tp = $c.mat4(),
        ip = $c.vec4([0, 0, 0, 1]),
        rp = $c.vec4([0, 0, 0, 1]),
        np = $c.vec4([0, 0, 0, 1]),
        sp = $c.OBB3();
    class op {
        constructor(e, t) {
            this.layerIndex = t.layerIndex, this._batchingRenderers = function(e) {
                const t = e.id;
                let i = Xu[t];
                return i || (i = new Zu(e), Xu[t] = i, i._compile(), e.on("compile", () => {
                    i._compile()
                }), e.on("destroyed", () => {
                    delete Xu[t], i._destroy()
                })), i
            }(e.scene), this.model = e, this._buffer = new Ju, this._scratchMemory = t.scratchMemory;
            var i, r = t.primitive || "triangles";
            const n = e.scene.canvas.gl;
            switch (r) {
                case "points":
                    i = n.POINTS;
                    break;
                case "lines":
                    i = n.LINES;
                    break;
                case "line-loop":
                    i = n.LINE_LOOP;
                    break;
                case "line-strip":
                    i = n.LINE_STRIP;
                    break;
                case "triangles":
                    i = n.TRIANGLES;
                    break;
                case "triangle-strip":
                    i = n.TRIANGLE_STRIP;
                    break;
                case "triangle-fan":
                    i = n.TRIANGLE_FAN;
                    break;
                default:
                    e.error(`Unsupported value for 'primitive': '${r}' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'.`), i = n.TRIANGLES, r = "triangles"
            }
            this._state = new xh({
                primitiveName: r,
                primitive: i,
                positionsBuf: null,
                offsetsBuf: null,
                normalsBuf: null,
                colorsBuf: null,
                flagsBuf: null,
                flags2Buf: null,
                indicesBuf: null,
                edgeIndicesBuf: null,
                positionsDecodeMatrix: $c.mat4(),
                rtcCenter: null
            }), this._numPortions = 0, this._numVisibleLayerPortions = 0, this._numTransparentLayerPortions = 0, this._numXRayedLayerPortions = 0, this._numSelectedLayerPortions = 0, this._numHighlightedLayerPortions = 0, this._numClippableLayerPortions = 0, this._numEdgesLayerPortions = 0, this._numPickableLayerPortions = 0, this._numCulledLayerPortions = 0, this._modelAABB = $c.collapseAABB3(), this._portions = [], this._finalized = !1, this._positionsDecodeMatrix = t.positionsDecodeMatrix, this._preCompressed = !!this._positionsDecodeMatrix, t.rtcCenter && (this._state.rtcCenter = $c.vec3(t.rtcCenter)), this.aabb = $c.collapseAABB3()
        }
        canCreatePortion(e, t) {
            if (this._finalized) throw "Already finalized";
            return this._buffer.positions.length + e < 3 * this._buffer.maxVerts && this._buffer.indices.length + t < this._buffer.maxIndices
        }
        createPortion(e, t, i, r, n, s, o, a, l, c, h) {
            if (this._finalized) throw "Already finalized";
            const d = this._buffer,
                u = d.positions.length / 3,
                p = e.length / 3,
                f = e.length;
            if (this._preCompressed) {
                for (let t = 0, i = e.length; t < i; t++) d.positions.push(e[t]);
                const t = Kh.getPositionsBounds(e),
                    i = Kh.decompressPosition(t.min, this._positionsDecodeMatrix, []),
                    r = Kh.decompressPosition(t.max, this._positionsDecodeMatrix, []);
                c[0] = i[0], c[1] = i[1], c[2] = i[2], c[3] = r[0], c[4] = r[1], c[5] = r[2], l && ($c.AABB3ToOBB3(c, sp), $c.transformOBB3(l, sp), $c.OBB3ToAABB3(sp, c))
            } else {
                const t = d.positions.length;
                for (let t = 0, i = e.length; t < i; t++) d.positions.push(e[t]);
                if (a)
                    for (let e = t, i = t + f; e < i; e += 3) ip[0] = d.positions[e + 0], ip[1] = d.positions[e + 1], ip[2] = d.positions[e + 2], $c.transformPoint4(a, ip, rp), d.positions[e + 0] = rp[0], d.positions[e + 1] = rp[1], d.positions[e + 2] = rp[2], $c.expandAABB3Point3(this._modelAABB, rp), l ? ($c.transformPoint4(l, rp, np), $c.expandAABB3Point3(c, np)) : $c.expandAABB3Point3(c, rp);
                else
                    for (let e = t, i = t + f; e < i; e += 3) ip[0] = d.positions[e + 0], ip[1] = d.positions[e + 1], ip[2] = d.positions[e + 2], $c.expandAABB3Point3(this._modelAABB, ip), l ? ($c.transformPoint4(l, ip, rp), $c.expandAABB3Point3(c, rp)) : $c.expandAABB3Point3(c, ip)
            }
            if (this._state.rtcCenter) {
                const e = this._state.rtcCenter;
                c[0] += e[0], c[1] += e[1], c[2] += e[2], c[3] += e[0], c[4] += e[1], c[5] += e[2]
            }
            if ($c.expandAABB3(this.aabb, c), t)
                if (this._preCompressed)
                    for (let e = 0, i = t.length; e < i; e++) d.normals.push(t[e]);
                else {
                    const e = ep;
                    a ? $c.inverseMat4($c.transposeMat4(a, tp), e) : $c.identityMat4(e, e),
                        function(e, t, i, r, n) {
                            let s, o, a, l, c, h, d = new Float32Array([0, 0, 0, 0]),
                                u = new Float32Array([0, 0, 0, 0]);
                            for (h = 0; h < i; h += 3) d[0] = t[h], d[1] = t[h + 1], d[2] = t[h + 2], $c.transformVec3(e, d, u), $c.normalizeVec3(u, u), a = s = lp(u, "floor", "floor"), o = cp(s), l = c = hp(u, o), s = lp(u, "ceil", "floor"), o = cp(s), l = hp(u, o), l > c && (a = s, c = l), s = lp(u, "floor", "ceil"), o = cp(s), l = hp(u, o), l > c && (a = s, c = l), s = lp(u, "ceil", "ceil"), o = cp(s), l = hp(u, o), l > c && (a = s, c = l), r[n + h + 0] = a[0], r[n + h + 1] = a[1], r[n + h + 2] = 0;
                            n += i
                        }(e, t, t.length, d.normals, d.normals.length)
                } if (void 0 !== n) {
                const e = n & Jd ? 255 : 0,
                    t = n & nu ? 255 : 0,
                    i = n & su ? 255 : 0,
                    r = n & ou ? 255 : 0,
                    s = n & iu ? 255 : 0,
                    o = n & au ? 255 : 0,
                    a = n & tu ? 255 : 0,
                    l = n & eu ? 255 : 0;
                for (let n = 0; n < p; n++) d.flags.push(e), d.flags.push(t), d.flags.push(i), d.flags.push(r), d.flags2.push(s), d.flags2.push(o), d.flags2.push(a), d.flags2.push(l);
                e && (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++), t && (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++), i && (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++), r && (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++), s && (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++), o && (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++), a && (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++), l && (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++)
            }
            if (s) {
                const e = s[0],
                    t = s[1],
                    i = s[2],
                    r = o;
                for (let r = 0; r < p; r++) d.colors.push(e), d.colors.push(t), d.colors.push(i), d.colors.push(o);
                r < 255 && (this._numTransparentLayerPortions++, this.model.numTransparentLayerPortions++)
            }
            if (i)
                for (let e = 0, t = i.length; e < t; e++) d.indices.push(i[e] + u);
            if (r)
                for (let e = 0, t = r.length; e < t; e++) d.edgeIndices.push(r[e] + u); {
                const e = d.pickColors.length;
                for (let t = e, i = e + 4 * p; t < i; t += 4) d.pickColors.push(h[0]), d.pickColors.push(h[1]), d.pickColors.push(h[2]), d.pickColors.push(h[3])
            }
            for (let e = 0; e < p; e++) d.offsets.push(0), d.offsets.push(0), d.offsets.push(0);
            const _ = this._portions.length / 2;
            return this._portions.push(u), this._portions.push(p), this._numPortions++, this.model.numPortions++, _
        }
        finalize() {
            if (this._finalized) return void this.model.error("Already finalized");
            const e = this._state,
                t = this.model.scene.canvas.gl,
                i = this._buffer;
            if (i.positions.length > 0)
                if (this._preCompressed) {
                    e.positionsDecodeMatrix = this._positionsDecodeMatrix;
                    const r = new Uint16Array(i.positions);
                    e.positionsBuf = new uh(t, t.ARRAY_BUFFER, r, i.positions.length, 3, t.STATIC_DRAW)
                } else {
                    const r = new Float32Array(i.positions),
                        n = new Uint16Array(r.length);
                    ap(r, i.positions.length, this._modelAABB, n, e.positionsDecodeMatrix), e.positionsBuf = new uh(t, t.ARRAY_BUFFER, n, i.positions.length, 3, t.STATIC_DRAW)
                } if (i.normals.length > 0) {
                const r = new Int8Array(i.normals);
                let n = !0;
                e.normalsBuf = new uh(t, t.ARRAY_BUFFER, r, i.normals.length, 3, t.STATIC_DRAW, n)
            }
            if (i.colors.length > 0) {
                const r = new Uint8Array(i.colors);
                let n = !1;
                e.colorsBuf = new uh(t, t.ARRAY_BUFFER, r, i.colors.length, 4, t.DYNAMIC_DRAW, n)
            }
            if (i.flags.length > 0) {
                const r = new Uint8Array(i.flags),
                    n = new Uint8Array(i.flags2);
                let s = !0;
                e.flagsBuf = new uh(t, t.ARRAY_BUFFER, r, i.flags.length, 4, t.DYNAMIC_DRAW, s), e.flags2Buf = new uh(t, t.ARRAY_BUFFER, n, i.flags.length, 4, t.DYNAMIC_DRAW, s)
            }
            if (i.pickColors.length > 0) {
                const r = new Uint8Array(i.pickColors);
                let n = !1;
                e.pickColorsBuf = new uh(t, t.ARRAY_BUFFER, r, i.pickColors.length, 4, t.STATIC_DRAW, n)
            }
            if (i.offsets.length > 0) {
                const r = new Float32Array(i.offsets);
                e.offsetsBuf = new uh(t, t.ARRAY_BUFFER, r, i.offsets.length, 3, t.DYNAMIC_DRAW)
            }
            const r = Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint;
            if (i.indices.length > 0) {
                const n = r ? new Uint32Array(i.indices) : new Uint16Array(i.indices);
                e.indicesBuf = new uh(t, t.ELEMENT_ARRAY_BUFFER, n, i.indices.length, 1, t.STATIC_DRAW)
            }
            if (i.edgeIndices.length > 0) {
                const n = r ? new Uint32Array(i.edgeIndices) : new Uint16Array(i.edgeIndices);
                e.edgeIndicesBuf = new uh(t, t.ELEMENT_ARRAY_BUFFER, n, i.edgeIndices.length, 1, t.STATIC_DRAW)
            }
            this._buffer = null, this._finalized = !0
        }
        initFlags(e, t) {
            t & Jd && (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++), t & su && (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++), t & nu && (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++), t & ou && (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++), t & iu && (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++), t & au && (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++), t & tu && (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++), t & eu && (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++), this._setFlags(e, t), this._setFlags2(e, t)
        }
        setVisible(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & Jd ? (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++) : (this._numVisibleLayerPortions--, this.model.numVisibleLayerPortions--), this._setFlags(e, t)
        }
        setHighlighted(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & su ? (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++) : (this._numHighlightedLayerPortions--, this.model.numHighlightedLayerPortions--), this._setFlags(e, t)
        }
        setXRayed(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & nu ? (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++) : (this._numXRayedLayerPortions--, this.model.numXRayedLayerPortions--), this._setFlags(e, t)
        }
        setSelected(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & ou ? (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++) : (this._numSelectedLayerPortions--, this.model.numSelectedLayerPortions--), this._setFlags(e, t)
        }
        setEdges(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & au ? (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++) : (this._numEdgesLayerPortions--, this.model.numEdgesLayerPortions--), this._setFlags2(e, t)
        }
        setClippable(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & iu ? (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++) : (this._numClippableLayerPortions--, this.model.numClippableLayerPortions--), this._setFlags2(e, t)
        }
        setCulled(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & eu ? (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++) : (this._numCulledLayerPortions--, this.model.numCulledLayerPortions--), this._setFlags2(e, t)
        }
        setCollidable(e, t) {
            if (!this._finalized) throw "Not finalized"
        }
        setPickable(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & tu ? (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++) : (this._numPickableLayerPortions--, this.model.numPickableLayerPortions--), this._setFlags2(e, t)
        }
        setColor(e, t, i = !1) {
            if (!this._finalized) throw "Not finalized";
            const r = 2 * e,
                n = 4 * this._portions[r],
                s = 4 * this._portions[r + 1],
                o = this._scratchMemory.getUInt8Array(s),
                a = t[0],
                l = t[1],
                c = t[2],
                h = t[3];
            for (var d = 0; d < s; d += 4) o[d + 0] = a, o[d + 1] = l, o[d + 2] = c, o[d + 3] = h;
            if (i) {
                t[3] < 255 ? (this._numTransparentLayerPortions++, this.model.numTransparentLayerPortions++) : (this._numTransparentLayerPortions--, this.model.numTransparentLayerPortions--)
            }
            this._state.colorsBuf.setData(o, n, s)
        }
        _setFlags(e, t) {
            if (!this._finalized) throw "Not finalized";
            var i = 2 * e,
                r = 4 * this._portions[i],
                n = 4 * this._portions[i + 1];
            const s = this._scratchMemory.getUInt8Array(n);
            for (var o = t & Jd ? 255 : 0, a = t & nu ? 255 : 0, l = t & su ? 255 : 0, c = t & ou ? 255 : 0, h = 0; h < n; h += 4) s[h + 0] = o, s[h + 1] = a, s[h + 2] = l, s[h + 3] = c;
            this._state.flagsBuf.setData(s, r, n)
        }
        _setFlags2(e, t) {
            if (!this._finalized) throw "Not finalized";
            var i = 2 * e,
                r = 4 * this._portions[i],
                n = 4 * this._portions[i + 1],
                s = t & iu ? 255 : 0,
                o = t & au ? 255 : 0,
                a = t & tu ? 255 : 0,
                l = t & eu ? 255 : 0;
            const c = this._scratchMemory.getUInt8Array(n);
            for (var h = 0; h < n; h += 4) c[h + 0] = s, c[h + 1] = o, c[h + 2] = a, c[h + 3] = l;
            this._state.flags2Buf.setData(c, r, n)
        }
        setOffset(e, t) {
            if (!this._finalized) throw "Not finalized";
            const i = 2 * e,
                r = 3 * this._portions[i],
                n = 3 * this._portions[i + 1],
                s = this._scratchMemory.getFloat32Array(n),
                o = t[0],
                a = t[1],
                l = t[2];
            for (let e = 0; e < n; e += 3) s[e + 0] = o, s[e + 1] = a, s[e + 2] = l;
            this._state.offsetsBuf.setData(s, r, n)
        }
        drawNormalFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && (e.withSAO ? this._batchingRenderers.drawRendererWithSAO && this._batchingRenderers.drawRendererWithSAO.drawLayer(e, this, uu) : this._batchingRenderers.drawRenderer && this._batchingRenderers.drawRenderer.drawLayer(e, this, uu))
        }
        drawNormalEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numEdgesLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, uu)
        }
        drawNormalFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numTransparentLayerPortions && this._numXRayedLayerPortions !== this._numPortions && this._batchingRenderers.drawRenderer && this._batchingRenderers.drawRenderer.drawLayer(e, this, pu)
        }
        drawNormalTransparentEdges(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numEdgesLayerPortions && 0 !== this._numTransparentLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, pu)
        }
        drawDepth(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && this._batchingRenderers.depthRenderer && this._batchingRenderers.depthRenderer.drawLayer(e, this)
        }
        drawNormals(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && this._batchingRenderers.normalsRenderer && this._batchingRenderers.normalsRenderer.drawLayer(e, this)
        }
        drawXRayedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, _u)
        }
        drawXRayedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, _u)
        }
        drawXRayedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, _u)
        }
        drawXRayedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, _u)
        }
        drawHighlightedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, fu)
        }
        drawSelectedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, mu)
        }
        drawSelectedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, mu)
        }
        drawSelectedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._batchingRenderers.fillRenderer && this._batchingRenderers.fillRenderer.drawLayer(e, this, mu)
        }
        drawSelectedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._batchingRenderers.edgesRenderer && this._batchingRenderers.edgesRenderer.drawLayer(e, this, mu)
        }
        drawPickMesh(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._batchingRenderers.pickMeshRenderer && this._batchingRenderers.pickMeshRenderer.drawLayer(e, this)
        }
        drawPickDepths(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._batchingRenderers.pickDepthRenderer && this._batchingRenderers.pickDepthRenderer.drawLayer(e, this)
        }
        drawPickNormals(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._batchingRenderers.pickNormalsRenderer && this._batchingRenderers.pickNormalsRenderer.drawLayer(e, this)
        }
        drawOcclusion(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._batchingRenderers.occlusionRenderer && this._batchingRenderers.occlusionRenderer.drawLayer(e, this)
        }
        drawShadow(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._batchingRenderers.shadowRenderer && this._batchingRenderers.shadowRenderer.drawLayer(e, this)
        }
        destroy() {
            const e = this._state;
            e.positionsBuf && (e.positionsBuf.destroy(), e.positionsBuf = null), e.offsetsBuf && (e.offsetsBuf.destroy(), e.offsetsBuf = null), e.normalsBuf && (e.normalsBuf.destroy(), e.normalsBuf = null), e.colorsBuf && (e.colorsBuf.destroy(), e.colorsBuf = null), e.flagsBuf && (e.flagsBuf.destroy(), e.flagsBuf = null), e.flags2Buf && (e.flags2Buf.destroy(), e.flags2Buf = null), e.pickColorsBuf && (e.pickColorsBuf.destroy(), e.pickColorsBuf = null), e.indicesBuf && (e.indicesBuf.destroy(), e.indicessBuf = null), e.edgeIndicesBuf && (e.edgeIndicesBuf.destroy(), e.edgeIndicessBuf = null), e.destroy()
        }
    }
    var ap = function() {
        const e = $c.mat4(),
            t = $c.mat4();
        return function(i, r, n, s, o) {
            const a = n[0],
                l = n[1],
                c = n[2],
                h = n[3] - a,
                d = n[4] - l,
                u = n[5] - c,
                p = 65525 / h,
                f = 65525 / d,
                _ = 65525 / u;
            for (let e = 0; e < r; e += 3) s[e + 0] = Math.floor((i[e + 0] - a) * p), s[e + 1] = Math.floor((i[e + 1] - l) * f), s[e + 2] = Math.floor((i[e + 2] - c) * _);
            $c.identityMat4(e), $c.translationMat4v(n, e), $c.identityMat4(t), $c.scalingMat4v([h / 65525, d / 65525, u / 65525], t), $c.mulMat4(e, t, o)
        }
    }();

    function lp(e, t, i) {
        let r = e[0] / (Math.abs(e[0]) + Math.abs(e[1]) + Math.abs(e[2])),
            n = e[1] / (Math.abs(e[0]) + Math.abs(e[1]) + Math.abs(e[2]));
        if (e[2] < 0) {
            let e = r,
                t = n;
            e = (1 - Math.abs(n)) * (r >= 0 ? 1 : -1), t = (1 - Math.abs(r)) * (n >= 0 ? 1 : -1), r = e, n = t
        }
        return new Int8Array([Math[t](127.5 * r + (r < 0 ? -1 : 0)), Math[i](127.5 * n + (n < 0 ? -1 : 0))])
    }

    function cp(e) {
        let t = e[0],
            i = e[1];
        t /= t < 0 ? 127 : 128, i /= i < 0 ? 127 : 128;
        const r = 1 - Math.abs(t) - Math.abs(i);
        r < 0 && (t = (1 - Math.abs(i)) * (t >= 0 ? 1 : -1), i = (1 - Math.abs(t)) * (i >= 0 ? 1 : -1));
        const n = Math.sqrt(t * t + i * i + r * r);
        return [t / n, i / n, r / n]
    }

    function hp(e, t) {
        return e[0] * t[0] + e[1] * t[1] + e[2] * t[2]
    }
    const dp = function(e, t) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState,
                i = e._lightsState,
                r = t.sectionPlanes.length > 0;
            let n, s, o;
            const a = [];
            for (a.push("// Instancing geometry drawing vertex shader"), a.push("uniform int renderPass;"), a.push("attribute vec3 position;"), a.push("attribute vec2 normal;"), a.push("attribute vec4 color;"), a.push("attribute vec4 flags;"), a.push("attribute vec4 flags2;"), a.push("attribute vec3 offset;"), a.push("attribute vec4 modelMatrixCol0;"), a.push("attribute vec4 modelMatrixCol1;"), a.push("attribute vec4 modelMatrixCol2;"), a.push("attribute vec4 modelNormalMatrixCol0;"), a.push("attribute vec4 modelNormalMatrixCol1;"), a.push("attribute vec4 modelNormalMatrixCol2;"), a.push("uniform mat4 viewMatrix;"), a.push("uniform mat4 projMatrix;"), a.push("uniform mat4 viewNormalMatrix;"), a.push("uniform mat4 positionsDecodeMatrix;"), a.push("uniform vec4 lightAmbient;"), n = 0, s = i.lights.length; n < s; n++) o = i.lights[n], "ambient" !== o.type && (a.push("uniform vec4 lightColor" + n + ";"), "dir" === o.type && a.push("uniform vec3 lightDir" + n + ";"), "point" === o.type && a.push("uniform vec3 lightPos" + n + ";"), "spot" === o.type && (a.push("uniform vec3 lightPos" + n + ";"), a.push("uniform vec3 lightDir" + n + ";")));
            a.push("vec3 octDecode(vec2 oct) {"), a.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), a.push("    if (v.z < 0.0) {"), a.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), a.push("    }"), a.push("    return normalize(v);"), a.push("}"), r && (a.push("varying vec4 vWorldPosition;"), a.push("varying vec4 vFlags2;"));
            for (a.push("varying vec4 vColor;"), a.push("void main(void) {"), a.push("bool visible      = (float(flags.x) > 0.0);"), a.push("bool xrayed       = (float(flags.y) > 0.0);"), a.push("bool highlighted  = (float(flags.z) > 0.0);"), a.push("bool selected     = (float(flags.w) > 0.0);"), a.push("bool culled       = (float(flags2.w) > 0.0);"), a.push("bool transparent  = (float(color.a) < 255.0);"), a.push(`if \n    (culled || !visible || \n    (renderPass == ${uu} && (transparent || xrayed)) || \n    (renderPass == ${pu} && (!transparent || xrayed || highlighted || selected)) || \n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) || \n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), a.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), a.push("} else {"), a.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), a.push("worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), a.push("worldPosition.xyz = worldPosition.xyz + offset;"), a.push("vec4 viewPosition  = viewMatrix * worldPosition; "), a.push("vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); "), a.push("vec4 worldNormal = vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);"), a.push("vec3 viewNormal = normalize(vec4(worldNormal * viewNormalMatrix).xyz);"), a.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"), a.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"), a.push("float lambertian = 1.0;"), n = 0, s = i.lights.length; n < s; n++)
                if (o = i.lights[n], "ambient" !== o.type) {
                    if ("dir" === o.type) "view" === o.space ? a.push("viewLightDir = normalize(lightDir" + n + ");") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightDir" + n + ", 0.0)).xyz);");
                    else if ("point" === o.type) "view" === o.space ? a.push("viewLightDir = normalize(lightPos" + n + " - viewPosition.xyz);") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightPos" + n + ", 0.0)).xyz);");
                    else {
                        if ("spot" !== o.type) continue;
                        "view" === o.space ? a.push("viewLightDir = normalize(lightDir" + n + ");") : a.push("viewLightDir = normalize((viewMatrix * vec4(lightDir" + n + ", 0.0)).xyz);")
                    }
                    a.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"), a.push("reflectedColor += lambertian * (lightColor" + n + ".rgb * lightColor" + n + ".a);")
                } a.push("vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));"), a.push("vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);"), r && (a.push("vWorldPosition = worldPosition;"), a.push("vFlags2 = flags2;"));
            return a.push("gl_Position = projMatrix * viewPosition;"), a.push("}"), a.push("}"), a
        }(e), this.fragment = function(e, t) {
            const i = e._sectionPlanesState;
            let r, n;
            const s = i.sectionPlanes.length > 0,
                o = [];
            o.push("// Instancing geometry drawing fragment shader"), o.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), o.push("precision highp float;"), o.push("precision highp int;"), o.push("#else"), o.push("precision mediump float;"), o.push("precision mediump int;"), o.push("#endif"), t && (o.push("uniform sampler2D uOcclusionTexture;"), o.push("uniform vec4      uSAOParams;"), o.push("const float       packUpscale = 256. / 255.;"), o.push("const float       unpackDownScale = 255. / 256.;"), o.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"), o.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"), o.push("float unpackRGBAToDepth( const in vec4 v ) {"), o.push("    return dot( v, unPackFactors );"), o.push("}"));
            if (s)
                for (o.push("varying vec4 vWorldPosition;"), o.push("varying vec4 vFlags2;"), r = 0, n = i.sectionPlanes.length; r < n; r++) o.push("uniform bool sectionPlaneActive" + r + ";"), o.push("uniform vec3 sectionPlanePos" + r + ";"), o.push("uniform vec3 sectionPlaneDir" + r + ";");
            if (o.push("varying vec4 vColor;"), o.push("void main(void) {"), s) {
                for (o.push("  bool clippable = (float(vFlags2.x) > 0.0);"), o.push("  if (clippable) {"), o.push("  float dist = 0.0;"), r = 0, n = i.sectionPlanes.length; r < n; r++) o.push("if (sectionPlaneActive" + r + ") {"), o.push("   dist += clamp(dot(-sectionPlaneDir" + r + ".xyz, vWorldPosition.xyz - sectionPlanePos" + r + ".xyz), 0.0, 1000.0);"), o.push("}");
                o.push("if (dist > 0.0) { discard; }"), o.push("}")
            }
            t ? (o.push("   float viewportWidth     = uSAOParams[0];"), o.push("   float viewportHeight    = uSAOParams[1];"), o.push("   float blendCutoff       = uSAOParams[2];"), o.push("   float blendFactor       = uSAOParams[3];"), o.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"), o.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;"), o.push("   gl_FragColor            = vec4(vColor.rgb * ambient, vColor.a);")) : o.push("    gl_FragColor           = vColor;");
            return o.push("}"), o
        }(e, t)
    };
    const up = $c.vec4(),
        pp = $c.vec3();
    $c.mat4(), $c.mat4();
    class fp {
        constructor(e, t) {
            this._scene = e, this._withSAO = t, this._hash = this._getHash(), this._shaderSource = new dp(this._scene, this._withSAO), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            const e = this._scene;
            return [e._lightsState.getHash(), e._sectionPlanesState.getHash(), this._withSAO ? "sao" : "nosao"].join(";")
        }
        drawLayer(e, t, i) {
            const r = t.model,
                n = r.scene,
                s = n.canvas.gl,
                o = t._state,
                a = this._instanceExt,
                l = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let c = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e), c = !0), s.uniformMatrix4fv(this._uViewMatrix, !1, l ? Qc(r.viewMatrix, l) : r.viewMatrix), s.uniformMatrix4fv(this._uViewNormalMatrix, !1, r.viewNormalMatrix), l ? e.lastRTCCenter && $c.compareVec3(l, e.lastRTCCenter) || (e.lastRTCCenter = l, c = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, c = !0), c) {
                const e = n._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = n._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        a = r.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = a.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (l) {
                                const t = eh(r.dist, r.dir, l, pp);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            s.uniform1i(this._uRenderPass, i), s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(o.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(o.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(o.modelMatrixCol2Buf), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aModelNormalMatrixCol0.bindArrayBuffer(o.modelNormalMatrixCol0Buf), this._aModelNormalMatrixCol1.bindArrayBuffer(o.modelNormalMatrixCol1Buf), this._aModelNormalMatrixCol2.bindArrayBuffer(o.modelNormalMatrixCol2Buf), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 1), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 1), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aNormal.bindArrayBuffer(o.normalsBuf), this._aColor.bindArrayBuffer(o.colorsBuf), a.vertexAttribDivisorANGLE(this._aColor.location, 1), this._aFlags.bindArrayBuffer(o.flagsBuf), a.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(o.flags2Buf), a.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(o.offsetsBuf), a.vertexAttribDivisorANGLE(this._aOffset.location, 1)), o.indicesBuf.bind(), a.drawElementsInstancedANGLE(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0, o.numInstances), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 0), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 0), a.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 0), a.vertexAttribDivisorANGLE(this._aColor.location, 0), a.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && a.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && a.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._lightsState,
                r = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const n = this._program;
            this._uRenderPass = n.getLocation("renderPass"), this._uPositionsDecodeMatrix = n.getLocation("positionsDecodeMatrix"), this._uModelNormalMatrix = n.getLocation("modelNormalMatrix"), this._uViewMatrix = n.getLocation("viewMatrix"), this._uViewNormalMatrix = n.getLocation("viewNormalMatrix"), this._uProjMatrix = n.getLocation("projMatrix"), this._uLightAmbient = [], this._uLightColor = [], this._uLightDir = [], this._uLightPos = [], this._uLightAttenuation = [];
            const s = i.lights;
            let o;
            for (var a = 0, l = s.length; a < l; a++) switch (o = s[a], o.type) {
                case "ambient":
                    this._uLightAmbient[a] = n.getLocation("lightAmbient");
                    break;
                case "dir":
                    this._uLightColor[a] = n.getLocation("lightColor" + a), this._uLightPos[a] = null, this._uLightDir[a] = n.getLocation("lightDir" + a);
                    break;
                case "point":
                    this._uLightColor[a] = n.getLocation("lightColor" + a), this._uLightPos[a] = n.getLocation("lightPos" + a), this._uLightDir[a] = null, this._uLightAttenuation[a] = n.getLocation("lightAttenuation" + a);
                    break;
                case "spot":
                    this._uLightColor[a] = n.getLocation("lightColor" + a), this._uLightPos[a] = n.getLocation("lightPos" + a), this._uLightDir[a] = n.getLocation("lightDir" + a), this._uLightAttenuation[a] = n.getLocation("lightAttenuation" + a)
            }
            this._uSectionPlanes = [];
            for (let e = 0, t = r.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: n.getLocation("sectionPlaneActive" + e),
                pos: n.getLocation("sectionPlanePos" + e),
                dir: n.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = n.getAttribute("position"), this._aNormal = n.getAttribute("normal"), this._aColor = n.getAttribute("color"), this._aFlags = n.getAttribute("flags"), this._aFlags2 = n.getAttribute("flags2"), this._aOffset = n.getAttribute("offset"), this._aModelMatrixCol0 = n.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = n.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = n.getAttribute("modelMatrixCol2"), this._aModelNormalMatrixCol0 = n.getAttribute("modelNormalMatrixCol0"), this._aModelNormalMatrixCol1 = n.getAttribute("modelNormalMatrixCol1"), this._aModelNormalMatrixCol2 = n.getAttribute("modelNormalMatrixCol2"), this._uOcclusionTexture = "uOcclusionTexture", this._uSAOParams = n.getLocation("uSAOParams")
        }
        _bindProgram(e) {
            const t = this._scene,
                i = t.canvas.gl,
                r = this._program,
                n = t._lightsState.lights;
            let s;
            r.bind();
            const o = t.camera;
            i.uniformMatrix4fv(this._uProjMatrix, !1, o._project._state.matrix);
            for (let e = 0, t = n.length; e < t; e++) s = n[e], this._uLightAmbient[e] ? i.uniform4f(this._uLightAmbient[e], s.color[0], s.color[1], s.color[2], s.intensity) : (this._uLightColor[e] && i.uniform4f(this._uLightColor[e], s.color[0], s.color[1], s.color[2], s.intensity), this._uLightPos[e] && (i.uniform3fv(this._uLightPos[e], s.pos), this._uLightAttenuation[e] && i.uniform1f(this._uLightAttenuation[e], s.attenuation)), this._uLightDir[e] && i.uniform3fv(this._uLightDir[e], s.dir));
            if (this._withSAO) {
                const r = t.sao;
                if (r.possible) {
                    const t = i.drawingBufferWidth,
                        n = i.drawingBufferHeight;
                    up[0] = t, up[1] = n, up[2] = r.blendCutoff, up[3] = r.blendFactor, i.uniform4fv(this._uSAOParams, up), this._program.bindTexture(this._uOcclusionTexture, e.occlusionTexture, 0)
                }
            }
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const _p = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing fill vertex shader"), i.push("uniform int renderPass;"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), i.push("uniform vec4 color;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool xrayed       = (float(flags.y) > 0.0);"), i.push("bool highlighted  = (float(flags.z) > 0.0);"), i.push("bool selected     = (float(flags.w) > 0.0);"), i.push("bool culled       = (float(flags2.w) > 0.0);"), i.push("bool transparent  = (color.a < 1.0);"), i.push(`if (\n    culled || !visible ||\n    (renderPass == ${uu} && (transparent || xrayed)) || \n    (renderPass == ${pu} && (!transparent || xrayed || highlighted || selected)) || \n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) || \n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("worldPosition.xyz = worldPosition.xyz + offset;"), i.push("vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("vWorldPosition = worldPosition;"), i.push("vFlags2 = flags2;"));
            return i.push("gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Instancing fill fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (let e = 0, i = t.sectionPlanes.length; e < i; e++) r.push("uniform bool sectionPlaneActive" + e + ";"), r.push("uniform vec3 sectionPlanePos" + e + ";"), r.push("uniform vec3 sectionPlaneDir" + e + ";")
            }
            if (r.push("uniform vec4 color;"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (let e = 0, i = t.sectionPlanes.length; e < i; e++) r.push("if (sectionPlaneActive" + e + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + e + ".xyz, vWorldPosition.xyz - sectionPlanePos" + e + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("gl_FragColor = color;"), r.push("}"), r
        }(e)
    };
    const mp = $c.vec3();
    class gp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new _p(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t, i) {
            const r = t.model,
                n = r.scene,
                s = n.canvas.gl,
                o = t._state,
                a = this._instanceExt,
                l = t._state.rtcCenter;
            if (!this._program && (this._allocate(t.model.scene), this.errors)) return;
            let c = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), c = !0), s.uniformMatrix4fv(this._uViewMatrix, !1, l ? Qc(r.viewMatrix, l) : r.viewMatrix), l ? e.lastRTCCenter && $c.compareVec3(l, e.lastRTCCenter) || (e.lastRTCCenter = l, c = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, c = !0), c) {
                const e = n._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = n._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        a = r.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = a.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (l) {
                                const t = eh(r.dist, r.dir, l, mp);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            if (s.uniform1i(this._uRenderPass, i), s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(o.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(o.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(o.modelMatrixCol2Buf), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aFlags.bindArrayBuffer(o.flagsBuf, s.UNSIGNED_BYTE, !0), a.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(o.flags2Buf, s.UNSIGNED_BYTE, !0), a.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(o.offsetsBuf), a.vertexAttribDivisorANGLE(this._aOffset.location, 1)), o.indicesBuf.bind(), i === _u) {
                const e = n.xrayMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else if (i === fu) {
                const e = n.highlightMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else if (i === mu) {
                const e = n.selectedMaterial._state,
                    t = e.fillColor,
                    i = e.fillAlpha;
                s.uniform4f(this._uColor, t[0], t[1], t[2], i)
            } else s.uniform4fv(this._uColor, $c.vec3([1, 1, 1]));
            a.drawElementsInstancedANGLE(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0, o.numInstances), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), a.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && a.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && a.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uColor = r.getLocation("color"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const vp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing edges vertex shader"), i.push("uniform int renderPass;"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("uniform vec4 color;"), i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool xrayed       = (float(flags.y) > 0.0);"), i.push("bool highlighted  = (float(flags.z) > 0.0);"), i.push("bool selected     = (float(flags.w) > 0.0);"), i.push("bool edges        = (float(flags2.y) > 0.0);"), i.push("bool culled  = (float(flags2.w) > 0.0);"), i.push("bool transparent  = (color.a < 1.0);"), i.push(`if (\n    culled || !visible || \n    (renderPass == ${uu} && (!edges || transparent || xrayed)) ||\n    (renderPass == ${pu} &&  (!edges || !transparent || xrayed || highlighted || selected)) ||\n    (renderPass == ${_u} && (!xrayed || highlighted || selected)) ||\n    (renderPass == ${fu} && !highlighted) ||\n    (renderPass == ${mu} && !selected)) {`), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("worldPosition.xyz = worldPosition.xyz + offset;"), i.push("vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("vWorldPosition = worldPosition;"), i.push("vFlags2 = flags2;"));
            return i.push("gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0;
            let r, n;
            const s = [];
            if (s.push("// Instancing edges fragment shader"), s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), s.push("precision highp float;"), s.push("precision highp int;"), s.push("#else"), s.push("precision mediump float;"), s.push("precision mediump int;"), s.push("#endif"), s.push("uniform vec4 color;"), i)
                for (s.push("varying vec4 vWorldPosition;"), s.push("varying vec4 vFlags2;"), r = 0, n = t.sectionPlanes.length; r < n; r++) s.push("uniform bool sectionPlaneActive" + r + ";"), s.push("uniform vec3 sectionPlanePos" + r + ";"), s.push("uniform vec3 sectionPlaneDir" + r + ";");
            if (s.push("void main(void) {"), i) {
                for (s.push("  bool clippable = (float(vFlags2.x) > 0.0);"), s.push("  if (clippable) {"), s.push("  float dist = 0.0;"), r = 0, n = t.sectionPlanes.length; r < n; r++) s.push("if (sectionPlaneActive" + r + ") {"), s.push("   dist += clamp(dot(-sectionPlaneDir" + r + ".xyz, vWorldPosition.xyz - sectionPlanePos" + r + ".xyz), 0.0, 1000.0);"), s.push("}");
                s.push("if (dist > 0.0) { discard; }"), s.push("}")
            }
            return s.push("gl_FragColor = color;"), s.push("}"), s
        }(e)
    };
    const bp = $c.vec3();
    class yp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new vp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t, i) {
            const r = t.model,
                n = r.scene,
                s = n.canvas.gl,
                o = t._state,
                a = this._instanceExt,
                l = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let c, h = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), h = !0), s.uniformMatrix4fv(this._uViewMatrix, !1, l ? Qc(r.viewMatrix, l) : r.viewMatrix), l ? e.lastRTCCenter && $c.compareVec3(l, e.lastRTCCenter) || (e.lastRTCCenter = l, h = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, h = !0), h) {
                const e = n._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const i = n._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        a = r.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            r = a.sectionPlanesActivePerLayer[o + t];
                        if (s.uniform1i(e.active, r ? 1 : 0), r) {
                            const r = i[t];
                            if (l) {
                                const t = eh(r.dist, r.dir, l, bp);
                                s.uniform3fv(e.pos, t)
                            } else s.uniform3fv(e.pos, r.pos);
                            s.uniform3fv(e.dir, r.dir)
                        }
                    }
                }
            }
            c = i === _u ? n.xrayMaterial._state : i === fu ? n.highlightMaterial._state : i === mu ? n.selectedMaterial._state : n.edgeMaterial._state;
            const d = c.edgeColor,
                u = c.edgeAlpha;
            s.uniform4f(this._uColor, d[0], d[1], d[2], u), e.lineWidth !== c.edgeWidth && (s.lineWidth(c.edgeWidth), e.lineWidth = c.edgeWidth), s.uniform1i(this._uRenderPass, i), s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(o.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(o.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(o.modelMatrixCol2Buf), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(o.positionsBuf), this._aFlags && (this._aFlags.bindArrayBuffer(o.flagsBuf, s.UNSIGNED_BYTE, !0), a.vertexAttribDivisorANGLE(this._aFlags.location, 1)), this._aFlags2 && (this._aFlags2.bindArrayBuffer(o.flags2Buf, s.UNSIGNED_BYTE, !0), a.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(o.offsetsBuf), a.vertexAttribDivisorANGLE(this._aOffset.location, 1)), o.edgeIndicesBuf.bind(), a.drawElementsInstancedANGLE(s.LINES, o.edgeIndicesBuf.numItems, o.edgeIndicesBuf.itemType, 0, o.numInstances), a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), this._aOffset && a.vertexAttribDivisorANGLE(this._aOffset.location, 0), this._aFlags && a.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && a.vertexAttribDivisorANGLE(this._aFlags2.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uColor = r.getLocation("color"), this._uRenderPass = r.getLocation("renderPass"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const wp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry picking vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 pickColor;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vPickColor;"), i.push("void main(void) {"), i.push("bool visible   = (float(flags.x) > 0.0);"), i.push("bool pickable  = (float(flags2.z) > 0.0);"), i.push("bool culled    = (float(flags2.w) > 0.0);"), i.push("if ( culled || (!pickInvisible && !visible) || !pickable) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), i.push("  vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"), t && (i.push("  vWorldPosition = worldPosition;"), i.push("  vFlags2 = flags2;"));
            return i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Batched geometry picking fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
            }
            if (r.push("varying vec4 vPickColor;"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("gl_FragColor = vPickColor; "), r.push("}"), r
        }(e)
    };
    const Mp = $c.vec3();
    class Ap {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new wp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e), l = !0);
            const c = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                h = a ? Qc(c, a) : c;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, h), n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPickColor.bindArrayBuffer(s.pickColorsBuf), o.vertexAttribDivisorANGLE(this._aPickColor.location, 1), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), s.indicesBuf.bind(), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Mp);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aPickColor.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aPickColor = r.getAttribute("pickColor"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram(e) {
            const t = this._scene,
                i = t.canvas.gl;
            this._program.bind();
            const r = t.camera;
            i.uniformMatrix4fv(this._uProjMatrix, !1, r._project._state.matrix), i.uniform1i(this._uPickInvisible, e.pickInvisible)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const xp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry depth vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("bool visible   = (float(flags.x) > 0.0);"), i.push("bool pickable  = (float(flags2.z) > 0.0);"), i.push("bool culled    = (float(flags2.w) > 0.0);"), i.push("if (culled || (!pickInvisible && !visible) || !pickable) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("  vWorldPosition = worldPosition;"), i.push("  vFlags2 = flags2;"));
            return i.push("  vViewPosition = viewPosition;"), i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Batched geometry depth fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), r.push("uniform float zNear;"), r.push("uniform float zFar;"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
            }
            if (r.push("varying vec4 vViewPosition;"), r.push("vec4 packDepth(const in float depth) {"), r.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"), r.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"), r.push("  vec4 res = fract(depth * bitShift);"), r.push("  res -= res.xxyz * bitMask;"), r.push("  return res;"), r.push("}"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("    float zNormalizedDepth = abs((zNear + vViewPosition.z) / (zFar - zNear));"), r.push("    gl_FragColor = packDepth(zNormalizedDepth); "), r.push("}"), r
        }(e)
    };
    const Cp = $c.vec3();
    class Pp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new xp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0);
            const c = r.camera.project._state;
            n.uniform1i(this._uPickInvisible, e.pickInvisible);
            const h = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                d = a ? Qc(h, a) : h;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, d), n.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), n.uniform1f(this._uZNear, c.near), n.uniform1f(this._uZFar, c.far), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Cp);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2"), this._uZNear = r.getLocation("zNear"), this._uZFar = r.getLocation("zFar")
        }
        _bindProgram() {
            this._program.bind()
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const kp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry normals vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec2 normal;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("attribute vec4 modelNormalMatrixCol0;"), i.push("attribute vec4 modelNormalMatrixCol1;"), i.push("attribute vec4 modelNormalMatrixCol2;"), i.push("uniform bool pickInvisible;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), i.push("vec3 octDecode(vec2 oct) {"), i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), i.push("    if (v.z < 0.0) {"), i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), i.push("    }"), i.push("    return normalize(v);"), i.push("}"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec3 vWorldNormal;"), i.push("void main(void) {"), i.push("bool visible   = (float(flags.x) > 0.0);"), i.push("bool pickable  = (float(flags2.z) > 0.0);"), i.push("bool culled    = (float(flags2.w) > 0.0);"), i.push("  if (culled || (!pickInvisible && !visible) || !pickable) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), i.push("  vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); "), i.push("  vec3 worldNormal = vec3(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2));"), i.push("  vWorldNormal = worldNormal;"), t && i.push("  vWorldPosition = worldPosition;");
            return i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Batched geometry normals fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
            }
            if (r.push("varying vec3 vWorldNormal;"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);"), r.push("}"), r
        }(e)
    };
    const Ep = $c.vec3();
    class Ip {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new kp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let l = !1;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0), n.uniform1i(this._uPickInvisible, e.pickInvisible);
            const c = e.pickViewMatrix ? i.getPickViewMatrix(e.pickViewMatrix) : i.viewMatrix,
                h = a ? Qc(c, a) : c;
            if (n.uniformMatrix4fv(this._uViewMatrix, !1, h), n.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Ep);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aModelNormalMatrixCol0.bindArrayBuffer(s.modelNormalMatrixCol0Buf), this._aModelNormalMatrixCol1.bindArrayBuffer(s.modelNormalMatrixCol1Buf), this._aModelNormalMatrixCol2.bindArrayBuffer(s.modelNormalMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aNormal.bindArrayBuffer(s.normalsBuf), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPickInvisible = r.getLocation("pickInvisible"), this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uViewNormalMatrix = r.getLocation("viewNormalMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aNormal = r.getAttribute("normal"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2"), this._aModelNormalMatrixCol0 = r.getAttribute("modelNormalMatrixCol0"), this._aModelNormalMatrixCol1 = r.getAttribute("modelNormalMatrixCol1"), this._aModelNormalMatrixCol2 = r.getAttribute("modelNormalMatrixCol2")
        }
        _bindProgram() {
            this._program.bind()
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const Tp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing occlusion vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("bool visible   = (float(flags.x) > 0.0);"), i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"), i.push("bool culled  = (float(flags2.w) > 0.0);"), i.push("if (culled || !visible || transparent) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), t && i.push("  vWorldPosition = worldPosition;");
            return i.push("  vViewPosition = viewPosition;"), i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
            }
            if (r.push("varying vec4 vViewPosition;"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "), r.push("}"), r
        }(e)
    };
    const Dp = $c.vec3();
    class Sp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Tp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let l = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0), n.uniformMatrix4fv(this._uViewMatrix, !1, a ? Qc(i.viewMatrix, a) : i.viewMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Dp);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aColor && (this._aColor.bindArrayBuffer(s.colorsBuf), o.vertexAttribDivisorANGLE(this._aColor.location, 1)), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), this._aColor && o.vertexAttribDivisorANGLE(this._aColor.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const Bp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry depth drawing vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool xrayed       = (float(flags.y) > 0.0);"), i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"), i.push("bool culled  = (float(flags2.w) > 0.0);"), i.push("if ( culled || !visible || transparent || xrayed) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), t && (i.push("vWorldPosition = worldPosition;"), i.push("vFlags2 = flags2;"));
            return i.push("  vViewPosition = viewPosition;"), i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState;
            let i, r;
            const n = t.sectionPlanes.length > 0,
                s = [];
            if (s.push("// Instancing geometry depth drawing fragment shader"), s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), s.push("precision highp float;"), s.push("precision highp int;"), s.push("#else"), s.push("precision mediump float;"), s.push("precision mediump int;"), s.push("#endif"), n)
                for (s.push("varying vec4 vWorldPosition;"), s.push("varying vec4 vFlags2;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("uniform bool sectionPlaneActive" + i + ";"), s.push("uniform vec3 sectionPlanePos" + i + ";"), s.push("uniform vec3 sectionPlaneDir" + i + ";");
            if (s.push("varying vec4 vViewPosition;"), s.push("const float   packUpScale = 256. / 255.;"), s.push("const float   unpackDownscale = 255. / 256.;"), s.push("const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"), s.push("const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );"), s.push("const float   shiftRight8 = 1.0 / 256.;"), s.push("vec4 packDepthToRGBA( const in float v ) {"), s.push("    vec4 r = vec4( fract( v * packFactors ), v );"), s.push("    r.yzw -= r.xyz * shiftRight8;"), s.push("    return r * packUpScale;"), s.push("}"), s.push("void main(void) {"), n) {
                for (s.push("  bool clippable = (float(vFlags2.x) > 0.0);"), s.push("  if (clippable) {"), s.push("  float dist = 0.0;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("if (sectionPlaneActive" + i + ") {"), s.push("   dist += clamp(dot(-sectionPlaneDir" + i + ".xyz, vWorldPosition.xyz - sectionPlanePos" + i + ".xyz), 0.0, 1000.0);"), s.push("}");
                s.push("if (dist > 0.0) { discard; }"), s.push("}")
            }
            return s.push("    gl_FragColor = packDepthToRGBA( gl_FragCoord.z); "), s.push("}"), s
        }(e)
    };
    const jp = $c.vec3();
    class Lp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Bp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(), this.errors)) return;
            let l = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0), n.uniformMatrix4fv(this._uViewMatrix, !1, a ? Qc(i.viewMatrix, a) : i.viewMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, jp);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), this._aColor.bindArrayBuffer(s.colorsBuf), o.vertexAttribDivisorANGLE(this._aColor.location, 1), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aColor.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const Rp = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry depth drawing vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec3 normal;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 viewMatrix;"), i.push("uniform mat4 projMatrix;"), i.push("uniform mat4 viewNormalMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), i.push("vec3 octDecode(vec2 oct) {"), i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), i.push("    if (v.z < 0.0) {"), i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), i.push("    }"), i.push("    return normalize(v);"), i.push("}"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec3 vViewNormal;"), i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool xrayed       = (float(flags.y) > 0.0);"), i.push("bool culled       = (float(flags2.w) > 0.0);"), i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"), i.push("if (culled || !visible || transparent || xrayed) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "), i.push("  vec4 worldNormal    = vec4(octDecode(normal.xy), 0.0); "), i.push("  vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);"), t && (i.push("vWorldPosition = worldPosition;"), i.push("vFlags2 = flags2;"));
            return i.push("  vViewNormal = viewNormal;"), i.push("  gl_Position = projMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState,
                i = t.sectionPlanes.length > 0,
                r = [];
            if (r.push("// Instancing geometry depth drawing fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                r.push("varying vec4 vWorldPosition;"), r.push("varying vec4 vFlags2;");
                for (let e = 0, i = t.sectionPlanes.length; e < i; e++) r.push("uniform bool sectionPlaneActive" + e + ";"), r.push("uniform vec3 sectionPlanePos" + e + ";"), r.push("uniform vec3 sectionPlaneDir" + e + ";")
            }
            if (r.push("varying vec3 vViewNormal;"), r.push("vec3 packNormalToRGB( const in vec3 normal ) {"), r.push("    return normalize( normal ) * 0.5 + 0.5;"), r.push("}"), r.push("void main(void) {"), i) {
                r.push("  bool clippable = (float(vFlags2.x) > 0.0);"), r.push("  if (clippable) {"), r.push("  float dist = 0.0;");
                for (let e = 0, i = t.sectionPlanes.length; e < i; e++) r.push("if (sectionPlaneActive" + e + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + e + ".xyz, vWorldPosition.xyz - sectionPlanePos" + e + ".xyz), 0.0, 1000.0);"), r.push("}");
                r.push("if (dist > 0.0) { discard; }"), r.push("}")
            }
            return r.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "), r.push("}"), r
        }(e)
    };
    const Op = $c.vec3();
    $c.mat4();
    class Fp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._shaderSource = new Rp(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt,
                a = t._state.rtcCenter;
            if (!this._program && (this._allocate(t), this.errors)) return;
            let l = !1;
            if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(), l = !0), n.uniformMatrix4fv(this._uViewMatrix, !1, a ? Qc(i.viewMatrix, a) : i.viewMatrix), n.uniformMatrix4fv(this._uViewNormalMatrix, !1, i.viewNormalMatrix), a ? e.lastRTCCenter && $c.compareVec3(a, e.lastRTCCenter) || (e.lastRTCCenter = a, l = !0) : e.lastRTCCenter && (e.lastRTCCenter = null, l = !0), l) {
                const e = r._sectionPlanesState.sectionPlanes.length;
                if (e > 0) {
                    const s = r._sectionPlanesState.sectionPlanes,
                        o = t.layerIndex * e,
                        l = i.renderFlags;
                    for (let t = 0; t < e; t++) {
                        const e = this._uSectionPlanes[t],
                            i = l.sectionPlanesActivePerLayer[o + t];
                        if (n.uniform1i(e.active, i ? 1 : 0), i) {
                            const i = s[t];
                            if (a) {
                                const t = eh(i.dist, i.dir, a, Op);
                                n.uniform3fv(e.pos, t)
                            } else n.uniform3fv(e.pos, i.pos);
                            n.uniform3fv(e.dir, i.dir)
                        }
                    }
                }
            }
            n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aNormal.bindArrayBuffer(s.normalsBuf), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), this._aColor.bindArrayBuffer(s.colorsBuf), o.vertexAttribDivisorANGLE(this._aColor.location, 1), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1)), s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aColor.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uViewNormalMatrix = r.getLocation("viewNormalMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
            for (var n = 0, s = i.sectionPlanes.length; n < s; n++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + n),
                pos: r.getLocation("sectionPlanePos" + n),
                dir: r.getLocation("sectionPlaneDir" + n)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aNormal = r.getAttribute("normal"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 && (this._aFlags2 = r.getAttribute("flags2")), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram() {
            const e = this._scene,
                t = e.canvas.gl;
            this._program.bind();
            const i = e.camera;
            t.uniformMatrix4fv(this._uProjMatrix, !1, i._project._state.matrix)
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    const Np = function(e) {
        this.vertex = function(e) {
            const t = e._sectionPlanesState.sectionPlanes.length > 0,
                i = [];
            i.push("// Instancing geometry shadow drawing vertex shader"), i.push("attribute vec3 position;"), i.push("attribute vec3 offset;"), i.push("attribute vec4 color;"), i.push("attribute vec4 flags;"), i.push("attribute vec4 flags2;"), i.push("attribute vec4 modelMatrixCol0;"), i.push("attribute vec4 modelMatrixCol1;"), i.push("attribute vec4 modelMatrixCol2;"), i.push("uniform mat4 shadowViewMatrix;"), i.push("uniform mat4 shadowProjMatrix;"), i.push("uniform mat4 positionsDecodeMatrix;"), t && (i.push("varying vec4 vWorldPosition;"), i.push("varying vec4 vFlags2;"));
            i.push("varying vec4 vViewPosition;"), i.push("void main(void) {"), i.push("bool visible      = (float(flags.x) > 0.0);"), i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"), i.push("if (!visible || transparent) {"), i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"), i.push("} else {"), i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "), i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"), i.push("  worldPosition.xyz = worldPosition.xyz + offset;"), i.push("  vec4 viewPosition  = shadowViewMatrix * worldPosition; "), t && (i.push("vWorldPosition = worldPosition;"), i.push("vFlags2 = flags2;"));
            return i.push("  vViewPosition = viewPosition;"), i.push("  gl_Position = shadowProjMatrix * viewPosition;"), i.push("}"), i.push("}"), i
        }(e), this.fragment = function(e) {
            const t = e._sectionPlanesState;
            let i, r;
            const n = t.sectionPlanes.length > 0,
                s = [];
            if (s.push("// Instancing geometry shadow drawing fragment shader"), s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), s.push("precision highp float;"), s.push("precision highp int;"), s.push("#else"), s.push("precision mediump float;"), s.push("precision mediump int;"), s.push("#endif"), n)
                for (s.push("varying vec4 vWorldPosition;"), s.push("varying vec4 vFlags2;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("uniform bool sectionPlaneActive" + i + ";"), s.push("uniform vec3 sectionPlanePos" + i + ";"), s.push("uniform vec3 sectionPlaneDir" + i + ";");
            if (s.push("varying vec4 vViewPosition;"), s.push("vec4 encodeFloat( const in float v ) {"), s.push("  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);"), s.push("  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);"), s.push("  vec4 comp = fract(v * bitShift);"), s.push("  comp -= comp.xxyz * bitMask;"), s.push("  return comp;"), s.push("}"), s.push("void main(void) {"), n) {
                for (s.push("  bool clippable = (float(vFlags2.x) > 0.0);"), s.push("  if (clippable) {"), s.push("  float dist = 0.0;"), i = 0, r = t.sectionPlanes.length; i < r; i++) s.push("if (sectionPlaneActive" + i + ") {"), s.push("   dist += clamp(dot(-sectionPlaneDir" + i + ".xyz, vWorldPosition.xyz - sectionPlanePos" + i + ".xyz), 0.0, 1000.0);"), s.push("}");
                s.push("if (dist > 0.0) { discard; }"), s.push("}")
            }
            return s.push("    gl_FragColor = encodeFloat( gl_FragCoord.z); "), s.push("}"), s
        }(e)
    };
    const Up = $c.vec3();
    class Hp {
        constructor(e) {
            this._scene = e, this._hash = this._getHash(), this._lastLightId = null, this._shaderSource = new Np(this._scene), this._allocate()
        }
        getValid() {
            return this._hash === this._getHash()
        }
        _getHash() {
            return this._scene._sectionPlanesState.getHash()
        }
        drawLayer(e, t) {
            const i = t.model,
                r = i.scene,
                n = r.canvas.gl,
                s = t._state,
                o = this._instanceExt;
            if (!this._program && (this._allocate(), this.errors)) return;
            e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e, t)), n.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, t._state.positionsDecodeMatrix), this._aModelMatrixCol0.bindArrayBuffer(s.modelMatrixCol0Buf), this._aModelMatrixCol1.bindArrayBuffer(s.modelMatrixCol1Buf), this._aModelMatrixCol2.bindArrayBuffer(s.modelMatrixCol2Buf), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1), this._aPosition.bindArrayBuffer(s.positionsBuf), this._aOffset && (this._aOffset.bindArrayBuffer(s.offsetsBuf), o.vertexAttribDivisorANGLE(this._aOffset.location, 1)), this._aColor.bindArrayBuffer(s.colorsBuf), o.vertexAttribDivisorANGLE(this._aColor.location, 1), this._aFlags.bindArrayBuffer(s.flagsBuf), o.vertexAttribDivisorANGLE(this._aFlags.location, 1), this._aFlags2 && (this._aFlags2.bindArrayBuffer(s.flags2Buf), o.vertexAttribDivisorANGLE(this._aFlags2.location, 1));
            const a = r._sectionPlanesState.sectionPlanes.length;
            if (a > 0) {
                const e = r._sectionPlanesState.sectionPlanes,
                    s = t.layerIndex * a,
                    o = i.renderFlags,
                    l = t._state.rtcCenter;
                for (let t = 0; t < a; t++) {
                    const i = this._uSectionPlanes[t],
                        r = o.sectionPlanesActivePerLayer[s + t];
                    if (n.uniform1i(i.active, r ? 1 : 0), r) {
                        const r = e[t];
                        if (l) {
                            const e = eh(r.dist, r.dir, l, Up);
                            n.uniform3fv(i.pos, e)
                        } else n.uniform3fv(i.pos, r.pos);
                        n.uniform3fv(i.dir, r.dir)
                    }
                }
            }
            s.indicesBuf.bind(), o.drawElementsInstancedANGLE(s.primitive, s.indicesBuf.numItems, s.indicesBuf.itemType, 0, s.numInstances), o.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0), o.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0), o.vertexAttribDivisorANGLE(this._aColor.location, 0), o.vertexAttribDivisorANGLE(this._aFlags.location, 0), this._aFlags2 && o.vertexAttribDivisorANGLE(this._aFlags2.location, 0), this._aOffset && o.vertexAttribDivisorANGLE(this._aOffset.location, 0)
        }
        _allocate() {
            const e = this._scene,
                t = e.canvas.gl,
                i = e._sectionPlanesState;
            if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
            this._instanceExt = t.getExtension("ANGLE_instanced_arrays");
            const r = this._program;
            this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uShadowViewMatrix = r.getLocation("shadowViewMatrix"), this._uShadowProjMatrix = r.getLocation("shadowProjMatrix"), this._uSectionPlanes = [];
            for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
                active: r.getLocation("sectionPlaneActive" + e),
                pos: r.getLocation("sectionPlanePos" + e),
                dir: r.getLocation("sectionPlaneDir" + e)
            });
            this._aPosition = r.getAttribute("position"), this._aOffset = r.getAttribute("offset"), this._aColor = r.getAttribute("color"), this._aFlags = r.getAttribute("flags"), this._aFlags2 = r.getAttribute("flags2"), this._aModelMatrixCol0 = r.getAttribute("modelMatrixCol0"), this._aModelMatrixCol1 = r.getAttribute("modelMatrixCol1"), this._aModelMatrixCol2 = r.getAttribute("modelMatrixCol2")
        }
        _bindProgram(e, t) {
            const i = this._scene.canvas.gl;
            this._program.bind(), i.uniformMatrix4fv(this._uShadowViewMatrix, !1, e.shadowViewMatrix), i.uniformMatrix4fv(this._uShadowProjMatrix, !1, e.shadowProjMatrix), this._lastLightId = null
        }
        webglContextRestored() {
            this._program = null
        }
        destroy() {
            this._program && this._program.destroy(), this._program = null
        }
    }
    class Vp {
        constructor(e) {
            this._scene = e
        }
        _compile() {
            this.drawRenderer && !this.drawRenderer.getValid() && (this.drawRenderer.destroy(), this.drawRenderer = null), this.drawRendererWithSAO && !this.drawRendererWithSAO.getValid() && (this.drawRendererWithSAO.destroy(), this.drawRendererWithSAO = null), this.depthRenderer && !this.depthRenderer.getValid() && (this.depthRenderer.destroy(), this.depthRenderer = null), this.normalsRenderer && !this.normalsRenderer.getValid() && (this.normalsRenderer.destroy(), this.normalsRenderer = null), this.fillRenderer && !this.fillRenderer.getValid() && (this.fillRenderer.destroy(), this.fillRenderer = null), this.edgesRenderer && !this.edgesRenderer.getValid() && (this.edgesRenderer.destroy(), this.edgesRenderer = null), this.pickMeshRenderer && !this.pickMeshRenderer.getValid() && (this.pickMeshRenderer.destroy(), this.pickMeshRenderer = null), this.pickDepthRenderer && !this.pickDepthRenderer.getValid() && (this.pickDepthRenderer.destroy(), this.pickDepthRenderer = null), this.pickNormalsRenderer && !this.pickNormalsRenderer.getValid() && (this.pickNormalsRenderer.destroy(), this.pickNormalsRenderer = null), this.occlusionRenderer && !this.occlusionRenderer.getValid() && (this.occlusionRenderer.destroy(), this.occlusionRenderer = null), this.shadowRenderer && !this.shadowRenderer.getValid() && (this.shadowRenderer.destroy(), this.shadowRenderer = null), this._createRenderers()
        }
        _createRenderers() {
            if (this.drawRenderer || (this.drawRenderer = new fp(this._scene)), !this.drawRendererWithSAO) {
                const e = !0;
                this.drawRendererWithSAO = new fp(this._scene, e)
            }
            this.fillRenderer || (this.fillRenderer = new gp(this._scene)), this.edgesRenderer || (this.edgesRenderer = new yp(this._scene)), this.pickMeshRenderer || (this.pickMeshRenderer = new Ap(this._scene)), this.pickDepthRenderer || (this.pickDepthRenderer = new Pp(this._scene)), this.pickNormalsRenderer || (this.pickNormalsRenderer = new Ip(this._scene)), this.occlusionRenderer || (this.occlusionRenderer = new Sp(this._scene)), this.depthRenderer || (this.depthRenderer = new Lp(this._scene)), this.normalsRenderer || (this.normalsRenderer = new Fp(this._scene)), this.shadowRenderer || (this.shadowRenderer = new Hp(this._scene))
        }
        _destroy() {
            this.drawRenderer && this.drawRenderer.destroy(), this.drawRendererWithSAO && this.drawRendererWithSAO.destroy(), this.depthRenderer && this.depthRenderer.destroy(), this.normalsRenderer && this.normalsRenderer.destroy(), this.fillRenderer && this.fillRenderer.destroy(), this.edgesRenderer && this.edgesRenderer.destroy(), this.pickMeshRenderer && this.pickMeshRenderer.destroy(), this.pickDepthRenderer && this.pickDepthRenderer.destroy(), this.pickNormalsRenderer && this.pickNormalsRenderer.destroy(), this.occlusionRenderer && this.occlusionRenderer.destroy(), this.shadowRenderer && this.shadowRenderer.destroy()
        }
    }
    const zp = {};
    const $p = Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint,
        Wp = $p ? 5e6 : 65530,
        qp = new Uint16Array(3 * Wp),
        Gp = new Int8Array(3 * Wp),
        Yp = new Uint8Array(4),
        Zp = $c.vec3(),
        Xp = $c.vec4([0, 0, 0, 1]),
        Kp = $c.vec4([0, 0, 0, 1]),
        Qp = $c.vec4([0, 0, 0, 1]);
    class Jp {
        constructor(e, t) {
            this.layerIndex = t.layerIndex, this._instancingRenderers = function(e) {
                const t = e.id;
                let i = zp[t];
                return i || (i = new Vp(e), zp[t] = i, i._compile(), e.on("compile", () => {
                    i._compile()
                }), e.on("destroyed", () => {
                    delete zp[t], i._destroy()
                })), i
            }(e.scene), this.model = e, this._aabb = $c.collapseAABB3();
            let i, r = t.primitive || "triangles";
            const n = e.scene.canvas.gl;
            switch (r) {
                case "points":
                    i = n.POINTS;
                    break;
                case "lines":
                    i = n.LINES;
                    break;
                case "line-loop":
                    i = n.LINE_LOOP;
                    break;
                case "line-strip":
                    i = n.LINE_STRIP;
                    break;
                case "triangles":
                    i = n.TRIANGLES;
                    break;
                case "triangle-strip":
                    i = n.TRIANGLE_STRIP;
                    break;
                case "triangle-fan":
                    i = n.TRIANGLE_FAN;
                    break;
                default:
                    e.error(`Unsupported value for 'primitive': '${r}' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'.`), i = n.TRIANGLES, r = "triangles"
            }
            const s = {
                    primitiveName: r,
                    primitive: i,
                    positionsDecodeMatrix: $c.mat4(),
                    numInstances: 0,
                    obb: $c.OBB3(),
                    rtcCenter: null
                },
                o = !!t.positionsDecodeMatrix;
            if (t.positions)
                if (o) {
                    let e = !1;
                    s.positionsBuf = new uh(n, n.ARRAY_BUFFER, t.positions, t.positions.length, 3, n.STATIC_DRAW, e), s.positionsDecodeMatrix.set(t.positionsDecodeMatrix);
                    let i = $c.collapseAABB3();
                    $c.expandAABB3Points3(i, t.positions), Kh.decompressAABB(i, s.positionsDecodeMatrix), $c.AABB3ToOBB3(i, s.obb)
                } else {
                    let e = t.positions.length,
                        i = $c.collapseAABB3();
                    $c.expandAABB3Points3(i, t.positions), $c.AABB3ToOBB3(i, s.obb), ef(t.positions, e, i, qp, s.positionsDecodeMatrix);
                    let r = !1;
                    s.positionsBuf = new uh(n, n.ARRAY_BUFFER, qp, e, 3, n.STATIC_DRAW, r)
                } if (t.normals)
                if (o) {
                    const e = !0;
                    s.normalsBuf = new uh(n, n.ARRAY_BUFFER, t.normals, t.normals.length, 3, n.STATIC_DRAW, e)
                } else {
                    const e = function(e, t, i, r) {
                            let n, s, o, a, l;
                            for (let c = 0; c < t; c += 3) o = n = tf(e, c, "floor", "floor"), s = rf(n), a = l = nf(e, c, s), n = tf(e, c, "ceil", "floor"), s = rf(n), a = nf(e, c, s), a > l && (o = n, l = a), n = tf(e, c, "floor", "ceil"), s = rf(n), a = nf(e, c, s), a > l && (o = n, l = a), n = tf(e, c, "ceil", "ceil"), s = rf(n), a = nf(e, c, s), a > l && (o = n, l = a), i[r + c + 0] = o[0], i[r + c + 1] = o[1], i[r + c + 2] = 0;
                            return r += t
                        }(t.normals, t.normals.length, Gp, 0),
                        i = !0;
                    s.normalsBuf = new uh(n, n.ARRAY_BUFFER, Gp, e, 3, n.STATIC_DRAW, i)
                } t.indices && (s.indicesBuf = new uh(n, n.ELEMENT_ARRAY_BUFFER, $p ? new Uint32Array(t.indices) : new Uint16Array(t.indices), t.indices.length, 1, n.STATIC_DRAW));
            let a = t.edgeIndices;
            a || (a = Gh(t.positions, t.indices, null, t.edgeThreshold || 10)), s.edgeIndicesBuf = new uh(n, n.ELEMENT_ARRAY_BUFFER, $p ? new Uint32Array(a) : new Uint16Array(a), a.length, 1, n.STATIC_DRAW), this._state = new xh(s), this._numPortions = 0, this._numVisibleLayerPortions = 0, this._numTransparentLayerPortions = 0, this._numXRayedLayerPortions = 0, this._numHighlightedLayerPortions = 0, this._numSelectedLayerPortions = 0, this._numClippableLayerPortions = 0, this._numEdgesLayerPortions = 0, this._numPickableLayerPortions = 0, this._numCulledLayerPortions = 0, this.numIndices = t.indices ? t.indices.length / 3 : 0, this._flags = [], this._flags2 = [], this._colors = [], this._pickColors = [], this._offsets = [], this._modelMatrixCol0 = [], this._modelMatrixCol1 = [], this._modelMatrixCol2 = [], this._modelNormalMatrixCol0 = [], this._modelNormalMatrixCol1 = [], this._modelNormalMatrixCol2 = [], this._portions = [], t.rtcCenter && (this._state.rtcCenter = $c.vec3(t.rtcCenter)), this._finalized = !1, this.aabb = $c.collapseAABB3()
        }
        createPortion(e, t, i, r, n, s, o) {
            if (this._finalized) throw "Already finalized";
            const a = e & Jd ? 255 : 0,
                l = e & nu ? 255 : 0,
                c = e & su ? 255 : 0,
                h = e & su ? 255 : 0,
                d = e & iu ? 255 : 0,
                u = e & au ? 255 : 0,
                p = e & tu ? 255 : 0,
                f = e & eu ? 255 : 0;
            this._flags.push(a), this._flags.push(l), this._flags.push(c), this._flags.push(h), this._flags2.push(d), this._flags2.push(u), this._flags2.push(p), this._flags2.push(f), a && (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++), l && (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++), c && (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++), h && (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++), d && (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++), u && (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++), p && (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++), f && (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++);
            const _ = t[0],
                m = t[1],
                g = t[2];
            t[3];
            i < 255 && (this._numTransparentLayerPortions++, this.model.numTransparentLayerPortions++), this._colors.push(_), this._colors.push(m), this._colors.push(g), this._colors.push(i), this._offsets.push(0), this._offsets.push(0), this._offsets.push(0), this._modelMatrixCol0.push(r[0]), this._modelMatrixCol0.push(r[4]), this._modelMatrixCol0.push(r[8]), this._modelMatrixCol0.push(r[12]), this._modelMatrixCol1.push(r[1]), this._modelMatrixCol1.push(r[5]), this._modelMatrixCol1.push(r[9]), this._modelMatrixCol1.push(r[13]), this._modelMatrixCol2.push(r[2]), this._modelMatrixCol2.push(r[6]), this._modelMatrixCol2.push(r[10]), this._modelMatrixCol2.push(r[14]);
            let v = $c.transposeMat4(r, $c.mat4()),
                b = $c.inverseMat4(v);
            this._modelNormalMatrixCol0.push(b[0]), this._modelNormalMatrixCol0.push(b[4]), this._modelNormalMatrixCol0.push(b[8]), this._modelNormalMatrixCol0.push(b[12]), this._modelNormalMatrixCol1.push(b[1]), this._modelNormalMatrixCol1.push(b[5]), this._modelNormalMatrixCol1.push(b[9]), this._modelNormalMatrixCol1.push(b[13]), this._modelNormalMatrixCol2.push(b[2]), this._modelNormalMatrixCol2.push(b[6]), this._modelNormalMatrixCol2.push(b[10]), this._modelNormalMatrixCol2.push(b[14]), this._pickColors.push(o[0]), this._pickColors.push(o[1]), this._pickColors.push(o[2]), this._pickColors.push(o[3]), $c.collapseAABB3(s);
            const y = this._state.obb,
                w = y.length;
            for (let e = 0; e < w; e += 4) Xp[0] = y[e + 0], Xp[1] = y[e + 1], Xp[2] = y[e + 2], $c.transformPoint4(r, Xp, Kp), n ? ($c.transformPoint4(n, Kp, Qp), $c.expandAABB3Point3(s, Qp)) : $c.expandAABB3Point3(s, Kp);
            if (this._state.rtcCenter) {
                const e = this._state.rtcCenter;
                s[0] += e[0], s[1] += e[1], s[2] += e[2], s[3] += e[0], s[4] += e[1], s[5] += e[2]
            }
            $c.expandAABB3(this.aabb, s), this._state.numInstances++;
            const M = this._portions.length;
            return this._portions.push({}), this._numPortions++, this.model.numPortions++, M
        }
        finalize() {
            if (this._finalized) throw "Already finalized";
            const e = this.model.scene.canvas.gl;
            if (this._colors.length > 0) {
                const t = !1;
                this._state.colorsBuf = new uh(e, e.ARRAY_BUFFER, new Uint8Array(this._colors), this._colors.length, 4, e.DYNAMIC_DRAW, t), this._colors = []
            }
            if (this._flags.length > 0) {
                const t = !0;
                this._state.flagsBuf = new uh(e, e.ARRAY_BUFFER, new Uint8Array(this._flags), this._flags.length, 4, e.DYNAMIC_DRAW, t), this._state.flags2Buf = new uh(e, e.ARRAY_BUFFER, new Uint8Array(this._flags2), this._flags2.length, 4, e.DYNAMIC_DRAW, t), this._flags = [], this._flags2 = []
            }
            if (this._offsets.length > 0) {
                const t = !1;
                this._state.offsetsBuf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._offsets), this._offsets.length, 3, e.DYNAMIC_DRAW, t), this._offsets = []
            }
            if (this._modelMatrixCol0.length > 0) {
                const t = !1;
                this._state.modelMatrixCol0Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol0), this._modelMatrixCol0.length, 4, e.STATIC_DRAW, t), this._state.modelMatrixCol1Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol1), this._modelMatrixCol1.length, 4, e.STATIC_DRAW, t), this._state.modelMatrixCol2Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol2), this._modelMatrixCol2.length, 4, e.STATIC_DRAW, t), this._modelMatrixCol0 = [], this._modelMatrixCol1 = [], this._modelMatrixCol2 = [], this._state.modelNormalMatrixCol0Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol0), this._modelNormalMatrixCol0.length, 4, e.STATIC_DRAW, t), this._state.modelNormalMatrixCol1Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol1), this._modelNormalMatrixCol1.length, 4, e.STATIC_DRAW, t), this._state.modelNormalMatrixCol2Buf = new uh(e, e.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol2), this._modelNormalMatrixCol2.length, 4, e.STATIC_DRAW, t), this._modelNormalMatrixCol0 = [], this._modelNormalMatrixCol1 = [], this._modelNormalMatrixCol2 = []
            }
            if (this._pickColors.length > 0) {
                const t = !1;
                this._state.pickColorsBuf = new uh(e, e.ARRAY_BUFFER, new Uint8Array(this._pickColors), this._pickColors.length, 4, e.STATIC_DRAW, t), this._pickColors = []
            }
            this._finalized = !0
        }
        initFlags(e, t) {
            t & Jd && (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++), t & su && (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++), t & nu && (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++), t & ou && (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++), t & iu && (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++), t & au && (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++), t & tu && (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++), t & eu && (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++), this._setFlags(e, t), this._setFlags2(e, t)
        }
        setVisible(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & Jd ? (this._numVisibleLayerPortions++, this.model.numVisibleLayerPortions++) : (this._numVisibleLayerPortions--, this.model.numVisibleLayerPortions--), this._setFlags(e, t)
        }
        setHighlighted(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & su ? (this._numHighlightedLayerPortions++, this.model.numHighlightedLayerPortions++) : (this._numHighlightedLayerPortions--, this.model.numHighlightedLayerPortions--), this._setFlags(e, t)
        }
        setXRayed(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & nu ? (this._numXRayedLayerPortions++, this.model.numXRayedLayerPortions++) : (this._numXRayedLayerPortions--, this.model.numXRayedLayerPortions--), this._setFlags(e, t)
        }
        setSelected(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & ou ? (this._numSelectedLayerPortions++, this.model.numSelectedLayerPortions++) : (this._numSelectedLayerPortions--, this.model.numSelectedLayerPortions--), this._setFlags(e, t)
        }
        setEdges(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & au ? (this._numEdgesLayerPortions++, this.model.numEdgesLayerPortions++) : (this._numEdgesLayerPortions--, this.model.numEdgesLayerPortions--), this._setFlags2(e, t)
        }
        setClippable(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & iu ? (this._numClippableLayerPortions++, this.model.numClippableLayerPortions++) : (this._numClippableLayerPortions--, this.model.numClippableLayerPortions--), this._setFlags2(e, t)
        }
        setCollidable(e, t) {
            if (!this._finalized) throw "Not finalized"
        }
        setPickable(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & tu ? (this._numPickableLayerPortions++, this.model.numPickableLayerPortions++) : (this._numPickableLayerPortions--, this.model.numPickableLayerPortions--), this._setFlags2(e, t)
        }
        setCulled(e, t) {
            if (!this._finalized) throw "Not finalized";
            t & eu ? (this._numCulledLayerPortions++, this.model.numCulledLayerPortions++) : (this._numCulledLayerPortions--, this.model.numCulledLayerPortions--), this._setFlags2(e, t)
        }
        setColor(e, t, i = !1) {
            if (!this._finalized) throw "Not finalized";
            if (Yp[0] = t[0], Yp[1] = t[1], Yp[2] = t[2], Yp[3] = t[3], i) {
                t[3] < 255 ? (this._numTransparentLayerPortions++, this.model.numTransparentLayerPortions++) : (this._numTransparentLayerPortions--, this.model.numTransparentLayerPortions--)
            }
            this._state.colorsBuf.setData(Yp, 4 * e, 4)
        }
        _setFlags(e, t) {
            if (!this._finalized) throw "Not finalized";
            const i = t & Jd ? 255 : 0,
                r = t & nu ? 255 : 0,
                n = t & su ? 255 : 0,
                s = t & ou ? 255 : 0;
            Yp[0] = i, Yp[1] = r, Yp[2] = n, Yp[3] = s, this._state.flagsBuf.setData(Yp, 4 * e, 4)
        }
        _setFlags2(e, t) {
            if (!this._finalized) throw "Not finalized";
            const i = t & iu ? 255 : 0,
                r = t & au ? 255 : 0,
                n = t & tu ? 255 : 0,
                s = t & eu ? 255 : 0;
            Yp[0] = i, Yp[1] = r, Yp[2] = n, Yp[3] = s, this._state.flags2Buf.setData(Yp, 4 * e, 4)
        }
        setOffset(e, t) {
            if (!this._finalized) throw "Not finalized";
            Zp[0] = t[0], Zp[1] = t[1], Zp[2] = t[2], this._state.offsetsBuf.setData(Zp, 3 * e, 3)
        }
        drawNormalFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && (e.withSAO ? this._instancingRenderers.drawRendererWithSAO && this._instancingRenderers.drawRendererWithSAO.drawLayer(e, this, uu) : this._instancingRenderers.drawRenderer && this._instancingRenderers.drawRenderer.drawLayer(e, this, uu))
        }
        drawNormalEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numEdgesLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, uu)
        }
        drawNormalFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numTransparentLayerPortions && this._numXRayedLayerPortions !== this._numPortions && this._instancingRenderers.drawRenderer && this._instancingRenderers.drawRenderer.drawLayer(e, this, pu)
        }
        drawNormalTransparentEdges(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numEdgesLayerPortions && 0 !== this._numTransparentLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, pu)
        }
        drawDepth(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && this._instancingRenderers.depthRenderer && this._instancingRenderers.depthRenderer.drawLayer(e, this)
        }
        drawNormals(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._numTransparentLayerPortions !== this._numPortions && this._numXRayedLayerPortions !== this._numPortions && this._instancingRenderers.normalsRenderer && this._instancingRenderers.normalsRenderer.drawLayer(e, this)
        }
        drawXRayedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, _u)
        }
        drawXRayedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, _u)
        }
        drawXRayedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, _u)
        }
        drawXRayedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numXRayedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, _u)
        }
        drawHighlightedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, fu)
        }
        drawHighlightedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numHighlightedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, fu)
        }
        drawSelectedFillOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, mu)
        }
        drawSelectedEdgesOpaque(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, mu)
        }
        drawSelectedFillTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._instancingRenderers.fillRenderer && this._instancingRenderers.fillRenderer.drawLayer(e, this, mu)
        }
        drawSelectedEdgesTransparent(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && 0 !== this._numSelectedLayerPortions && this._instancingRenderers.edgesRenderer && this._instancingRenderers.edgesRenderer.drawLayer(e, this, mu)
        }
        drawPickMesh(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._instancingRenderers.pickMeshRenderer && this._instancingRenderers.pickMeshRenderer.drawLayer(e, this)
        }
        drawPickDepths(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._instancingRenderers.pickDepthRenderer && this._instancingRenderers.pickDepthRenderer.drawLayer(e, this)
        }
        drawPickNormals(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._instancingRenderers.pickNormalsRenderer && this._instancingRenderers.pickNormalsRenderer.drawLayer(e, this)
        }
        drawOcclusion(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._instancingRenderers.occlusionRenderer && this._instancingRenderers.occlusionRenderer.drawLayer(e, this)
        }
        drawShadow(e) {
            this._numCulledLayerPortions !== this._numPortions && 0 !== this._numVisibleLayerPortions && this._instancingRenderers.shadowRenderer && this._instancingRenderers.shadowRenderer.drawLayer(e, this)
        }
        destroy() {
            const e = this._state;
            e.positionsBuf && (e.positionsBuf.destroy(), e.positionsBuf = null), e.normalsBuf && (e.normalsBuf.destroy(), e.normalsBuf = null), e.colorsBuf && (e.colorsBuf.destroy(), e.colorsBuf = null), e.flagsBuf && (e.flagsBuf.destroy(), e.flagsBuf = null), e.flags2Buf && (e.flags2Buf.destroy(), e.flags2Buf = null), e.offsetsBuf && (e.offsetsBuf.destroy(), e.offsetsBuf = null), e.modelMatrixCol0Buf && (e.modelMatrixCol0Buf.destroy(), e.modelMatrixCol0Buf = null), e.modelMatrixCol1Buf && (e.modelMatrixCol1Buf.destroy(), e.modelMatrixCol1Buf = null), e.modelMatrixCol2Buf && (e.modelMatrixCol2Buf.destroy(), e.modelMatrixCol2Buf = null), e.modelNormalMatrixCol0Buf && (e.modelNormalMatrixCol0Buf.destroy(), e.modelNormalMatrixCol0Buf = null), e.modelNormalMatrixCol1Buf && (e.modelNormalMatrixCol1Buf.destroy(), e.modelNormalMatrixCol1Buf = null), e.modelNormalMatrixCol2Buf && (e.modelNormalMatrixCol2Buf.destroy(), e.modelNormalMatrixCol2Buf = null), e.indicesBuf && (e.indicesBuf.destroy(), e.indicessBuf = null), e.edgeIndicesBuf && (e.edgeIndicesBuf.destroy(), e.edgeIndicessBuf = null), e.pickColorsBuf && (e.pickColorsBuf.destroy(), e.pickColorsBuf = null), e.destroy()
        }
    }
    const ef = function() {
        const e = $c.mat4(),
            t = $c.mat4(),
            i = $c.vec3();
        return function(r, n, s, o, a) {
            const l = s[0],
                c = s[1],
                h = s[2],
                d = s[3],
                u = s[4],
                p = s[5],
                f = s[3] - l,
                _ = s[4] - c,
                m = s[5] - h,
                g = d !== l ? 65535 / (d - l) : 0,
                v = u !== c ? 65535 / (u - c) : 0,
                b = p !== h ? 65535 / (p - h) : 0;
            for (let e = 0; e < n; e += 3) o[e + 0] = Math.floor((r[e + 0] - l) * g), o[e + 1] = Math.floor((r[e + 1] - c) * v), o[e + 2] = Math.floor((r[e + 2] - h) * b);
            $c.identityMat4(e), $c.translationMat4v(s, e), $c.identityMat4(t), i[0] = f / 65535, i[1] = _ / 65535, i[2] = m / 65535, $c.scalingMat4v(i, t), $c.mulMat4(e, t, a)
        }
    }();

    function tf(e, t, i, r) {
        let n = e[t] / (Math.abs(e[t]) + Math.abs(e[t + 1]) + Math.abs(e[t + 2])),
            s = e[t + 1] / (Math.abs(e[t]) + Math.abs(e[t + 1]) + Math.abs(e[t + 2]));
        if (e[t + 2] < 0) {
            let e = n,
                t = s;
            e = (1 - Math.abs(s)) * (n >= 0 ? 1 : -1), t = (1 - Math.abs(n)) * (s >= 0 ? 1 : -1), n = e, s = t
        }
        return new Int8Array([Math[i](127.5 * n + (n < 0 ? -1 : 0)), Math[r](127.5 * s + (s < 0 ? -1 : 0))])
    }

    function rf(e) {
        let t = e[0],
            i = e[1];
        t /= t < 0 ? 127 : 128, i /= i < 0 ? 127 : 128;
        const r = 1 - Math.abs(t) - Math.abs(i);
        r < 0 && (t = (1 - Math.abs(i)) * (t >= 0 ? 1 : -1), i = (1 - Math.abs(t)) * (i >= 0 ? 1 : -1));
        const n = Math.sqrt(t * t + i * i + r * r);
        return [t / n, i / n, r / n]
    }

    function nf(e, t, i) {
        return e[t] * i[0] + e[t + 1] * i[1] + e[t + 2] * i[2]
    }
    class sf {
        constructor() {
            this.visibleLayers = [], this.sectionPlanesActivePerLayer = [], this.reset()
        }
        reset() {
            this.culled = !1, this.numLayers = 0, this.numVisibleLayers = 0, this.normalFillOpaque = !1, this.normalEdgesOpaque = !1, this.normalFillTransparent = !1, this.normalEdgesTransparent = !1, this.xrayedFillOpaque = !1, this.xrayedEdgesOpaque = !1, this.xrayedFillTransparent = !1, this.xrayedEdgesTransparent = !1, this.highlightedFillOpaque = !1, this.highlightedEdgesOpaque = !1, this.highlightedFillTransparent = !1, this.highlightedEdgesTransparent = !1, this.selectedFillOpaque = !1, this.selectedEdgesOpaque = !1, this.selectedFillTransparent = !1, this.selectedEdgesTransparent = !1
        }
    }
    const of = Gc.SUPPORTED_EXTENSIONS.ANGLE_instanced_arrays, af = $c.mat4(), lf = $c.vec3([1, 1, 1]), cf = $c.vec3([0, 0, 0]), hf = $c.vec3([0, 0, 0]), df = $c.identityQuaternion();
    class uf extends Wc {
        constructor(e, t = {}) {
            super(e, t), this._aabb = $c.collapseAABB3(), this._aabbDirty = !1, this._layerList = [], this._nodeList = [], this._lastDecodeMatrix = null, this._instancingLayers = {}, this._currentBatchingLayer = null, this._batchingScratchMemory = (this.once("destroyed", () => {
                du._clear()
            }), du), this._meshes = {}, this._nodes = {}, this.renderFlags = new sf, this.numGeometries = 0, this.numPortions = 0, this.numVisibleLayerPortions = 0, this.numTransparentLayerPortions = 0, this.numXRayedLayerPortions = 0, this.numHighlightedLayerPortions = 0, this.numSelectedLayerPortions = 0, this.numEdgesLayerPortions = 0, this.numPickableLayerPortions = 0, this.numClippableLayerPortions = 0, this.numCulledLayerPortions = 0, this.numEntities = 0, this._numTriangles = 0, this._edgeThreshold = t.edgeThreshold || 10, this.visible = t.visible, this.culled = t.culled, this.pickable = t.pickable, this.clippable = t.clippable, this.collidable = t.collidable, this.castsShadow = t.castsShadow, this.receivesShadow = t.receivesShadow, this.xrayed = t.xrayed, this.highlighted = t.highlighted, this.selected = t.selected, this.edges = t.edges, this.colorize = t.colorize, this.opacity = t.opacity, this.backfaces = t.backfaces, this._position = new Float32Array(t.position || [0, 0, 0]), this._rotation = new Float32Array(t.rotation || [0, 0, 0]), this._quaternion = new Float32Array(t.quaternion || [0, 0, 0, 1]), t.rotation && $c.eulerToQuaternion(this._rotation, "XYZ", this._quaternion), this._scale = new Float32Array(t.scale || [1, 1, 1]), this._worldMatrix = $c.mat4(), $c.composeMat4(this._position, this._quaternion, this._scale, this._worldMatrix), this._worldNormalMatrix = $c.mat4(), (t.matrix || t.position || t.rotation || t.scale || t.quaternion) && (this._viewMatrix = $c.mat4(), this._viewNormalMatrix = $c.mat4(), this._viewMatrixDirty = !0, this._worldMatrixNonIdentity = !0), this._opacity = 1, this._colorize = [1, 1, 1], this._saoEnabled = !1 !== t.saoEnabled, this._isModel = t.isModel, this._isModel && this.scene._registerModel(this), this._onCameraViewMatrix = this.scene.camera.on("matrix", () => {
                this._viewMatrixDirty = !0
            })
        }
        get isPerformanceModel() {
            return !0
        }
        get position() {
            return this._position
        }
        get rotation() {
            return this._rotation
        }
        get quaternion() {
            return this._quaternion
        }
        get scale() {
            return this._scale
        }
        get matrix() {
            return this._worldMatrix
        }
        get worldMatrix() {
            return this._worldMatrix
        }
        get worldNormalMatrix() {
            return this._worldNormalMatrix
        }
        get viewMatrix() {
            return this._viewMatrix ? (this._viewMatrixDirty && ($c.mulMat4(this.scene.camera.viewMatrix, this._worldMatrix, this._viewMatrix), $c.inverseMat4(this._viewMatrix, this._viewNormalMatrix), $c.transposeMat4(this._viewNormalMatrix), this._viewMatrixDirty = !1), this._viewMatrix) : this.scene.camera.viewMatrix
        }
        getPickViewMatrix(e) {
            return this._viewMatrix ? this._viewMatrix : e
        }
        get viewNormalMatrix() {
            return this._viewNormalMatrix ? (this._viewMatrixDirty && ($c.mulMat4(this.scene.camera.viewMatrix, this._worldMatrix, this._viewMatrix), $c.inverseMat4(this._viewMatrix, this._viewNormalMatrix), $c.transposeMat4(this._viewNormalMatrix), this._viewMatrixDirty = !1), this._viewNormalMatrix) : this.scene.camera.viewNormalMatrix
        }
        createGeometry(e) {
            if (! of ) return void this.error("WebGL instanced arrays not supported");
            const t = e.id;
            if (null == t) return void this.error("Config missing: id");
            if (this._instancingLayers[t]) return void this.error("Geometry already created: " + t);
            const i = new Jp(this, Ic.apply({
                layerIndex: 0,
                edgeThreshold: this._edgeThreshold
            }, e));
            this._instancingLayers[t] = i, this._layerList.push(i), this.numGeometries++, this._numTriangles += e.indices ? Math.round(e.indices.length / 3) : 0
        }
        createMesh(e) {
            let t = e.id;
            if (null == t) return void this.error("Config missing: id");
            if (this._meshes[t]) return void this.error("PerformanceModel already has a Mesh with this ID: " + t);
            const i = e.geometryId,
                r = void 0 !== i;
            if (r) {
                if (! of ) return void this.error("WebGL instanced arrays not supported");
                if (!this._instancingLayers[i]) return void this.error("Geometry not found: " + i + " - ensure that you create it first with createGeometry()")
            }
            let n, s;
            const o = e.color ? new Uint8Array([Math.floor(255 * e.color[0]), Math.floor(255 * e.color[1]), Math.floor(255 * e.color[2])]) : [255, 255, 255],
                a = void 0 !== e.opacity && null !== e.opacity ? Math.floor(255 * e.opacity) : 255;
            a < 255 && this.numTransparentLayerPortions++;
            const l = new Qd(this, t, o, a),
                c = l.pickId,
                h = new Uint8Array([255 & c, c >> 8 & 255, c >> 16 & 255, c >> 24 & 255]),
                d = $c.collapseAABB3();
            if (r) {
                let t, r = this._worldMatrixNonIdentity ? this._worldMatrix : null;
                if (e.matrix) t = e.matrix;
                else {
                    const i = e.scale || lf,
                        r = e.position || cf,
                        n = e.rotation || hf;
                    $c.eulerToQuaternion(n, "XYZ", df), t = $c.composeMat4(r, df, i, af)
                }
                const c = this._instancingLayers[i];
                n = c, s = c.createPortion(0, o, a, t, r, d, h), $c.expandAABB3(this._aabb, d);
                const u = Math.round(c.numIndices / 3);
                this._numTriangles += u, l.numTriangles = u, l.rtcCenter = c.rtcCenter
            } else {
                let t = e.primitive || "triangles";
                "points" !== t && "lines" !== t && "line-loop" !== t && "line-strip" !== t && "triangles" !== t && "triangle-strip" !== t && "triangle-fan" !== t && (this.error(`Unsupported value for 'primitive': '${t}' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'.`), t = "triangles");
                let i = e.indices,
                    r = e.edgeIndices,
                    c = e.positions;
                if (!c) return this.error("Config missing: positions (no meshIds provided, so expecting geometry arrays instead)"), null;
                let u = e.normals;
                if (!u) return this.error("Config missing: normals (no meshIds provided, so expecting geometry arrays instead)"), null;
                if (!r && !i) return this.error("Config missing: must have one or both of indices and edgeIndices  (no meshIds provided, so expecting geometry arrays instead)"), null;
                let p, f = !1;
                e.rtcCenter && (this._lastRTCCenter ? $c.compareVec3(this._lastRTCCenter, e.rtcCenter) || (f = !0, this._lastRTCCenter.set(e.rtcCenter)) : (f = !0, this._lastRTCCenter = $c.vec3(e.rtcCenter))), e.positionsDecodeMatrix && (this._lastDecodeMatrix ? $c.compareMat4(this._lastDecodeMatrix, e.positionsDecodeMatrix) || (f = !0, this._lastDecodeMatrix.set(e.positionsDecodeMatrix)) : (f = !0, this._lastDecodeMatrix = $c.mat4(e.positionsDecodeMatrix))), f && this._currentBatchingLayer && (this._currentBatchingLayer.finalize(), this._currentBatchingLayer = null), this._currentBatchingLayer && (this._currentBatchingLayer.canCreatePortion(c.length, i.length) || (this._currentBatchingLayer.finalize(), this._currentBatchingLayer = null)), this._currentBatchingLayer || (this._currentBatchingLayer = new op(this, {
                    layerIndex: 0,
                    primitive: "triangles",
                    scratchMemory: this._batchingScratchMemory,
                    positionsDecodeMatrix: e.positionsDecodeMatrix,
                    rtcCenter: e.rtcCenter
                }), this._layerList.push(this._currentBatchingLayer)), n = this._currentBatchingLayer, !r && i && (r = Gh(c, i, null, this._edgeThreshold));
                let _ = this._worldMatrixNonIdentity ? this._worldMatrix : null;
                if (!e.positionsDecodeMatrix)
                    if (e.matrix) p = e.matrix;
                    else {
                        const t = e.scale || lf,
                            i = e.position || cf,
                            r = e.rotation || hf;
                        $c.eulerToQuaternion(r, "XYZ", df), p = $c.composeMat4(i, df, t, af)
                    } s = this._currentBatchingLayer.createPortion(c, u, i, r, 0, o, a, p, _, d, h), $c.expandAABB3(this._aabb, d), this.numGeometries++;
                const m = Math.round(i.length / 3);
                this._numTriangles += m, l.numTriangles = m, l.rtcCenter = e.rtcCenter
            }
            l.parent = null, l._layer = n, l._portionId = s, l.aabb = d, this._meshes[t] = l
        }
        createEntity(e) {
            let t = e.id;
            void 0 === t ? t = $c.createUUID() : this.scene.components[t] && (this.error("Scene already has a Component with this ID: " + t + " - will assign random ID"), t = $c.createUUID());
            const i = e.meshIds;
            if (void 0 === i) return void this.error("Config missing: meshIds");
            let r, n, s, o, a = [];
            for (r = 0, n = i.length; r < n; r++) s = i[r], o = this._meshes[s], o ? o.parent ? this.error("Mesh with ID " + s + " already belongs to object with ID " + o.parent.id + " - ignoring this mesh") : a.push(o) : this.error("Mesh with this ID not found: " + s + " - ignoring this mesh");
            let l, c = 0;
            if (this._visible && !1 !== e.visible && (c |= Jd), this._pickable && !1 !== e.pickable && (c |= tu), this._culled && !1 !== e.culled && (c |= eu), this._clippable && !1 !== e.clippable && (c |= iu), this._collidable && !1 !== e.collidable && (c |= ru), this._edges && !1 !== e.edges && (c |= au), this._xrayed && !1 !== e.xrayed && (c |= nu), this._highlighted && !1 !== e.highlighted && (c |= su), this._selected && !1 !== e.selected && (c |= ou), 1 === a.length) l = a[0].aabb;
            else
                for (l = $c.collapseAABB3(), r = 0, n = a.length; r < n; r++) $c.expandAABB3(l, a[r].aabb);
            const h = new hu(this, e.isObject, t, a, c, l);
            return this._nodeList.push(h), this._nodes[t] = h, this.numEntities++, h
        }
        finalize() {
            this._currentBatchingLayer && (this._currentBatchingLayer.finalize(), this._currentBatchingLayer = null);
            for (const e in this._instancingLayers) this._instancingLayers.hasOwnProperty(e) && this._instancingLayers[e].finalize();
            for (let e = 0, t = this._nodeList.length; e < t; e++) {
                this._nodeList[e]._finalize()
            }
            const e = [];
            for (let t = 0, i = this._layerList.length; t < i; t++) {
                const i = this._layerList[t];
                i instanceof op ? e.push(i) : e.unshift(i)
            }
            for (let t = 0, i = e.length; t < i; t++) {
                const i = e[t];
                this._layerList[t] = i, i.layerIndex = t
            }
            this.glRedraw(), this.scene._aabbDirty = !0
        }
        set backfaces(e) {
            e = !!e, this._backfaces = e, this.glRedraw()
        }
        get backfaces() {
            return this._backfaces
        }
        get entityList() {
            return this._nodeList
        }
        get isEntity() {
            return !0
        }
        get isModel() {
            return this._isModel
        }
        get isObject() {
            return !1
        }
        get aabb() {
            return this._aabbDirty && this._rebuildAABB(), this._aabb
        }
        _rebuildAABB() {
            $c.collapseAABB3(this._aabb);
            for (let e = 0, t = this._nodeList.length; e < t; e++) {
                const t = this._nodeList[e];
                $c.expandAABB3(this._aabb, t.aabb)
            }
            this._aabbDirty = !1
        }
        get numTriangles() {
            return this._numTriangles
        }
        set visible(e) {
            e = !1 !== e, this._visible = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].visible = e;
            this.glRedraw()
        }
        get visible() {
            return this.numVisibleLayerPortions > 0
        }
        set xrayed(e) {
            e = !!e, this._xrayed = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].xrayed = e;
            this.glRedraw()
        }
        get xrayed() {
            return this.numXRayedLayerPortions > 0
        }
        set highlighted(e) {
            e = !!e, this._highlighted = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].highlighted = e;
            this.glRedraw()
        }
        get highlighted() {
            return this.numHighlightedLayerPortions > 0
        }
        set selected(e) {
            e = !!e, this._selected = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].selected = e;
            this.glRedraw()
        }
        get selected() {
            return this.numSelectedLayerPortions > 0
        }
        set edges(e) {
            e = !!e, this._edges = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].edges = e;
            this.glRedraw()
        }
        get edges() {
            return this.numEdgesLayerPortions > 0
        }
        set culled(e) {
            e = !!e, this._culled = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].culled = e;
            this.glRedraw()
        }
        get culled() {
            return this._culled
        }
        set clippable(e) {
            e = !1 !== e, this._clippable = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].clippable = e;
            this.glRedraw()
        }
        get clippable() {
            return this._clippable
        }
        set collidable(e) {
            e = !1 !== e, this._collidable = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].collidable = e
        }
        get collidable() {
            return this._collidable
        }
        set pickable(e) {
            e = !1 !== e, this._pickable = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].pickable = e
        }
        get pickable() {
            return this.numPickableLayerPortions > 0
        }
        set colorize(e) {
            this._colorize = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].colorize = e
        }
        get colorize() {
            return this._colorize
        }
        set opacity(e) {
            this._opacity = e;
            for (let t = 0, i = this._nodeList.length; t < i; t++) this._nodeList[t].opacity = e
        }
        get opacity() {
            return this._opacity
        }
        set castsShadow(e) {
            (e = !1 !== e) !== this._castsShadow && (this._castsShadow = e, this.glRedraw())
        }
        get castsShadow() {
            return this._castsShadow
        }
        set receivesShadow(e) {
            (e = !1 !== e) !== this._receivesShadow && (this._receivesShadow = e, this.glRedraw())
        }
        get receivesShadow() {
            return this._receivesShadow
        }
        get saoEnabled() {
            return this._saoEnabled
        }
        get isDrawable() {
            return !0
        }
        get isStateSortable() {
            return !1
        }
        stateSortCompare(e, t) {}
        rebuildRenderFlags() {
            this.renderFlags.reset(), this._updateRenderFlagsVisibleLayers(), this.renderFlags.numLayers > 0 && 0 === this.renderFlags.numVisibleLayers ? this.renderFlags.culled = !0 : this._updateRenderFlags()
        }
        _updateRenderFlagsVisibleLayers() {
            const e = this.renderFlags;
            e.numLayers = this._layerList.length, e.numVisibleLayers = 0;
            for (let t = 0, i = this._layerList.length; t < i; t++) {
                const i = this._layerList[t];
                this._getActiveSectionPlanesForLayer(i) && (e.visibleLayers[e.numVisibleLayers++] = t)
            }
        }
        _getActiveSectionPlanesForLayer(e) {
            const t = this.renderFlags,
                i = this.scene._sectionPlanesState.sectionPlanes,
                r = i.length,
                n = e.layerIndex * r;
            if (r > 0)
                for (let s = 0; s < r; s++) {
                    const r = i[s];
                    if (r.active) {
                        const i = $c.planeAABB3Intersect(r.dir, r.dist, e.aabb);
                        if (-1 === i) {
                            if (!(e._numClippableLayerPortions < e._numPortions)) return !1;
                            t.sectionPlanesActivePerLayer[n + s] = !0
                        }
                        const o = 0 === i;
                        t.sectionPlanesActivePerLayer[n + s] = o
                    } else t.sectionPlanesActivePerLayer[n + s] = !1
                }
            return !0
        }
        _updateRenderFlags() {
            if (0 === this.numVisibleLayerPortions) return;
            if (this.numCulledLayerPortions === this.numPortions) return;
            const e = this.renderFlags;
            if (e.normalFillOpaque = !0, this.numXRayedLayerPortions > 0) {
                const t = this.scene.xrayMaterial._state;
                t.fill && (t.fillAlpha < 1 ? e.xrayedFillTransparent = !0 : e.xrayedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.xrayedEdgesTransparent = !0 : e.xrayedEdgesOpaque = !0)
            }
            if (this.numEdgesLayerPortions > 0) {
                const t = this.scene.edgeMaterial._state;
                t.edges && (t.alpha < 1 ? e.normalEdgesTransparent = !0 : e.normalEdgesOpaque = !0)
            }
            if (this.numTransparentLayerPortions > 0 && (e.normalFillTransparent = !0), this.numSelectedLayerPortions > 0) {
                const t = this.scene.selectedMaterial._state;
                t.fill && (t.fillAlpha < 1 ? e.selectedFillTransparent = !0 : e.selectedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.selectedEdgesTransparent = !0 : e.selectedEdgesOpaque = !0)
            }
            if (this.numHighlightedLayerPortions > 0) {
                const t = this.scene.highlightMaterial._state;
                t.fill && (t.fillAlpha < 1 ? e.highlightedFillTransparent = !0 : e.highlightedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.highlightedEdgesTransparent = !0 : e.highlightedEdgesOpaque = !0)
            }
        }
        get xrayMaterial() {
            return this.scene.xrayMaterial
        }
        get highlightMaterial() {
            return this.scene.highlightMaterial
        }
        get selectedMaterial() {
            return this.scene.selectedMaterial
        }
        get edgeMaterial() {
            return this.scene.edgeMaterial
        }
        drawNormalFillOpaque(e) {
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawNormalFillOpaque(e)
            }
        }
        drawDepth(e) {
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawDepth(e)
            }
        }
        drawNormals(e) {
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawNormals(e)
            }
        }
        drawNormalEdgesOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawNormalEdgesOpaque(e)
            }
        }
        drawNormalFillTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawNormalFillTransparent(e)
            }
        }
        drawNormalEdgesTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawNormalEdgesTransparent(e)
            }
        }
        drawXRayedFillOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawXRayedFillOpaque(e)
            }
        }
        drawXRayedEdgesOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawXRayedEdgesOpaque(e)
            }
        }
        drawXRayedFillTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawXRayedFillTransparent(e)
            }
        }
        drawXRayedEdgesTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawXRayedEdgesTransparent(e)
            }
        }
        drawHighlightedFillOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawHighlightedFillOpaque(e)
            }
        }
        drawHighlightedEdgesOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawHighlightedEdgesOpaque(e)
            }
        }
        drawHighlightedFillTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawHighlightedFillTransparent(e)
            }
        }
        drawHighlightedEdgesTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawHighlightedEdgesTransparent(e)
            }
        }
        drawSelectedFillOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawSelectedFillOpaque(e)
            }
        }
        drawSelectedEdgesOpaque(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawSelectedEdgesOpaque(e)
            }
        }
        drawSelectedFillTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawSelectedFillTransparent(e)
            }
        }
        drawSelectedEdgesTransparent(e) {
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawSelectedEdgesTransparent(e)
            }
        }
        drawPickMesh(e) {
            if (0 === this.numVisibleLayerPortions) return;
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawPickMesh(e)
            }
        }
        drawPickDepths(e) {
            if (0 === this.numVisibleLayerPortions) return;
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawPickDepths(e)
            }
        }
        drawPickNormals(e) {
            if (0 === this.numVisibleLayerPortions) return;
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawPickNormals(e)
            }
        }
        drawOcclusion(e) {
            if (0 === this.numVisibleLayerPortions) return;
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawOcclusion(e)
            }
        }
        drawShadow(e) {
            if (0 === this.numVisibleLayerPortions) return;
            if (e.backfaces !== this.backfaces) {
                const t = this.scene.canvas.gl;
                this.backfaces ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), e.backfaces = this.backfaces
            }
            const t = this.renderFlags;
            for (let i = 0, r = t.visibleLayers.length; i < r; i++) {
                const r = t.visibleLayers[i];
                this._layerList[r].drawShadow(e)
            }
        }
        destroy() {
            this._currentBatchingLayer && (this._currentBatchingLayer.destroy(), this._currentBatchingLayer = null), this.scene.camera.off(this._onCameraViewMatrix);
            for (let e = 0, t = this._layerList.length; e < t; e++) this._layerList[e].destroy();
            for (let e = 0, t = this._nodeList.length; e < t; e++) this._nodeList[e]._destroy();
            this.scene._aabbDirty = !0, this._isModel && this.scene._deregisterModel(this), super.destroy()
        }
    }
    const pf = new Float32Array(4),
        ff = new Float32Array(4),
        _f = new Float32Array(4),
        mf = new Float32Array([1, 0, 0]),
        gf = new Float32Array([0, 1, 0]),
        vf = new Float32Array([0, 0, 1]),
        bf = new Float32Array(3),
        yf = new Float32Array(3),
        wf = $c.identityMat4();
    class Mf extends Wc {
        constructor(e, t = {}) {
            if (super(e, t), this._parentNode = null, this._children = [], this._aabb = null, this._aabbDirty = !0, this.scene._aabbDirty = !0, this._numTriangles = 0, this._scale = $c.vec3(), this._quaternion = $c.identityQuaternion(), this._rotation = $c.vec3(), this._position = $c.vec3(), this._offset = $c.vec3(), this._localMatrix = $c.identityMat4(), this._worldMatrix = $c.identityMat4(), this._localMatrixDirty = !0, this._worldMatrixDirty = !0, t.matrix ? this.matrix = t.matrix : (this.scale = t.scale, this.position = t.position, t.quaternion || (this.rotation = t.rotation)), this._isModel = t.isModel, this._isModel && this.scene._registerModel(this), this._isObject = t.isObject, this._isObject && this.scene._registerObject(this), this.rtcCenter = t.rtcCenter, this.visible = t.visible, this.culled = t.culled, this.pickable = t.pickable, this.clippable = t.clippable, this.collidable = t.collidable, this.castsShadow = t.castsShadow, this.receivesShadow = t.receivesShadow, this.xrayed = t.xrayed, this.highlighted = t.highlighted, this.selected = t.selected, this.edges = t.edges, this.colorize = t.colorize, this.opacity = t.opacity, this.offset = t.offset, t.children) {
                const e = t.children;
                for (let i = 0, r = e.length; i < r; i++) this.addChild(e[i], t.inheritStates)
            }
            if (t.parentId) {
                const e = this.scene.components[t.parentId];
                e ? e.isNode ? e.addChild(this) : this.error("Parent is not a Node: '" + t.parentId + "'") : this.error("Parent not found: '" + t.parentId + "'")
            } else t.parent && (t.parent.isNode || this.error("Parent is not a Node"), t.parent.addChild(this))
        }
        get isEntity() {
            return !0
        }
        get isModel() {
            return this._isModel
        }
        get isObject() {
            return this._isObject
        }
        get aabb() {
            return this._aabbDirty && this._updateAABB(), this._aabb
        }
        set rtcCenter(e) {
            e ? (this._rtcCenter || (this._rtcCenter = $c.vec3()), this._rtcCenter.set(e)) : this._rtcCenter && (this._rtcCenter = null);
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].rtcCenter = e
        }
        get rtcCenter() {
            return this._rtcCenter
        }
        get numTriangles() {
            return this._numTriangles
        }
        set visible(e) {
            e = !1 !== e, this._visible = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].visible = e;
            this._isObject && this.scene._objectVisibilityUpdated(this, e)
        }
        get visible() {
            return this._visible
        }
        set xrayed(e) {
            e = !!e, this._xrayed = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].xrayed = e;
            this._isObject && this.scene._objectXRayedUpdated(this, e)
        }
        get xrayed() {
            return this._xrayed
        }
        set highlighted(e) {
            e = !!e, this._highlighted = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].highlighted = e;
            this._isObject && this.scene._objectHighlightedUpdated(this, e)
        }
        get highlighted() {
            return this._highlighted
        }
        set selected(e) {
            e = !!e, this._selected = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].selected = e;
            this._isObject && this.scene._objectSelectedUpdated(this, e)
        }
        get selected() {
            return this._selected
        }
        set edges(e) {
            e = !!e, this._edges = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].edges = e
        }
        get edges() {
            return this._edges
        }
        set culled(e) {
            e = !!e, this._culled = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].culled = e
        }
        get culled() {
            return this._culled
        }
        set clippable(e) {
            e = !1 !== e, this._clippable = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].clippable = e
        }
        get clippable() {
            return this._clippable
        }
        set collidable(e) {
            e = !1 !== e, this._collidable = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].collidable = e
        }
        get collidable() {
            return this._collidable
        }
        set pickable(e) {
            e = !1 !== e, this._pickable = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].pickable = e
        }
        get pickable() {
            return this._pickable
        }
        set colorize(e) {
            let t = this._colorize;
            t || (t = this._colorize = new Float32Array(4), t[3] = 1), e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1);
            for (let e = 0, i = this._children.length; e < i; e++) this._children[e].colorize = t;
            if (this._isObject) {
                const t = !!e;
                this.scene._objectColorizeUpdated(this, t)
            }
        }
        get colorize() {
            return this._colorize.slice(0, 3)
        }
        set opacity(e) {
            let t = this._colorize;
            t || (t = this._colorize = new Float32Array(4), t[0] = 1, t[1] = 1, t[2] = 1), t[3] = null != e ? e : 1;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].opacity = e;
            if (this._isObject) {
                const t = null != e;
                this.scene._objectOpacityUpdated(this, t)
            }
        }
        get opacity() {
            return this._colorize[3]
        }
        set castsShadow(e) {
            e = !!e, this._castsShadow = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].castsShadow = e
        }
        get castsShadow() {
            return this._castsShadow
        }
        set receivesShadow(e) {
            e = !!e, this._receivesShadow = e;
            for (let t = 0, i = this._children.length; t < i; t++) this._children[t].receivesShadow = e
        }
        get receivesShadow() {
            return this._receivesShadow
        }
        get saoEnabled() {
            return !1
        }
        set offset(e) {
            e ? (this._offset[0] = e[0], this._offset[1] = e[1], this._offset[2] = e[2]) : (this._offset[0] = 0, this._offset[1] = 0, this._offset[2] = 0);
            for (let e = 0, t = this._children.length; e < t; e++) this._children[e].offset = this._offset;
            this._isObject && this.scene._objectOffsetUpdated(this, e)
        }
        get offset() {
            return this._offset
        }
        get isNode() {
            return !0
        }
        _setLocalMatrixDirty() {
            this._localMatrixDirty = !0, this._setWorldMatrixDirty()
        }
        _setWorldMatrixDirty() {
            this._worldMatrixDirty = !0;
            for (let e = 0, t = this._children.length; e < t; e++) this._children[e]._setWorldMatrixDirty()
        }
        _buildWorldMatrix() {
            const e = this.matrix;
            if (this._parentNode) $c.mulMat4(this._parentNode.worldMatrix, e, this._worldMatrix);
            else
                for (let t = 0, i = e.length; t < i; t++) this._worldMatrix[t] = e[t];
            this._worldMatrixDirty = !1
        }
        _setSubtreeAABBsDirty(e) {
            if (e._aabbDirty = !0, e._children)
                for (let t = 0, i = e._children.length; t < i; t++) this._setSubtreeAABBsDirty(e._children[t])
        }
        _setAABBDirty() {
            if (this._setSubtreeAABBsDirty(this), this.collidable)
                for (let e = this; e; e = e._parentNode) e._aabbDirty = !0
        }
        _updateAABB() {
            if (this.scene._aabbDirty = !0, this._aabb || (this._aabb = $c.AABB3()), this._buildAABB) this._buildAABB(this.worldMatrix, this._aabb);
            else {
                let e;
                $c.collapseAABB3(this._aabb);
                for (let t = 0, i = this._children.length; t < i; t++) e = this._children[t], e.collidable && $c.expandAABB3(this._aabb, e.aabb)
            }
            this._aabbDirty = !1
        }
        addChild(e, t) {
            if (Ic.isNumeric(e) || Ic.isString(e)) {
                const t = e;
                if (!(e = this.scene.component[t])) return void this.warn("Component not found: " + Ic.inQuotes(t));
                if (!e.isNode && !e.isMesh) return void this.error("Not a Node or Mesh: " + t)
            } else {
                if (!e.isNode && !e.isMesh) return void this.error("Not a Node or Mesh: " + e.id);
                if (e._parentNode) {
                    if (e._parentNode.id === this.id) return void this.warn("Already a child: " + e.id);
                    e._parentNode.removeChild(e)
                }
            }
            e.id;
            if (e.scene.id === this.scene.id) return this._children.push(e), e._parentNode = this, t && (e.visible = this.visible, e.culled = this.culled, e.xrayed = this.xrayed, e.highlited = this.highlighted, e.selected = this.selected, e.edges = this.edges, e.clippable = this.clippable, e.pickable = this.pickable, e.collidable = this.collidable, e.castsShadow = this.castsShadow, e.receivesShadow = this.receivesShadow, e.colorize = this.colorize, e.opacity = this.opacity, e.offset = this.offset), e._setWorldMatrixDirty(), e._setAABBDirty(), this._numTriangles += e.numTriangles, e;
            this.error("Child not in same Scene: " + e.id)
        }
        removeChild(e) {
            for (let t = 0, i = this._children.length; t < i; t++)
                if (this._children[t].id === e.id) return e._parentNode = null, this._children = this._children.splice(t, 1), e._setWorldMatrixDirty(), e._setAABBDirty(), this._setAABBDirty(), void(this._numTriangles -= e.numTriangles)
        }
        removeChildren() {
            let e;
            for (let t = 0, i = this._children.length; t < i; t++) e = this._children[t], e._parentNode = null, e._setWorldMatrixDirty(), e._setAABBDirty(), this._numTriangles -= e.numTriangles;
            this._children = [], this._setAABBDirty()
        }
        get numChildren() {
            return this._children.length
        }
        get children() {
            return this._children
        }
        set parent(e) {
            if (Ic.isNumeric(e) || Ic.isString(e)) {
                const t = e;
                if (!(e = this.scene.components[t])) return void this.warn("Node not found: " + Ic.inQuotes(t));
                if (!e.isNode) return void this.error("Not a Node: " + e.id)
            }
            e.scene.id === this.scene.id ? this._parentNode && this._parentNode.id === e.id ? this.warn("Already a child of Node: " + e.id) : e.addChild(this) : this.error("Node not in same Scene: " + e.id)
        }
        get parent() {
            return this._parentNode
        }
        set position(e) {
            this._position.set(e || [0, 0, 0]), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get position() {
            return this._position
        }
        set rotation(e) {
            this._rotation.set(e || [0, 0, 0]), $c.eulerToQuaternion(this._rotation, "XYZ", this._quaternion), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get rotation() {
            return this._rotation
        }
        set quaternion(e) {
            this._quaternion.set(e || [0, 0, 0, 1]), $c.quaternionToEuler(this._quaternion, "XYZ", this._rotation), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get quaternion() {
            return this._quaternion
        }
        set scale(e) {
            this._scale.set(e || [1, 1, 1]), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get scale() {
            return this._scale
        }
        set matrix(e) {
            this._localMatrix || (this._localMatrix = $c.identityMat4()), this._localMatrix.set(e || wf), $c.decomposeMat4(this._localMatrix, this._position, this._quaternion, this._scale), this._localMatrixDirty = !1, this._setWorldMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get matrix() {
            return this._localMatrixDirty && (this._localMatrix || (this._localMatrix = $c.identityMat4()), $c.composeMat4(this._position, this._quaternion, this._scale, this._localMatrix), this._localMatrixDirty = !1), this._localMatrix
        }
        get worldMatrix() {
            return this._worldMatrixDirty && this._buildWorldMatrix(), this._worldMatrix
        }
        rotate(e, t) {
            return pf[0] = e[0], pf[1] = e[1], pf[2] = e[2], pf[3] = t * $c.DEGTORAD, $c.angleAxisToQuaternion(pf, ff), $c.mulQuaternions(this.quaternion, ff, _f), this.quaternion = _f, this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw(), this
        }
        rotateOnWorldAxis(e, t) {
            return pf[0] = e[0], pf[1] = e[1], pf[2] = e[2], pf[3] = t * $c.DEGTORAD, $c.angleAxisToQuaternion(pf, ff), $c.mulQuaternions(ff, this.quaternion, ff), this
        }
        rotateX(e) {
            return this.rotate(mf, e)
        }
        rotateY(e) {
            return this.rotate(gf, e)
        }
        rotateZ(e) {
            return this.rotate(vf, e)
        }
        translate(e, t) {
            return $c.vec3ApplyQuaternion(this.quaternion, e, bf), $c.mulVec3Scalar(bf, t, yf), $c.addVec3(this.position, yf, this.position), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw(), this
        }
        translateX(e) {
            return this.translate(mf, e)
        }
        translateY(e) {
            return this.translate(gf, e)
        }
        translateZ(e) {
            return this.translate(vf, e)
        }
        get type() {
            return "Node"
        }
        destroy() {
            if (super.destroy(), this._parentNode && this._parentNode.removeChild(this), this._isObject && (this.scene._deregisterObject(this), this._visible && this.scene._objectVisibilityUpdated(this, !1), this._xrayed && this.scene._objectXRayedUpdated(this, !1), this._selected && this.scene._objectSelectedUpdated(this, !1), this._highlighted && this.scene._objectHighlightedUpdated(this, !1), this.scene._objectColorizeUpdated(this, !1), this.scene._objectOpacityUpdated(this, !1), this.scene._objectOffsetUpdated(this, !1)), this._isModel && this.scene._deregisterModel(this), this._children.length) {
                const e = this._children.splice();
                let t;
                for (let i = 0, r = e.length; i < r; i++) t = e[i], t.destroy()
            }
            this._children = [], this._setAABBDirty(), this.scene._aabbDirty = !0
        }
    }
    class Af {
        constructor(e, t, i) {
            this.id = i && i.id ? i.id : e, this.viewer = t, this._eventSubs = {}, t.addPlugin(this)
        }
        on(e, t) {
            let i = this._eventSubs[e];
            i || (i = [], this._eventSubs[e] = i), i.push(t)
        }
        fire(e, t) {
            const i = this._eventSubs[e];
            if (i)
                for (let e = 0, r = i.length; e < r; e++) i[e](t)
        }
        log(e) {
            console.log(`[xeokit plugin ${this.id}]: ${e}`)
        }
        warn(e) {
            console.warn(`[xeokit plugin ${this.id}]: ${e}`)
        }
        error(e) {
            console.error(`[xeokit plugin ${this.id}]: ${e}`)
        }
        send(e, t) {}
        destroy() {
            this.viewer.removePlugin(this)
        }
    }
    const xf = function(e) {
            "LambertMaterial" === e._material._state.type ? (this.vertex = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = e.scene._lightsState,
                    r = e._geometry._state,
                    n = e._state.billboard,
                    s = e._state.stationary,
                    o = t.sectionPlanes.length > 0,
                    a = !!r.compressGeometry;
                let l, c, h;
                const d = [];
                d.push("// Lambertian drawing vertex shader"), d.push("attribute vec3 position;"), d.push("uniform mat4 modelMatrix;"), d.push("uniform mat4 viewMatrix;"), d.push("uniform mat4 projMatrix;"), d.push("uniform vec4 colorize;"), d.push("uniform vec3 offset;"), a && d.push("uniform mat4 positionsDecodeMatrix;");
                o && d.push("varying vec4 vWorldPosition;");
                if (d.push("uniform vec4 lightAmbient;"), d.push("uniform vec4 materialColor;"), d.push("uniform vec3 materialEmissive;"), r.normalsBuf) {
                    for (d.push("attribute vec3 normal;"), d.push("uniform mat4 modelNormalMatrix;"), d.push("uniform mat4 viewNormalMatrix;"), l = 0, c = i.lights.length; l < c; l++) h = i.lights[l], "ambient" !== h.type && (d.push("uniform vec4 lightColor" + l + ";"), "dir" === h.type && d.push("uniform vec3 lightDir" + l + ";"), "point" === h.type && d.push("uniform vec3 lightPos" + l + ";"), "spot" === h.type && (d.push("uniform vec3 lightPos" + l + ";"), d.push("uniform vec3 lightDir" + l + ";")));
                    a && (d.push("vec3 octDecode(vec2 oct) {"), d.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), d.push("    if (v.z < 0.0) {"), d.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), d.push("    }"), d.push("    return normalize(v);"), d.push("}"))
                }
                d.push("varying vec4 vColor;"), "points" === r.primitiveName && d.push("uniform float pointSize;");
                "spherical" !== n && "cylindrical" !== n || (d.push("void billboard(inout mat4 mat) {"), d.push("   mat[0][0] = 1.0;"), d.push("   mat[0][1] = 0.0;"), d.push("   mat[0][2] = 0.0;"), "spherical" === n && (d.push("   mat[1][0] = 0.0;"), d.push("   mat[1][1] = 1.0;"), d.push("   mat[1][2] = 0.0;")), d.push("   mat[2][0] = 0.0;"), d.push("   mat[2][1] = 0.0;"), d.push("   mat[2][2] =1.0;"), d.push("}"));
                d.push("void main(void) {"), d.push("vec4 localPosition = vec4(position, 1.0); "), d.push("vec4 worldPosition;"), a && d.push("localPosition = positionsDecodeMatrix * localPosition;");
                r.normalsBuf && (a ? d.push("vec4 localNormal = vec4(octDecode(normal.xy), 0.0); ") : d.push("vec4 localNormal = vec4(normal, 0.0); "), d.push("mat4 modelNormalMatrix2 = modelNormalMatrix;"), d.push("mat4 viewNormalMatrix2 = viewNormalMatrix;"));
                d.push("mat4 viewMatrix2 = viewMatrix;"), d.push("mat4 modelMatrix2 = modelMatrix;"), s && d.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" === n || "cylindrical" === n ? (d.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), d.push("billboard(modelMatrix2);"), d.push("billboard(viewMatrix2);"), d.push("billboard(modelViewMatrix);"), r.normalsBuf && (d.push("mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;"), d.push("billboard(modelNormalMatrix2);"), d.push("billboard(viewNormalMatrix2);"), d.push("billboard(modelViewNormalMatrix);")), d.push("worldPosition = modelMatrix2 * localPosition;"), d.push("worldPosition.xyz = worldPosition.xyz + offset;"), d.push("vec4 viewPosition = modelViewMatrix * localPosition;")) : (d.push("worldPosition = modelMatrix2 * localPosition;"), d.push("worldPosition.xyz = worldPosition.xyz + offset;"), d.push("vec4 viewPosition  = viewMatrix2 * worldPosition; "));
                r.normalsBuf && d.push("vec3 viewNormal = normalize((viewNormalMatrix2 * modelNormalMatrix2 * localNormal).xyz);");
                if (d.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"), d.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"), d.push("float lambertian = 1.0;"), r.normalsBuf)
                    for (l = 0, c = i.lights.length; l < c; l++)
                        if (h = i.lights[l], "ambient" !== h.type) {
                            if ("dir" === h.type) "view" === h.space ? d.push("viewLightDir = normalize(lightDir" + l + ");") : d.push("viewLightDir = normalize((viewMatrix2 * vec4(lightDir" + l + ", 0.0)).xyz);");
                            else if ("point" === h.type) "view" === h.space ? d.push("viewLightDir = normalize(lightPos" + l + " - viewPosition.xyz);") : d.push("viewLightDir = normalize((viewMatrix2 * vec4(lightPos" + l + ", 0.0)).xyz);");
                            else {
                                if ("spot" !== h.type) continue;
                                "view" === h.space ? d.push("viewLightDir = normalize(lightDir" + l + ");") : d.push("viewLightDir = normalize((viewMatrix2 * vec4(lightDir" + l + ", 0.0)).xyz);")
                            }
                            d.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"), d.push("reflectedColor += lambertian * (lightColor" + l + ".rgb * lightColor" + l + ".a);")
                        } d.push("vColor = vec4(materialEmissive.rgb + (reflectedColor * materialColor.rgb), materialColor.a) * colorize;"), o && d.push("vWorldPosition = worldPosition;");
                "points" === r.primitiveName && d.push("gl_PointSize = pointSize;");
                return d.push("   gl_Position = projMatrix * viewPosition;"), d.push("}"), d
            }(e), this.fragment = function(e) {
                const t = e.scene,
                    i = t._sectionPlanesState,
                    r = (e._material._state, e._geometry._state);
                let n, s;
                const o = i.sectionPlanes.length > 0,
                    a = t.gammaOutput,
                    l = [];
                if (l.push("// Lambertian drawing fragment shader"), l.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), l.push("precision highp float;"), l.push("precision highp int;"), l.push("#else"), l.push("precision mediump float;"), l.push("precision mediump int;"), l.push("#endif"), o)
                    for (l.push("varying vec4 vWorldPosition;"), l.push("uniform bool clippable;"), n = 0, s = i.sectionPlanes.length; n < s; n++) l.push("uniform bool sectionPlaneActive" + n + ";"), l.push("uniform vec3 sectionPlanePos" + n + ";"), l.push("uniform vec3 sectionPlaneDir" + n + ";");
                l.push("varying vec4 vColor;"), a && (l.push("uniform float gammaFactor;"), l.push("    vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"), l.push("    return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"), l.push("}"));
                if (l.push("void main(void) {"), o) {
                    for (l.push("if (clippable) {"), l.push("  float dist = 0.0;"), n = 0, s = i.sectionPlanes.length; n < s; n++) l.push("if (sectionPlaneActive" + n + ") {"), l.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), l.push("}");
                    l.push("  if (dist > 0.0) { discard; }"), l.push("}")
                }
                "points" === r.primitiveName && (l.push("vec2 cxy = 2.0 * gl_PointCoord - 1.0;"), l.push("float r = dot(cxy, cxy);"), l.push("if (r > 1.0) {"), l.push("   discard;"), l.push("}"));
                a ? l.push("gl_FragColor = linearToGamma(vColor, gammaFactor);") : l.push("gl_FragColor = vColor;");
                return l.push("}"), l
            }(e)) : (this.vertex = function(e) {
                const t = e.scene,
                    i = e._material,
                    r = e._state,
                    n = t._sectionPlanesState,
                    s = e._geometry._state,
                    o = t._lightsState;
                let a, l, c;
                const h = r.billboard,
                    d = r.stationary,
                    u = function(e) {
                        if (!e._geometry._state.uvBuf) return !1;
                        const t = e._material;
                        return !!(t._ambientMap || t._occlusionMap || t._baseColorMap || t._diffuseMap || t._alphaMap || t._specularMap || t._glossinessMap || t._specularGlossinessMap || t._emissiveMap || t._metallicMap || t._roughnessMap || t._metallicRoughnessMap || t._reflectivityMap || t._normalMap)
                    }(e),
                    p = kf(e),
                    f = n.sectionPlanes.length > 0,
                    _ = Pf(e),
                    m = !!s.compressGeometry,
                    g = [];
                p && i._normalMap && g.push("#extension GL_OES_standard_derivatives : enable");
                g.push("// Drawing vertex shader"), g.push("attribute  vec3 position;"), m && g.push("uniform mat4 positionsDecodeMatrix;");
                g.push("uniform  mat4 modelMatrix;"), g.push("uniform  mat4 viewMatrix;"), g.push("uniform  mat4 projMatrix;"), g.push("varying  vec3 vViewPosition;"), g.push("uniform  vec3 offset;"), f && g.push("varying vec4 vWorldPosition;");
                o.lightMaps.length > 0 && g.push("varying    vec3 vWorldNormal;");
                if (p) {
                    for (g.push("attribute  vec3 normal;"), g.push("uniform    mat4 modelNormalMatrix;"), g.push("uniform    mat4 viewNormalMatrix;"), g.push("varying    vec3 vViewNormal;"), a = 0, l = o.lights.length; a < l; a++) c = o.lights[a], "ambient" !== c.type && ("dir" === c.type && g.push("uniform vec3 lightDir" + a + ";"), "point" === c.type && g.push("uniform vec3 lightPos" + a + ";"), "spot" === c.type && (g.push("uniform vec3 lightPos" + a + ";"), g.push("uniform vec3 lightDir" + a + ";")), "dir" === c.type && "view" === c.space || g.push("varying vec4 vViewLightReverseDirAndDist" + a + ";"));
                    m && (g.push("vec3 octDecode(vec2 oct) {"), g.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), g.push("    if (v.z < 0.0) {"), g.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), g.push("    }"), g.push("    return normalize(v);"), g.push("}"))
                }
                u && (g.push("attribute vec2 uv;"), g.push("varying vec2 vUV;"), m && g.push("uniform mat3 uvDecodeMatrix;"));
                s.colors && (g.push("attribute vec4 color;"), g.push("varying vec4 vColor;"));
                "points" === s.primitiveName && g.push("uniform float pointSize;");
                "spherical" !== h && "cylindrical" !== h || (g.push("void billboard(inout mat4 mat) {"), g.push("   mat[0][0] = 1.0;"), g.push("   mat[0][1] = 0.0;"), g.push("   mat[0][2] = 0.0;"), "spherical" === h && (g.push("   mat[1][0] = 0.0;"), g.push("   mat[1][1] = 1.0;"), g.push("   mat[1][2] = 0.0;")), g.push("   mat[2][0] = 0.0;"), g.push("   mat[2][1] = 0.0;"), g.push("   mat[2][2] =1.0;"), g.push("}"));
                if (_)
                    for (g.push("const mat4 texUnitConverter = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);"), a = 0, l = o.lights.length; a < l; a++) o.lights[a].castsShadow && (g.push("uniform mat4 shadowViewMatrix" + a + ";"), g.push("uniform mat4 shadowProjMatrix" + a + ";"), g.push("varying vec4 vShadowPosFromLight" + a + ";"));
                g.push("void main(void) {"), g.push("vec4 localPosition = vec4(position, 1.0); "), g.push("vec4 worldPosition;"), m && g.push("localPosition = positionsDecodeMatrix * localPosition;");
                p && (m ? g.push("vec4 localNormal = vec4(octDecode(normal.xy), 0.0); ") : g.push("vec4 localNormal = vec4(normal, 0.0); "), g.push("mat4 modelNormalMatrix2    = modelNormalMatrix;"), g.push("mat4 viewNormalMatrix2     = viewNormalMatrix;"));
                g.push("mat4 viewMatrix2           = viewMatrix;"), g.push("mat4 modelMatrix2          = modelMatrix;"), d && g.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" === h || "cylindrical" === h ? (g.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), g.push("billboard(modelMatrix2);"), g.push("billboard(viewMatrix2);"), g.push("billboard(modelViewMatrix);"), p && (g.push("mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;"), g.push("billboard(modelNormalMatrix2);"), g.push("billboard(viewNormalMatrix2);"), g.push("billboard(modelViewNormalMatrix);")), g.push("worldPosition = modelMatrix2 * localPosition;"), g.push("worldPosition.xyz = worldPosition.xyz + offset;"), g.push("vec4 viewPosition = modelViewMatrix * localPosition;")) : (g.push("worldPosition = modelMatrix2 * localPosition;"), g.push("worldPosition.xyz = worldPosition.xyz + offset;"), g.push("vec4 viewPosition  = viewMatrix2 * worldPosition; "));
                if (p)
                    for (g.push("vec3 worldNormal = (modelNormalMatrix2 * localNormal).xyz; "), o.lightMaps.length > 0 && g.push("vWorldNormal = worldNormal;"), g.push("vViewNormal = normalize((viewNormalMatrix2 * vec4(worldNormal, 1.0)).xyz);"), g.push("vec3 tmpVec3;"), g.push("float lightDist;"), a = 0, l = o.lights.length; a < l; a++) c = o.lights[a], "ambient" !== c.type && ("dir" === c.type && "world" === c.space && (g.push("tmpVec3 = vec3(viewMatrix2 * vec4(lightDir" + a + ", 0.0) ).xyz;"), g.push("vViewLightReverseDirAndDist" + a + " = vec4(-tmpVec3, 0.0);")), "point" === c.type && ("world" === c.space ? (g.push("tmpVec3 = (viewMatrix2 * vec4(lightPos" + a + ", 1.0)).xyz - viewPosition.xyz;"), g.push("lightDist = abs(length(tmpVec3));")) : (g.push("tmpVec3 = lightPos" + a + ".xyz - viewPosition.xyz;"), g.push("lightDist = abs(length(tmpVec3));")), g.push("vViewLightReverseDirAndDist" + a + " = vec4(tmpVec3, lightDist);")));
                u && (m ? g.push("vUV = (uvDecodeMatrix * vec3(uv, 1.0)).xy;") : g.push("vUV = uv;"));
                s.colors && g.push("vColor = color;");
                "points" === s.primitiveName && g.push("gl_PointSize = pointSize;");
                f && g.push("vWorldPosition = worldPosition;");
                if (g.push("   vViewPosition = viewPosition.xyz;"), g.push("   gl_Position = projMatrix * viewPosition;"), g.push("const mat4 texUnitConverter = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);"), _)
                    for (g.push("vec4 tempx; "), a = 0, l = o.lights.length; a < l; a++) o.lights[a].castsShadow && g.push("vShadowPosFromLight" + a + " = texUnitConverter * shadowProjMatrix" + a + " * (shadowViewMatrix" + a + " * worldPosition); ");
                return g.push("}"), g
            }(e), this.fragment = function(e) {
                const t = e.scene,
                    i = t.canvas.gl,
                    r = e._material,
                    n = e._geometry._state,
                    s = e.scene._sectionPlanesState,
                    o = e.scene._lightsState,
                    a = e._material._state,
                    l = s.sectionPlanes.length > 0,
                    c = kf(e),
                    h = n.uvBuf,
                    d = "PhongMaterial" === a.type,
                    u = "MetallicMaterial" === a.type,
                    p = "SpecularMaterial" === a.type,
                    f = Pf(e),
                    _ = (t.gammaInput, t.gammaOutput);
                let m, g;
                const v = [];
                v.push("// Drawing fragment shader"), c && r._normalMap && v.push("#extension GL_OES_standard_derivatives : enable");
                v.push("precision " + function(e) {
                    if (!e.getShaderPrecisionFormat) return "mediump";
                    if (e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0) return "highp";
                    if (e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0) return "mediump";
                    return "lowp"
                }(i) + " float;"), f && (v.push("float unpackDepth (vec4 color) {"), v.push("  const vec4 bitShift = vec4(1.0, 1.0/256.0, 1.0/(256.0 * 256.0), 1.0/(256.0*256.0*256.0));"), v.push("  return dot(color, bitShift);"), v.push("}"));
                v.push("uniform float gammaFactor;"), v.push("vec4 linearToLinear( in vec4 value ) {"), v.push("  return value;"), v.push("}"), v.push("vec4 sRGBToLinear( in vec4 value ) {"), v.push("  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );"), v.push("}"), v.push("vec4 gammaToLinear( in vec4 value) {"), v.push("  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );"), v.push("}"), _ && (v.push("vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"), v.push("  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"), v.push("}"));
                if (l) {
                    v.push("varying vec4 vWorldPosition;"), v.push("uniform bool clippable;");
                    for (var b = 0; b < s.sectionPlanes.length; b++) v.push("uniform bool sectionPlaneActive" + b + ";"), v.push("uniform vec3 sectionPlanePos" + b + ";"), v.push("uniform vec3 sectionPlaneDir" + b + ";")
                }
                c && (o.lightMaps.length > 0 && (v.push("uniform samplerCube lightMap;"), v.push("uniform mat4 viewNormalMatrix;")), o.reflectionMaps.length > 0 && v.push("uniform samplerCube reflectionMap;"), (o.lightMaps.length > 0 || o.reflectionMaps.length > 0) && v.push("uniform mat4 viewMatrix;"), v.push("#define PI 3.14159265359"), v.push("#define RECIPROCAL_PI 0.31830988618"), v.push("#define RECIPROCAL_PI2 0.15915494"), v.push("#define EPSILON 1e-6"), v.push("#define saturate(a) clamp( a, 0.0, 1.0 )"), v.push("vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {"), v.push("   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );"), v.push("}"), v.push("struct IncidentLight {"), v.push("   vec3 color;"), v.push("   vec3 direction;"), v.push("};"), v.push("struct ReflectedLight {"), v.push("   vec3 diffuse;"), v.push("   vec3 specular;"), v.push("};"), v.push("struct Geometry {"), v.push("   vec3 position;"), v.push("   vec3 viewNormal;"), v.push("   vec3 worldNormal;"), v.push("   vec3 viewEyeDir;"), v.push("};"), v.push("struct Material {"), v.push("   vec3    diffuseColor;"), v.push("   float   specularRoughness;"), v.push("   vec3    specularColor;"), v.push("   float   shine;"), v.push("};"), d && ((o.lightMaps.length > 0 || o.reflectionMaps.length > 0) && (v.push("void computePhongLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"), o.lightMaps.length > 0 && (v.push("   vec3 irradiance = " + Cf[o.lightMaps[0].encoding] + "(textureCube(lightMap, geometry.worldNormal)).rgb;"), v.push("   irradiance *= PI;"), v.push("   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);"), v.push("   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;")), o.reflectionMaps.length > 0 && (v.push("   vec3 reflectVec             = reflect(-geometry.viewEyeDir, geometry.viewNormal);"), v.push("   vec3 radiance               = textureCube(reflectionMap, reflectVec).rgb * 0.2;"), v.push("   reflectedLight.specular     += radiance;")), v.push("}")), v.push("void computePhongLighting(const in IncidentLight directLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"), v.push("   float dotNL     = saturate(dot(geometry.viewNormal, directLight.direction));"), v.push("   vec3 irradiance = dotNL * directLight.color * PI;"), v.push("   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);"), v.push("   reflectedLight.specular += directLight.color * material.specularColor * pow(max(dot(reflect(-directLight.direction, -geometry.viewNormal), geometry.viewEyeDir), 0.0), material.shine);"), v.push("}")), (u || p) && (v.push("float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {"), v.push("   float r = ggxRoughness + 0.0001;"), v.push("   return (2.0 / (r * r) - 2.0);"), v.push("}"), v.push("float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {"), v.push("   float maxMIPLevelScalar = float( maxMIPLevel );"), v.push("   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );"), v.push("   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );"), v.push("}"), o.reflectionMaps.length > 0 && (v.push("vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {"), v.push("   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);"), v.push("   vec3 envMapColor = " + Cf[o.reflectionMaps[0].encoding] + "(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;"), v.push("  return envMapColor;"), v.push("}")), v.push("vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {"), v.push("   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );"), v.push("   return ( 1.0 - specularColor ) * fresnel + specularColor;"), v.push("}"), v.push("float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {"), v.push("   float a2 = ( alpha * alpha );"), v.push("   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"), v.push("   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"), v.push("   return 1.0 / ( gl * gv );"), v.push("}"), v.push("float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {"), v.push("   float a2 = ( alpha * alpha );"), v.push("   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"), v.push("   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"), v.push("   return 0.5 / max( gv + gl, EPSILON );"), v.push("}"), v.push("float D_GGX(const in float alpha, const in float dotNH) {"), v.push("   float a2 = ( alpha * alpha );"), v.push("   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;"), v.push("   return RECIPROCAL_PI * a2 / ( denom * denom);"), v.push("}"), v.push("vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"), v.push("   float alpha = ( roughness * roughness );"), v.push("   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );"), v.push("   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );"), v.push("   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );"), v.push("   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );"), v.push("   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );"), v.push("   vec3  F = F_Schlick( specularColor, dotLH );"), v.push("   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );"), v.push("   float D = D_GGX( alpha, dotNH );"), v.push("   return F * (G * D);"), v.push("}"), v.push("vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"), v.push("   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));"), v.push("   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);"), v.push("   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);"), v.push("   vec4 r = roughness * c0 + c1;"), v.push("   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;"), v.push("   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;"), v.push("   return specularColor * AB.x + AB.y;"), v.push("}"), (o.lightMaps.length > 0 || o.reflectionMaps.length > 0) && (v.push("void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"), o.lightMaps.length > 0 && (v.push("   vec3 irradiance = sRGBToLinear(textureCube(lightMap, geometry.worldNormal)).rgb;"), v.push("   irradiance *= PI;"), v.push("   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);"), v.push("   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;")), o.reflectionMaps.length > 0 && (v.push("   vec3 reflectVec             = reflect(-geometry.viewEyeDir, geometry.viewNormal);"), v.push("   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);"), v.push("   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);"), v.push("   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);"), v.push("   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);"), v.push("   reflectedLight.specular     += radiance * specularBRDFContrib;")), v.push("}")), v.push("void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"), v.push("   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));"), v.push("   vec3 irradiance = dotNL * incidentLight.color * PI;"), v.push("   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);"), v.push("   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);"), v.push("}")));
                v.push("varying vec3 vViewPosition;"), n.colors && v.push("varying vec4 vColor;");
                h && (c && r._normalMap || r._ambientMap || r._baseColorMap || r._diffuseMap || r._emissiveMap || r._metallicMap || r._roughnessMap || r._metallicRoughnessMap || r._specularMap || r._glossinessMap || r._specularGlossinessMap || r._occlusionMap || r._alphaMap) && v.push("varying vec2 vUV;");
                c && (o.lightMaps.length > 0 && v.push("varying vec3 vWorldNormal;"), v.push("varying vec3 vViewNormal;"));
                a.ambient && v.push("uniform vec3 materialAmbient;");
                a.baseColor && v.push("uniform vec3 materialBaseColor;");
                void 0 !== a.alpha && null !== a.alpha && v.push("uniform vec4 materialAlphaModeCutoff;");
                a.emissive && v.push("uniform vec3 materialEmissive;");
                a.diffuse && v.push("uniform vec3 materialDiffuse;");
                void 0 !== a.glossiness && null !== a.glossiness && v.push("uniform float materialGlossiness;");
                void 0 !== a.shininess && null !== a.shininess && v.push("uniform float materialShininess;");
                a.specular && v.push("uniform vec3 materialSpecular;");
                void 0 !== a.metallic && null !== a.metallic && v.push("uniform float materialMetallic;");
                void 0 !== a.roughness && null !== a.roughness && v.push("uniform float materialRoughness;");
                void 0 !== a.specularF0 && null !== a.specularF0 && v.push("uniform float materialSpecularF0;");
                h && r._ambientMap && (v.push("uniform sampler2D ambientMap;"), r._ambientMap._state.matrix && v.push("uniform mat4 ambientMapMatrix;"));
                h && r._baseColorMap && (v.push("uniform sampler2D baseColorMap;"), r._baseColorMap._state.matrix && v.push("uniform mat4 baseColorMapMatrix;"));
                h && r._diffuseMap && (v.push("uniform sampler2D diffuseMap;"), r._diffuseMap._state.matrix && v.push("uniform mat4 diffuseMapMatrix;"));
                h && r._emissiveMap && (v.push("uniform sampler2D emissiveMap;"), r._emissiveMap._state.matrix && v.push("uniform mat4 emissiveMapMatrix;"));
                c && h && r._metallicMap && (v.push("uniform sampler2D metallicMap;"), r._metallicMap._state.matrix && v.push("uniform mat4 metallicMapMatrix;"));
                c && h && r._roughnessMap && (v.push("uniform sampler2D roughnessMap;"), r._roughnessMap._state.matrix && v.push("uniform mat4 roughnessMapMatrix;"));
                c && h && r._metallicRoughnessMap && (v.push("uniform sampler2D metallicRoughnessMap;"), r._metallicRoughnessMap._state.matrix && v.push("uniform mat4 metallicRoughnessMapMatrix;"));
                c && r._normalMap && (v.push("uniform sampler2D normalMap;"), r._normalMap._state.matrix && v.push("uniform mat4 normalMapMatrix;"), v.push("vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {"), v.push("      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );"), v.push("      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );"), v.push("      vec2 st0 = dFdx( uv.st );"), v.push("      vec2 st1 = dFdy( uv.st );"), v.push("      vec3 S = normalize( q0 * st1.t - q1 * st0.t );"), v.push("      vec3 T = normalize( -q0 * st1.s + q1 * st0.s );"), v.push("      vec3 N = normalize( surf_norm );"), v.push("      vec3 mapN = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;"), v.push("      mat3 tsn = mat3( S, T, N );"), v.push("      return normalize( tsn * mapN );"), v.push("}"));
                h && r._occlusionMap && (v.push("uniform sampler2D occlusionMap;"), r._occlusionMap._state.matrix && v.push("uniform mat4 occlusionMapMatrix;"));
                h && r._alphaMap && (v.push("uniform sampler2D alphaMap;"), r._alphaMap._state.matrix && v.push("uniform mat4 alphaMapMatrix;"));
                c && h && r._specularMap && (v.push("uniform sampler2D specularMap;"), r._specularMap._state.matrix && v.push("uniform mat4 specularMapMatrix;"));
                c && h && r._glossinessMap && (v.push("uniform sampler2D glossinessMap;"), r._glossinessMap._state.matrix && v.push("uniform mat4 glossinessMapMatrix;"));
                c && h && r._specularGlossinessMap && (v.push("uniform sampler2D materialSpecularGlossinessMap;"), r._specularGlossinessMap._state.matrix && v.push("uniform mat4 materialSpecularGlossinessMapMatrix;"));
                c && (r._diffuseFresnel || r._specularFresnel || r._alphaFresnel || r._emissiveFresnel || r._reflectivityFresnel) && (v.push("float fresnel(vec3 eyeDir, vec3 normal, float edgeBias, float centerBias, float power) {"), v.push("    float fr = abs(dot(eyeDir, normal));"), v.push("    float finalFr = clamp((fr - edgeBias) / (centerBias - edgeBias), 0.0, 1.0);"), v.push("    return pow(finalFr, power);"), v.push("}"), r._diffuseFresnel && (v.push("uniform float  diffuseFresnelCenterBias;"), v.push("uniform float  diffuseFresnelEdgeBias;"), v.push("uniform float  diffuseFresnelPower;"), v.push("uniform vec3   diffuseFresnelCenterColor;"), v.push("uniform vec3   diffuseFresnelEdgeColor;")), r._specularFresnel && (v.push("uniform float  specularFresnelCenterBias;"), v.push("uniform float  specularFresnelEdgeBias;"), v.push("uniform float  specularFresnelPower;"), v.push("uniform vec3   specularFresnelCenterColor;"), v.push("uniform vec3   specularFresnelEdgeColor;")), r._alphaFresnel && (v.push("uniform float  alphaFresnelCenterBias;"), v.push("uniform float  alphaFresnelEdgeBias;"), v.push("uniform float  alphaFresnelPower;"), v.push("uniform vec3   alphaFresnelCenterColor;"), v.push("uniform vec3   alphaFresnelEdgeColor;")), r._reflectivityFresnel && (v.push("uniform float  materialSpecularF0FresnelCenterBias;"), v.push("uniform float  materialSpecularF0FresnelEdgeBias;"), v.push("uniform float  materialSpecularF0FresnelPower;"), v.push("uniform vec3   materialSpecularF0FresnelCenterColor;"), v.push("uniform vec3   materialSpecularF0FresnelEdgeColor;")), r._emissiveFresnel && (v.push("uniform float  emissiveFresnelCenterBias;"), v.push("uniform float  emissiveFresnelEdgeBias;"), v.push("uniform float  emissiveFresnelPower;"), v.push("uniform vec3   emissiveFresnelCenterColor;"), v.push("uniform vec3   emissiveFresnelEdgeColor;")));
                if (v.push("uniform vec4   lightAmbient;"), c)
                    for (b = 0, m = o.lights.length; b < m; b++) g = o.lights[b], "ambient" !== g.type && (v.push("uniform vec4 lightColor" + b + ";"), "point" === g.type && v.push("uniform vec3 lightAttenuation" + b + ";"), "dir" === g.type && "view" === g.space && v.push("uniform vec3 lightDir" + b + ";"), "point" === g.type && "view" === g.space ? v.push("uniform vec3 lightPos" + b + ";") : v.push("varying vec4 vViewLightReverseDirAndDist" + b + ";"));
                if (f)
                    for (b = 0, m = o.lights.length; b < m; b++) o.lights[b].castsShadow && (v.push("varying vec4 vShadowPosFromLight" + b + ";"), v.push("uniform sampler2D shadowMap" + b + ";"));
                if (v.push("uniform vec4 colorize;"), v.push("void main(void) {"), l) {
                    v.push("if (clippable) {"), v.push("  float dist = 0.0;");
                    for (b = 0; b < s.sectionPlanes.length; b++) v.push("if (sectionPlaneActive" + b + ") {"), v.push("   dist += clamp(dot(-sectionPlaneDir" + b + ".xyz, vWorldPosition.xyz - sectionPlanePos" + b + ".xyz), 0.0, 1000.0);"), v.push("}");
                    v.push("  if (dist > 0.0) { discard; }"), v.push("}")
                }
                "points" === n.primitiveName && (v.push("vec2 cxy = 2.0 * gl_PointCoord - 1.0;"), v.push("float r = dot(cxy, cxy);"), v.push("if (r > 1.0) {"), v.push("   discard;"), v.push("}"));
                v.push("float occlusion = 1.0;"), a.ambient ? v.push("vec3 ambientColor = materialAmbient;") : v.push("vec3 ambientColor = vec3(1.0, 1.0, 1.0);");
                a.diffuse ? v.push("vec3 diffuseColor = materialDiffuse;") : a.baseColor ? v.push("vec3 diffuseColor = materialBaseColor;") : v.push("vec3 diffuseColor = vec3(1.0, 1.0, 1.0);");
                n.colors && v.push("diffuseColor *= vColor.rgb;");
                a.emissive ? v.push("vec3 emissiveColor = materialEmissive;") : v.push("vec3  emissiveColor = vec3(0.0, 0.0, 0.0);");
                a.specular ? v.push("vec3 specular = materialSpecular;") : v.push("vec3 specular = vec3(1.0, 1.0, 1.0);");
                void 0 !== a.alpha ? v.push("float alpha = materialAlphaModeCutoff[0];") : v.push("float alpha = 1.0;");
                n.colors && v.push("alpha *= vColor.a;");
                void 0 !== a.glossiness ? v.push("float glossiness = materialGlossiness;") : v.push("float glossiness = 1.0;");
                void 0 !== a.metallic ? v.push("float metallic = materialMetallic;") : v.push("float metallic = 1.0;");
                void 0 !== a.roughness ? v.push("float roughness = materialRoughness;") : v.push("float roughness = 1.0;");
                void 0 !== a.specularF0 ? v.push("float specularF0 = materialSpecularF0;") : v.push("float specularF0 = 1.0;");
                h && (c && r._normalMap || r._ambientMap || r._baseColorMap || r._diffuseMap || r._occlusionMap || r._emissiveMap || r._metallicMap || r._roughnessMap || r._metallicRoughnessMap || r._specularMap || r._glossinessMap || r._specularGlossinessMap || r._alphaMap) && (v.push("vec4 texturePos = vec4(vUV.s, vUV.t, 1.0, 1.0);"), v.push("vec2 textureCoord;"));
                h && r._ambientMap && (r._ambientMap._state.matrix ? v.push("textureCoord = (ambientMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec4 ambientTexel = texture2D(ambientMap, textureCoord).rgb;"), v.push("ambientTexel = " + Cf[r._ambientMap._state.encoding] + "(ambientTexel);"), v.push("ambientColor *= ambientTexel.rgb;"));
                h && r._diffuseMap && (r._diffuseMap._state.matrix ? v.push("textureCoord = (diffuseMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec4 diffuseTexel = texture2D(diffuseMap, textureCoord);"), v.push("diffuseTexel = " + Cf[r._diffuseMap._state.encoding] + "(diffuseTexel);"), v.push("diffuseColor *= diffuseTexel.rgb;"), v.push("alpha *= diffuseTexel.a;"));
                h && r._baseColorMap && (r._baseColorMap._state.matrix ? v.push("textureCoord = (baseColorMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec4 baseColorTexel = texture2D(baseColorMap, textureCoord);"), v.push("baseColorTexel = " + Cf[r._baseColorMap._state.encoding] + "(baseColorTexel);"), v.push("diffuseColor *= baseColorTexel.rgb;"), v.push("alpha *= baseColorTexel.a;"));
                h && r._emissiveMap && (r._emissiveMap._state.matrix ? v.push("textureCoord = (emissiveMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec4 emissiveTexel = texture2D(emissiveMap, textureCoord);"), v.push("emissiveTexel = " + Cf[r._emissiveMap._state.encoding] + "(emissiveTexel);"), v.push("emissiveColor = emissiveTexel.rgb;"));
                h && r._alphaMap && (r._alphaMap._state.matrix ? v.push("textureCoord = (alphaMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("alpha *= texture2D(alphaMap, textureCoord).r;"));
                h && r._occlusionMap && (r._occlusionMap._state.matrix ? v.push("textureCoord = (occlusionMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("occlusion *= texture2D(occlusionMap, textureCoord).r;"));
                if (c && (o.lights.length > 0 || o.lightMaps.length > 0 || o.reflectionMaps.length > 0)) {
                    for (h && r._normalMap ? (r._normalMap._state.matrix ? v.push("textureCoord = (normalMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec3 viewNormal = perturbNormal2Arb( vViewPosition, normalize(vViewNormal), textureCoord );")) : v.push("vec3 viewNormal = normalize(vViewNormal);"), h && r._specularMap && (r._specularMap._state.matrix ? v.push("textureCoord = (specularMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("specular *= texture2D(specularMap, textureCoord).rgb;")), h && r._glossinessMap && (r._glossinessMap._state.matrix ? v.push("textureCoord = (glossinessMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("glossiness *= texture2D(glossinessMap, textureCoord).r;")), h && r._specularGlossinessMap && (r._specularGlossinessMap._state.matrix ? v.push("textureCoord = (materialSpecularGlossinessMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec4 specGlossRGB = texture2D(materialSpecularGlossinessMap, textureCoord).rgba;"), v.push("specular *= specGlossRGB.rgb;"), v.push("glossiness *= specGlossRGB.a;")), h && r._metallicMap && (r._metallicMap._state.matrix ? v.push("textureCoord = (metallicMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("metallic *= texture2D(metallicMap, textureCoord).r;")), h && r._roughnessMap && (r._roughnessMap._state.matrix ? v.push("textureCoord = (roughnessMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("roughness *= texture2D(roughnessMap, textureCoord).r;")), h && r._metallicRoughnessMap && (r._metallicRoughnessMap._state.matrix ? v.push("textureCoord = (metallicRoughnessMapMatrix * texturePos).xy;") : v.push("textureCoord = texturePos.xy;"), v.push("vec3 metalRoughRGB = texture2D(metallicRoughnessMap, textureCoord).rgb;"), v.push("metallic *= metalRoughRGB.b;"), v.push("roughness *= metalRoughRGB.g;")), v.push("vec3 viewEyeDir = normalize(-vViewPosition);"), r._diffuseFresnel && (v.push("float diffuseFresnel = fresnel(viewEyeDir, viewNormal, diffuseFresnelEdgeBias, diffuseFresnelCenterBias, diffuseFresnelPower);"), v.push("diffuseColor *= mix(diffuseFresnelEdgeColor, diffuseFresnelCenterColor, diffuseFresnel);")), r._specularFresnel && (v.push("float specularFresnel = fresnel(viewEyeDir, viewNormal, specularFresnelEdgeBias, specularFresnelCenterBias, specularFresnelPower);"), v.push("specular *= mix(specularFresnelEdgeColor, specularFresnelCenterColor, specularFresnel);")), r._alphaFresnel && (v.push("float alphaFresnel = fresnel(viewEyeDir, viewNormal, alphaFresnelEdgeBias, alphaFresnelCenterBias, alphaFresnelPower);"), v.push("alpha *= mix(alphaFresnelEdgeColor.r, alphaFresnelCenterColor.r, alphaFresnel);")), r._emissiveFresnel && (v.push("float emissiveFresnel = fresnel(viewEyeDir, viewNormal, emissiveFresnelEdgeBias, emissiveFresnelCenterBias, emissiveFresnelPower);"), v.push("emissiveColor *= mix(emissiveFresnelEdgeColor, emissiveFresnelCenterColor, emissiveFresnel);")), v.push("if (materialAlphaModeCutoff[1] == 1.0 && alpha < materialAlphaModeCutoff[2]) {"), v.push("   discard;"), v.push("}"), v.push("IncidentLight  light;"), v.push("Material       material;"), v.push("Geometry       geometry;"), v.push("ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));"), v.push("vec3           viewLightDir;"), d && (v.push("material.diffuseColor      = diffuseColor;"), v.push("material.specularColor     = specular;"), v.push("material.shine             = materialShininess;")), p && (v.push("float oneMinusSpecularStrength = 1.0 - max(max(specular.r, specular.g ),specular.b);"), v.push("material.diffuseColor      = diffuseColor * oneMinusSpecularStrength;"), v.push("material.specularRoughness = clamp( 1.0 - glossiness, 0.04, 1.0 );"), v.push("material.specularColor     = specular;")), u && (v.push("float dielectricSpecular = 0.16 * specularF0 * specularF0;"), v.push("material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);"), v.push("material.specularRoughness = clamp(roughness, 0.04, 1.0);"), v.push("material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);")), v.push("geometry.position      = vViewPosition;"), o.lightMaps.length > 0 && v.push("geometry.worldNormal   = normalize(vWorldNormal);"), v.push("geometry.viewNormal    = viewNormal;"), v.push("geometry.viewEyeDir    = viewEyeDir;"), d && (o.lightMaps.length > 0 || o.reflectionMaps.length > 0) && v.push("computePhongLightMapping(geometry, material, reflectedLight);"), (p || u) && (o.lightMaps.length > 0 || o.reflectionMaps.length > 0) && v.push("computePBRLightMapping(geometry, material, reflectedLight);"), v.push("float shadow = 1.0;"), v.push("float shadowAcneRemover = 0.007;"), v.push("vec3 fragmentDepth;"), v.push("float texelSize = 1.0 / 1024.0;"), v.push("float amountInLight = 0.0;"), v.push("vec3 shadowCoord;"), v.push("vec4 rgbaDepth;"), v.push("float depth;"), b = 0, m = o.lights.length; b < m; b++) g = o.lights[b], "ambient" !== g.type && ("dir" === g.type && "view" === g.space ? v.push("viewLightDir = -normalize(lightDir" + b + ");") : "point" === g.type && "view" === g.space ? v.push("viewLightDir = normalize(lightPos" + b + " - vViewPosition);") : v.push("viewLightDir = normalize(vViewLightReverseDirAndDist" + b + ".xyz);"), f && g.castsShadow ? (v.push("shadow = 0.0;"), v.push("fragmentDepth = vShadowPosFromLight" + b + ".xyz;"), v.push("fragmentDepth.z -= shadowAcneRemover;"), v.push("for (int x = -3; x <= 3; x++) {"), v.push("  for (int y = -3; y <= 3; y++) {"), v.push("      float texelDepth = unpackDepth(texture2D(shadowMap" + b + ", fragmentDepth.xy + vec2(x, y) * texelSize));"), v.push("      if (fragmentDepth.z < texelDepth) {"), v.push("          shadow += 1.0;"), v.push("      }"), v.push("  }"), v.push("}"), v.push("shadow = shadow / 9.0;"), v.push("light.color =  lightColor" + b + ".rgb * (lightColor" + b + ".a * shadow);")) : v.push("light.color =  lightColor" + b + ".rgb * (lightColor" + b + ".a );"), v.push("light.direction = viewLightDir;"), d && v.push("computePhongLighting(light, geometry, material, reflectedLight);"), (p || u) && v.push("computePBRLighting(light, geometry, material, reflectedLight);"));
                    d ? (v.push("ambientColor *= (lightAmbient.rgb * lightAmbient.a);"), v.push("vec3 outgoingLight =  ((occlusion * (( reflectedLight.diffuse + reflectedLight.specular)))) + emissiveColor;")) : v.push("vec3 outgoingLight = (occlusion * (reflectedLight.diffuse)) + (occlusion * reflectedLight.specular) + emissiveColor;")
                } else v.push("ambientColor *= (lightAmbient.rgb * lightAmbient.a);"), v.push("vec3 outgoingLight = emissiveColor + ambientColor;");
                v.push("gl_FragColor = vec4(outgoingLight, alpha) * colorize;"), _ && v.push("gl_FragColor = linearToGamma(gl_FragColor, gammaFactor);");
                return v.push("}"), v
            }(e))
        },
        Cf = {
            linear: "linearToLinear",
            sRGB: "sRGBToLinear",
            gamma: "gammaToLinear"
        };

    function Pf(e) {
        if (!e.receivesShadow) return !1;
        const t = e.scene._lightsState.lights;
        if (!t || 0 === t.length) return !1;
        for (let e = 0, i = t.length; e < i; e++)
            if (t[e].castsShadow) return !0;
        return !1
    }

    function kf(e) {
        const t = e._geometry._state.primitiveName;
        return !(!e._geometry._state.autoVertexNormals && !e._geometry._state.normalsBuf || "triangles" !== t && "triangle-strip" !== t && "triangle-fan" !== t)
    }
    const Ef = $c.vec3(),
        If = new Cc({}),
        Tf = function(e, t) {
            this.id = If.addItem({}), this._hash = e, this._scene = t.scene, this._useCount = 0, this._shaderSource = new xf(t), this._allocate(t)
        },
        Df = {};
    Tf.get = function(e) {
        const t = e.scene,
            i = [t.canvas.canvas.id, (t.gammaInput ? "gi;" : ";") + (t.gammaOutput ? "go" : ""), t._lightsState.getHash(), t._sectionPlanesState.getHash(), e._geometry._state.hash, e._material._state.hash, e._state.drawHash].join(";");
        let r = Df[i];
        if (!r) {
            if (r = new Tf(i, e), r.errors) return console.log(r.errors.join("\n")), null;
            Df[i] = r, Pc.memory.programs++
        }
        return r._useCount++, r
    }, Tf.prototype.put = function() {
        0 == --this._useCount && (If.removeItem(this.id), this._program && this._program.destroy(), delete Df[this._hash], Pc.memory.programs--)
    }, Tf.prototype.webglContextRestored = function() {
        this._program = null
    }, Tf.prototype.drawMesh = function(e, t) {
        this._program || this._allocate(t);
        const i = Gc.MAX_TEXTURE_UNITS,
            r = t.scene,
            n = t._material,
            s = r.canvas.gl,
            o = this._program,
            a = t._state,
            l = t._material._state,
            c = t._geometry._state,
            h = r.camera,
            d = t.rtcCenter;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), s.uniformMatrix4fv(this._uViewMatrix, !1, d ? e.getRTCViewMatrix(a.rtcCenterHash, d) : h.viewMatrix), s.uniformMatrix4fv(this._uViewNormalMatrix, !1, h.viewNormalMatrix), a.clippable) {
            const e = r._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const i = r._sectionPlanesState.sectionPlanes,
                    n = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        r = n.sectionPlanesActivePerLayer[t];
                    if (s.uniform1i(e.active, r ? 1 : 0), r) {
                        const r = i[t];
                        s.uniform3fv(e.pos, d ? eh(r.dist, r.dir, d, Ef) : r.pos), s.uniform3fv(e.dir, r.dir)
                    }
                }
            }
        }
        if (l.id !== this._lastMaterialId) {
            e.textureUnit = this._baseTextureUnit;
            const t = l.backfaces;
            e.backfaces !== t && (t ? s.disable(s.CULL_FACE) : s.enable(s.CULL_FACE), e.backfaces = t);
            const r = l.frontface;
            switch (e.frontface !== r && (r ? s.frontFace(s.CCW) : s.frontFace(s.CW), e.frontface = r), e.lineWidth !== l.lineWidth && (s.lineWidth(l.lineWidth), e.lineWidth = l.lineWidth), this._uPointSize && s.uniform1f(this._uPointSize, l.pointSize), l.type) {
                case "LambertMaterial":
                    this._uMaterialAmbient && s.uniform3fv(this._uMaterialAmbient, l.ambient), this._uMaterialColor && s.uniform4f(this._uMaterialColor, l.color[0], l.color[1], l.color[2], l.alpha), this._uMaterialEmissive && s.uniform3fv(this._uMaterialEmissive, l.emissive);
                    break;
                case "PhongMaterial":
                    this._uMaterialShininess && s.uniform1f(this._uMaterialShininess, l.shininess), this._uMaterialAmbient && s.uniform3fv(this._uMaterialAmbient, l.ambient), this._uMaterialDiffuse && s.uniform3fv(this._uMaterialDiffuse, l.diffuse), this._uMaterialSpecular && s.uniform3fv(this._uMaterialSpecular, l.specular), this._uMaterialEmissive && s.uniform3fv(this._uMaterialEmissive, l.emissive), this._uAlphaModeCutoff && s.uniform4f(this._uAlphaModeCutoff, 1 * l.alpha, 1 === l.alphaMode ? 1 : 0, l.alphaCutoff, 0), n._ambientMap && n._ambientMap._state.texture && this._uMaterialAmbientMap && (o.bindTexture(this._uMaterialAmbientMap, n._ambientMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uMaterialAmbientMapMatrix && s.uniformMatrix4fv(this._uMaterialAmbientMapMatrix, !1, n._ambientMap._state.matrix)), n._diffuseMap && n._diffuseMap._state.texture && this._uDiffuseMap && (o.bindTexture(this._uDiffuseMap, n._diffuseMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uDiffuseMapMatrix && s.uniformMatrix4fv(this._uDiffuseMapMatrix, !1, n._diffuseMap._state.matrix)), n._specularMap && n._specularMap._state.texture && this._uSpecularMap && (o.bindTexture(this._uSpecularMap, n._specularMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uSpecularMapMatrix && s.uniformMatrix4fv(this._uSpecularMapMatrix, !1, n._specularMap._state.matrix)), n._emissiveMap && n._emissiveMap._state.texture && this._uEmissiveMap && (o.bindTexture(this._uEmissiveMap, n._emissiveMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uEmissiveMapMatrix && s.uniformMatrix4fv(this._uEmissiveMapMatrix, !1, n._emissiveMap._state.matrix)), n._alphaMap && n._alphaMap._state.texture && this._uAlphaMap && (o.bindTexture(this._uAlphaMap, n._alphaMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uAlphaMapMatrix && s.uniformMatrix4fv(this._uAlphaMapMatrix, !1, n._alphaMap._state.matrix)), n._reflectivityMap && n._reflectivityMap._state.texture && this._uReflectivityMap && (o.bindTexture(this._uReflectivityMap, n._reflectivityMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, this._uReflectivityMapMatrix && s.uniformMatrix4fv(this._uReflectivityMapMatrix, !1, n._reflectivityMap._state.matrix)), n._normalMap && n._normalMap._state.texture && this._uNormalMap && (o.bindTexture(this._uNormalMap, n._normalMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uNormalMapMatrix && s.uniformMatrix4fv(this._uNormalMapMatrix, !1, n._normalMap._state.matrix)), n._occlusionMap && n._occlusionMap._state.texture && this._uOcclusionMap && (o.bindTexture(this._uOcclusionMap, n._occlusionMap._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uOcclusionMapMatrix && s.uniformMatrix4fv(this._uOcclusionMapMatrix, !1, n._occlusionMap._state.matrix)), n._diffuseFresnel && (this._uDiffuseFresnelEdgeBias && s.uniform1f(this._uDiffuseFresnelEdgeBias, n._diffuseFresnel.edgeBias), this._uDiffuseFresnelCenterBias && s.uniform1f(this._uDiffuseFresnelCenterBias, n._diffuseFresnel.centerBias), this._uDiffuseFresnelEdgeColor && s.uniform3fv(this._uDiffuseFresnelEdgeColor, n._diffuseFresnel.edgeColor), this._uDiffuseFresnelCenterColor && s.uniform3fv(this._uDiffuseFresnelCenterColor, n._diffuseFresnel.centerColor), this._uDiffuseFresnelPower && s.uniform1f(this._uDiffuseFresnelPower, n._diffuseFresnel.power)), n._specularFresnel && (this._uSpecularFresnelEdgeBias && s.uniform1f(this._uSpecularFresnelEdgeBias, n._specularFresnel.edgeBias), this._uSpecularFresnelCenterBias && s.uniform1f(this._uSpecularFresnelCenterBias, n._specularFresnel.centerBias), this._uSpecularFresnelEdgeColor && s.uniform3fv(this._uSpecularFresnelEdgeColor, n._specularFresnel.edgeColor), this._uSpecularFresnelCenterColor && s.uniform3fv(this._uSpecularFresnelCenterColor, n._specularFresnel.centerColor), this._uSpecularFresnelPower && s.uniform1f(this._uSpecularFresnelPower, n._specularFresnel.power)), n._alphaFresnel && (this._uAlphaFresnelEdgeBias && s.uniform1f(this._uAlphaFresnelEdgeBias, n._alphaFresnel.edgeBias), this._uAlphaFresnelCenterBias && s.uniform1f(this._uAlphaFresnelCenterBias, n._alphaFresnel.centerBias), this._uAlphaFresnelEdgeColor && s.uniform3fv(this._uAlphaFresnelEdgeColor, n._alphaFresnel.edgeColor), this._uAlphaFresnelCenterColor && s.uniform3fv(this._uAlphaFresnelCenterColor, n._alphaFresnel.centerColor), this._uAlphaFresnelPower && s.uniform1f(this._uAlphaFresnelPower, n._alphaFresnel.power)), n._reflectivityFresnel && (this._uReflectivityFresnelEdgeBias && s.uniform1f(this._uReflectivityFresnelEdgeBias, n._reflectivityFresnel.edgeBias), this._uReflectivityFresnelCenterBias && s.uniform1f(this._uReflectivityFresnelCenterBias, n._reflectivityFresnel.centerBias), this._uReflectivityFresnelEdgeColor && s.uniform3fv(this._uReflectivityFresnelEdgeColor, n._reflectivityFresnel.edgeColor), this._uReflectivityFresnelCenterColor && s.uniform3fv(this._uReflectivityFresnelCenterColor, n._reflectivityFresnel.centerColor), this._uReflectivityFresnelPower && s.uniform1f(this._uReflectivityFresnelPower, n._reflectivityFresnel.power)), n._emissiveFresnel && (this._uEmissiveFresnelEdgeBias && s.uniform1f(this._uEmissiveFresnelEdgeBias, n._emissiveFresnel.edgeBias), this._uEmissiveFresnelCenterBias && s.uniform1f(this._uEmissiveFresnelCenterBias, n._emissiveFresnel.centerBias), this._uEmissiveFresnelEdgeColor && s.uniform3fv(this._uEmissiveFresnelEdgeColor, n._emissiveFresnel.edgeColor), this._uEmissiveFresnelCenterColor && s.uniform3fv(this._uEmissiveFresnelCenterColor, n._emissiveFresnel.centerColor), this._uEmissiveFresnelPower && s.uniform1f(this._uEmissiveFresnelPower, n._emissiveFresnel.power));
                    break;
                case "MetallicMaterial":
                    this._uBaseColor && s.uniform3fv(this._uBaseColor, l.baseColor), this._uMaterialMetallic && s.uniform1f(this._uMaterialMetallic, l.metallic), this._uMaterialRoughness && s.uniform1f(this._uMaterialRoughness, l.roughness), this._uMaterialSpecularF0 && s.uniform1f(this._uMaterialSpecularF0, l.specularF0), this._uMaterialEmissive && s.uniform3fv(this._uMaterialEmissive, l.emissive), this._uAlphaModeCutoff && s.uniform4f(this._uAlphaModeCutoff, 1 * l.alpha, 1 === l.alphaMode ? 1 : 0, l.alphaCutoff, 0);
                    const t = n._baseColorMap;
                    t && t._state.texture && this._uBaseColorMap && (o.bindTexture(this._uBaseColorMap, t._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uBaseColorMapMatrix && s.uniformMatrix4fv(this._uBaseColorMapMatrix, !1, t._state.matrix));
                    const r = n._metallicMap;
                    r && r._state.texture && this._uMetallicMap && (o.bindTexture(this._uMetallicMap, r._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uMetallicMapMatrix && s.uniformMatrix4fv(this._uMetallicMapMatrix, !1, r._state.matrix));
                    const a = n._roughnessMap;
                    a && a._state.texture && this._uRoughnessMap && (o.bindTexture(this._uRoughnessMap, a._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uRoughnessMapMatrix && s.uniformMatrix4fv(this._uRoughnessMapMatrix, !1, a._state.matrix));
                    const c = n._metallicRoughnessMap;
                    c && c._state.texture && this._uMetallicRoughnessMap && (o.bindTexture(this._uMetallicRoughnessMap, c._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uMetallicRoughnessMapMatrix && s.uniformMatrix4fv(this._uMetallicRoughnessMapMatrix, !1, c._state.matrix)), (u = n._emissiveMap) && u._state.texture && this._uEmissiveMap && (o.bindTexture(this._uEmissiveMap, u._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uEmissiveMapMatrix && s.uniformMatrix4fv(this._uEmissiveMapMatrix, !1, u._state.matrix)), (p = n._occlusionMap) && n._occlusionMap._state.texture && this._uOcclusionMap && (o.bindTexture(this._uOcclusionMap, p._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uOcclusionMapMatrix && s.uniformMatrix4fv(this._uOcclusionMapMatrix, !1, p._state.matrix)), (f = n._alphaMap) && f._state.texture && this._uAlphaMap && (o.bindTexture(this._uAlphaMap, f._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uAlphaMapMatrix && s.uniformMatrix4fv(this._uAlphaMapMatrix, !1, f._state.matrix)), (_ = n._normalMap) && _._state.texture && this._uNormalMap && (o.bindTexture(this._uNormalMap, _._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uNormalMapMatrix && s.uniformMatrix4fv(this._uNormalMapMatrix, !1, _._state.matrix));
                    break;
                case "SpecularMaterial":
                    this._uMaterialDiffuse && s.uniform3fv(this._uMaterialDiffuse, l.diffuse), this._uMaterialSpecular && s.uniform3fv(this._uMaterialSpecular, l.specular), this._uMaterialGlossiness && s.uniform1f(this._uMaterialGlossiness, l.glossiness), this._uMaterialReflectivity && s.uniform1f(this._uMaterialReflectivity, l.reflectivity), this._uMaterialEmissive && s.uniform3fv(this._uMaterialEmissive, l.emissive), this._uAlphaModeCutoff && s.uniform4f(this._uAlphaModeCutoff, 1 * l.alpha, 1 === l.alphaMode ? 1 : 0, l.alphaCutoff, 0);
                    const h = n._diffuseMap;
                    h && h._state.texture && this._uDiffuseMap && (o.bindTexture(this._uDiffuseMap, h._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uDiffuseMapMatrix && s.uniformMatrix4fv(this._uDiffuseMapMatrix, !1, h._state.matrix));
                    const d = n._specularMap;
                    d && d._state.texture && this._uSpecularMap && (o.bindTexture(this._uSpecularMap, d._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uSpecularMapMatrix && s.uniformMatrix4fv(this._uSpecularMapMatrix, !1, d._state.matrix));
                    const m = n._glossinessMap;
                    m && m._state.texture && this._uGlossinessMap && (o.bindTexture(this._uGlossinessMap, m._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uGlossinessMapMatrix && s.uniformMatrix4fv(this._uGlossinessMapMatrix, !1, m._state.matrix));
                    const g = n._specularGlossinessMap;
                    var u, p, f, _;
                    g && g._state.texture && this._uSpecularGlossinessMap && (o.bindTexture(this._uSpecularGlossinessMap, g._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uSpecularGlossinessMapMatrix && s.uniformMatrix4fv(this._uSpecularGlossinessMapMatrix, !1, g._state.matrix)), (u = n._emissiveMap) && u._state.texture && this._uEmissiveMap && (o.bindTexture(this._uEmissiveMap, u._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uEmissiveMapMatrix && s.uniformMatrix4fv(this._uEmissiveMapMatrix, !1, u._state.matrix)), (p = n._occlusionMap) && p._state.texture && this._uOcclusionMap && (o.bindTexture(this._uOcclusionMap, p._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uOcclusionMapMatrix && s.uniformMatrix4fv(this._uOcclusionMapMatrix, !1, p._state.matrix)), (f = n._alphaMap) && f._state.texture && this._uAlphaMap && (o.bindTexture(this._uAlphaMap, f._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uAlphaMapMatrix && s.uniformMatrix4fv(this._uAlphaMapMatrix, !1, f._state.matrix)), (_ = n._normalMap) && _._state.texture && this._uNormalMap && (o.bindTexture(this._uNormalMap, _._state.texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % i, e.bindTexture++, this._uNormalMapMatrix && s.uniformMatrix4fv(this._uNormalMapMatrix, !1, _._state.matrix))
            }
            this._lastMaterialId = l.id
        }
        if (s.uniformMatrix4fv(this._uModelMatrix, s.FALSE, t.worldMatrix), this._uModelNormalMatrix && s.uniformMatrix4fv(this._uModelNormalMatrix, s.FALSE, t.worldNormalMatrix), this._uClippable && s.uniform1i(this._uClippable, a.clippable), this._uColorize) {
            const e = a.colorize,
                t = this._lastColorize;
            t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] || (s.uniform4fv(this._uColorize, e), t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3])
        }
        s.uniform3fv(this._uOffset, a.offset), c.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, c.positionsDecodeMatrix), this._uUVDecodeMatrix && s.uniformMatrix3fv(this._uUVDecodeMatrix, !1, c.uvDecodeMatrix), this._aPosition && (this._aPosition.bindArrayBuffer(c.positionsBuf), e.bindArray++), this._aNormal && (this._aNormal.bindArrayBuffer(c.normalsBuf), e.bindArray++), this._aUV && (this._aUV.bindArrayBuffer(c.uvBuf), e.bindArray++), this._aColor && (this._aColor.bindArrayBuffer(c.colorsBuf), e.bindArray++), this._aFlags && (this._aFlags.bindArrayBuffer(c.flagsBuf), e.bindArray++), c.indicesBuf && (c.indicesBuf.bind(), e.bindArray++), this._lastGeometryId = c.id), c.indicesBuf ? (s.drawElements(c.primitive, c.indicesBuf.numItems, c.indicesBuf.itemType, 0), e.drawElements++) : c.positions && (s.drawArrays(s.TRIANGLES, 0, c.positions.numItems), e.drawArrays++)
    }, Tf.prototype._allocate = function(e) {
        const t = e.scene.canvas.gl,
            i = e._material,
            r = e.scene._lightsState,
            n = e.scene._sectionPlanesState,
            s = e._material._state;
        if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
        const o = this._program;
        this._uPositionsDecodeMatrix = o.getLocation("positionsDecodeMatrix"), this._uUVDecodeMatrix = o.getLocation("uvDecodeMatrix"), this._uModelMatrix = o.getLocation("modelMatrix"), this._uModelNormalMatrix = o.getLocation("modelNormalMatrix"), this._uViewMatrix = o.getLocation("viewMatrix"), this._uViewNormalMatrix = o.getLocation("viewNormalMatrix"), this._uProjMatrix = o.getLocation("projMatrix"), this._uGammaFactor = o.getLocation("gammaFactor"), this._uLightAmbient = [], this._uLightColor = [], this._uLightDir = [], this._uLightPos = [], this._uLightAttenuation = [], this._uShadowViewMatrix = [], this._uShadowProjMatrix = [];
        const a = r.lights;
        let l;
        for (var c = 0, h = a.length; c < h; c++) {
            switch (l = a[c], l.type) {
                case "ambient":
                    this._uLightAmbient[c] = o.getLocation("lightAmbient");
                    break;
                case "dir":
                    this._uLightColor[c] = o.getLocation("lightColor" + c), this._uLightPos[c] = null, this._uLightDir[c] = o.getLocation("lightDir" + c);
                    break;
                case "point":
                    this._uLightColor[c] = o.getLocation("lightColor" + c), this._uLightPos[c] = o.getLocation("lightPos" + c), this._uLightDir[c] = null, this._uLightAttenuation[c] = o.getLocation("lightAttenuation" + c);
                    break;
                case "spot":
                    this._uLightColor[c] = o.getLocation("lightColor" + c), this._uLightPos[c] = o.getLocation("lightPos" + c), this._uLightDir[c] = o.getLocation("lightDir" + c), this._uLightAttenuation[c] = o.getLocation("lightAttenuation" + c)
            }
            l.castsShadow && (this._uShadowViewMatrix[c] = o.getLocation("shadowViewMatrix" + c), this._uShadowProjMatrix[c] = o.getLocation("shadowProjMatrix" + c))
        }
        r.lightMaps.length > 0 && (this._uLightMap = "lightMap"), r.reflectionMaps.length > 0 && (this._uReflectionMap = "reflectionMap"), this._uSectionPlanes = [];
        for (c = 0, h = n.sectionPlanes.length; c < h; c++) this._uSectionPlanes.push({
            active: o.getLocation("sectionPlaneActive" + c),
            pos: o.getLocation("sectionPlanePos" + c),
            dir: o.getLocation("sectionPlaneDir" + c)
        });
        switch (this._uPointSize = o.getLocation("pointSize"), s.type) {
            case "LambertMaterial":
                this._uMaterialColor = o.getLocation("materialColor"), this._uMaterialEmissive = o.getLocation("materialEmissive"), this._uAlphaModeCutoff = o.getLocation("materialAlphaModeCutoff");
                break;
            case "PhongMaterial":
                this._uMaterialAmbient = o.getLocation("materialAmbient"), this._uMaterialDiffuse = o.getLocation("materialDiffuse"), this._uMaterialSpecular = o.getLocation("materialSpecular"), this._uMaterialEmissive = o.getLocation("materialEmissive"), this._uAlphaModeCutoff = o.getLocation("materialAlphaModeCutoff"), this._uMaterialShininess = o.getLocation("materialShininess"), i._ambientMap && (this._uMaterialAmbientMap = "ambientMap", this._uMaterialAmbientMapMatrix = o.getLocation("ambientMapMatrix")), i._diffuseMap && (this._uDiffuseMap = "diffuseMap", this._uDiffuseMapMatrix = o.getLocation("diffuseMapMatrix")), i._specularMap && (this._uSpecularMap = "specularMap", this._uSpecularMapMatrix = o.getLocation("specularMapMatrix")), i._emissiveMap && (this._uEmissiveMap = "emissiveMap", this._uEmissiveMapMatrix = o.getLocation("emissiveMapMatrix")), i._alphaMap && (this._uAlphaMap = "alphaMap", this._uAlphaMapMatrix = o.getLocation("alphaMapMatrix")), i._reflectivityMap && (this._uReflectivityMap = "reflectivityMap", this._uReflectivityMapMatrix = o.getLocation("reflectivityMapMatrix")), i._normalMap && (this._uNormalMap = "normalMap", this._uNormalMapMatrix = o.getLocation("normalMapMatrix")), i._occlusionMap && (this._uOcclusionMap = "occlusionMap", this._uOcclusionMapMatrix = o.getLocation("occlusionMapMatrix")), i._diffuseFresnel && (this._uDiffuseFresnelEdgeBias = o.getLocation("diffuseFresnelEdgeBias"), this._uDiffuseFresnelCenterBias = o.getLocation("diffuseFresnelCenterBias"), this._uDiffuseFresnelEdgeColor = o.getLocation("diffuseFresnelEdgeColor"), this._uDiffuseFresnelCenterColor = o.getLocation("diffuseFresnelCenterColor"), this._uDiffuseFresnelPower = o.getLocation("diffuseFresnelPower")), i._specularFresnel && (this._uSpecularFresnelEdgeBias = o.getLocation("specularFresnelEdgeBias"), this._uSpecularFresnelCenterBias = o.getLocation("specularFresnelCenterBias"), this._uSpecularFresnelEdgeColor = o.getLocation("specularFresnelEdgeColor"), this._uSpecularFresnelCenterColor = o.getLocation("specularFresnelCenterColor"), this._uSpecularFresnelPower = o.getLocation("specularFresnelPower")), i._alphaFresnel && (this._uAlphaFresnelEdgeBias = o.getLocation("alphaFresnelEdgeBias"), this._uAlphaFresnelCenterBias = o.getLocation("alphaFresnelCenterBias"), this._uAlphaFresnelEdgeColor = o.getLocation("alphaFresnelEdgeColor"), this._uAlphaFresnelCenterColor = o.getLocation("alphaFresnelCenterColor"), this._uAlphaFresnelPower = o.getLocation("alphaFresnelPower")), i._reflectivityFresnel && (this._uReflectivityFresnelEdgeBias = o.getLocation("reflectivityFresnelEdgeBias"), this._uReflectivityFresnelCenterBias = o.getLocation("reflectivityFresnelCenterBias"), this._uReflectivityFresnelEdgeColor = o.getLocation("reflectivityFresnelEdgeColor"), this._uReflectivityFresnelCenterColor = o.getLocation("reflectivityFresnelCenterColor"), this._uReflectivityFresnelPower = o.getLocation("reflectivityFresnelPower")), i._emissiveFresnel && (this._uEmissiveFresnelEdgeBias = o.getLocation("emissiveFresnelEdgeBias"), this._uEmissiveFresnelCenterBias = o.getLocation("emissiveFresnelCenterBias"), this._uEmissiveFresnelEdgeColor = o.getLocation("emissiveFresnelEdgeColor"), this._uEmissiveFresnelCenterColor = o.getLocation("emissiveFresnelCenterColor"), this._uEmissiveFresnelPower = o.getLocation("emissiveFresnelPower"));
                break;
            case "MetallicMaterial":
                this._uBaseColor = o.getLocation("materialBaseColor"), this._uMaterialMetallic = o.getLocation("materialMetallic"), this._uMaterialRoughness = o.getLocation("materialRoughness"), this._uMaterialSpecularF0 = o.getLocation("materialSpecularF0"), this._uMaterialEmissive = o.getLocation("materialEmissive"), this._uAlphaModeCutoff = o.getLocation("materialAlphaModeCutoff"), i._baseColorMap && (this._uBaseColorMap = "baseColorMap", this._uBaseColorMapMatrix = o.getLocation("baseColorMapMatrix")), i._metallicMap && (this._uMetallicMap = "metallicMap", this._uMetallicMapMatrix = o.getLocation("metallicMapMatrix")), i._roughnessMap && (this._uRoughnessMap = "roughnessMap", this._uRoughnessMapMatrix = o.getLocation("roughnessMapMatrix")), i._metallicRoughnessMap && (this._uMetallicRoughnessMap = "metallicRoughnessMap", this._uMetallicRoughnessMapMatrix = o.getLocation("metallicRoughnessMapMatrix")), i._emissiveMap && (this._uEmissiveMap = "emissiveMap", this._uEmissiveMapMatrix = o.getLocation("emissiveMapMatrix")), i._occlusionMap && (this._uOcclusionMap = "occlusionMap", this._uOcclusionMapMatrix = o.getLocation("occlusionMapMatrix")), i._alphaMap && (this._uAlphaMap = "alphaMap", this._uAlphaMapMatrix = o.getLocation("alphaMapMatrix")), i._normalMap && (this._uNormalMap = "normalMap", this._uNormalMapMatrix = o.getLocation("normalMapMatrix"));
                break;
            case "SpecularMaterial":
                this._uMaterialDiffuse = o.getLocation("materialDiffuse"), this._uMaterialSpecular = o.getLocation("materialSpecular"), this._uMaterialGlossiness = o.getLocation("materialGlossiness"), this._uMaterialReflectivity = o.getLocation("reflectivityFresnel"), this._uMaterialEmissive = o.getLocation("materialEmissive"), this._uAlphaModeCutoff = o.getLocation("materialAlphaModeCutoff"), i._diffuseMap && (this._uDiffuseMap = "diffuseMap", this._uDiffuseMapMatrix = o.getLocation("diffuseMapMatrix")), i._specularMap && (this._uSpecularMap = "specularMap", this._uSpecularMapMatrix = o.getLocation("specularMapMatrix")), i._glossinessMap && (this._uGlossinessMap = "glossinessMap", this._uGlossinessMapMatrix = o.getLocation("glossinessMapMatrix")), i._specularGlossinessMap && (this._uSpecularGlossinessMap = "materialSpecularGlossinessMap", this._uSpecularGlossinessMapMatrix = o.getLocation("materialSpecularGlossinessMapMatrix")), i._emissiveMap && (this._uEmissiveMap = "emissiveMap", this._uEmissiveMapMatrix = o.getLocation("emissiveMapMatrix")), i._occlusionMap && (this._uOcclusionMap = "occlusionMap", this._uOcclusionMapMatrix = o.getLocation("occlusionMapMatrix")), i._alphaMap && (this._uAlphaMap = "alphaMap", this._uAlphaMapMatrix = o.getLocation("alphaMapMatrix")), i._normalMap && (this._uNormalMap = "normalMap", this._uNormalMapMatrix = o.getLocation("normalMapMatrix"))
        }
        this._aPosition = o.getAttribute("position"), this._aNormal = o.getAttribute("normal"), this._aUV = o.getAttribute("uv"), this._aColor = o.getAttribute("color"), this._aFlags = o.getAttribute("flags"), this._uClippable = o.getLocation("clippable"), this._uColorize = o.getLocation("colorize"), this._uOffset = o.getLocation("offset"), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null, this._lastColorize = new Float32Array(4), this._baseTextureUnit = 0
    }, Tf.prototype._bindProgram = function(e) {
        const t = Gc.MAX_TEXTURE_UNITS,
            i = this._scene,
            r = i.canvas.gl,
            n = i._lightsState;
        let s;
        const o = this._program;
        o.bind(), e.useProgram++, e.textureUnit = 0, this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null, this._lastColorize[0] = -1, this._lastColorize[1] = -1, this._lastColorize[2] = -1, this._lastColorize[3] = -1;
        const a = i.camera;
        r.uniformMatrix4fv(this._uProjMatrix, !1, a._project._state.matrix);
        for (var l = 0, c = n.lights.length; l < c; l++)
            if (s = n.lights[l], this._uLightAmbient[l]) r.uniform4f(this._uLightAmbient[l], s.color[0], s.color[1], s.color[2], s.intensity);
            else if (this._uLightColor[l] && r.uniform4f(this._uLightColor[l], s.color[0], s.color[1], s.color[2], s.intensity), this._uLightPos[l] && (r.uniform3fv(this._uLightPos[l], s.pos), this._uLightAttenuation[l] && r.uniform1f(this._uLightAttenuation[l], s.attenuation)), this._uLightDir[l] && r.uniform3fv(this._uLightDir[l], s.dir), s.castsShadow) {
            this._uShadowViewMatrix[l] && r.uniformMatrix4fv(this._uShadowViewMatrix[l], !1, s.getShadowViewMatrix()), this._uShadowProjMatrix[l] && r.uniformMatrix4fv(this._uShadowProjMatrix[l], !1, s.getShadowProjMatrix());
            const i = s.getShadowRenderBuf();
            i && (o.bindTexture("shadowMap" + l, i.getTexture(), e.textureUnit), e.textureUnit = (e.textureUnit + 1) % t, e.bindTexture++)
        }
        n.lightMaps.length > 0 && n.lightMaps[0].texture && this._uLightMap && (o.bindTexture(this._uLightMap, n.lightMaps[0].texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % t, e.bindTexture++), n.reflectionMaps.length > 0 && n.reflectionMaps[0].texture && this._uReflectionMap && (o.bindTexture(this._uReflectionMap, n.reflectionMaps[0].texture, e.textureUnit), e.textureUnit = (e.textureUnit + 1) % t, e.bindTexture++), this._uGammaFactor && r.uniform1f(this._uGammaFactor, i.gammaFactor), this._baseTextureUnit = e.textureUnit
    };
    class Sf {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene,
                    i = t._lightsState,
                    r = function(e) {
                        const t = e._geometry._state.primitiveName;
                        if ((e._geometry._state.autoVertexNormals || e._geometry._state.normalsBuf) && ("triangles" === t || "triangle-strip" === t || "triangle-fan" === t)) return !0;
                        return !1
                    }(e),
                    n = t._sectionPlanesState.sectionPlanes.length > 0,
                    s = !!e._geometry._state.compressGeometry,
                    o = e._state.billboard,
                    a = e._state.stationary,
                    l = [];
                let c, h, d;
                l.push("// EmphasisFillShaderSource vertex shader"), l.push("attribute vec3 position;"), l.push("uniform mat4 modelMatrix;"), l.push("uniform mat4 viewMatrix;"), l.push("uniform mat4 projMatrix;"), l.push("uniform vec4 colorize;"), l.push("uniform vec3 offset;"), s && l.push("uniform mat4 positionsDecodeMatrix;");
                n && l.push("varying vec4 vWorldPosition;");
                if (l.push("uniform vec4   lightAmbient;"), l.push("uniform vec4   fillColor;"), r) {
                    for (l.push("attribute vec3 normal;"), l.push("uniform mat4 modelNormalMatrix;"), l.push("uniform mat4 viewNormalMatrix;"), c = 0, h = i.lights.length; c < h; c++) d = i.lights[c], "ambient" !== d.type && (l.push("uniform vec4 lightColor" + c + ";"), "dir" === d.type && l.push("uniform vec3 lightDir" + c + ";"), "point" === d.type && l.push("uniform vec3 lightPos" + c + ";"), "spot" === d.type && l.push("uniform vec3 lightPos" + c + ";"));
                    s && (l.push("vec3 octDecode(vec2 oct) {"), l.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"), l.push("    if (v.z < 0.0) {"), l.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"), l.push("    }"), l.push("    return normalize(v);"), l.push("}"))
                }
                l.push("varying vec4 vColor;"), ("spherical" === o || "cylindrical" === o) && (l.push("void billboard(inout mat4 mat) {"), l.push("   mat[0][0] = 1.0;"), l.push("   mat[0][1] = 0.0;"), l.push("   mat[0][2] = 0.0;"), "spherical" === o && (l.push("   mat[1][0] = 0.0;"), l.push("   mat[1][1] = 1.0;"), l.push("   mat[1][2] = 0.0;")), l.push("   mat[2][0] = 0.0;"), l.push("   mat[2][1] = 0.0;"), l.push("   mat[2][2] =1.0;"), l.push("}"));
                l.push("void main(void) {"), l.push("vec4 localPosition = vec4(position, 1.0); "), l.push("vec4 worldPosition;"), s && l.push("localPosition = positionsDecodeMatrix * localPosition;");
                r && (s ? l.push("vec4 localNormal = vec4(octDecode(normal.xy), 0.0); ") : l.push("vec4 localNormal = vec4(normal, 0.0); "), l.push("mat4 modelNormalMatrix2 = modelNormalMatrix;"), l.push("mat4 viewNormalMatrix2 = viewNormalMatrix;"));
                l.push("mat4 viewMatrix2 = viewMatrix;"), l.push("mat4 modelMatrix2 = modelMatrix;"), a && l.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" === o || "cylindrical" === o ? (l.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), l.push("billboard(modelMatrix2);"), l.push("billboard(viewMatrix2);"), l.push("billboard(modelViewMatrix);"), r && (l.push("mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;"), l.push("billboard(modelNormalMatrix2);"), l.push("billboard(viewNormalMatrix2);"), l.push("billboard(modelViewNormalMatrix);")), l.push("worldPosition = modelMatrix2 * localPosition;"), l.push("vec4 viewPosition = modelViewMatrix * localPosition;")) : (l.push("worldPosition = modelMatrix2 * localPosition;"), l.push("worldPosition.xyz = worldPosition.xyz + offset;"), l.push("vec4 viewPosition  = viewMatrix2 * worldPosition; "));
                r && l.push("vec3 viewNormal = normalize((viewNormalMatrix2 * modelNormalMatrix2 * localNormal).xyz);");
                if (l.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"), l.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"), l.push("float lambertian = 1.0;"), r)
                    for (c = 0, h = i.lights.length; c < h; c++)
                        if (d = i.lights[c], "ambient" !== d.type) {
                            if ("dir" === d.type) "view" === d.space ? l.push("viewLightDir = normalize(lightDir" + c + ");") : l.push("viewLightDir = normalize((viewMatrix2 * vec4(lightDir" + c + ", 0.0)).xyz);");
                            else {
                                if ("point" !== d.type) continue;
                                "view" === d.space ? l.push("viewLightDir = normalize(lightPos" + c + " - viewPosition.xyz);") : l.push("viewLightDir = normalize((viewMatrix2 * vec4(lightPos" + c + ", 0.0)).xyz);")
                            }
                            l.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"), l.push("reflectedColor += lambertian * (lightColor" + c + ".rgb * lightColor" + c + ".a);")
                        } l.push("vColor = vec4(reflectedColor * fillColor.rgb, fillColor.a);"), n && l.push("vWorldPosition = worldPosition;");
                "points" === e._geometry._state.primitiveName && l.push("gl_PointSize = pointSize;");
                return l.push("   gl_Position = projMatrix * viewPosition;"), l.push("}"), l
            }(e), this.fragment = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = e.scene.gammaOutput,
                    r = t.sectionPlanes.length > 0;
                let n, s;
                const o = [];
                o.push("// Lambertian drawing fragment shader"), o.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), o.push("precision highp float;"), o.push("precision highp int;"), o.push("#else"), o.push("precision mediump float;"), o.push("precision mediump int;"), o.push("#endif"), i && (o.push("uniform float gammaFactor;"), o.push("vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"), o.push("  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"), o.push("}"));
                if (r)
                    for (o.push("varying vec4 vWorldPosition;"), o.push("uniform bool clippable;"), n = 0, s = t.sectionPlanes.length; n < s; n++) o.push("uniform bool sectionPlaneActive" + n + ";"), o.push("uniform vec3 sectionPlanePos" + n + ";"), o.push("uniform vec3 sectionPlaneDir" + n + ";");
                if (o.push("varying vec4 vColor;"), o.push("void main(void) {"), r) {
                    for (o.push("if (clippable) {"), o.push("  float dist = 0.0;"), n = 0, s = t.sectionPlanes.length; n < s; n++) o.push("if (sectionPlaneActive" + n + ") {"), o.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), o.push("}");
                    o.push("  if (dist > 0.0) { discard; }"), o.push("}")
                }
                "points" === e._geometry._state.primitiveName && (o.push("vec2 cxy = 2.0 * gl_PointCoord - 1.0;"), o.push("float r = dot(cxy, cxy);"), o.push("if (r > 1.0) {"), o.push("   discard;"), o.push("}"));
                o.push("gl_FragColor = vColor;"), i ? o.push("gl_FragColor = linearToGamma(vColor, gammaFactor);") : o.push("gl_FragColor = vColor;");
                return o.push("}"), o
            }(e)
        }
    }
    const Bf = new Cc({}),
        jf = $c.vec3(),
        Lf = function(e, t) {
            this.id = Bf.addItem({}), this._hash = e, this._scene = t.scene, this._useCount = 0, this._shaderSource = new Sf(t), this._allocate(t)
        },
        Rf = {};
    Lf.get = function(e) {
        const t = [e.scene.id, e.scene.gammaOutput ? "go" : "", e.scene._sectionPlanesState.getHash(), e._geometry._state.normalsBuf ? "n" : "", e._geometry._state.compressGeometry ? "cp" : "", e._state.hash].join(";");
        let i = Rf[t];
        return i || (i = new Lf(t, e), Rf[t] = i, Pc.memory.programs++), i._useCount++, i
    }, Lf.prototype.put = function() {
        0 == --this._useCount && (Bf.removeItem(this.id), this._program && this._program.destroy(), delete Rf[this._hash], Pc.memory.programs--)
    }, Lf.prototype.webglContextRestored = function() {
        this._program = null
    }, Lf.prototype.drawMesh = function(e, t, i) {
        this._program || this._allocate(t);
        const r = this._scene,
            n = r.camera,
            s = r.canvas.gl,
            o = 0 === i ? t._xrayMaterial._state : 1 === i ? t._highlightMaterial._state : t._selectedMaterial._state,
            a = t._state,
            l = t._geometry._state,
            c = t.rtcCenter;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), s.uniformMatrix4fv(this._uViewMatrix, !1, c ? e.getRTCViewMatrix(a.rtcCenterHash, c) : n.viewMatrix), s.uniformMatrix4fv(this._uViewNormalMatrix, !1, n.viewNormalMatrix), a.clippable) {
            const e = r._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const i = r._sectionPlanesState.sectionPlanes,
                    n = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        r = n.sectionPlanesActivePerLayer[t];
                    if (s.uniform1i(e.active, r ? 1 : 0), r) {
                        const r = i[t];
                        s.uniform3fv(e.pos, c ? eh(r.dist, r.dir, c, jf) : r.pos), s.uniform3fv(e.dir, r.dir)
                    }
                }
            }
        }
        if (o.id !== this._lastMaterialId) {
            const t = o.fillColor,
                i = o.backfaces;
            e.backfaces !== i && (i ? s.disable(s.CULL_FACE) : s.enable(s.CULL_FACE), e.backfaces = i), s.uniform4f(this._uFillColor, t[0], t[1], t[2], o.fillAlpha), this._lastMaterialId = o.id
        }
        s.uniformMatrix4fv(this._uModelMatrix, s.FALSE, t.worldMatrix), this._uModelNormalMatrix && s.uniformMatrix4fv(this._uModelNormalMatrix, s.FALSE, t.worldNormalMatrix), this._uClippable && s.uniform1i(this._uClippable, a.clippable), s.uniform3fv(this._uOffset, a.offset), l.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, l.positionsDecodeMatrix), this._uUVDecodeMatrix && s.uniformMatrix3fv(this._uUVDecodeMatrix, !1, l.uvDecodeMatrix), this._aPosition && (this._aPosition.bindArrayBuffer(l.positionsBuf), e.bindArray++), this._aNormal && (this._aNormal.bindArrayBuffer(l.normalsBuf), e.bindArray++), l.indicesBuf ? (l.indicesBuf.bind(), e.bindArray++) : l.positionsBuf, this._lastGeometryId = l.id), l.indicesBuf ? (s.drawElements(l.primitive, l.indicesBuf.numItems, l.indicesBuf.itemType, 0), e.drawElements++) : l.positionsBuf && (s.drawArrays(s.TRIANGLES, 0, l.positionsBuf.numItems), e.drawArrays++)
    }, Lf.prototype._allocate = function(e) {
        const t = e.scene._lightsState,
            i = e.scene._sectionPlanesState,
            r = e.scene.canvas.gl;
        if (this._program = new dh(r, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
        const n = this._program;
        this._uPositionsDecodeMatrix = n.getLocation("positionsDecodeMatrix"), this._uModelMatrix = n.getLocation("modelMatrix"), this._uModelNormalMatrix = n.getLocation("modelNormalMatrix"), this._uViewMatrix = n.getLocation("viewMatrix"), this._uViewNormalMatrix = n.getLocation("viewNormalMatrix"), this._uProjMatrix = n.getLocation("projMatrix"), this._uLightAmbient = [], this._uLightColor = [], this._uLightDir = [], this._uLightPos = [], this._uLightAttenuation = [];
        for (var s = 0, o = t.lights.length; s < o; s++) {
            switch (t.lights[s].type) {
                case "ambient":
                    this._uLightAmbient[s] = n.getLocation("lightAmbient");
                    break;
                case "dir":
                    this._uLightColor[s] = n.getLocation("lightColor" + s), this._uLightPos[s] = null, this._uLightDir[s] = n.getLocation("lightDir" + s);
                    break;
                case "point":
                    this._uLightColor[s] = n.getLocation("lightColor" + s), this._uLightPos[s] = n.getLocation("lightPos" + s), this._uLightDir[s] = null, this._uLightAttenuation[s] = n.getLocation("lightAttenuation" + s)
            }
        }
        this._uSectionPlanes = [];
        for (s = 0, o = i.sectionPlanes.length; s < o; s++) this._uSectionPlanes.push({
            active: n.getLocation("sectionPlaneActive" + s),
            pos: n.getLocation("sectionPlanePos" + s),
            dir: n.getLocation("sectionPlaneDir" + s)
        });
        this._uFillColor = n.getLocation("fillColor"), this._aPosition = n.getAttribute("position"), this._aNormal = n.getAttribute("normal"), this._uClippable = n.getLocation("clippable"), this._uGammaFactor = n.getLocation("gammaFactor"), this._uOffset = n.getLocation("offset"), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null
    }, Lf.prototype._bindProgram = function(e) {
        const t = this._scene,
            i = t.canvas.gl,
            r = t._lightsState,
            n = t.camera,
            s = n._state;
        let o;
        this._program.bind(), e.useProgram++, e.textureUnit = 0, this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null, this._lastIndicesBufId = null, i.uniformMatrix4fv(this._uViewNormalMatrix, !1, s.normalMatrix), i.uniformMatrix4fv(this._uProjMatrix, !1, n.project._state.matrix);
        for (var a = 0, l = r.lights.length; a < l; a++) o = r.lights[a], this._uLightAmbient[a] ? i.uniform4f(this._uLightAmbient[a], o.color[0], o.color[1], o.color[2], o.intensity) : (this._uLightColor[a] && i.uniform4f(this._uLightColor[a], o.color[0], o.color[1], o.color[2], o.intensity), this._uLightPos[a] && (i.uniform3fv(this._uLightPos[a], o.pos), this._uLightAttenuation[a] && i.uniform1f(this._uLightAttenuation[a], o.attenuation)), this._uLightDir[a] && i.uniform3fv(this._uLightDir[a], o.dir));
        this._uGammaFactor && i.uniform1f(this._uGammaFactor, t.gammaFactor)
    };
    class Of {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene._sectionPlanesState.sectionPlanes.length > 0,
                    i = !!e._geometry._state.compressGeometry,
                    r = e._state.billboard,
                    n = e._state.stationary,
                    s = [];
                s.push("// Edges drawing vertex shader"), s.push("attribute vec3 position;"), s.push("uniform mat4 modelMatrix;"), s.push("uniform mat4 viewMatrix;"), s.push("uniform mat4 projMatrix;"), s.push("uniform vec4 edgeColor;"), s.push("uniform vec3 offset;"), i && s.push("uniform mat4 positionsDecodeMatrix;");
                t && s.push("varying vec4 vWorldPosition;");
                s.push("varying vec4 vColor;"), ("spherical" === r || "cylindrical" === r) && (s.push("void billboard(inout mat4 mat) {"), s.push("   mat[0][0] = 1.0;"), s.push("   mat[0][1] = 0.0;"), s.push("   mat[0][2] = 0.0;"), "spherical" === r && (s.push("   mat[1][0] = 0.0;"), s.push("   mat[1][1] = 1.0;"), s.push("   mat[1][2] = 0.0;")), s.push("   mat[2][0] = 0.0;"), s.push("   mat[2][1] = 0.0;"), s.push("   mat[2][2] =1.0;"), s.push("}"));
                s.push("void main(void) {"), s.push("vec4 localPosition = vec4(position, 1.0); "), s.push("vec4 worldPosition;"), i && s.push("localPosition = positionsDecodeMatrix * localPosition;");
                s.push("mat4 viewMatrix2 = viewMatrix;"), s.push("mat4 modelMatrix2 = modelMatrix;"), n && s.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" === r || "cylindrical" === r ? (s.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), s.push("billboard(modelMatrix2);"), s.push("billboard(viewMatrix2);"), s.push("billboard(modelViewMatrix);"), s.push("worldPosition = modelMatrix2 * localPosition;"), s.push("worldPosition.xyz = worldPosition.xyz + offset;"), s.push("vec4 viewPosition = modelViewMatrix * localPosition;")) : (s.push("worldPosition = modelMatrix2 * localPosition;"), s.push("worldPosition.xyz = worldPosition.xyz + offset;"), s.push("vec4 viewPosition  = viewMatrix2 * worldPosition; "));
                s.push("vColor = edgeColor;"), t && s.push("vWorldPosition = worldPosition;");
                return s.push("   gl_Position = projMatrix * viewPosition;"), s.push("}"), s
            }(e), this.fragment = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = e.scene.gammaOutput,
                    r = t.sectionPlanes.length > 0;
                let n, s;
                const o = [];
                o.push("// Edges drawing fragment shader"), o.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), o.push("precision highp float;"), o.push("precision highp int;"), o.push("#else"), o.push("precision mediump float;"), o.push("precision mediump int;"), o.push("#endif"), i && (o.push("uniform float gammaFactor;"), o.push("vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"), o.push("  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"), o.push("}"));
                if (r)
                    for (o.push("varying vec4 vWorldPosition;"), o.push("uniform bool clippable;"), n = 0, s = t.sectionPlanes.length; n < s; n++) o.push("uniform bool sectionPlaneActive" + n + ";"), o.push("uniform vec3 sectionPlanePos" + n + ";"), o.push("uniform vec3 sectionPlaneDir" + n + ";");
                if (o.push("varying vec4 vColor;"), o.push("void main(void) {"), r) {
                    for (o.push("if (clippable) {"), o.push("  float dist = 0.0;"), n = 0, s = t.sectionPlanes.length; n < s; n++) o.push("if (sectionPlaneActive" + n + ") {"), o.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), o.push("}");
                    o.push("  if (dist > 0.0) { discard; }"), o.push("}")
                }
                o.push("gl_FragColor = vColor;"), i ? o.push("gl_FragColor = linearToGamma(vColor, gammaFactor);") : o.push("gl_FragColor = vColor;");
                return o.push("}"), o
            }(e)
        }
    }
    const Ff = new Cc({}),
        Nf = $c.vec3(),
        Uf = function(e, t) {
            this.id = Ff.addItem({}), this._hash = e, this._scene = t.scene, this._useCount = 0, this._shaderSource = new Of(t), this._allocate(t)
        },
        Hf = {};
    Uf.get = function(e) {
        const t = [e.scene.id, e.scene.gammaOutput ? "go" : "", e.scene._sectionPlanesState.getHash(), e._geometry._state.compressGeometry ? "cp" : "", e._state.hash].join(";");
        let i = Hf[t];
        return i || (i = new Uf(t, e), Hf[t] = i, Pc.memory.programs++), i._useCount++, i
    }, Uf.prototype.put = function() {
        0 == --this._useCount && (Ff.removeItem(this.id), this._program && this._program.destroy(), delete Hf[this._hash], Pc.memory.programs--)
    }, Uf.prototype.webglContextRestored = function() {
        this._program = null
    }, Uf.prototype.drawMesh = function(e, t, i) {
        this._program || this._allocate(t);
        const r = this._scene,
            n = r.camera,
            s = r.canvas.gl;
        let o;
        const a = t._state,
            l = t._geometry,
            c = l._state,
            h = t.rtcCenter;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), s.uniformMatrix4fv(this._uViewMatrix, !1, h ? e.getRTCViewMatrix(a.rtcCenterHash, h) : n.viewMatrix), s.uniformMatrix4fv(this._uViewNormalMatrix, !1, n.viewNormalMatrix), a.clippable) {
            const e = r._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const i = r._sectionPlanesState.sectionPlanes,
                    n = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        r = n.sectionPlanesActivePerLayer[t];
                    if (s.uniform1i(e.active, r ? 1 : 0), r) {
                        const r = i[t];
                        s.uniform3fv(e.pos, h ? eh(r.dist, r.dir, h, Nf) : r.pos), s.uniform3fv(e.dir, r.dir)
                    }
                }
            }
        }
        switch (i) {
            case 0:
                o = t._xrayMaterial._state;
                break;
            case 1:
                o = t._highlightMaterial._state;
                break;
            case 2:
                o = t._selectedMaterial._state;
                break;
            case 3:
            default:
                o = t._edgeMaterial._state
        }
        if (o.id !== this._lastMaterialId) {
            const t = o.backfaces;
            if (e.backfaces !== t && (t ? s.disable(s.CULL_FACE) : s.enable(s.CULL_FACE), e.backfaces = t), e.lineWidth !== o.edgeWidth && (s.lineWidth(o.edgeWidth), e.lineWidth = o.edgeWidth), this._uEdgeColor) {
                const e = o.edgeColor,
                    t = o.edgeAlpha;
                s.uniform4f(this._uEdgeColor, e[0], e[1], e[2], t)
            }
            this._lastMaterialId = o.id
        }
        let d;
        s.uniformMatrix4fv(this._uModelMatrix, s.FALSE, t.worldMatrix), this._uModelNormalMatrix && s.uniformMatrix4fv(this._uModelNormalMatrix, s.FALSE, t.worldNormalMatrix), this._uClippable && s.uniform1i(this._uClippable, a.clippable), s.uniform3fv(this._uOffset, a.offset), c.primitive === s.TRIANGLES ? d = l._getEdgeIndices() : c.primitive === s.LINES && (d = c.indicesBuf), d && (c.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && s.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, c.positionsDecodeMatrix), this._aPosition && (this._aPosition.bindArrayBuffer(c.positionsBuf, c.compressGeometry ? s.UNSIGNED_SHORT : s.FLOAT), e.bindArray++), d.bind(), e.bindArray++, this._lastGeometryId = c.id), s.drawElements(s.LINES, d.numItems, d.itemType, 0), e.drawElements++)
    }, Uf.prototype._allocate = function(e) {
        const t = e.scene.canvas.gl,
            i = e.scene._sectionPlanesState;
        if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
        const r = this._program;
        this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uModelMatrix = r.getLocation("modelMatrix"), this._uViewMatrix = r.getLocation("viewMatrix"), this._uProjMatrix = r.getLocation("projMatrix"), this._uSectionPlanes = [];
        for (let e = 0, t = i.sectionPlanes.length; e < t; e++) this._uSectionPlanes.push({
            active: r.getLocation("sectionPlaneActive" + e),
            pos: r.getLocation("sectionPlanePos" + e),
            dir: r.getLocation("sectionPlaneDir" + e)
        });
        this._uEdgeColor = r.getLocation("edgeColor"), this._aPosition = r.getAttribute("position"), this._uClippable = r.getLocation("clippable"), this._uGammaFactor = r.getLocation("gammaFactor"), this._uOffset = r.getLocation("offset"), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null
    }, Uf.prototype._bindProgram = function(e) {
        const t = this._program,
            i = this._scene,
            r = i.canvas.gl,
            n = i.camera;
        t.bind(), e.useProgram++, this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null, r.uniformMatrix4fv(this._uProjMatrix, !1, n.project._state.matrix), this._uGammaFactor && r.uniform1f(this._uGammaFactor, i.gammaFactor)
    };
    class Vf {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene._sectionPlanesState.sectionPlanes.length > 0,
                    i = !!e._geometry._state.compressGeometry,
                    r = e._state.billboard,
                    n = e._state.stationary,
                    s = [];
                s.push("// Mesh picking vertex shader"), s.push("attribute vec3 position;"), s.push("uniform mat4 modelMatrix;"), s.push("uniform mat4 viewMatrix;"), s.push("uniform mat4 projMatrix;"), s.push("varying vec4 vViewPosition;"), s.push("uniform vec3 offset;"), i && s.push("uniform mat4 positionsDecodeMatrix;");
                t && s.push("varying vec4 vWorldPosition;");
                "spherical" !== r && "cylindrical" !== r || (s.push("void billboard(inout mat4 mat) {"), s.push("   mat[0][0] = 1.0;"), s.push("   mat[0][1] = 0.0;"), s.push("   mat[0][2] = 0.0;"), "spherical" === r && (s.push("   mat[1][0] = 0.0;"), s.push("   mat[1][1] = 1.0;"), s.push("   mat[1][2] = 0.0;")), s.push("   mat[2][0] = 0.0;"), s.push("   mat[2][1] = 0.0;"), s.push("   mat[2][2] =1.0;"), s.push("}"));
                s.push("void main(void) {"), s.push("vec4 localPosition = vec4(position, 1.0); "), i && s.push("localPosition = positionsDecodeMatrix * localPosition;");
                s.push("mat4 viewMatrix2 = viewMatrix;"), s.push("mat4 modelMatrix2 = modelMatrix;"), n && s.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" !== r && "cylindrical" !== r || (s.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), s.push("billboard(modelMatrix2);"), s.push("billboard(viewMatrix2);"));
                s.push("   vec4 worldPosition = modelMatrix2 * localPosition;"), s.push("   worldPosition.xyz = worldPosition.xyz + offset;"), s.push("   vec4 viewPosition = viewMatrix2 * worldPosition;"), t && s.push("   vWorldPosition = worldPosition;");
                return s.push("   gl_Position = projMatrix * viewPosition;"), s.push("}"), s
            }(e), this.fragment = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Mesh picking fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), r.push("uniform vec4 pickColor;"), i) {
                    r.push("uniform bool clippable;"), r.push("varying vec4 vWorldPosition;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("void main(void) {"), i) {
                    r.push("if (clippable) {"), r.push("  float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                    r.push("  if (dist > 0.0) { discard; }"), r.push("}")
                }
                return r.push("   gl_FragColor = pickColor; "), r.push("}"), r
            }(e)
        }
    }
    const zf = $c.vec3(),
        $f = function(e, t) {
            this._hash = e, this._shaderSource = new Vf(t), this._scene = t.scene, this._useCount = 0, this._allocate(t)
        },
        Wf = {};
    $f.get = function(e) {
        const t = [e.scene.canvas.canvas.id, e.scene._sectionPlanesState.getHash(), e._geometry._state.hash, e._state.hash].join(";");
        let i = Wf[t];
        if (!i) {
            if (i = new $f(t, e), i.errors) return console.log(i.errors.join("\n")), null;
            Wf[t] = i, Pc.memory.programs++
        }
        return i._useCount++, i
    }, $f.prototype.put = function() {
        0 == --this._useCount && (this._program && this._program.destroy(), delete Wf[this._hash], Pc.memory.programs--)
    }, $f.prototype.webglContextRestored = function() {
        this._program = null
    }, $f.prototype.drawMesh = function(e, t) {
        this._program || this._allocate(t);
        const i = this._scene,
            r = i.canvas.gl,
            n = t._state,
            s = t._material._state,
            o = t._geometry._state,
            a = t.rtcCenter;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), r.uniformMatrix4fv(this._uViewMatrix, !1, a ? e.getRTCPickViewMatrix(n.rtcCenterHash, a) : e.pickViewMatrix), n.clippable) {
            const e = i._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const n = i._sectionPlanesState.sectionPlanes,
                    s = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        i = s.sectionPlanesActivePerLayer[t];
                    if (r.uniform1i(e.active, i ? 1 : 0), i) {
                        const i = n[t];
                        r.uniform3fv(e.pos, a ? eh(i.dist, i.dir, a, zf) : i.pos), r.uniform3fv(e.dir, i.dir)
                    }
                }
            }
        }
        if (s.id !== this._lastMaterialId) {
            const t = s.backfaces;
            e.backfaces !== t && (t ? r.disable(r.CULL_FACE) : r.enable(r.CULL_FACE), e.backfaces = t);
            const i = s.frontface;
            e.frontface !== i && (i ? r.frontFace(r.CCW) : r.frontFace(r.CW), e.frontface = i), this._lastMaterialId = s.id
        }
        r.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), r.uniformMatrix4fv(this._uModelMatrix, !1, t.worldMatrix), this._uClippable && r.uniform1i(this._uClippable, t._state.clippable), r.uniform3fv(this._uOffset, t._state.offset), o.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && r.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, o.positionsDecodeMatrix), this._aPosition && (this._aPosition.bindArrayBuffer(o.positionsBuf, o.compressGeometry ? r.UNSIGNED_SHORT : r.FLOAT), e.bindArray++), o.indicesBuf && (o.indicesBuf.bind(), e.bindArray++), this._lastGeometryId = o.id);
        var l = t._state.pickID;
        const c = l >> 24 & 255,
            h = l >> 16 & 255,
            d = l >> 8 & 255,
            u = 255 & l;
        r.uniform4f(this._uPickColor, u / 255, d / 255, h / 255, c / 255), o.indicesBuf ? (r.drawElements(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0), e.drawElements++) : o.positions && r.drawArrays(r.TRIANGLES, 0, o.positions.numItems)
    }, $f.prototype._allocate = function(e) {
        const t = e.scene.canvas.gl;
        if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
        const i = this._program;
        this._uPositionsDecodeMatrix = i.getLocation("positionsDecodeMatrix"), this._uModelMatrix = i.getLocation("modelMatrix"), this._uViewMatrix = i.getLocation("viewMatrix"), this._uProjMatrix = i.getLocation("projMatrix"), this._uSectionPlanes = [];
        for (let t = 0, r = e.scene._sectionPlanesState.sectionPlanes.length; t < r; t++) this._uSectionPlanes.push({
            active: i.getLocation("sectionPlaneActive" + t),
            pos: i.getLocation("sectionPlanePos" + t),
            dir: i.getLocation("sectionPlaneDir" + t)
        });
        this._aPosition = i.getAttribute("position"), this._uClippable = i.getLocation("clippable"), this._uPickColor = i.getLocation("pickColor"), this._uOffset = i.getLocation("offset"), this._lastMaterialId = null, this._lastGeometryId = null
    }, $f.prototype._bindProgram = function(e) {
        this._program.bind(), e.useProgram++, this._lastMaterialId = null, this._lastGeometryId = null
    };
    class qf {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene._sectionPlanesState.sectionPlanes.length > 0,
                    i = !!e._geometry._state.compressGeometry,
                    r = (e._state.billboard, e._state.stationary, []);
                r.push("// Surface picking vertex shader"), r.push("attribute vec3 position;"), r.push("attribute vec4 color;"), r.push("uniform mat4 modelMatrix;"), r.push("uniform mat4 viewMatrix;"), r.push("uniform mat4 projMatrix;"), r.push("uniform vec3 offset;"), t && (r.push("uniform bool clippable;"), r.push("varying vec4 vWorldPosition;"));
                r.push("varying vec4 vColor;"), i && r.push("uniform mat4 positionsDecodeMatrix;");
                r.push("void main(void) {"), r.push("vec4 localPosition = vec4(position, 1.0); "), i && r.push("localPosition = positionsDecodeMatrix * localPosition;");
                r.push("   vec4 worldPosition = modelMatrix * localPosition; "), r.push("   worldPosition.xyz = worldPosition.xyz + offset;"), r.push("   vec4 viewPosition = viewMatrix * worldPosition;"), t && r.push("   vWorldPosition = worldPosition;");
                return r.push("   vColor = color;"), r.push("   gl_Position = projMatrix * viewPosition;"), r.push("}"), r
            }(e), this.fragment = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Surface picking fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), r.push("varying vec4 vColor;"), i) {
                    r.push("uniform bool clippable;"), r.push("varying vec4 vWorldPosition;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("void main(void) {"), i) {
                    r.push("if (clippable) {"), r.push("  float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                    r.push("  if (dist > 0.0) { discard; }"), r.push("}")
                }
                return r.push("   gl_FragColor = vColor;"), r.push("}"), r
            }(e)
        }
    }
    const Gf = $c.vec3(),
        Yf = function(e, t) {
            this._hash = e, this._scene = t.scene, this._useCount = 0, this._shaderSource = new qf(t), this._allocate(t)
        },
        Zf = {};
    Yf.get = function(e) {
        const t = [e.scene.canvas.canvas.id, e.scene._sectionPlanesState.getHash(), e._geometry._state.compressGeometry ? "cp" : "", e._state.hash].join(";");
        let i = Zf[t];
        if (!i) {
            if (i = new Yf(t, e), i.errors) return console.log(i.errors.join("\n")), null;
            Zf[t] = i, Pc.memory.programs++
        }
        return i._useCount++, i
    }, Yf.prototype.put = function() {
        0 == --this._useCount && (this._program && this._program.destroy(), delete Zf[this._hash], Pc.memory.programs--)
    }, Yf.prototype.webglContextRestored = function() {
        this._program = null
    }, Yf.prototype.drawMesh = function(e, t) {
        this._program || this._allocate(t);
        const i = this._scene,
            r = i.canvas.gl,
            n = t._state,
            s = t._material._state,
            o = t._geometry,
            a = t._geometry._state,
            l = t.rtcCenter,
            c = s.backfaces,
            h = s.frontface,
            d = o._getPickTrianglePositions(),
            u = o._getPickTriangleColors();
        if (this._program.bind(), e.useProgram++, r.uniformMatrix4fv(this._uViewMatrix, !1, l ? e.getRTCPickViewMatrix(n.rtcCenterHash, l) : e.pickViewMatrix), n.clippable) {
            const e = i._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const n = i._sectionPlanesState.sectionPlanes,
                    s = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        i = s.sectionPlanesActivePerLayer[t];
                    if (r.uniform1i(e.active, i ? 1 : 0), i) {
                        const i = n[t];
                        r.uniform3fv(e.pos, l ? eh(i.dist, i.dir, l, Gf) : i.pos), r.uniform3fv(e.dir, i.dir)
                    }
                }
            }
        }
        r.uniformMatrix4fv(this._uProjMatrix, !1, e.pickProjMatrix), e.backfaces !== c && (c ? r.disable(r.CULL_FACE) : r.enable(r.CULL_FACE), e.backfaces = c), e.frontface !== h && (h ? r.frontFace(r.CCW) : r.frontFace(r.CW), e.frontface = h), r.uniformMatrix4fv(this._uModelMatrix, !1, t.worldMatrix), this._uClippable && r.uniform1i(this._uClippable, t._state.clippable), r.uniform3fv(this._uOffset, t._state.offset), this._uPositionsDecodeMatrix ? (r.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, a.positionsDecodeMatrix), this._aPosition.bindArrayBuffer(d, a.compressGeometry ? r.UNSIGNED_SHORT : r.FLOAT)) : this._aPosition.bindArrayBuffer(d), u.bind(), r.enableVertexAttribArray(this._aColor.location), r.vertexAttribPointer(this._aColor.location, u.itemSize, u.itemType, !0, 0, 0), r.drawArrays(a.primitive, 0, d.numItems / 3)
    }, Yf.prototype._allocate = function(e) {
        const t = e.scene.canvas.gl;
        if (this._program = new dh(t, this._shaderSource), this._useCount = 0, this._program.errors) return void(this.errors = this._program.errors);
        const i = this._program;
        this._uPositionsDecodeMatrix = i.getLocation("positionsDecodeMatrix"), this._uModelMatrix = i.getLocation("modelMatrix"), this._uViewMatrix = i.getLocation("viewMatrix"), this._uProjMatrix = i.getLocation("projMatrix"), this._uSectionPlanes = [];
        for (let t = 0, r = e.scene._sectionPlanesState.sectionPlanes.length; t < r; t++) this._uSectionPlanes.push({
            active: i.getLocation("sectionPlaneActive" + t),
            pos: i.getLocation("sectionPlanePos" + t),
            dir: i.getLocation("sectionPlaneDir" + t)
        });
        this._aPosition = i.getAttribute("position"), this._aColor = i.getAttribute("color"), this._uClippable = i.getLocation("clippable"), this._uOffset = i.getLocation("offset")
    };
    class Xf {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene._sectionPlanesState.sectionPlanes.length > 0,
                    i = !!e._geometry._state.compressGeometry,
                    r = e._state.billboard,
                    n = e._state.stationary,
                    s = [];
                s.push("// Mesh occlusion vertex shader"), s.push("attribute vec3 position;"), s.push("uniform mat4 modelMatrix;"), s.push("uniform mat4 viewMatrix;"), s.push("uniform mat4 projMatrix;"), s.push("uniform vec3 offset;"), i && s.push("uniform mat4 positionsDecodeMatrix;");
                t && s.push("varying vec4 vWorldPosition;");
                "spherical" !== r && "cylindrical" !== r || (s.push("void billboard(inout mat4 mat) {"), s.push("   mat[0][0] = 1.0;"), s.push("   mat[0][1] = 0.0;"), s.push("   mat[0][2] = 0.0;"), "spherical" === r && (s.push("   mat[1][0] = 0.0;"), s.push("   mat[1][1] = 1.0;"), s.push("   mat[1][2] = 0.0;")), s.push("   mat[2][0] = 0.0;"), s.push("   mat[2][1] = 0.0;"), s.push("   mat[2][2] =1.0;"), s.push("}"));
                s.push("void main(void) {"), s.push("vec4 localPosition = vec4(position, 1.0); "), i && s.push("localPosition = positionsDecodeMatrix * localPosition;");
                s.push("mat4 viewMatrix2 = viewMatrix;"), s.push("mat4 modelMatrix2 = modelMatrix;"), n && s.push("viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;");
                "spherical" !== r && "cylindrical" !== r || (s.push("mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;"), s.push("billboard(modelMatrix2);"), s.push("billboard(viewMatrix2);"));
                s.push("   vec4 worldPosition = modelMatrix2 * localPosition;"), s.push("   worldPosition.xyz = worldPosition.xyz + offset;"), s.push("   vec4 viewPosition = viewMatrix2 * worldPosition;"), t && s.push("   vWorldPosition = worldPosition;");
                return s.push("   gl_Position = projMatrix * viewPosition;"), s.push("}"), s
            }(e), this.fragment = function(e) {
                const t = e.scene._sectionPlanesState,
                    i = t.sectionPlanes.length > 0,
                    r = [];
                if (r.push("// Mesh occlusion fragment shader"), r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), r.push("precision highp float;"), r.push("precision highp int;"), r.push("#else"), r.push("precision mediump float;"), r.push("precision mediump int;"), r.push("#endif"), i) {
                    r.push("uniform bool clippable;"), r.push("varying vec4 vWorldPosition;");
                    for (var n = 0; n < t.sectionPlanes.length; n++) r.push("uniform bool sectionPlaneActive" + n + ";"), r.push("uniform vec3 sectionPlanePos" + n + ";"), r.push("uniform vec3 sectionPlaneDir" + n + ";")
                }
                if (r.push("void main(void) {"), i) {
                    r.push("if (clippable) {"), r.push("  float dist = 0.0;");
                    for (n = 0; n < t.sectionPlanes.length; n++) r.push("if (sectionPlaneActive" + n + ") {"), r.push("   dist += clamp(dot(-sectionPlaneDir" + n + ".xyz, vWorldPosition.xyz - sectionPlanePos" + n + ".xyz), 0.0, 1000.0);"), r.push("}");
                    r.push("  if (dist > 0.0) { discard; }"), r.push("}")
                }
                return r.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "), r.push("}"), r
            }(e)
        }
    }
    const Kf = $c.vec3(),
        Qf = function(e, t) {
            this._hash = e, this._shaderSource = new Xf(t), this._scene = t.scene, this._useCount = 0, this._allocate(t)
        },
        Jf = {};
    Qf.get = function(e) {
        const t = [e.scene.canvas.canvas.id, e.scene._sectionPlanesState.getHash(), e._geometry._state.hash, e._state.hash].join(";");
        let i = Jf[t];
        if (!i) {
            if (i = new Qf(t, e), i.errors) return console.log(i.errors.join("\n")), null;
            Jf[t] = i, Pc.memory.programs++
        }
        return i._useCount++, i
    }, Qf.prototype.put = function() {
        0 == --this._useCount && (this._program && this._program.destroy(), delete Jf[this._hash], Pc.memory.programs--)
    }, Qf.prototype.webglContextRestored = function() {
        this._program = null
    }, Qf.prototype.drawMesh = function(e, t) {
        this._program || this._allocate(t);
        const i = this._scene,
            r = i.canvas.gl,
            n = t._material._state,
            s = t._state,
            o = t._geometry._state,
            a = t.rtcCenter;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), n.id !== this._lastMaterialId) {
            const t = n.backfaces;
            e.backfaces !== t && (t ? r.disable(r.CULL_FACE) : r.enable(r.CULL_FACE), e.backfaces = t);
            const i = n.frontface;
            e.frontface !== i && (i ? r.frontFace(r.CCW) : r.frontFace(r.CW), e.frontface = i), this._lastMaterialId = n.id
        }
        const l = i.camera;
        if (r.uniformMatrix4fv(this._uViewMatrix, !1, a ? e.getRTCViewMatrix(s.rtcCenterHash, a) : l.viewMatrix), s.clippable) {
            const e = i._sectionPlanesState.sectionPlanes.length;
            if (e > 0) {
                const n = i._sectionPlanesState.sectionPlanes,
                    s = t.renderFlags;
                for (let t = 0; t < e; t++) {
                    const e = this._uSectionPlanes[t],
                        i = s.sectionPlanesActivePerLayer[t];
                    if (r.uniform1i(e.active, i ? 1 : 0), i) {
                        const i = n[t];
                        r.uniform3fv(e.pos, a ? eh(i.dist, i.dir, a, Kf) : i.pos), r.uniform3fv(e.dir, i.dir)
                    }
                }
            }
        }
        r.uniformMatrix4fv(this._uProjMatrix, !1, l._project._state.matrix), r.uniformMatrix4fv(this._uModelMatrix, r.FALSE, t.worldMatrix), this._uClippable && r.uniform1i(this._uClippable, t._state.clippable), r.uniform3fv(this._uOffset, t._state.offset), o.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && r.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, o.positionsDecodeMatrix), this._aPosition && (this._aPosition.bindArrayBuffer(o.positionsBuf, o.compressGeometry ? r.UNSIGNED_SHORT : r.FLOAT), e.bindArray++), o.indicesBuf && (o.indicesBuf.bind(), e.bindArray++), this._lastGeometryId = o.id), o.indicesBuf ? (r.drawElements(o.primitive, o.indicesBuf.numItems, o.indicesBuf.itemType, 0), e.drawElements++) : o.positions && r.drawArrays(r.TRIANGLES, 0, o.positions.numItems)
    }, Qf.prototype._allocate = function(e) {
        const t = e.scene.canvas.gl;
        if (this._program = new dh(t, this._shaderSource), this._program.errors) return void(this.errors = this._program.errors);
        const i = this._program;
        this._uPositionsDecodeMatrix = i.getLocation("positionsDecodeMatrix"), this._uModelMatrix = i.getLocation("modelMatrix"), this._uViewMatrix = i.getLocation("viewMatrix"), this._uProjMatrix = i.getLocation("projMatrix"), this._uSectionPlanes = [];
        for (let t = 0, r = e.scene._sectionPlanesState.sectionPlanes.length; t < r; t++) this._uSectionPlanes.push({
            active: i.getLocation("sectionPlaneActive" + t),
            pos: i.getLocation("sectionPlanePos" + t),
            dir: i.getLocation("sectionPlaneDir" + t)
        });
        this._aPosition = i.getAttribute("position"), this._uClippable = i.getLocation("clippable"), this._uOffset = i.getLocation("offset"), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null
    }, Qf.prototype._bindProgram = function(e) {
        this._scene;
        this._program.bind(), e.useProgram++, this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null
    };
    class e_ {
        constructor(e) {
            this.vertex = function(e) {
                const t = e.scene._sectionPlanesState.sectionPlanes.length > 0,
                    i = !!e._geometry._state.compressGeometry,
                    r = [];
                r.push("// Mesh shadow vertex shader"), r.push("attribute vec3 position;"), r.push("uniform mat4 modelMatrix;"), r.push("uniform mat4 shadowViewMatrix;"), r.push("uniform mat4 shadowProjMatrix;"), r.push("uniform vec3 offset;"), i && r.push("uniform mat4 positionsDecodeMatrix;");
                t && r.push("varying vec4 vWorldPosition;");
                r.push("void main(void) {"), r.push("vec4 localPosition = vec4(position, 1.0); "), r.push("vec4 worldPosition;"), i && r.push("localPosition = positionsDecodeMatrix * localPosition;");
                r.push("worldPosition = modelMatrix * localPosition;"), r.push("worldPosition.xyz = worldPosition.xyz + offset;"), r.push("vec4 viewPosition  = shadowViewMatrix * worldPosition; "), t && r.push("vWorldPosition = worldPosition;");
                return r.push("   gl_Position = shadowProjMatrix * viewPosition;"), r.push("}"), r
            }(e), this.fragment = function(e) {
                const t = e.scene,
                    i = (t.canvas.gl, t._sectionPlanesState),
                    r = i.sectionPlanes.length > 0,
                    n = [];
                if (n.push("// Mesh shadow fragment shader"), n.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"), n.push("precision highp float;"), n.push("precision highp int;"), n.push("#else"), n.push("precision mediump float;"), n.push("precision mediump int;"), n.push("#endif"), r) {
                    n.push("uniform bool clippable;"), n.push("varying vec4 vWorldPosition;");
                    for (var s = 0; s < i.sectionPlanes.length; s++) n.push("uniform bool sectionPlaneActive" + s + ";"), n.push("uniform vec3 sectionPlanePos" + s + ";"), n.push("uniform vec3 sectionPlaneDir" + s + ";")
                }
                if (n.push("vec4 encodeFloat( const in float depth ) {"), n.push("  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);"), n.push("  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);"), n.push("  vec4 comp = fract(depth * bitShift);"), n.push("  comp -= comp.xxyz * bitMask;"), n.push("  return comp;"), n.push("}"), n.push("void main(void) {"), r) {
                    n.push("if (clippable) {"), n.push("  float dist = 0.0;");
                    for (s = 0; s < i.sectionPlanes.length; s++) n.push("if (sectionPlaneActive" + s + ") {"), n.push("   dist += clamp(dot(-sectionPlaneDir" + s + ".xyz, vWorldPosition.xyz - sectionPlanePos" + s + ".xyz), 0.0, 1000.0);"), n.push("}");
                    n.push("  if (dist > 0.0) { discard; }"), n.push("}")
                }
                return n.push("gl_FragColor = encodeFloat(gl_FragCoord.z);"), n.push("}"), n
            }(e)
        }
    }
    const t_ = function(e, t) {
            this._hash = e, this._shaderSource = new e_(t), this._scene = t.scene, this._useCount = 0, this._allocate(t)
        },
        i_ = {};
    t_.get = function(e) {
        const t = e.scene,
            i = [t.canvas.canvas.id, t._sectionPlanesState.getHash(), e._geometry._state.hash, e._state.hash].join(";");
        let r = i_[i];
        if (!r) {
            if (r = new t_(i, e), r.errors) return console.log(r.errors.join("\n")), null;
            i_[i] = r, Pc.memory.programs++
        }
        return r._useCount++, r
    }, t_.prototype.put = function() {
        0 == --this._useCount && (this._program && this._program.destroy(), delete i_[this._hash], Pc.memory.programs--)
    }, t_.prototype.webglContextRestored = function() {
        this._program = null
    }, t_.prototype.drawMesh = function(e, t) {
        this._program || this._allocate(t);
        const i = this._scene.canvas.gl,
            r = t._material._state,
            n = t._geometry._state;
        if (e.lastProgramId !== this._program.id && (e.lastProgramId = this._program.id, this._bindProgram(e)), r.id !== this._lastMaterialId) {
            const t = r.backfaces;
            e.backfaces !== t && (t ? i.disable(i.CULL_FACE) : i.enable(i.CULL_FACE), e.backfaces = t);
            const n = r.frontface;
            e.frontface !== n && (n ? i.frontFace(i.CCW) : i.frontFace(i.CW), e.frontface = n), e.lineWidth !== r.lineWidth && (i.lineWidth(r.lineWidth), e.lineWidth = r.lineWidth), this._uPointSize && i.uniform1i(this._uPointSize, r.pointSize), this._lastMaterialId = r.id
        }
        if (i.uniformMatrix4fv(this._uModelMatrix, i.FALSE, t.worldMatrix), n.combineGeometry) {
            const r = t.vertexBufs;
            r.id !== this._lastVertexBufsId && (r.positionsBuf && this._aPosition && (this._aPosition.bindArrayBuffer(r.positionsBuf, r.compressGeometry ? i.UNSIGNED_SHORT : i.FLOAT), e.bindArray++), this._lastVertexBufsId = r.id)
        }
        this._uClippable && i.uniform1i(this._uClippable, t._state.clippable), i.uniform3fv(this._uOffset, t._state.offset), n.id !== this._lastGeometryId && (this._uPositionsDecodeMatrix && i.uniformMatrix4fv(this._uPositionsDecodeMatrix, !1, n.positionsDecodeMatrix), n.combineGeometry ? n.indicesBufCombined && (n.indicesBufCombined.bind(), e.bindArray++) : (this._aPosition && (this._aPosition.bindArrayBuffer(n.positionsBuf, n.compressGeometry ? i.UNSIGNED_SHORT : i.FLOAT), e.bindArray++), n.indicesBuf && (n.indicesBuf.bind(), e.bindArray++)), this._lastGeometryId = n.id), n.combineGeometry ? n.indicesBufCombined && (i.drawElements(n.primitive, n.indicesBufCombined.numItems, n.indicesBufCombined.itemType, 0), e.drawElements++) : n.indicesBuf ? (i.drawElements(n.primitive, n.indicesBuf.numItems, n.indicesBuf.itemType, 0), e.drawElements++) : n.positions && (i.drawArrays(i.TRIANGLES, 0, n.positions.numItems), e.drawArrays++)
    }, t_.prototype._allocate = function(e) {
        const t = e.scene,
            i = t.canvas.gl;
        if (this._program = new dh(i, this._shaderSource), this._scene = t, this._useCount = 0, this._program.errors) return void(this.errors = this._program.errors);
        const r = this._program;
        this._uPositionsDecodeMatrix = r.getLocation("positionsDecodeMatrix"), this._uModelMatrix = r.getLocation("modelMatrix"), this._uShadowViewMatrix = r.getLocation("shadowViewMatrix"), this._uShadowProjMatrix = r.getLocation("shadowProjMatrix"), this._uSectionPlanes = {};
        for (let e = 0, i = t._sectionPlanesState.sectionPlanes.length; e < i; e++) this._uSectionPlanes.push({
            active: r.getLocation("sectionPlaneActive" + e),
            pos: r.getLocation("sectionPlanePos" + e),
            dir: r.getLocation("sectionPlaneDir" + e)
        });
        this._aPosition = r.getAttribute("position"), this._uClippable = r.getLocation("clippable"), this._uOffset = r.getLocation("offset"), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null
    }, t_.prototype._bindProgram = function(e) {
        this._program || this._allocate(mesh);
        const t = this._scene,
            i = t.canvas.gl,
            r = t._sectionPlanesState;
        if (this._program.bind(), e.useProgram++, i.uniformMatrix4fv(this._uShadowViewMatrix, !1, e.shadowViewMatrix), i.uniformMatrix4fv(this._uShadowProjMatrix, !1, e.shadowProjMatrix), this._lastMaterialId = null, this._lastVertexBufsId = null, this._lastGeometryId = null, r.sectionPlanes.length > 0) {
            let e, t, n, s, o;
            for (let a = 0, l = this._uSectionPlanes.length; a < l; a++) e = this._uSectionPlanes[a], t = e.active, n = r.sectionPlanes[a], t && i.uniform1i(t, n.active), s = e.pos, s && i.uniform3fv(e.pos, n.pos), o = e.dir, o && i.uniform3fv(e.dir, n.dir)
        }
    };
    const r_ = $c.OBB3(),
        n_ = new Float32Array(4),
        s_ = new Float32Array(4),
        o_ = new Float32Array(4),
        a_ = new Float32Array([1, 0, 0]),
        l_ = new Float32Array([0, 1, 0]),
        c_ = new Float32Array([0, 0, 1]),
        h_ = new Float32Array(3),
        d_ = new Float32Array(3),
        u_ = $c.identityMat4();
    class p_ extends Wc {
        get type() {
            return "Mesh"
        }
        constructor(e, t = {}) {
            if (super(e, t), this.renderFlags = new sf, this._state = new xh({
                    visible: !0,
                    culled: !1,
                    pickable: null,
                    clippable: null,
                    collidable: null,
                    castsShadow: null,
                    receivesShadow: null,
                    xrayed: !1,
                    highlighted: !1,
                    selected: !1,
                    edges: !1,
                    stationary: !!t.stationary,
                    billboard: this._checkBillboard(t.billboard),
                    layer: null,
                    colorize: null,
                    pickID: this.scene._renderer.getPickID(this),
                    drawHash: "",
                    pickHash: "",
                    offset: $c.vec3(),
                    rtcCenter: null,
                    rtcCenterHash: null
                }), this._drawRenderer = null, this._shadowRenderer = null, this._emphasisFillRenderer = null, this._emphasisEdgesRenderer = null, this._pickMeshRenderer = null, this._pickTriangleRenderer = null, this._occlusionRenderer = null, this._geometry = t.geometry ? this._checkComponent2(["ReadableGeometry", "VBOGeometry"], t.geometry) : this.scene.geometry, this._material = t.material ? this._checkComponent2(["PhongMaterial", "MetallicMaterial", "SpecularMaterial", "LambertMaterial"], t.material) : this.scene.material, this._xrayMaterial = t.xrayMaterial ? this._checkComponent("EmphasisMaterial", t.xrayMaterial) : this.scene.xrayMaterial, this._highlightMaterial = t.highlightMaterial ? this._checkComponent("EmphasisMaterial", t.highlightMaterial) : this.scene.highlightMaterial, this._selectedMaterial = t.selectedMaterial ? this._checkComponent("EmphasisMaterial", t.selectedMaterial) : this.scene.selectedMaterial, this._edgeMaterial = t.edgeMaterial ? this._checkComponent("EdgeMaterial", t.edgeMaterial) : this.scene.edgeMaterial, this._parentNode = null, this._aabb = null, this._aabbDirty = !0, this._numTriangles = this._geometry ? this._geometry.numTriangles : 0, this.scene._aabbDirty = !0, this._scale = $c.vec3(), this._quaternion = $c.identityQuaternion(), this._rotation = $c.vec3(), this._position = $c.vec3(), this._worldMatrix = $c.identityMat4(), this._worldNormalMatrix = $c.identityMat4(), this._localMatrixDirty = !0, this._worldMatrixDirty = !0, this._worldNormalMatrixDirty = !0, t.rtcCenter && (this._state.rtcCenter = $c.vec3(t.rtcCenter), this._state.rtcCenterHash = t.rtcCenter.join()), t.matrix ? this.matrix = t.matrix : (this.scale = t.scale, this.position = t.position, t.quaternion || (this.rotation = t.rotation)), this._isObject = t.isObject, this._isObject && this.scene._registerObject(this), this._isModel = t.isModel, this._isModel && this.scene._registerModel(this), this.visible = t.visible, this.culled = t.culled, this.pickable = t.pickable, this.clippable = t.clippable, this.collidable = t.collidable, this.castsShadow = t.castsShadow, this.receivesShadow = t.receivesShadow, this.xrayed = t.xrayed, this.highlighted = t.highlighted, this.selected = t.selected, this.edges = t.edges, this.layer = t.layer, this.colorize = t.colorize, this.opacity = t.opacity, this.offset = t.offset, t.parentId) {
                const e = this.scene.components[t.parentId];
                e ? e.isNode ? e.addChild(this) : this.error("Parent is not a Node: '" + t.parentId + "'") : this.error("Parent not found: '" + t.parentId + "'"), this._parentNode = e
            } else t.parent && (t.parent.isNode || this.error("Parent is not a Node"), t.parent.addChild(this), this._parentNode = t.parent);
            this.compile()
        }
        get isMesh() {
            return !0
        }
        get parent() {
            return this._parentNode
        }
        _checkBillboard(e) {
            return "spherical" !== (e = e || "none") && "cylindrical" !== e && "none" !== e && (this.error("Unsupported value for 'billboard': " + e + " - accepted values are 'spherical', 'cylindrical' and 'none' - defaulting to 'none'."), e = "none"), e
        }
        compile() {
            const e = this._makeDrawHash();
            this._state.drawHash !== e && (this._state.drawHash = e, this._putDrawRenderers(), this._drawRenderer = Tf.get(this), this._emphasisFillRenderer = Lf.get(this), this._emphasisEdgesRenderer = Uf.get(this));
            const t = this._makePickHash();
            this._state.pickHash !== t && (this._state.pickHash = t, this._putPickRenderers(), this._pickMeshRenderer = $f.get(this));
            const i = this._makeOcclusionHash();
            this._state.occlusionHash !== i && (this._state.occlusionHash = i, this._putOcclusionRenderer(), this._occlusionRenderer = Qf.get(this))
        }
        _setLocalMatrixDirty() {
            this._localMatrixDirty = !0, this._setWorldMatrixDirty()
        }
        _setWorldMatrixDirty() {
            this._worldMatrixDirty = !0, this._worldNormalMatrixDirty = !0
        }
        _buildWorldMatrix() {
            const e = this.matrix;
            if (this._parentNode) $c.mulMat4(this._parentNode.worldMatrix, e, this._worldMatrix);
            else
                for (let t = 0, i = e.length; t < i; t++) this._worldMatrix[t] = e[t];
            this._worldMatrixDirty = !1
        }
        _buildWorldNormalMatrix() {
            this._worldMatrixDirty && this._buildWorldMatrix(), this._worldNormalMatrix || (this._worldNormalMatrix = $c.mat4()), $c.transposeMat4(this._worldMatrix, this._worldNormalMatrix), $c.inverseMat4(this._worldNormalMatrix), this._worldNormalMatrixDirty = !1
        }
        _setAABBDirty() {
            if (this.collidable)
                for (let e = this; e; e = e._parentNode) e._aabbDirty = !0
        }
        _updateAABB() {
            this.scene._aabbDirty = !0, this._aabb || (this._aabb = $c.AABB3()), this._buildAABB(this.worldMatrix, this._aabb), this._aabbDirty = !1
        }
        _webglContextRestored() {
            this._drawRenderer && this._drawRenderer.webglContextRestored(), this._shadowRenderer && this._shadowRenderer.webglContextRestored(), this._emphasisFillRenderer && this._emphasisFillRenderer.webglContextRestored(), this._emphasisEdgesRenderer && this._emphasisEdgesRenderer.webglContextRestored(), this._pickMeshRenderer && this._pickMeshRenderer.webglContextRestored(), this._pickTriangleRenderer && this._pickMeshRenderer.webglContextRestored(), this._occlusionRenderer && this._occlusionRenderer.webglContextRestored()
        }
        _makeDrawHash() {
            const e = this.scene,
                t = [e.canvas.canvas.id, (e.gammaInput ? "gi;" : ";") + (e.gammaOutput ? "go" : ""), e._lightsState.getHash(), e._sectionPlanesState.getHash()],
                i = this._state;
            return i.stationary && t.push("/s"), "none" === i.billboard ? t.push("/n") : "spherical" === i.billboard ? t.push("/s") : "cylindrical" === i.billboard && t.push("/c"), i.receivesShadow && t.push("/rs"), t.push(";"), t.join("")
        }
        _makePickHash() {
            const e = this.scene,
                t = [e.canvas.canvas.id, e._sectionPlanesState.getHash()],
                i = this._state;
            return i.stationary && t.push("/s"), "none" === i.billboard ? t.push("/n") : "spherical" === i.billboard ? t.push("/s") : "cylindrical" === i.billboard && t.push("/c"), t.push(";"), t.join("")
        }
        _makeOcclusionHash() {
            const e = this.scene,
                t = [e.canvas.canvas.id, e._sectionPlanesState.getHash()],
                i = this._state;
            return i.stationary && t.push("/s"), "none" === i.billboard ? t.push("/n") : "spherical" === i.billboard ? t.push("/s") : "cylindrical" === i.billboard && t.push("/c"), t.push(";"), t.join("")
        }
        _buildAABB(e, t) {
            $c.transformOBB3(e, this._geometry.obb, r_), $c.OBB3ToAABB3(r_, t);
            const i = this._state.offset;
            if (t[0] += i[0], t[1] += i[1], t[2] += i[2], t[3] += i[0], t[4] += i[1], t[5] += i[2], this._state.rtcCenter) {
                const e = this._state.rtcCenter;
                t[0] += e[0], t[1] += e[1], t[2] += e[2], t[3] += e[0], t[4] += e[1], t[5] += e[2]
            }
        }
        get geometry() {
            return this._geometry
        }
        get material() {
            return this._material
        }
        set position(e) {
            this._position.set(e || [0, 0, 0]), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get position() {
            return this._position
        }
        set rotation(e) {
            this._rotation.set(e || [0, 0, 0]), $c.eulerToQuaternion(this._rotation, "XYZ", this._quaternion), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get rotation() {
            return this._rotation
        }
        set quaternion(e) {
            this._quaternion.set(e || [0, 0, 0, 1]), $c.quaternionToEuler(this._quaternion, "XYZ", this._rotation), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get quaternion() {
            return this._quaternion
        }
        set scale(e) {
            this._scale.set(e || [1, 1, 1]), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get scale() {
            return this._scale
        }
        set matrix(e) {
            this.__localMatrix || (this.__localMatrix = $c.identityMat4()), this.__localMatrix.set(e || u_), $c.decomposeMat4(this.__localMatrix, this._position, this._quaternion, this._scale), this._localMatrixDirty = !1, this._setWorldMatrixDirty(), this._setAABBDirty(), this.glRedraw()
        }
        get matrix() {
            return this._localMatrixDirty && (this.__localMatrix || (this.__localMatrix = $c.identityMat4()), $c.composeMat4(this._position, this._quaternion, this._scale, this.__localMatrix), this._localMatrixDirty = !1), this.__localMatrix
        }
        get worldMatrix() {
            return this._worldMatrixDirty && this._buildWorldMatrix(), this._worldMatrix
        }
        get worldNormalMatrix() {
            return this._worldNormalMatrixDirty && this._buildWorldNormalMatrix(), this._worldNormalMatrix
        }
        rotate(e, t) {
            return n_[0] = e[0], n_[1] = e[1], n_[2] = e[2], n_[3] = t * $c.DEGTORAD, $c.angleAxisToQuaternion(n_, s_), $c.mulQuaternions(this.quaternion, s_, o_), this.quaternion = o_, this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw(), this
        }
        rotateOnWorldAxis(e, t) {
            return n_[0] = e[0], n_[1] = e[1], n_[2] = e[2], n_[3] = t * $c.DEGTORAD, $c.angleAxisToQuaternion(n_, s_), $c.mulQuaternions(s_, this.quaternion, s_), this
        }
        rotateX(e) {
            return this.rotate(a_, e)
        }
        rotateY(e) {
            return this.rotate(l_, e)
        }
        rotateZ(e) {
            return this.rotate(c_, e)
        }
        translate(e, t) {
            return $c.vec3ApplyQuaternion(this.quaternion, e, h_), $c.mulVec3Scalar(h_, t, d_), $c.addVec3(this.position, d_, this.position), this._setLocalMatrixDirty(), this._setAABBDirty(), this.glRedraw(), this
        }
        translateX(e) {
            return this.translate(a_, e)
        }
        translateY(e) {
            return this.translate(l_, e)
        }
        translateZ(e) {
            return this.translate(c_, e)
        }
        _putDrawRenderers() {
            this._drawRenderer && (this._drawRenderer.put(), this._drawRenderer = null), this._shadowRenderer && (this._shadowRenderer.put(), this._shadowRenderer = null), this._emphasisFillRenderer && (this._emphasisFillRenderer.put(), this._emphasisFillRenderer = null), this._emphasisEdgesRenderer && (this._emphasisEdgesRenderer.put(), this._emphasisEdgesRenderer = null)
        }
        _putPickRenderers() {
            this._pickMeshRenderer && (this._pickMeshRenderer.put(), this._pickMeshRenderer = null), this._pickTriangleRenderer && (this._pickTriangleRenderer.put(), this._pickTriangleRenderer = null)
        }
        _putOcclusionRenderer() {
            this._occlusionRenderer && (this._occlusionRenderer.put(), this._occlusionRenderer = null)
        }
        get isEntity() {
            return !0
        }
        get isModel() {
            return this._isModel
        }
        get isObject() {
            return this._isObject
        }
        get aabb() {
            return this._aabbDirty && this._updateAABB(), this._aabb
        }
        set rtcCenter(e) {
            e ? (this._state.rtcCenter || (this._state.rtcCenter = $c.vec3()), this._state.rtcCenter.set(e), this._state.rtcCenterHash = e.join(), this._setAABBDirty(), this.scene._aabbDirty = !0) : this._state.rtcCenter && (this._state.rtcCenter = null, this._state.rtcCenterHash = null, this._setAABBDirty(), this.scene._aabbDirty = !0)
        }
        get rtcCenter() {
            return this._state.rtcCenter
        }
        get numTriangles() {
            return this._numTriangles
        }
        set visible(e) {
            e = !1 !== e, this._state.visible = e, this._isObject && this.scene._objectVisibilityUpdated(this), this.glRedraw()
        }
        get visible() {
            return this._state.visible
        }
        set xrayed(e) {
            e = !!e, this._state.xrayed !== e && (this._state.xrayed = e, this._isObject && this.scene._objectXRayedUpdated(this), this.glRedraw())
        }
        get xrayed() {
            return this._state.xrayed
        }
        set highlighted(e) {
            (e = !!e) !== this._state.highlighted && (this._state.highlighted = e, this._isObject && this.scene._objectHighlightedUpdated(this), this.glRedraw())
        }
        get highlighted() {
            return this._state.highlighted
        }
        set selected(e) {
            (e = !!e) !== this._state.selected && (this._state.selected = e, this._isObject && this.scene._objectSelectedUpdated(this), this.glRedraw())
        }
        get selected() {
            return this._state.selected
        }
        set edges(e) {
            (e = !!e) !== this._state.edges && (this._state.edges = e, this.glRedraw())
        }
        get edges() {
            return this._state.edges
        }
        set culled(e) {
            this._state.culled = !!e, this.glRedraw()
        }
        get culled() {
            return this._state.culled
        }
        set clippable(e) {
            e = !1 !== e, this._state.clippable !== e && (this._state.clippable = e, this.glRedraw())
        }
        get clippable() {
            return this._state.clippable
        }
        set collidable(e) {
            (e = !1 !== e) !== this._state.collidable && (this._state.collidable = e, this._setAABBDirty(), this.scene._aabbDirty = !0)
        }
        get collidable() {
            return this._state.collidable
        }
        set pickable(e) {
            e = !1 !== e, this._state.pickable !== e && (this._state.pickable = e)
        }
        get pickable() {
            return this._state.pickable
        }
        set castsShadow(e) {
            (e = !1 !== e) !== this._state.castsShadow && (this._state.castsShadow = e, this.glRedraw())
        }
        get castsShadow() {
            return this._state.castsShadow
        }
        set receivesShadow(e) {
            (e = !1 !== e) !== this._state.receivesShadow && (this._state.receivesShadow = e, this._state.hash = e ? "/mod/rs;" : "/mod;", this.fire("dirty", this))
        }
        get receivesShadow() {
            return this._state.receivesShadow
        }
        get saoEnabled() {
            return !1
        }
        set colorize(e) {
            let t = this._state.colorize;
            t || (t = this._state.colorize = new Float32Array(4), t[3] = 1), e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1);
            const i = !!e;
            this.scene._objectColorizeUpdated(this, i), this.glRedraw()
        }
        get colorize() {
            return this._state.colorize
        }
        set opacity(e) {
            let t = this._state.colorize;
            t || (t = this._state.colorize = new Float32Array(4), t[0] = 1, t[1] = 1, t[2] = 1);
            const i = null != e;
            t[3] = i ? e : 1, this.scene._objectOpacityUpdated(this, i), this.glRedraw()
        }
        get opacity() {
            return this._state.colorize[3]
        }
        get transparent() {
            return 2 === this._material.alphaMode || this._state.colorize[3] < 1
        }
        set layer(e) {
            e = e || 0, (e = Math.round(e)) !== this._state.layer && (this._state.layer = e, this._renderer.needStateSort())
        }
        get layer() {
            return this._state.layer
        }
        get stationary() {
            return this._state.stationary
        }
        get billboard() {
            return this._state.billboard
        }
        set offset(e) {
            this._state.offset.set(e || [0, 0, 0]), this._setAABBDirty(), this.glRedraw()
        }
        get offset() {
            return this._state.offset
        }
        get isDrawable() {
            return !0
        }
        get isStateSortable() {
            return !0
        }
        stateSortCompare(e, t) {
            return e._state.layer - t._state.layer || e._drawRenderer.id - t._drawRenderer.id || e._material._state.id - t._material._state.id || e._geometry._state.id - t._geometry._state.id
        }
        rebuildRenderFlags() {
            this.renderFlags.reset(), this._getActiveSectionPlanes() ? (this.renderFlags.numLayers = 1, this.renderFlags.numVisibleLayers = 1, this.renderFlags.visibleLayers[0] = 0, this._updateRenderFlags()) : this.renderFlags.culled = !0
        }
        _updateRenderFlags() {
            const e = this.renderFlags,
                t = this._state;
            if (t.xrayed) {
                const t = this._xrayMaterial._state;
                t.fill && (t.fillAlpha < 1 ? e.xrayedFillTransparent = !0 : e.xrayedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.xrayedEdgesTransparent = !0 : e.xrayedEdgesOpaque = !0)
            } else {
                if (this._material._state.alpha < 1 || t.colorize[3] < 1 ? e.normalFillTransparent = !0 : e.normalFillOpaque = !0, t.edges) {
                    this._edgeMaterial._state.alpha < 1 ? e.normalEdgesTransparent = !0 : e.normalEdgesOpaque = !0
                }
                if (t.selected) {
                    const t = this._selectedMaterial._state;
                    t.fill && (t.fillAlpha < 1 ? e.selectedFillTransparent = !0 : e.selectedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.selectedEdgesTransparent = !0 : e.selectedEdgesOpaque = !0)
                } else if (t.highlighted) {
                    const t = this._highlightMaterial._state;
                    t.fill && (t.fillAlpha < 1 ? e.highlightedFillTransparent = !0 : e.highlightedFillOpaque = !0), t.edges && (t.edgeAlpha < 1 ? e.highlightedEdgesTransparent = !0 : e.highlightedEdgesOpaque = !0)
                }
            }
        }
        _getActiveSectionPlanes() {
            if (this._state.clippable) {
                const e = this.scene._sectionPlanesState.sectionPlanes,
                    t = e.length;
                if (t > 0)
                    for (let i = 0; i < t; i++) {
                        const t = e[i],
                            r = this.renderFlags;
                        if (t.active)
                            if (this._state.rtcCenter) {
                                const e = $c.planeAABB3Intersect(t.dir, t.dist, this.aabb);
                                if (-1 === e) return !1;
                                const n = 0 === e;
                                r.sectionPlanesActivePerLayer[i] = n
                            } else r.sectionPlanesActivePerLayer[i] = !0;
                        else r.sectionPlanesActivePerLayer[i] = !1
                    }
            }
            return !0
        }
        get xrayMaterial() {
            return this._xrayMaterial
        }
        get highlightMaterial() {
            return this._highlightMaterial
        }
        get selectedMaterial() {
            return this._selectedMaterial
        }
        get edgeMaterial() {
            return this._edgeMaterial
        }
        drawNormalFillOpaque(e) {
            (this._drawRenderer || (this._drawRenderer = Tf.get(this))) && this._drawRenderer.drawMesh(e, this)
        }
        drawNormalEdgesOpaque(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 3)
        }
        drawNormalFillTransparent(e) {
            (this._drawRenderer || (this._drawRenderer = Tf.get(this))) && this._drawRenderer.drawMesh(e, this)
        }
        drawNormalEdgesTransparent(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 3)
        }
        drawXRayedFillOpaque(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 0)
        }
        drawXRayedEdgesOpaque(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 0)
        }
        drawXRayedFillTransparent(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 0)
        }
        drawXRayedEdgesTransparent(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 0)
        }
        drawHighlightedFillOpaque(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 1)
        }
        drawHighlightedEdgesOpaque(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 1)
        }
        drawHighlightedFillTransparent(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 1)
        }
        drawHighlightedEdgesTransparent(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 1)
        }
        drawSelectedFillOpaque(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 2)
        }
        drawSelectedEdgesOpaque(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 2)
        }
        drawSelectedFillTransparent(e) {
            (this._emphasisFillRenderer || (this._emphasisFillRenderer = Lf.get(this))) && this._emphasisFillRenderer.drawMesh(e, this, 2)
        }
        drawSelectedEdgesTransparent(e) {
            (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = Uf.get(this))) && this._emphasisEdgesRenderer.drawMesh(e, this, 2)
        }
        drawPickMesh(e) {
            (this._pickMeshRenderer || (this._pickMeshRenderer = $f.get(this))) && this._pickMeshRenderer.drawMesh(e, this)
        }
        drawOcclusion(e) {
            (this._occlusionRenderer || (this._occlusionRenderer = Qf.get(this))) && this._occlusionRenderer.drawMesh(e, this)
        }
        drawShadow(e) {
            (this._shadowRenderer || (this._shadowRenderer = t_.get(this))) && this._shadowRenderer.drawMesh(e, this)
        }
        canPickTriangle() {
            return this._geometry.isReadableGeometry
        }
        drawPickTriangles(e) {
            (this._pickTriangleRenderer || (this._pickTriangleRenderer = Yf.get(this))) && this._pickTriangleRenderer.drawMesh(e, this)
        }
        pickTriangleSurface(e, t, i) {
            f_(this, e, t, i)
        }
        drawPickVertices(e) {}
        delegatePickedEntity() {
            return this
        }
        destroy() {
            super.destroy(), this._putDrawRenderers(), this._putPickRenderers(), this._putOcclusionRenderer(), this.scene._renderer.putPickID(this._state.pickID), this._isObject && (this.scene._deregisterObject(this), this._visible && this.scene._objectVisibilityUpdated(this, !1), this._xrayed && this.scene._objectXRayedUpdated(this, !1), this._selected && this.scene._objectSelectedUpdated(this, !1), this._highlighted && this.scene._objectHighlightedUpdated(this, !1), this.scene._objectColorizeUpdated(this, !1), this.scene._objectOpacityUpdated(this, !1), this.scene._objectOffsetUpdated(this, !1)), this._isModel && this.scene._deregisterModel(this), this.glRedraw()
        }
    }
    const f_ = function() {
            const e = $c.vec3(),
                t = $c.vec3(),
                i = $c.vec3(),
                r = $c.vec3(),
                n = $c.vec3(),
                s = $c.vec3(),
                o = $c.vec4(),
                a = $c.vec3(),
                l = $c.vec3(),
                c = $c.vec3(),
                h = $c.vec3(),
                d = $c.vec3(),
                u = $c.vec3(),
                p = $c.vec3(),
                f = $c.vec3(),
                _ = $c.vec3(),
                m = $c.vec4(),
                g = $c.vec4(),
                v = $c.vec4(),
                b = $c.vec3(),
                y = $c.vec3(),
                w = $c.vec3(),
                M = $c.vec3(),
                A = $c.vec3(),
                x = $c.vec3(),
                C = $c.vec3(),
                P = $c.vec3(),
                k = $c.vec3(),
                E = $c.vec3(),
                I = $c.vec3();
            return function(T, D, S, B) {
                var j = B.primIndex;
                if (null != j && j > -1) {
                    const F = T.geometry._state,
                        N = T.scene,
                        U = N.camera,
                        H = N.canvas;
                    if ("triangles" === F.primitiveName) {
                        B.primitive = "triangle";
                        const N = j,
                            V = F.indices,
                            z = F.positions;
                        let $, W, q, G;
                        if (V) {
                            var L = V[N + 0],
                                R = V[N + 1],
                                O = V[N + 2];
                            s[0] = L, s[1] = R, s[2] = O, B.indices = s, $ = 3 * L, W = 3 * R, q = 3 * O
                        } else $ = 3 * N, W = $ + 3, q = W + 3;
                        if (i[0] = z[$ + 0], i[1] = z[$ + 1], i[2] = z[$ + 2], r[0] = z[W + 0], r[1] = z[W + 1], r[2] = z[W + 2], n[0] = z[q + 0], n[1] = z[q + 1], n[2] = z[q + 2], F.compressGeometry) {
                            const e = F.positionsDecodeMatrix;
                            e && (Kh.decompressPosition(i, e, i), Kh.decompressPosition(r, e, r), Kh.decompressPosition(n, e, n))
                        }
                        B.canvasPos ? (G = B.canvasPos, $c.canvasPosToLocalRay(H.canvas, D, S, T.worldMatrix, G, e, t)) : B.origin && B.direction && $c.worldRayToLocalRay(T.worldMatrix, B.origin, B.direction, e, t), $c.normalizeVec3(t), $c.rayPlaneIntersect(e, t, i, r, n, o), B.localPos = o, B.position = o, m[0] = o[0], m[1] = o[1], m[2] = o[2], m[3] = 1, $c.transformVec4(T.worldMatrix, m, g), a[0] = g[0], a[1] = g[1], a[2] = g[2], B.worldPos = a, $c.transformVec4(U.matrix, g, v), l[0] = v[0], l[1] = v[1], l[2] = v[2], B.viewPos = l, $c.cartesianToBarycentric(o, i, r, n, c), B.bary = c;
                        const Y = F.normals;
                        if (Y) {
                            if (F.compressGeometry) {
                                const e = 3 * L,
                                    t = 3 * R,
                                    i = 3 * O;
                                Kh.decompressNormal(Y.subarray(e, e + 2), h), Kh.decompressNormal(Y.subarray(t, t + 2), d), Kh.decompressNormal(Y.subarray(i, i + 2), u)
                            } else h[0] = Y[$], h[1] = Y[$ + 1], h[2] = Y[$ + 2], d[0] = Y[W], d[1] = Y[W + 1], d[2] = Y[W + 2], u[0] = Y[q], u[1] = Y[q + 1], u[2] = Y[q + 2];
                            const e = $c.addVec3($c.addVec3($c.mulVec3Scalar(h, c[0], b), $c.mulVec3Scalar(d, c[1], y), w), $c.mulVec3Scalar(u, c[2], M), A);
                            B.worldNormal = $c.normalizeVec3($c.transformVec3(T.worldNormalMatrix, e, x))
                        }
                        const Z = F.uv;
                        if (Z) {
                            if (p[0] = Z[2 * L], p[1] = Z[2 * L + 1], f[0] = Z[2 * R], f[1] = Z[2 * R + 1], _[0] = Z[2 * O], _[1] = Z[2 * O + 1], F.compressGeometry) {
                                const e = F.uvDecodeMatrix;
                                e && (Kh.decompressUV(p, e, p), Kh.decompressUV(f, e, f), Kh.decompressUV(_, e, _))
                            }
                            B.uv = $c.addVec3($c.addVec3($c.mulVec2Scalar(p, c[0], C), $c.mulVec2Scalar(f, c[1], P), k), $c.mulVec2Scalar(_, c[2], E), I)
                        }
                    }
                }
            }
        }(),
        __ = Pc.memory,
        m_ = Gc.SUPPORTED_EXTENSIONS.OES_element_index_uint,
        g_ = m_ ? Uint32Array : Uint16Array,
        v_ = $c.AABB3();
    class b_ extends qh {
        get type() {
            return "VBOGeometry"
        }
        get isVBOGeometry() {
            return !0
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                compressGeometry: !0,
                primitive: null,
                primitiveName: null,
                positionsDecodeMatrix: null,
                uvDecodeMatrix: null,
                positionsBuf: null,
                normalsBuf: null,
                colorsbuf: null,
                uvBuf: null,
                indicesBuf: null,
                hash: ""
            }), this._numTriangles = 0, this._edgeThreshold = t.edgeThreshold || 10, this._aabb = null, this._obb = $c.OBB3();
            const i = this._state,
                r = this.scene.canvas.gl;
            switch (t.primitive = t.primitive || "triangles", t.primitive) {
                case "points":
                    i.primitive = r.POINTS, i.primitiveName = t.primitive;
                    break;
                case "lines":
                    i.primitive = r.LINES, i.primitiveName = t.primitive;
                    break;
                case "line-loop":
                    i.primitive = r.LINE_LOOP, i.primitiveName = t.primitive;
                    break;
                case "line-strip":
                    i.primitive = r.LINE_STRIP, i.primitiveName = t.primitive;
                    break;
                case "triangles":
                    i.primitive = r.TRIANGLES, i.primitiveName = t.primitive;
                    break;
                case "triangle-strip":
                    i.primitive = r.TRIANGLE_STRIP, i.primitiveName = t.primitive;
                    break;
                case "triangle-fan":
                    i.primitive = r.TRIANGLE_FAN, i.primitiveName = t.primitive;
                    break;
                default:
                    this.error("Unsupported value for 'primitive': '" + t.primitive + "' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'."), i.primitive = r.TRIANGLES, i.primitiveName = t.primitive
            }
            if (t.positions)
                if (t.indices) {
                    var n;
                    if (t.positionsDecodeMatrix);
                    else {
                        const e = Kh.getPositionsBounds(t.positions),
                            s = Kh.compressPositions(t.positions, e.min, e.max);
                        n = s.quantized, i.positionsDecodeMatrix = s.decodeMatrix, i.positionsBuf = new uh(r, r.ARRAY_BUFFER, n, n.length, 3, r.STATIC_DRAW), __.positions += i.positionsBuf.numItems, $c.positions3ToAABB3(t.positions, this._aabb), $c.positions3ToAABB3(n, v_, i.positionsDecodeMatrix), $c.AABB3ToOBB3(v_, this._obb)
                    }
                    if (t.colors) {
                        const e = t.colors.constructor === Float32Array ? t.colors : new Float32Array(t.colors);
                        i.colorsBuf = new uh(r, r.ARRAY_BUFFER, e, e.length, 4, r.STATIC_DRAW), __.colors += i.colorsBuf.numItems
                    }
                    if (t.uv) {
                        const e = Kh.getUVBounds(t.uv),
                            n = Kh.compressUVs(t.uv, e.min, e.max),
                            s = n.quantized;
                        i.uvDecodeMatrix = n.decodeMatrix, i.uvBuf = new uh(r, r.ARRAY_BUFFER, s, s.length, 2, r.STATIC_DRAW), __.uvs += i.uvBuf.numItems
                    }
                    if (t.normals) {
                        const e = Kh.compressNormals(t.normals);
                        let n = i.compressGeometry;
                        i.normalsBuf = new uh(r, r.ARRAY_BUFFER, e, e.length, 3, r.STATIC_DRAW, n), __.normals += i.normalsBuf.numItems
                    }
                    if (m_ || t.indices.constructor !== Uint32Array) {
                        {
                            const e = t.indices.constructor === Uint32Array || t.indices.constructor === Uint16Array ? t.indices : new g_(t.indices);
                            i.indicesBuf = new uh(r, r.ELEMENT_ARRAY_BUFFER, e, e.length, 1, r.STATIC_DRAW), __.indices += i.indicesBuf.numItems;
                            const s = Gh(n, e, i.positionsDecodeMatrix, this._edgeThreshold);
                            this._edgeIndicesBuf = new uh(r, r.ELEMENT_ARRAY_BUFFER, s, s.length, 1, r.STATIC_DRAW), "triangles" === this._state.primitiveName && (this._numTriangles = t.indices.length / 3)
                        }
                        this._buildHash(), __.meshes++
                    } else this.error("This WebGL implementation does not support Uint32Array")
                } else this.error("Config expected: indices");
            else this.error("Config expected: positions")
        }
        _buildHash() {
            const e = this._state,
                t = ["/g"];
            t.push("/" + e.primitive + ";"), e.positionsBuf && t.push("p"), e.colorsBuf && t.push("c"), (e.normalsBuf || e.autoVertexNormals) && t.push("n"), e.uvBuf && t.push("u"), t.push("cp"), t.push(";"), e.hash = t.join("")
        }
        _getEdgeIndices() {
            return this._edgeIndicesBuf
        }
        get primitive() {
            return this._state.primitiveName
        }
        get aabb() {
            return this._aabb
        }
        get obb() {
            return this._obb
        }
        get numTriangles() {
            return this._numTriangles
        }
        _getState() {
            return this._state
        }
        destroy() {
            super.destroy();
            const e = this._state;
            e.indicesBuf && e.indicesBuf.destroy(), e.positionsBuf && e.positionsBuf.destroy(), e.normalsBuf && e.normalsBuf.destroy(), e.uvBuf && e.uvBuf.destroy(), e.colorsBuf && e.colorsBuf.destroy(), this._edgeIndicesBuf && this._edgeIndicesBuf.destroy(), e.destroy(), __.meshes--
        }
    }
    const y_ = {
            opaque: 0,
            mask: 1,
            blend: 2
        },
        w_ = ["opaque", "mask", "blend"];
    class M_ extends nd {
        get type() {
            return "MetallicMaterial"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                type: "MetallicMaterial",
                baseColor: $c.vec4([1, 1, 1]),
                emissive: $c.vec4([0, 0, 0]),
                metallic: null,
                roughness: null,
                specularF0: null,
                alpha: null,
                alphaMode: null,
                alphaCutoff: null,
                lineWidth: null,
                pointSize: null,
                backfaces: null,
                frontface: null,
                hash: null
            }), this.baseColor = t.baseColor, this.metallic = t.metallic, this.roughness = t.roughness, this.specularF0 = t.specularF0, this.emissive = t.emissive, this.alpha = t.alpha, t.baseColorMap && (this._baseColorMap = this._checkComponent("Texture", t.baseColorMap)), t.metallicMap && (this._metallicMap = this._checkComponent("Texture", t.metallicMap)), t.roughnessMap && (this._roughnessMap = this._checkComponent("Texture", t.roughnessMap)), t.metallicRoughnessMap && (this._metallicRoughnessMap = this._checkComponent("Texture", t.metallicRoughnessMap)), t.emissiveMap && (this._emissiveMap = this._checkComponent("Texture", t.emissiveMap)), t.occlusionMap && (this._occlusionMap = this._checkComponent("Texture", t.occlusionMap)), t.alphaMap && (this._alphaMap = this._checkComponent("Texture", t.alphaMap)), t.normalMap && (this._normalMap = this._checkComponent("Texture", t.normalMap)), this.alphaMode = t.alphaMode, this.alphaCutoff = t.alphaCutoff, this.backfaces = t.backfaces, this.frontface = t.frontface, this.lineWidth = t.lineWidth, this.pointSize = t.pointSize, this._makeHash()
        }
        _makeHash() {
            const e = this._state,
                t = ["/met"];
            this._baseColorMap && (t.push("/bm"), this._baseColorMap._state.hasMatrix && t.push("/mat"), t.push("/" + this._baseColorMap._state.encoding)), this._metallicMap && (t.push("/mm"), this._metallicMap._state.hasMatrix && t.push("/mat")), this._roughnessMap && (t.push("/rm"), this._roughnessMap._state.hasMatrix && t.push("/mat")), this._metallicRoughnessMap && (t.push("/mrm"), this._metallicRoughnessMap._state.hasMatrix && t.push("/mat")), this._emissiveMap && (t.push("/em"), this._emissiveMap._state.hasMatrix && t.push("/mat")), this._occlusionMap && (t.push("/ocm"), this._occlusionMap._state.hasMatrix && t.push("/mat")), this._alphaMap && (t.push("/am"), this._alphaMap._state.hasMatrix && t.push("/mat")), this._normalMap && (t.push("/nm"), this._normalMap._state.hasMatrix && t.push("/mat")), t.push(";"), e.hash = t.join("")
        }
        set baseColor(e) {
            let t = this._state.baseColor;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.baseColor = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1), this.glRedraw()
        }
        get baseColor() {
            return this._state.baseColor
        }
        get baseColorMap() {
            return this._baseColorMap
        }
        set metallic(e) {
            e = null != e ? e : 1, this._state.metallic !== e && (this._state.metallic = e, this.glRedraw())
        }
        get metallic() {
            return this._state.metallic
        }
        get metallicMap() {
            return this._attached.metallicMap
        }
        set roughness(e) {
            e = null != e ? e : 1, this._state.roughness !== e && (this._state.roughness = e, this.glRedraw())
        }
        get roughness() {
            return this._state.roughness
        }
        get roughnessMap() {
            return this._attached.roughnessMap
        }
        get metallicRoughnessMap() {
            return this._attached.metallicRoughnessMap
        }
        set specularF0(e) {
            e = null != e ? e : 0, this._state.specularF0 !== e && (this._state.specularF0 = e, this.glRedraw())
        }
        get specularF0() {
            return this._state.specularF0
        }
        set emissive(e) {
            let t = this._state.emissive;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.emissive = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 0, t[1] = 0, t[2] = 0), this.glRedraw()
        }
        get emissive() {
            return this._state.emissive
        }
        get emissiveMap() {
            return this._attached.emissiveMap
        }
        get occlusionMap() {
            return this._attached.occlusionMap
        }
        set alpha(e) {
            e = null != e ? e : 1, this._state.alpha !== e && (this._state.alpha = e, this.glRedraw())
        }
        get alpha() {
            return this._state.alpha
        }
        get alphaMap() {
            return this._attached.alphaMap
        }
        get normalMap() {
            return this._attached.normalMap
        }
        set alphaMode(e) {
            let t = y_[e = e || "opaque"];
            void 0 === t && (this.error("Unsupported value for 'alphaMode': " + e + " defaulting to 'opaque'"), t = "opaque"), this._state.alphaMode !== t && (this._state.alphaMode = t, this.glRedraw())
        }
        get alphaMode() {
            return w_[this._state.alphaMode]
        }
        set alphaCutoff(e) {
            null == e && (e = .5), this._state.alphaCutoff !== e && (this._state.alphaCutoff = e)
        }
        get alphaCutoff() {
            return this._state.alphaCutoff
        }
        set backfaces(e) {
            e = !!e, this._state.backfaces !== e && (this._state.backfaces = e, this.glRedraw())
        }
        get backfaces() {
            return this._state.backfaces
        }
        set frontface(e) {
            e = "cw" !== e, this._state.frontface !== e && (this._state.frontface = e, this.glRedraw())
        }
        get frontface() {
            return this._state.frontface ? "ccw" : "cw"
        }
        set lineWidth(e) {
            this._state.lineWidth = e || 1, this.glRedraw()
        }
        get lineWidth() {
            return this._state.lineWidth
        }
        set pointSize(e) {
            this._state.pointSize = e || 1, this.glRedraw()
        }
        get pointSize() {
            return this._state.pointSize
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const A_ = {
            opaque: 0,
            mask: 1,
            blend: 2
        },
        x_ = ["opaque", "mask", "blend"];
    class C_ extends nd {
        get type() {
            return "SpecularMaterial"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                type: "SpecularMaterial",
                diffuse: $c.vec3([1, 1, 1]),
                emissive: $c.vec3([0, 0, 0]),
                specular: $c.vec3([1, 1, 1]),
                glossiness: null,
                specularF0: null,
                alpha: null,
                alphaMode: null,
                alphaCutoff: null,
                lineWidth: null,
                pointSize: null,
                backfaces: null,
                frontface: null,
                hash: null
            }), this.diffuse = t.diffuse, this.specular = t.specular, this.glossiness = t.glossiness, this.specularF0 = t.specularF0, this.emissive = t.emissive, this.alpha = t.alpha, t.diffuseMap && (this._diffuseMap = this._checkComponent("Texture", t.diffuseMap)), t.emissiveMap && (this._emissiveMap = this._checkComponent("Texture", t.emissiveMap)), t.specularMap && (this._specularMap = this._checkComponent("Texture", t.specularMap)), t.glossinessMap && (this._glossinessMap = this._checkComponent("Texture", t.glossinessMap)), t.specularGlossinessMap && (this._specularGlossinessMap = this._checkComponent("Texture", t.specularGlossinessMap)), t.occlusionMap && (this._occlusionMap = this._checkComponent("Texture", t.occlusionMap)), t.alphaMap && (this._alphaMap = this._checkComponent("Texture", t.alphaMap)), t.normalMap && (this._normalMap = this._checkComponent("Texture", t.normalMap)), this.alphaMode = t.alphaMode, this.alphaCutoff = t.alphaCutoff, this.backfaces = t.backfaces, this.frontface = t.frontface, this.lineWidth = t.lineWidth, this.pointSize = t.pointSize, this._makeHash()
        }
        _makeHash() {
            const e = this._state,
                t = ["/spe"];
            this._diffuseMap && (t.push("/dm"), this._diffuseMap.hasMatrix && t.push("/mat"), t.push("/" + this._diffuseMap.encoding)), this._emissiveMap && (t.push("/em"), this._emissiveMap.hasMatrix && t.push("/mat")), this._glossinessMap && (t.push("/gm"), this._glossinessMap.hasMatrix && t.push("/mat")), this._specularMap && (t.push("/sm"), this._specularMap.hasMatrix && t.push("/mat")), this._specularGlossinessMap && (t.push("/sgm"), this._specularGlossinessMap.hasMatrix && t.push("/mat")), this._occlusionMap && (t.push("/ocm"), this._occlusionMap.hasMatrix && t.push("/mat")), this._normalMap && (t.push("/nm"), this._normalMap.hasMatrix && t.push("/mat")), this._alphaMap && (t.push("/opm"), this._alphaMap.hasMatrix && t.push("/mat")), t.push(";"), e.hash = t.join("")
        }
        set diffuse(e) {
            let t = this._state.diffuse;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.diffuse = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1), this.glRedraw()
        }
        get diffuse() {
            return this._state.diffuse
        }
        get diffuseMap() {
            return this._diffuseMap
        }
        set specular(e) {
            let t = this._state.specular;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.specular = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 1, t[1] = 1, t[2] = 1), this.glRedraw()
        }
        get specular() {
            return this._state.specular
        }
        get specularMap() {
            return this._specularMap
        }
        get specularGlossinessMap() {
            return this._specularGlossinessMap
        }
        set glossiness(e) {
            e = null != e ? e : 1, this._state.glossiness !== e && (this._state.glossiness = e, this.glRedraw())
        }
        get glossiness() {
            return this._state.glossiness
        }
        get glossinessMap() {
            return this._glossinessMap
        }
        set specularF0(e) {
            e = null != e ? e : 0, this._state.specularF0 !== e && (this._state.specularF0 = e, this.glRedraw())
        }
        get specularF0() {
            return this._state.specularF0
        }
        set emissive(e) {
            let t = this._state.emissive;
            if (t) {
                if (e && t[0] === e[0] && t[1] === e[1] && t[2] === e[2]) return
            } else t = this._state.emissive = new Float32Array(3);
            e ? (t[0] = e[0], t[1] = e[1], t[2] = e[2]) : (t[0] = 0, t[1] = 0, t[2] = 0), this.glRedraw()
        }
        get emissive() {
            return this._state.emissive
        }
        get emissiveMap() {
            return this._emissiveMap
        }
        set alpha(e) {
            e = null != e ? e : 1, this._state.alpha !== e && (this._state.alpha = e, this.glRedraw())
        }
        get alpha() {
            return this._state.alpha
        }
        get alphaMap() {
            return this._alphaMap
        }
        get normalMap() {
            return this._normalMap
        }
        get occlusionMap() {
            return this._occlusionMap
        }
        set alphaMode(e) {
            let t = A_[e = e || "opaque"];
            void 0 === t && (this.error("Unsupported value for 'alphaMode': " + e + " defaulting to 'opaque'"), t = "opaque"), this._state.alphaMode !== t && (this._state.alphaMode = t, this.glRedraw())
        }
        get alphaMode() {
            return x_[this._state.alphaMode]
        }
        set alphaCutoff(e) {
            null == e && (e = .5), this._state.alphaCutoff !== e && (this._state.alphaCutoff = e)
        }
        get alphaCutoff() {
            return this._state.alphaCutoff
        }
        set backfaces(e) {
            e = !!e, this._state.backfaces !== e && (this._state.backfaces = e, this.glRedraw())
        }
        get backfaces() {
            return this._state.backfaces
        }
        set frontface(e) {
            e = "cw" !== e, this._state.frontface !== e && (this._state.frontface = e, this.glRedraw())
        }
        get frontface() {
            return this._state.frontface ? "ccw" : "cw"
        }
        set lineWidth(e) {
            this._state.lineWidth = e || 1, this.glRedraw()
        }
        get lineWidth() {
            return this._state.lineWidth
        }
        set pointSize(e) {
            this._state.pointSize = e || 1, this.glRedraw()
        }
        get pointSize() {
            return this._state.pointSize
        }
        destroy() {
            super.destroy(), this._state.destroy()
        }
    }
    const P_ = {
        funcAdd: "FUNC_ADD",
        funcSubtract: "FUNC_SUBTRACT",
        funcReverseSubtract: "FUNC_REVERSE_SUBTRACT",
        zero: "ZERO",
        one: "ONE",
        srcColor: "SRC_COLOR",
        oneMinusSrcColor: "ONE_MINUS_SRC_COLOR",
        dstColor: "DST_COLOR",
        oneMinusDstColor: "ONE_MINUS_DST_COLOR",
        srcAlpha: "SRC_ALPHA",
        oneMinusSrcAlpha: "ONE_MINUS_SRC_ALPHA",
        dstAlpha: "DST_ALPHA",
        oneMinusDstAlpha: "ONE_MINUS_DST_ALPHA",
        contantColor: "CONSTANT_COLOR",
        oneMinusConstantColor: "ONE_MINUS_CONSTANT_COLOR",
        constantAlpha: "CONSTANT_ALPHA",
        oneMinusConstantAlpha: "ONE_MINUS_CONSTANT_ALPHA",
        srcAlphaSaturate: "SRC_ALPHA_SATURATE",
        front: "FRONT",
        back: "BACK",
        frontAndBack: "FRONT_AND_BACK",
        never: "NEVER",
        less: "LESS",
        equal: "EQUAL",
        lequal: "LEQUAL",
        greater: "GREATER",
        notequal: "NOTEQUAL",
        gequal: "GEQUAL",
        always: "ALWAYS",
        cw: "CW",
        ccw: "CCW",
        linear: "LINEAR",
        nearest: "NEAREST",
        linearMipmapNearest: "LINEAR_MIPMAP_NEAREST",
        nearestMipmapNearest: "NEAREST_MIPMAP_NEAREST",
        nearestMipmapLinear: "NEAREST_MIPMAP_LINEAR",
        linearMipmapLinear: "LINEAR_MIPMAP_LINEAR",
        repeat: "REPEAT",
        clampToEdge: "CLAMP_TO_EDGE",
        mirroredRepeat: "MIRRORED_REPEAT",
        alpha: "ALPHA",
        rgb: "RGB",
        rgba: "RGBA",
        luminance: "LUMINANCE",
        luminanceAlpha: "LUMINANCE_ALPHA",
        textureBinding2D: "TEXTURE_BINDING_2D",
        textureBindingCubeMap: "TEXTURE_BINDING_CUBE_MAP",
        compareRToTexture: "COMPARE_R_TO_TEXTURE",
        unsignedByte: "UNSIGNED_BYTE"
    };

    function k_(e, t, i) {
        if (void 0 === t) return i;
        const r = P_[t];
        return void 0 === r ? i : e[r]
    }
    const E_ = new Uint8Array([0, 0, 0, 1]);
    class I_ {
        constructor(e, t) {
            this.gl = e, this.target = t || e.TEXTURE_2D, this.texture = e.createTexture(), this.setPreloadColor([0, 0, 0, 0]), this.allocated = !0
        }
        setPreloadColor(e) {
            e ? (E_[0] = Math.floor(255 * e[0]), E_[1] = Math.floor(255 * e[1]), E_[2] = Math.floor(255 * e[2]), E_[3] = Math.floor(255 * (void 0 !== e[3] ? e[3] : 1))) : (E_[0] = 0, E_[1] = 0, E_[2] = 0, E_[3] = 255);
            const t = this.gl;
            if (t.bindTexture(this.target, this.texture), t.texParameteri(this.target, t.TEXTURE_MAG_FILTER, t.NEAREST), t.texParameteri(this.target, t.TEXTURE_MIN_FILTER, t.NEAREST), this.target === t.TEXTURE_CUBE_MAP) {
                const e = [t.TEXTURE_CUBE_MAP_POSITIVE_X, t.TEXTURE_CUBE_MAP_NEGATIVE_X, t.TEXTURE_CUBE_MAP_POSITIVE_Y, t.TEXTURE_CUBE_MAP_NEGATIVE_Y, t.TEXTURE_CUBE_MAP_POSITIVE_Z, t.TEXTURE_CUBE_MAP_NEGATIVE_Z];
                for (let i = 0, r = e.length; i < r; i++) t.texImage2D(e[i], 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, E_)
            } else t.texImage2D(this.target, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, E_);
            t.bindTexture(this.target, null)
        }
        setTarget(e) {
            this.target = e || this.gl.TEXTURE_2D
        }
        setImage(e, t) {
            const i = this.gl;
            if (i.bindTexture(this.target, this.texture), i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL, t.flipY), this.target === i.TEXTURE_CUBE_MAP) {
                if (Ic.isArray(e)) {
                    const t = e,
                        r = [i.TEXTURE_CUBE_MAP_POSITIVE_X, i.TEXTURE_CUBE_MAP_NEGATIVE_X, i.TEXTURE_CUBE_MAP_POSITIVE_Y, i.TEXTURE_CUBE_MAP_NEGATIVE_Y, i.TEXTURE_CUBE_MAP_POSITIVE_Z, i.TEXTURE_CUBE_MAP_NEGATIVE_Z];
                    for (let e = 0, n = r.length; e < n; e++) i.texImage2D(r[e], 0, i.RGBA, i.RGBA, i.UNSIGNED_BYTE, t[e])
                }
            } else i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, i.RGBA, i.UNSIGNED_BYTE, e);
            i.bindTexture(this.target, null)
        }
        setProps(e) {
            const t = this.gl;
            if (t.bindTexture(this.target, this.texture), e.minFilter) {
                const i = k_(t, e.minFilter);
                i && (t.texParameteri(this.target, t.TEXTURE_MIN_FILTER, i), i !== t.NEAREST_MIPMAP_NEAREST && i !== t.LINEAR_MIPMAP_NEAREST && i !== t.NEAREST_MIPMAP_LINEAR && i !== t.LINEAR_MIPMAP_LINEAR || t.generateMipmap(this.target))
            }
            if (e.magFilter) {
                const i = k_(t, e.magFilter);
                i && t.texParameteri(this.target, t.TEXTURE_MAG_FILTER, i)
            }
            if (e.wrapS) {
                const i = k_(t, e.wrapS);
                i && t.texParameteri(this.target, t.TEXTURE_WRAP_S, i)
            }
            if (e.wrapT) {
                const i = k_(t, e.wrapT);
                i && t.texParameteri(this.target, t.TEXTURE_WRAP_T, i)
            }
            t.bindTexture(this.target, null)
        }
        bind(e) {
            if (this.allocated) {
                if (this.texture) {
                    const t = this.gl;
                    return t.activeTexture(t["TEXTURE" + e]), t.bindTexture(this.target, this.texture), !0
                }
                return !1
            }
        }
        unbind(e) {
            if (this.allocated && this.texture) {
                const t = this.gl;
                t.activeTexture(t["TEXTURE" + e]), t.bindTexture(this.target, null)
            }
        }
        destroy() {
            this.allocated && this.texture && (this.gl.deleteTexture(this.texture), this.texture = null)
        }
    }

    function T_(e) {
        if (!D_(e.width) || !D_(e.height)) {
            const t = document.createElement("canvas");
            t.width = S_(e.width), t.height = S_(e.height), t.getContext("2d").drawImage(e, 0, 0, e.width, e.height, 0, 0, t.width, t.height), e = t
        }
        return e
    }

    function D_(e) {
        return 0 == (e & e - 1)
    }

    function S_(e) {
        --e;
        for (let t = 1; t < 32; t <<= 1) e |= e >> t;
        return e + 1
    }
    class B_ extends Wc {
        get type() {
            return "Texture"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                texture: new I_(this.scene.canvas.gl),
                matrix: $c.identityMat4(),
                hasMatrix: t.translate && (0 !== t.translate[0] || 0 !== t.translate[1]) || !!t.rotate || t.scale && (0 !== t.scale[0] || 0 !== t.scale[1]),
                minFilter: this._checkMinFilter(t.minFilter),
                magFilter: this._checkMagFilter(t.magFilter),
                wrapS: this._checkWrapS(t.wrapS),
                wrapT: this._checkWrapT(t.wrapT),
                flipY: this._checkFlipY(t.flipY),
                encoding: this._checkEncoding(t.encoding)
            }), this._src = null, this._image = null, this._translate = $c.vec2([0, 0]), this._scale = $c.vec2([1, 1]), this._rotate = $c.vec2([0, 0]), this._matrixDirty = !1, this.translate = t.translate, this.scale = t.scale, this.rotate = t.rotate, t.src ? this.src = t.src : t.image && (this.image = t.image), Pc.memory.textures++
        }
        _checkMinFilter(e) {
            return "linear" !== (e = e || "linearMipmapLinear") && "linearMipmapNearest" !== e && "linearMipmapLinear" !== e && "nearestMipmapLinear" !== e && "nearestMipmapNearest" !== e && (this.error("Unsupported value for 'minFilter': '" + e + "' - supported values are 'linear', 'linearMipmapNearest', 'nearestMipmapNearest', 'nearestMipmapLinear' and 'linearMipmapLinear'. Defaulting to 'linearMipmapLinear'."), e = "linearMipmapLinear"), e
        }
        _checkMagFilter(e) {
            return "linear" !== (e = e || "linear") && "nearest" !== e && (this.error("Unsupported value for 'magFilter': '" + e + "' - supported values are 'linear' and 'nearest'. Defaulting to 'linear'."), e = "linear"), e
        }
        _checkFilter(e) {
            return "linear" !== (e = e || "linear") && "nearest" !== e && (this.error("Unsupported value for 'magFilter': '" + e + "' - supported values are 'linear' and 'nearest'. Defaulting to 'linear'."), e = "linear"), e
        }
        _checkWrapS(e) {
            return "clampToEdge" !== (e = e || "repeat") && "mirroredRepeat" !== e && "repeat" !== e && (this.error("Unsupported value for 'wrapS': '" + e + "' - supported values are 'clampToEdge', 'mirroredRepeat' and 'repeat'. Defaulting to 'repeat'."), e = "repeat"), e
        }
        _checkWrapT(e) {
            return "clampToEdge" !== (e = e || "repeat") && "mirroredRepeat" !== e && "repeat" !== e && (this.error("Unsupported value for 'wrapT': '" + e + "' - supported values are 'clampToEdge', 'mirroredRepeat' and 'repeat'. Defaulting to 'repeat'."), e = "repeat"), e
        }
        _checkFlipY(e) {
            return !!e
        }
        _checkEncoding(e) {
            return "linear" !== (e = e || "linear") && "sRGB" !== e && "gamma" !== e && (this.error("Unsupported value for 'encoding': '" + e + "' - supported values are 'linear', 'sRGB', 'gamma'. Defaulting to 'linear'."), e = "linear"), e
        }
        _webglContextRestored() {
            this._state.texture = new I_(this.scene.canvas.gl), this._image ? this.image = this._image : this._src && (this.src = this._src)
        }
        _update() {
            const e = this._state;
            if (this._matrixDirty) {
                let t, i;
                0 === this._translate[0] && 0 === this._translate[1] || (t = $c.translationMat4v([this._translate[0], this._translate[1], 0], this._state.matrix)), 1 === this._scale[0] && 1 === this._scale[1] || (i = $c.scalingMat4v([this._scale[0], this._scale[1], 1]), t = t ? $c.mulMat4(t, i) : i), 0 !== this._rotate && (i = $c.rotationMat4v(.0174532925 * this._rotate, [0, 0, 1]), t = t ? $c.mulMat4(t, i) : i), t && (e.matrix = t), this._matrixDirty = !1
            }
            this.glRedraw()
        }
        set image(e) {
            this._image = T_(e), this._image.crossOrigin = "Anonymous", this._state.texture.setImage(this._image, this._state), this._state.texture.setProps(this._state), this._src = null, this.glRedraw()
        }
        get image() {
            return this._image
        }
        set src(e) {
            this.scene.loading++, this.scene.canvas.spinner.processes++;
            const t = this;
            let i = new Image;
            i.onload = function() {
                i = T_(i), t._state.texture.setImage(i, t._state), t._state.texture.setProps(t._state), t.scene.loading--, t.scene.canvas.spinner.processes--, t.glRedraw()
            }, i.src = e, this._src = e, this._image = null
        }
        get src() {
            return this._src
        }
        set translate(e) {
            this._translate.set(e || [0, 0]), this._matrixDirty = !0, this._needUpdate()
        }
        get translate() {
            return this._translate
        }
        set scale(e) {
            this._scale.set(e || [1, 1]), this._matrixDirty = !0, this._needUpdate()
        }
        get scale() {
            return this._scale
        }
        set rotate(e) {
            e = e || 0, this._rotate !== e && (this._rotate = e, this._matrixDirty = !0, this._needUpdate())
        }
        get rotate() {
            return this._rotate
        }
        get minFilter() {
            return this._state.minFilter
        }
        get magFilter() {
            return this._state.magFilter
        }
        get wrapS() {
            return this._state.wrapS
        }
        get wrapT() {
            return this._state.wrapT
        }
        get flipY() {
            return this._state.flipY
        }
        get encoding() {
            return this._state.encoding
        }
        destroy() {
            super.destroy(), this._state.texture && this._state.texture.destroy(), this._state.destroy(), Pc.memory.textures--
        }
    }
    class j_ {
        constructor(e) {}
        load(e, t, i, r, n, s) {
            r = r || {};
            var o = t.scene.canvas.spinner;
            o.processes++, L_(e, t, i, r, (function() {
                o.processes--, Fc.scheduleTask((function() {
                    t.scene.fire("modelLoaded", t.id), t.fire("loaded", !0, !1)
                })), n && n()
            }), (function(e) {
                o.processes--, t.error(e), s && s(e), t.fire("error", e)
            }))
        }
        parse(e, t, i, r, n, s) {
            r = r || {};
            var o = t.scene.canvas.spinner;
            o.processes++, R_(e, i, "", r, t, (function() {
                o.processes--, t.scene.fire("modelLoaded", t.id), t.fire("loaded", !0, !1), n && n()
            }), (function(e) {
                o.processes--, t.error(e), t.fire("error", e), s && s(e)
            }))
        }
    }
    var L_ = function(e, t, i, r, n, s) {
            e.dataSource.getGLTF(i, (function(o) {
                r.basePath = function(e) {
                    var t = e.lastIndexOf("/");
                    return 0 !== t ? e.substring(0, t + 1) : ""
                }(i), R_(e, o, i, r, t, n, s)
            }), s)
        },
        R_ = function() {
            const e = {
                    5120: Int8Array,
                    5121: Uint8Array,
                    5122: Int16Array,
                    5123: Uint16Array,
                    5125: Uint32Array,
                    5126: Float32Array
                },
                t = {
                    SCALAR: 1,
                    VEC2: 2,
                    VEC3: 3,
                    VEC4: 4,
                    MAT2: 4,
                    MAT3: 9,
                    MAT4: 16
                };
            return function(e, t, h, d, u, p) {
                u.clear();
                var f = {
                    src: h,
                    loadBuffer: d.loadBuffer,
                    basePath: d.basePath,
                    prioritizeGLTFNode: d.prioritizeGLTFNode,
                    handleGLTFNode: d.handleGLTFNode,
                    ignoreMaterials: !!d.ignoreMaterials,
                    edgeThreshold: d.edgeThreshold,
                    readableGeometry: !!d.readableGeometry,
                    json: t,
                    scene: u.scene,
                    plugin: e,
                    modelNode: u,
                    modelNodeProps: {
                        visible: u.visible,
                        culled: u.culled,
                        xrayed: u.xrayed,
                        highlighted: u.highlighted,
                        selected: u.selected,
                        outlined: u.outlined,
                        clippable: u.clippable,
                        pickable: u.pickable,
                        collidable: u.collidable,
                        castsShadow: u.castsShadow,
                        receivesShadow: u.receivesShadow,
                        colorize: u.colorize,
                        opacity: u.opacity,
                        edges: u.edges
                    }
                };
                u.scene.loading++,
                    function(e, t) {
                        var r = e.json.buffers;
                        if (r)
                            for (var n = r.length, s = 0, o = r.length; s < o; s++) i(e, r[s], (function() {
                                0 == --n && t()
                            }), (function(i) {
                                e.plugin.error(i), 0 == --n && t()
                            }));
                        else t()
                    }(f, (function() {
                        ! function(e) {
                            var t = e.json.bufferViews;
                            if (t)
                                for (var i = 0, n = t.length; i < n; i++) r(e, t[i])
                        }(f),
                        function(e) {
                            var t = e.json.accessors;
                            if (t)
                                for (var i = 0, r = t.length; i < r; i++) n(e, t[i])
                        }(f),
                        function(e) {
                            var t = e.json.textures;
                            if (t)
                                for (var i = 0, r = t.length; i < r; i++) s(e, t[i])
                        }(f),
                        function(e) {
                            var t, i, r = e.json.materials;
                            if (r)
                                for (var n = 0, s = r.length; n < s; n++) t = r[n], i = o(e, t), t._material = i
                        }(f),
                        function(e) {
                            var t = e.json.meshes;
                            if (t)
                                for (var i = 0, r = t.length; i < r; i++) a(e, t[i])
                        }(f),
                        function(e) {
                            var t = e.json,
                                i = t.scene || 0,
                                r = t.scenes[i];
                            if (!r) return void c(e, "glTF has no default scene");
                            ! function(e, t) {
                                var i = t.nodes;
                                if (!i) return;
                                for (var r, n = e.json, s = 0, o = i.length; s < o; s++)(r = n.nodes[i[s]]) ? l(e, r, null, null) : c(e, "Node not found: " + s)
                            }(e, r)
                        }(f), u.scene.loading--, p()
                    }))
            };

            function i(e, t, i, r) {
                var n = t.uri;
                n ? e.plugin.dataSource.getArrayBuffer(e.src, n, (function(e) {
                    t._buffer = e, i()
                }), r) : r("gltf/handleBuffer missing uri in " + JSON.stringify(t))
            }

            function r(e, t) {
                var i = e.json.buffers[t.buffer];
                t._typedArray = null;
                var r = t.byteLength || 0,
                    n = t.byteOffset || 0;
                t._buffer = i._buffer.slice(n, n + r)
            }

            function n(i, r) {
                var n = i.json.bufferViews[r.bufferView],
                    s = t[r.type],
                    o = e[r.componentType],
                    a = o.BYTES_PER_ELEMENT * s;
                r.byteStride && r.byteStride !== a || (r._typedArray = new o(n._buffer, r.byteOffset || 0, r.count * s), r._itemSize = s)
            }

            function s(e, t) {
                t._texture = new B_(e.modelNode, {
                    src: e.json.images[t.source].uri ? e.basePath + e.json.images[t.source].uri : void 0,
                    flipY: !!t.flipY,
                    encoding: "sRGB"
                })
            }

            function o(e, t) {
                var i, r = e.json,
                    n = {},
                    s = t.normalTexture;
                s && (i = r.textures[s.index]) && (n.normalMap = i._texture);
                var o = t.occlusionTexture;
                o && (i = r.textures[o.index]) && (n.occlusionMap = i._texture);
                var a = t.emissiveTexture;
                a && (i = r.textures[a.index]) && (n.emissiveMap = i._texture);
                var l = t.emissiveFactor;
                switch (l && (n.emissive = l), n.backfaces = !!t.doubleSided, t.alphaMode) {
                    case "NORMAL_OPAQUE":
                        n.alphaMode = "opaque";
                        break;
                    case "MASK":
                        n.alphaMode = "mask";
                        break;
                    case "BLEND":
                        n.alphaMode = "blend"
                }
                var c = t.alphaCutoff;
                void 0 !== c && (n.alphaCutoff = c);
                var h = t.extensions;
                if (h) {
                    var d = h.KHR_materials_pbrSpecularGlossiness;
                    if (d) {
                        var u = d.diffuseFactor;
                        null != u && (n.diffuse = u.slice(0, 3), n.alpha = u[3]);
                        var p = d.diffuseTexture;
                        p && (i = r.textures[p.index]) && (n.diffuseMap = i._texture);
                        var f = d.specularFactor;
                        null != f && (n.specular = f.slice(0, 3));
                        var _ = d.glossinessFactor;
                        null != _ && (n.glossiness = _);
                        var m = d.specularGlossinessTexture;
                        return m && (i = r.textures[m.index]) && (n.specularGlossinessMap = i._texture), new C_(e.modelNode, n)
                    }
                    var g = h.KHR_materials_common;
                    if (g) {
                        var v, b = g.technique,
                            y = g.values || {},
                            w = "BLINN" === b,
                            M = "PHONG" === b,
                            A = "LAMBERT" === b,
                            x = y.shininess;
                        n.shininess = (w || M) && null != x ? x : 0;
                        var C = y.diffuse;
                        C && (w || M || A) ? Ic.isString(C) ? (v = e.textures[C]) && (n.diffuseMap = v) : n.diffuse = C.slice(0, 3) : n.diffuse = [0, 0, 0];
                        var P = y.specular;
                        P && (w || M) ? Ic.isString(P) ? (v = e.textures[P]) && (n.specularMap = v) : n.specular = P.slice(0, 3) : n.specular = [0, 0, 0];
                        var k = y.emission;
                        k ? Ic.isString(k) ? (v = e.textures[k]) && (n.emissiveMap = v) : n.emissive = k.slice(0, 3) : n.emissive = [0, 0, 0];
                        var E = y.transparency;
                        n.alpha = null != E ? E : 1;
                        y.transparent;
                        return new ad(e.scene, n)
                    }
                }
                var I = t.pbrMetallicRoughness;
                if (I) {
                    var T = I.baseColorFactor;
                    T && (n.baseColor = T.slice(0, 3), n.alpha = T[3]);
                    var D = I.baseColorTexture;
                    D && (i = r.textures[D.index]) && (n.baseColorMap = i._texture);
                    var S = I.metallicFactor;
                    null != S && (n.metallic = S);
                    var B = I.roughnessFactor;
                    null != B && (n.roughness = B);
                    var j = I.metallicRoughnessTexture;
                    return j && (i = r.textures[j.index]) && (n.metallicRoughnessMap = i._texture), new M_(e.scene, n)
                }
                return new ad(e.scene, n)
            }

            function a(e, t) {
                var i, r, n, s, o = e.json,
                    a = [],
                    l = t.primitives;
                if (l)
                    for (var c, h, d, u, p, f, _, m, g = 0, v = l.length; g < v; g++) f = {
                        primitive: "triangles",
                        compressGeometry: !0,
                        edgeThreshold: e.edgeThreshold
                    }, null != (h = (c = l[g]).indices) && (n = o.accessors[h], f.indices = n._typedArray), (s = c.attributes) && (null != (d = s.POSITION) && (n = o.accessors[d], f.positions = n._typedArray), null != (u = s.NORMAL) && (n = o.accessors[u], f.normals = n._typedArray), null != (p = s.TEXCOORD_0) && (n = o.accessors[p], f.uv = n._typedArray), _ = {}, m = e.readableGeometry ? new id(e.modelNode, f) : new b_(e.modelNode, f), _.geometry = m, null != (i = c.material) && (r = o.materials[i]) && (_.material = r._material), a.push(_));
                t._mesh = a
            }

            function l(e, t, i, r) {
                var n;
                if (r = r || e.modelNode, e.prioritizeGLTFNode) {
                    const i = e.prioritizeGLTFNode(e.modelNode.id, t);
                    if (null == i) return
                }
                if (e.handleGLTFNode) {
                    var s = {};
                    if (!e.handleGLTFNode(e.modelNode.id, t, s)) return;
                    s.createEntity && (n = s.createEntity)
                }
                const o = e.json,
                    a = e.modelNode,
                    h = t.children && t.children.length > 0;
                var d;
                if (t.matrix && (d = t.matrix, i = i ? $c.mulMat4(i, d, $c.mat4()) : d), t.translation && (d = $c.translationMat4v(t.translation), i = i ? $c.mulMat4(i, d, d) : d), t.rotation && (d = $c.quaternionToMat4(t.rotation), i = i ? $c.mulMat4(i, d, d) : d), t.scale && (d = $c.scalingMat4v(t.scale), i = i ? $c.mulMat4(i, d, d) : d), void 0 !== t.mesh) {
                    var u = o.meshes[t.mesh];
                    if (u) {
                        var p, f, _ = u._mesh,
                            m = _.length;
                        if (!n && m > 0 && !h) {
                            for (var g = 0, v = m; g < v; g++) {
                                let t = {
                                    geometry: (p = _[g]).geometry,
                                    matrix: i
                                };
                                Ic.apply(e.modelNodeProps, t), t.material = p.material, f = new p_(a, t), r.addChild(f, !1)
                            }
                            return
                        }
                        if (n && 1 === m && !h) {
                            let t = {
                                geometry: (p = _[0]).geometry,
                                matrix: i
                            };
                            return Ic.apply(e.modelNodeProps, t), t.material = p.material, Ic.apply(n, t), f = new p_(a, t), void r.addChild(f, !1)
                        }
                        if (n && m > 0 && !h) {
                            let t = {
                                matrix: i
                            };
                            Ic.apply(e.modelNodeProps, t), Ic.apply(n, t);
                            let s = new Mf(a, t);
                            r.addChild(s, !1);
                            for (let t = 0, i = m; t < i; t++) {
                                let i = {
                                    geometry: (p = _[t]).geometry
                                };
                                Ic.apply(e.modelNodeProps, i), i.material = p.material, Ic.apply(n, i), i.id = null, f = new p_(a, i), s.addChild(f, !1)
                            }
                            return
                        }
                        if (!n && m > 0 && h) {
                            let t = {
                                matrix: i
                            };
                            Ic.apply(e.modelNodeProps, t);
                            let n = new Mf(a, t);
                            r.addChild(n, !1);
                            for (let e = 0, i = m; e < i; e++) {
                                let i = {
                                    geometry: (p = _[e]).geometry
                                };
                                Ic.apply(t, i), i.id = null, i.matrix = null, i.material = p.material, f = new p_(a, i), n.addChild(f, !1)
                            }
                            i = null, r = n
                        }
                        if (n && 0 === m && h) {
                            let t = {
                                matrix: i
                            };
                            Ic.apply(e.modelNodeProps, t), Ic.apply(n, t), n.matrix = i;
                            let s = new Mf(a, t);
                            r.addChild(s, !1), i = null, r = s
                        }
                        if (n && m > 0 || h) {
                            let t = {
                                matrix: i
                            };
                            Ic.apply(e.modelNodeProps, t), n && Ic.apply(n, t);
                            let s = new Mf(a, t);
                            r.addChild(s, !1);
                            for (let t = 0, i = m; t < i; t++) {
                                let i = {
                                    geometry: (p = _[t]).geometry
                                };
                                Ic.apply(e.modelProps, i), i.material = p.material, n && Ic.apply(n, i), i.id = null, f = new p_(a, i), s.addChild(f, !1)
                            }
                            i = null, r = s
                        }
                    }
                }
                if (t.children) {
                    var b, y, w = t.children;
                    for (let t = 0, n = w.length; t < n; t++) y = w[t], (b = o.nodes[y]) ? l(e, b, i, r) : c(e, "Node not found: " + t)
                }
            }

            function c(e, t) {
                e.plugin.error(t)
            }
        }();
    class O_ {
        constructor(e) {}
        load(e, t, i, r, n, s) {
            F_(e, t, i, r = r || {}, (function() {
                Fc.scheduleTask((function() {
                    t.scene.fire("modelLoaded", t.id), t.fire("loaded", !0, !1)
                })), n && n()
            }), (function(i) {
                e.error(i), s && s(i), t.fire("error", i)
            }))
        }
        parse(e, t, i, r, n, s) {
            N_(e, i, "", r = r || {}, t, (function() {
                t.scene.fire("modelLoaded", t.id), t.fire("loaded", !0, !1), n && n()
            }), (function(e) {
                t.error(e), t.fire("error", e), s && s(e)
            }))
        }
    }
    const F_ = function(e, t, i, r, n, s) {
            const o = e.viewer.scene.canvas.spinner;
            o.processes++, e.dataSource.getGLTF(i, (function(a) {
                o.processes--, N_(e, a, i, r, t, n, s)
            }), s)
        },
        N_ = function() {
            const e = {
                    5120: Int8Array,
                    5121: Uint8Array,
                    5122: Int16Array,
                    5123: Uint16Array,
                    5125: Uint32Array,
                    5126: Float32Array
                },
                t = {
                    SCALAR: 1,
                    VEC2: 2,
                    VEC3: 3,
                    VEC4: 4,
                    MAT2: 4,
                    MAT3: 9,
                    MAT4: 16
                };
            return function(e, t, a, l, h, d) {
                const u = {
                        src: a,
                        loadBuffer: l.loadBuffer,
                        handleGLTFNode: l.handleGLTFNode,
                        json: t,
                        scene: h.scene,
                        plugin: e,
                        performanceModel: h,
                        geometryCreated: {},
                        numObjects: 0,
                        nodes: []
                    },
                    p = e.viewer.scene.canvas.spinner;
                p.processes++,
                    function(e, t) {
                        const r = e.json.buffers;
                        if (r) {
                            let n = r.length;
                            for (let s = 0, o = r.length; s < o; s++) i(e, r[s], (function() {
                                0 == --n && t()
                            }), (function(i) {
                                e.plugin.error(i), 0 == --n && t()
                            }))
                        } else t()
                    }(u, (function() {
                        ! function(e) {
                            const t = e.json.bufferViews;
                            if (t)
                                for (let i = 0, n = t.length; i < n; i++) r(e, t[i])
                        }(u),
                        function(e) {
                            const t = e.json.buffers;
                            if (t)
                                for (let e = 0, i = t.length; e < i; e++) t[e]._buffer = null
                        }(u),
                        function(e) {
                            const t = e.json.materials;
                            if (t)
                                for (let i = 0, r = t.length; i < r; i++) {
                                    const r = t[i],
                                        s = n(e, r);
                                    r._rgbaColor = s
                                }
                        }(u), p.processes--,
                            function(e) {
                                const t = e.json,
                                    i = t.scene || 0,
                                    r = t.scenes[i];
                                if (!r) return void c(e, "glTF has no default scene");
                                (function(e, t) {
                                    const i = t.nodes;
                                    if (!i) return;
                                    const r = e.json;
                                    for (let t = 0, n = i.length; t < n; t++) {
                                        r.nodes[i[t]] ? s(e, t) : c(e, "Node not found: " + t)
                                    }
                                })(e, r),
                                function(e, t) {
                                    const i = t.nodes;
                                    if (!i) return;
                                    const r = e.json;
                                    for (let t = 0, n = i.length; t < n; t++) {
                                        const n = r.nodes[i[t]];
                                        n ? s(e, n) : c(e, "Node not found: " + t)
                                    }
                                    e.plugin.viewer.scene.canvas.spinner.processes++;
                                    for (let t = 0, n = i.length; t < n; t++) {
                                        const n = r.nodes[i[t]];
                                        o(e, n, null)
                                    }
                                    e.plugin.viewer.scene.canvas.spinner.processes--
                                }(e, r)
                            }(u), h.finalize(), d()
                    }))
            };

            function i(e, t, i, r) {
                const n = t.uri;
                n ? e.plugin.dataSource.getArrayBuffer(e.src, n, (function(e) {
                    t._buffer = e, i()
                }), r) : r("gltf/handleBuffer missing uri in " + JSON.stringify(t))
            }

            function r(e, t) {
                const i = e.json.buffers[t.buffer];
                t._typedArray = null;
                const r = t.byteLength || 0,
                    n = t.byteOffset || 0;
                t._buffer = i._buffer.slice(n, n + r)
            }

            function n(e, t) {
                const i = new Float32Array([1, 1, 1, 1]),
                    r = t.extensions;
                if (r) {
                    const e = r.KHR_materials_pbrSpecularGlossiness;
                    if (e) {
                        const t = e.diffuseFactor;
                        null != t && i.set(t)
                    }
                    const t = r.KHR_materials_common;
                    if (t) {
                        const e = t.technique,
                            r = t.values || {},
                            n = "BLINN" === e,
                            s = "PHONG" === e,
                            o = "LAMBERT" === e,
                            a = r.diffuse;
                        a && (n || s || o) && (Ic.isString(a) || i.set(a));
                        const l = r.transparency;
                        null != l && (i[3] = l);
                        const c = r.transparent;
                        null != c && (i[3] = c)
                    }
                }
                const n = t.pbrMetallicRoughness;
                if (n) {
                    const e = n.baseColorFactor;
                    e && i.set(e)
                }
                return i
            }

            function s(e, t) {
                const i = e.json;
                if (void 0 !== t.mesh) {
                    const e = i.meshes[t.mesh];
                    e && (e.instances = e.instances ? e.instances + 1 : 1)
                }
                if (t.children) {
                    const r = t.children;
                    for (let t = 0, n = r.length; t < n; t++) {
                        const n = r[t],
                            o = i.nodes[n];
                        o ? s(e, o) : c(e, "Node not found: " + t)
                    }
                }
            }

            function o(e, t, i) {
                const r = e.json;
                let n;
                if (t.matrix && (n = t.matrix, i = i ? $c.mulMat4(i, n, $c.mat4()) : n), t.translation && (n = $c.translationMat4v(t.translation), i = i ? $c.mulMat4(i, n, $c.mat4()) : n), t.rotation && (n = $c.quaternionToMat4(t.rotation), i = i ? $c.mulMat4(i, n, $c.mat4()) : n), t.scale && (n = $c.scalingMat4v(t.scale), i = i ? $c.mulMat4(i, n, $c.mat4()) : n), void 0 !== t.mesh) {
                    const n = r.meshes[t.mesh];
                    if (n) {
                        let s;
                        if (e.handleGLTFNode) {
                            const i = {};
                            if (!e.handleGLTFNode(e.performanceModel.id, t, i)) return;
                            i.createEntity && (s = i.createEntity)
                        }
                        const o = e.performanceModel,
                            l = i ? i.slice() : $c.identityMat4(),
                            c = n.primitives.length;
                        if (c > 0) {
                            const i = [];
                            for (let h = 0; h < c; h++) {
                                const c = {
                                        id: o.id + "." + e.numObjects++,
                                        matrix: l
                                    },
                                    d = n.primitives[h],
                                    u = d.material;
                                let p;
                                if (null != u && (p = r.materials[u]), p ? (c.color = p._rgbaColor, c.opacity = p._rgbaColor[3]) : (c.color = new Float32Array([1, 1, 1]), c.opacity = 1), s && (s.colorize && (c.color = s.colorize), void 0 !== s.opacity && null !== s.opacity && (c.opacity = s.opacity)), n.instances > 1) {
                                    const r = o.id + "." + t.mesh + "." + h;
                                    if (!e.geometryCreated[r]) {
                                        const t = {
                                            id: r
                                        };
                                        a(e, d, t), o.createGeometry(t), e.geometryCreated[r] = !0
                                    }
                                    c.geometryId = r, o.createMesh(c), i.push(c.id)
                                } else a(e, d, c), o.createMesh(c), i.push(c.id)
                            }
                            s ? o.createEntity(Ic.apply(s, {
                                meshIds: i
                            })) : o.createEntity({
                                meshIds: i
                            })
                        }
                    }
                }
                if (t.children) {
                    const n = t.children;
                    for (let t = 0, s = n.length; t < s; t++) {
                        const s = n[t],
                            a = r.nodes[s];
                        a ? o(e, a, i) : c(e, "Node not found: " + t)
                    }
                }
            }

            function a(e, t, i) {
                const r = t.attributes;
                if (!r) return;
                i.primitive = "triangles";
                const n = t.indices;
                if (null != n) {
                    const t = e.json.accessors[n];
                    i.indices = l(e, t)
                }
                const s = r.POSITION;
                if (null != s) {
                    const t = e.json.accessors[s];
                    i.positions = l(e, t)
                }
                const o = r.NORMAL;
                if (null != o) {
                    const t = e.json.accessors[o];
                    i.normals = l(e, t)
                }
                i.indices && (i.edgeIndices = Gh(i.positions, i.indices, null, 10))
            }

            function l(i, r) {
                const n = i.json.bufferViews[r.bufferView],
                    s = t[r.type],
                    o = e[r.componentType],
                    a = o.BYTES_PER_ELEMENT * s;
                if (!r.byteStride || r.byteStride === a) return new o(n._buffer, r.byteOffset || 0, r.count * s);
                c("interleaved buffer!")
            }

            function c(e, t) {
                e.plugin.error(t)
            }
        }(),
        U_ = {
            IfcRoof: {
                colorize: [.837255, .203922, .270588]
            },
            IfcSlab: {
                colorize: [.637255, .603922, .670588]
            },
            IfcWall: {
                colorize: [.537255, .337255, .237255]
            },
            IfcWallStandardCase: {
                colorize: [.537255, .337255, .237255]
            },
            IfcCovering: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcDoor: {
                colorize: [.637255, .603922, .670588]
            },
            IfcStair: {
                colorize: [.637255, .603922, .670588]
            },
            IfcStairFlight: {
                colorize: [.637255, .603922, .670588]
            },
            IfcProxy: {
                colorize: [.137255, .403922, .870588]
            },
            IfcRamp: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcColumn: {
                colorize: [.137255, .403922, .870588]
            },
            IfcBeam: {
                colorize: [.137255, .403922, .870588]
            },
            IfcCurtainWall: {
                colorize: [.137255, .403922, .870588]
            },
            IfcPlate: {
                colorize: [.8470588235, .427450980392, 0, .5],
                opacity: .3
            },
            IfcTransportElement: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcFooting: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcRailing: {
                colorize: [.137255, .403922, .870588]
            },
            IfcFurnishingElement: {
                colorize: [.137255, .403922, .870588]
            },
            IfcFurniture: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcSystemFurnitureElement: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcFlowSegment: {
                colorize: [.137255, .403922, .870588]
            },
            IfcFlowitting: {
                colorize: [.137255, .403922, .870588]
            },
            IfcFlowTerminal: {
                colorize: [.137255, .403922, .870588]
            },
            IfcFlowController: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcFlowFitting: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcDuctSegment: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcDistributionFlowElement: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcDuctFitting: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcLightFixture: {
                colorize: [.8470588235, .8470588235, .870588]
            },
            IfcAirTerminal: {
                colorize: [.8470588235, .427450980392, 0]
            },
            IfcOpeningElement: {
                colorize: [.137255, .403922, .870588],
                pickable: !1,
                visible: !1
            },
            IfcSpace: {
                colorize: [.137255, .403922, .870588],
                pickable: !1,
                visible: !1,
                opacity: .5
            },
            IfcWindow: {
                colorize: [.137255, .403922, .870588],
                pickable: !0,
                opacity: .1
            },
            IfcBuildingElementProxy: {
                colorize: [.5, .5, .5]
            },
            IfcSite: {
                colorize: [.137255, .403922, .870588]
            },
            IfcMember: {
                colorize: [.8470588235, .427450980392, 0]
            },
            DEFAULT: {
                colorize: [.5, .5, .5]
            }
        };
    class H_ {
        constructor() {}
        getMetaModel(e, t, i) {
            Ic.loadJSON(e, e => {
                t(e)
            }, (function(e) {
                i(e)
            }))
        }
        getGLTF(e, t, i) {
            Ic.loadJSON(e, e => {
                t(e)
            }, (function(e) {
                i(e)
            }))
        }
        getArrayBuffer(e, t, i, r) {
            ! function(e, t, i, r) {
                var n = () => {};
                i = i || n, r = r || n;
                const s = t.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (s) {
                    const e = !!s[2];
                    var o = s[3];
                    o = window.decodeURIComponent(o), e && (o = window.atob(o));
                    try {
                        const e = new ArrayBuffer(o.length),
                            t = new Uint8Array(e);
                        for (var a = 0; a < o.length; a++) t[a] = o.charCodeAt(a);
                        window.setTimeout((function() {
                            i(e)
                        }), 0)
                    } catch (e) {
                        window.setTimeout((function() {
                            r(e)
                        }), 0)
                    }
                } else {
                    const n = function(e) {
                            var t = e.lastIndexOf("/");
                            return 0 !== t ? e.substring(0, t + 1) : ""
                        }(e) + t,
                        s = new XMLHttpRequest;
                    s.open("GET", n, !0), s.responseType = "arraybuffer", s.onreadystatechange = function() {
                        4 === s.readyState && (200 === s.status ? i(s.response) : r("loadArrayBuffer error : " + s.response))
                    }, s.send(null)
                }
            }(e, t, e => {
                i(e)
            }, (function(e) {
                r(e)
            }))
        }
    }
    class V_ extends Af {
        constructor(e, t = {}) {
            super("GLTFLoader", e, t), this._glTFQualityLoader = new j_(this, t), this._glTFPerformanceLoader = new O_(this, t), this.dataSource = t.dataSource, this.objectDefaults = t.objectDefaults
        }
        set dataSource(e) {
            this._dataSource = e || new H_
        }
        get dataSource() {
            return this._dataSource
        }
        set objectDefaults(e) {
            this._objectDefaults = e || U_
        }
        get objectDefaults() {
            return this._objectDefaults
        }
        load(e = {}) {
            e.id && this.viewer.scene.components[e.id] && (this.error("Component with this ID already exists in viewer: " + e.id + " - will autogenerate this ID"), delete e.id);
            const t = !1 !== e.performance,
                i = t ? new uf(this.viewer.scene, Ic.apply(e, {
                    isModel: !0
                })) : new Mf(this.viewer.scene, Ic.apply(e, {
                    isModel: !0
                })),
                r = i.id;
            if (!e.src && !e.gltf) return this.error("load() param expected: src or gltf"), i;
            const n = t ? this._glTFPerformanceLoader : this._glTFQualityLoader;
            if (e.metaModelSrc || e.metaModelData) {
                const t = e.objectDefaults || this._objectDefaults || U_,
                    s = s => {
                        var o;
                        if (this.viewer.metaScene.createMetaModel(r, s, {
                                includeTypes: e.includeTypes,
                                excludeTypes: e.excludeTypes
                            }), this.viewer.scene.canvas.spinner.processes--, e.includeTypes) {
                            o = {};
                            for (let t = 0, i = e.includeTypes.length; t < i; t++) o[e.includeTypes[t]] = !0
                        }
                        if (e.excludeTypes)
                            for (let t = 0, i = e.excludeTypes.length; t < i; t++) o[e.excludeTypes[t]] = !0;
                        e.readableGeometry = !1, e.handleGLTFNode = (e, i, r) => {
                            const n = i.name;
                            if (!n) return !0;
                            const s = n,
                                o = this.viewer.metaScene.metaObjects[s],
                                a = (o ? o.type : "DEFAULT") || "DEFAULT";
                            r.createEntity = {
                                id: s,
                                isObject: !0
                            };
                            const l = t[a];
                            return l && (!1 === l.visible && (r.createEntity.visible = !1), l.colorize && (r.createEntity.colorize = l.colorize), !1 === l.pickable && (r.createEntity.pickable = !1), void 0 !== l.opacity && null !== l.opacity && (r.createEntity.opacity = l.opacity)), !0
                        }, e.src ? n.load(this, i, e.src, e) : n.parse(this, i, e.gltf, e)
                    };
                if (e.metaModelSrc) {
                    const t = e.metaModelSrc;
                    this.viewer.scene.canvas.spinner.processes++, this._dataSource.getMetaModel(t, e => {
                        this.viewer.scene.canvas.spinner.processes--, s(e)
                    }, e => {
                        this.error(`load(): Failed to load model metadata for model '${r} from  '${t}' - ${e}`), this.viewer.scene.canvas.spinner.processes--
                    })
                } else e.metaModelData && s(e.metaModelData)
            } else e.handleGLTFNode = (e, t, i) => {
                const r = t.name;
                if (!r) return !0;
                const n = r;
                return i.createEntity = {
                    id: n,
                    isObject: !0
                }, !0
            }, e.src ? n.load(this, i, e.src, e) : n.parse(this, i, e.gltf, e);
            return i.once("destroyed", () => {
                this.viewer.metaScene.destroyMetaModel(r)
            }), i
        }
        destroy() {
            super.destroy()
        }
    }
    class z_ {
        constructor() {}
        getMetaModel(e, t, i) {
            Ic.loadJSON(e, e => {
                t(e)
            }, (function(e) {
                i(e)
            }))
        }
        getXKT(e, t, i) {
            var r = () => {};
            t = t || r, i = i || r;
            const n = e.match(/^data:(.*?)(;base64)?,(.*)$/);
            if (n) {
                const e = !!n[2];
                var s = n[3];
                s = window.decodeURIComponent(s), e && (s = window.atob(s));
                try {
                    const e = new ArrayBuffer(s.length),
                        i = new Uint8Array(e);
                    for (var o = 0; o < s.length; o++) i[o] = s.charCodeAt(o);
                    t(e)
                } catch (e) {
                    i(e)
                }
            } else {
                const r = new XMLHttpRequest;
                r.open("GET", e, !0), r.responseType = "arraybuffer", r.onreadystatechange = function() {
                    4 === r.readyState && (200 === r.status ? t(r.response) : i("getXKT error : " + r.response))
                }, r.send(null)
            }
        }
    }
    var $_ = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};

    function W_() {
        throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")
    }

    function q_(e, t) {
        return e(t = {
            exports: {}
        }, t.exports), t.exports
    }
    var G_ = q_((function(e, t) {
            e.exports = function e(t, i, r) {
                function n(o, a) {
                    if (!i[o]) {
                        if (!t[o]) {
                            if (!a && W_) return W_();
                            if (s) return s(o, !0);
                            var l = new Error("Cannot find module '" + o + "'");
                            throw l.code = "MODULE_NOT_FOUND", l
                        }
                        var c = i[o] = {
                            exports: {}
                        };
                        t[o][0].call(c.exports, (function(e) {
                            return n(t[o][1][e] || e)
                        }), c, c.exports, e, t, i, r)
                    }
                    return i[o].exports
                }
                for (var s = W_, o = 0; o < r.length; o++) n(r[o]);
                return n
            }({
                1: [function(e, t, i) {
                    var r = e("./zlib/deflate"),
                        n = e("./utils/common"),
                        s = e("./utils/strings"),
                        o = e("./zlib/messages"),
                        a = e("./zlib/zstream"),
                        l = Object.prototype.toString;

                    function c(e) {
                        if (!(this instanceof c)) return new c(e);
                        this.options = n.assign({
                            level: -1,
                            method: 8,
                            chunkSize: 16384,
                            windowBits: 15,
                            memLevel: 8,
                            strategy: 0,
                            to: ""
                        }, e || {});
                        var t = this.options;
                        t.raw && t.windowBits > 0 ? t.windowBits = -t.windowBits : t.gzip && t.windowBits > 0 && t.windowBits < 16 && (t.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new a, this.strm.avail_out = 0;
                        var i = r.deflateInit2(this.strm, t.level, t.method, t.windowBits, t.memLevel, t.strategy);
                        if (0 !== i) throw new Error(o[i]);
                        if (t.header && r.deflateSetHeader(this.strm, t.header), t.dictionary) {
                            var h;
                            if (h = "string" == typeof t.dictionary ? s.string2buf(t.dictionary) : "[object ArrayBuffer]" === l.call(t.dictionary) ? new Uint8Array(t.dictionary) : t.dictionary, 0 !== (i = r.deflateSetDictionary(this.strm, h))) throw new Error(o[i]);
                            this._dict_set = !0
                        }
                    }

                    function h(e, t) {
                        var i = new c(t);
                        if (i.push(e, !0), i.err) throw i.msg || o[i.err];
                        return i.result
                    }
                    c.prototype.push = function(e, t) {
                        var i, o, a = this.strm,
                            c = this.options.chunkSize;
                        if (this.ended) return !1;
                        o = t === ~~t ? t : !0 === t ? 4 : 0, "string" == typeof e ? a.input = s.string2buf(e) : "[object ArrayBuffer]" === l.call(e) ? a.input = new Uint8Array(e) : a.input = e, a.next_in = 0, a.avail_in = a.input.length;
                        do {
                            if (0 === a.avail_out && (a.output = new n.Buf8(c), a.next_out = 0, a.avail_out = c), 1 !== (i = r.deflate(a, o)) && 0 !== i) return this.onEnd(i), this.ended = !0, !1;
                            0 !== a.avail_out && (0 !== a.avail_in || 4 !== o && 2 !== o) || ("string" === this.options.to ? this.onData(s.buf2binstring(n.shrinkBuf(a.output, a.next_out))) : this.onData(n.shrinkBuf(a.output, a.next_out)))
                        } while ((a.avail_in > 0 || 0 === a.avail_out) && 1 !== i);
                        return 4 === o ? (i = r.deflateEnd(this.strm), this.onEnd(i), this.ended = !0, 0 === i) : 2 !== o || (this.onEnd(0), a.avail_out = 0, !0)
                    }, c.prototype.onData = function(e) {
                        this.chunks.push(e)
                    }, c.prototype.onEnd = function(e) {
                        0 === e && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg
                    }, i.Deflate = c, i.deflate = h, i.deflateRaw = function(e, t) {
                        return (t = t || {}).raw = !0, h(e, t)
                    }, i.gzip = function(e, t) {
                        return (t = t || {}).gzip = !0, h(e, t)
                    }
                }, {
                    "./utils/common": 3,
                    "./utils/strings": 4,
                    "./zlib/deflate": 8,
                    "./zlib/messages": 13,
                    "./zlib/zstream": 15
                }],
                2: [function(e, t, i) {
                    var r = e("./zlib/inflate"),
                        n = e("./utils/common"),
                        s = e("./utils/strings"),
                        o = e("./zlib/constants"),
                        a = e("./zlib/messages"),
                        l = e("./zlib/zstream"),
                        c = e("./zlib/gzheader"),
                        h = Object.prototype.toString;

                    function d(e) {
                        if (!(this instanceof d)) return new d(e);
                        this.options = n.assign({
                            chunkSize: 16384,
                            windowBits: 0,
                            to: ""
                        }, e || {});
                        var t = this.options;
                        t.raw && t.windowBits >= 0 && t.windowBits < 16 && (t.windowBits = -t.windowBits, 0 === t.windowBits && (t.windowBits = -15)), !(t.windowBits >= 0 && t.windowBits < 16) || e && e.windowBits || (t.windowBits += 32), t.windowBits > 15 && t.windowBits < 48 && 0 == (15 & t.windowBits) && (t.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l, this.strm.avail_out = 0;
                        var i = r.inflateInit2(this.strm, t.windowBits);
                        if (i !== o.Z_OK) throw new Error(a[i]);
                        if (this.header = new c, r.inflateGetHeader(this.strm, this.header), t.dictionary && ("string" == typeof t.dictionary ? t.dictionary = s.string2buf(t.dictionary) : "[object ArrayBuffer]" === h.call(t.dictionary) && (t.dictionary = new Uint8Array(t.dictionary)), t.raw && (i = r.inflateSetDictionary(this.strm, t.dictionary)) !== o.Z_OK)) throw new Error(a[i])
                    }

                    function u(e, t) {
                        var i = new d(t);
                        if (i.push(e, !0), i.err) throw i.msg || a[i.err];
                        return i.result
                    }
                    d.prototype.push = function(e, t) {
                        var i, a, l, c, d, u = this.strm,
                            p = this.options.chunkSize,
                            f = this.options.dictionary,
                            _ = !1;
                        if (this.ended) return !1;
                        a = t === ~~t ? t : !0 === t ? o.Z_FINISH : o.Z_NO_FLUSH, "string" == typeof e ? u.input = s.binstring2buf(e) : "[object ArrayBuffer]" === h.call(e) ? u.input = new Uint8Array(e) : u.input = e, u.next_in = 0, u.avail_in = u.input.length;
                        do {
                            if (0 === u.avail_out && (u.output = new n.Buf8(p), u.next_out = 0, u.avail_out = p), (i = r.inflate(u, o.Z_NO_FLUSH)) === o.Z_NEED_DICT && f && (i = r.inflateSetDictionary(this.strm, f)), i === o.Z_BUF_ERROR && !0 === _ && (i = o.Z_OK, _ = !1), i !== o.Z_STREAM_END && i !== o.Z_OK) return this.onEnd(i), this.ended = !0, !1;
                            u.next_out && (0 !== u.avail_out && i !== o.Z_STREAM_END && (0 !== u.avail_in || a !== o.Z_FINISH && a !== o.Z_SYNC_FLUSH) || ("string" === this.options.to ? (l = s.utf8border(u.output, u.next_out), c = u.next_out - l, d = s.buf2string(u.output, l), u.next_out = c, u.avail_out = p - c, c && n.arraySet(u.output, u.output, l, c, 0), this.onData(d)) : this.onData(n.shrinkBuf(u.output, u.next_out)))), 0 === u.avail_in && 0 === u.avail_out && (_ = !0)
                        } while ((u.avail_in > 0 || 0 === u.avail_out) && i !== o.Z_STREAM_END);
                        return i === o.Z_STREAM_END && (a = o.Z_FINISH), a === o.Z_FINISH ? (i = r.inflateEnd(this.strm), this.onEnd(i), this.ended = !0, i === o.Z_OK) : a !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), u.avail_out = 0, !0)
                    }, d.prototype.onData = function(e) {
                        this.chunks.push(e)
                    }, d.prototype.onEnd = function(e) {
                        e === o.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg
                    }, i.Inflate = d, i.inflate = u, i.inflateRaw = function(e, t) {
                        return (t = t || {}).raw = !0, u(e, t)
                    }, i.ungzip = u
                }, {
                    "./utils/common": 3,
                    "./utils/strings": 4,
                    "./zlib/constants": 6,
                    "./zlib/gzheader": 9,
                    "./zlib/inflate": 11,
                    "./zlib/messages": 13,
                    "./zlib/zstream": 15
                }],
                3: [function(e, t, i) {
                    var r = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;

                    function n(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }
                    i.assign = function(e) {
                        for (var t = Array.prototype.slice.call(arguments, 1); t.length;) {
                            var i = t.shift();
                            if (i) {
                                if ("object" != typeof i) throw new TypeError(i + "must be non-object");
                                for (var r in i) n(i, r) && (e[r] = i[r])
                            }
                        }
                        return e
                    }, i.shrinkBuf = function(e, t) {
                        return e.length === t ? e : e.subarray ? e.subarray(0, t) : (e.length = t, e)
                    };
                    var s = {
                            arraySet: function(e, t, i, r, n) {
                                if (t.subarray && e.subarray) e.set(t.subarray(i, i + r), n);
                                else
                                    for (var s = 0; s < r; s++) e[n + s] = t[i + s]
                            },
                            flattenChunks: function(e) {
                                var t, i, r, n, s, o;
                                for (r = 0, t = 0, i = e.length; t < i; t++) r += e[t].length;
                                for (o = new Uint8Array(r), n = 0, t = 0, i = e.length; t < i; t++) s = e[t], o.set(s, n), n += s.length;
                                return o
                            }
                        },
                        o = {
                            arraySet: function(e, t, i, r, n) {
                                for (var s = 0; s < r; s++) e[n + s] = t[i + s]
                            },
                            flattenChunks: function(e) {
                                return [].concat.apply([], e)
                            }
                        };
                    i.setTyped = function(e) {
                        e ? (i.Buf8 = Uint8Array, i.Buf16 = Uint16Array, i.Buf32 = Int32Array, i.assign(i, s)) : (i.Buf8 = Array, i.Buf16 = Array, i.Buf32 = Array, i.assign(i, o))
                    }, i.setTyped(r)
                }, {}],
                4: [function(e, t, i) {
                    var r = e("./common"),
                        n = !0,
                        s = !0;
                    try {
                        String.fromCharCode.apply(null, [0])
                    } catch (e) {
                        n = !1
                    }
                    try {
                        String.fromCharCode.apply(null, new Uint8Array(1))
                    } catch (e) {
                        s = !1
                    }
                    for (var o = new r.Buf8(256), a = 0; a < 256; a++) o[a] = a >= 252 ? 6 : a >= 248 ? 5 : a >= 240 ? 4 : a >= 224 ? 3 : a >= 192 ? 2 : 1;

                    function l(e, t) {
                        if (t < 65534 && (e.subarray && s || !e.subarray && n)) return String.fromCharCode.apply(null, r.shrinkBuf(e, t));
                        for (var i = "", o = 0; o < t; o++) i += String.fromCharCode(e[o]);
                        return i
                    }
                    o[254] = o[254] = 1, i.string2buf = function(e) {
                        var t, i, n, s, o, a = e.length,
                            l = 0;
                        for (s = 0; s < a; s++) 55296 == (64512 & (i = e.charCodeAt(s))) && s + 1 < a && 56320 == (64512 & (n = e.charCodeAt(s + 1))) && (i = 65536 + (i - 55296 << 10) + (n - 56320), s++), l += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
                        for (t = new r.Buf8(l), o = 0, s = 0; o < l; s++) 55296 == (64512 & (i = e.charCodeAt(s))) && s + 1 < a && 56320 == (64512 & (n = e.charCodeAt(s + 1))) && (i = 65536 + (i - 55296 << 10) + (n - 56320), s++), i < 128 ? t[o++] = i : i < 2048 ? (t[o++] = 192 | i >>> 6, t[o++] = 128 | 63 & i) : i < 65536 ? (t[o++] = 224 | i >>> 12, t[o++] = 128 | i >>> 6 & 63, t[o++] = 128 | 63 & i) : (t[o++] = 240 | i >>> 18, t[o++] = 128 | i >>> 12 & 63, t[o++] = 128 | i >>> 6 & 63, t[o++] = 128 | 63 & i);
                        return t
                    }, i.buf2binstring = function(e) {
                        return l(e, e.length)
                    }, i.binstring2buf = function(e) {
                        for (var t = new r.Buf8(e.length), i = 0, n = t.length; i < n; i++) t[i] = e.charCodeAt(i);
                        return t
                    }, i.buf2string = function(e, t) {
                        var i, r, n, s, a = t || e.length,
                            c = new Array(2 * a);
                        for (r = 0, i = 0; i < a;)
                            if ((n = e[i++]) < 128) c[r++] = n;
                            else if ((s = o[n]) > 4) c[r++] = 65533, i += s - 1;
                        else {
                            for (n &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && i < a;) n = n << 6 | 63 & e[i++], s--;
                            s > 1 ? c[r++] = 65533 : n < 65536 ? c[r++] = n : (n -= 65536, c[r++] = 55296 | n >> 10 & 1023, c[r++] = 56320 | 1023 & n)
                        }
                        return l(c, r)
                    }, i.utf8border = function(e, t) {
                        var i;
                        for ((t = t || e.length) > e.length && (t = e.length), i = t - 1; i >= 0 && 128 == (192 & e[i]);) i--;
                        return i < 0 ? t : 0 === i ? t : i + o[e[i]] > t ? i : t
                    }
                }, {
                    "./common": 3
                }],
                5: [function(e, t, i) {
                    t.exports = function(e, t, i, r) {
                        for (var n = 65535 & e | 0, s = e >>> 16 & 65535 | 0, o = 0; 0 !== i;) {
                            i -= o = i > 2e3 ? 2e3 : i;
                            do {
                                s = s + (n = n + t[r++] | 0) | 0
                            } while (--o);
                            n %= 65521, s %= 65521
                        }
                        return n | s << 16 | 0
                    }
                }, {}],
                6: [function(e, t, i) {
                    t.exports = {
                        Z_NO_FLUSH: 0,
                        Z_PARTIAL_FLUSH: 1,
                        Z_SYNC_FLUSH: 2,
                        Z_FULL_FLUSH: 3,
                        Z_FINISH: 4,
                        Z_BLOCK: 5,
                        Z_TREES: 6,
                        Z_OK: 0,
                        Z_STREAM_END: 1,
                        Z_NEED_DICT: 2,
                        Z_ERRNO: -1,
                        Z_STREAM_ERROR: -2,
                        Z_DATA_ERROR: -3,
                        Z_BUF_ERROR: -5,
                        Z_NO_COMPRESSION: 0,
                        Z_BEST_SPEED: 1,
                        Z_BEST_COMPRESSION: 9,
                        Z_DEFAULT_COMPRESSION: -1,
                        Z_FILTERED: 1,
                        Z_HUFFMAN_ONLY: 2,
                        Z_RLE: 3,
                        Z_FIXED: 4,
                        Z_DEFAULT_STRATEGY: 0,
                        Z_BINARY: 0,
                        Z_TEXT: 1,
                        Z_UNKNOWN: 2,
                        Z_DEFLATED: 8
                    }
                }, {}],
                7: [function(e, t, i) {
                    var r = function() {
                        for (var e, t = [], i = 0; i < 256; i++) {
                            e = i;
                            for (var r = 0; r < 8; r++) e = 1 & e ? 3988292384 ^ e >>> 1 : e >>> 1;
                            t[i] = e
                        }
                        return t
                    }();
                    t.exports = function(e, t, i, n) {
                        var s = r,
                            o = n + i;
                        e ^= -1;
                        for (var a = n; a < o; a++) e = e >>> 8 ^ s[255 & (e ^ t[a])];
                        return -1 ^ e
                    }
                }, {}],
                8: [function(e, t, i) {
                    var r, n = e("../utils/common"),
                        s = e("./trees"),
                        o = e("./adler32"),
                        a = e("./crc32"),
                        l = e("./messages");

                    function c(e, t) {
                        return e.msg = l[t], t
                    }

                    function h(e) {
                        return (e << 1) - (e > 4 ? 9 : 0)
                    }

                    function d(e) {
                        for (var t = e.length; --t >= 0;) e[t] = 0
                    }

                    function u(e) {
                        var t = e.state,
                            i = t.pending;
                        i > e.avail_out && (i = e.avail_out), 0 !== i && (n.arraySet(e.output, t.pending_buf, t.pending_out, i, e.next_out), e.next_out += i, t.pending_out += i, e.total_out += i, e.avail_out -= i, t.pending -= i, 0 === t.pending && (t.pending_out = 0))
                    }

                    function p(e, t) {
                        s._tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, t), e.block_start = e.strstart, u(e.strm)
                    }

                    function f(e, t) {
                        e.pending_buf[e.pending++] = t
                    }

                    function _(e, t) {
                        e.pending_buf[e.pending++] = t >>> 8 & 255, e.pending_buf[e.pending++] = 255 & t
                    }

                    function m(e, t, i, r) {
                        var s = e.avail_in;
                        return s > r && (s = r), 0 === s ? 0 : (e.avail_in -= s, n.arraySet(t, e.input, e.next_in, s, i), 1 === e.state.wrap ? e.adler = o(e.adler, t, s, i) : 2 === e.state.wrap && (e.adler = a(e.adler, t, s, i)), e.next_in += s, e.total_in += s, s)
                    }

                    function g(e, t) {
                        var i, r, n = e.max_chain_length,
                            s = e.strstart,
                            o = e.prev_length,
                            a = e.nice_match,
                            l = e.strstart > e.w_size - 262 ? e.strstart - (e.w_size - 262) : 0,
                            c = e.window,
                            h = e.w_mask,
                            d = e.prev,
                            u = e.strstart + 258,
                            p = c[s + o - 1],
                            f = c[s + o];
                        e.prev_length >= e.good_match && (n >>= 2), a > e.lookahead && (a = e.lookahead);
                        do {
                            if (c[(i = t) + o] === f && c[i + o - 1] === p && c[i] === c[s] && c[++i] === c[s + 1]) {
                                s += 2, i++;
                                do {} while (c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && c[++s] === c[++i] && s < u);
                                if (r = 258 - (u - s), s = u - 258, r > o) {
                                    if (e.match_start = t, o = r, r >= a) break;
                                    p = c[s + o - 1], f = c[s + o]
                                }
                            }
                        } while ((t = d[t & h]) > l && 0 != --n);
                        return o <= e.lookahead ? o : e.lookahead
                    }

                    function v(e) {
                        var t, i, r, s, o, a = e.w_size;
                        do {
                            if (s = e.window_size - e.lookahead - e.strstart, e.strstart >= a + (a - 262)) {
                                n.arraySet(e.window, e.window, a, a, 0), e.match_start -= a, e.strstart -= a, e.block_start -= a, t = i = e.hash_size;
                                do {
                                    r = e.head[--t], e.head[t] = r >= a ? r - a : 0
                                } while (--i);
                                t = i = a;
                                do {
                                    r = e.prev[--t], e.prev[t] = r >= a ? r - a : 0
                                } while (--i);
                                s += a
                            }
                            if (0 === e.strm.avail_in) break;
                            if (i = m(e.strm, e.window, e.strstart + e.lookahead, s), e.lookahead += i, e.lookahead + e.insert >= 3)
                                for (o = e.strstart - e.insert, e.ins_h = e.window[o], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[o + 1]) & e.hash_mask; e.insert && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[o + 3 - 1]) & e.hash_mask, e.prev[o & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = o, o++, e.insert--, !(e.lookahead + e.insert < 3)););
                        } while (e.lookahead < 262 && 0 !== e.strm.avail_in)
                    }

                    function b(e, t) {
                        for (var i, r;;) {
                            if (e.lookahead < 262) {
                                if (v(e), e.lookahead < 262 && 0 === t) return 1;
                                if (0 === e.lookahead) break
                            }
                            if (i = 0, e.lookahead >= 3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), 0 !== i && e.strstart - i <= e.w_size - 262 && (e.match_length = g(e, i)), e.match_length >= 3)
                                if (r = s._tr_tally(e, e.strstart - e.match_start, e.match_length - 3), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= 3) {
                                    e.match_length--;
                                    do {
                                        e.strstart++, e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart
                                    } while (0 != --e.match_length);
                                    e.strstart++
                                } else e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 1]) & e.hash_mask;
                            else r = s._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;
                            if (r && (p(e, !1), 0 === e.strm.avail_out)) return 1
                        }
                        return e.insert = e.strstart < 2 ? e.strstart : 2, 4 === t ? (p(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (p(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                    }

                    function y(e, t) {
                        for (var i, r, n;;) {
                            if (e.lookahead < 262) {
                                if (v(e), e.lookahead < 262 && 0 === t) return 1;
                                if (0 === e.lookahead) break
                            }
                            if (i = 0, e.lookahead >= 3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = 2, 0 !== i && e.prev_length < e.max_lazy_match && e.strstart - i <= e.w_size - 262 && (e.match_length = g(e, i), e.match_length <= 5 && (1 === e.strategy || 3 === e.match_length && e.strstart - e.match_start > 4096) && (e.match_length = 2)), e.prev_length >= 3 && e.match_length <= e.prev_length) {
                                n = e.strstart + e.lookahead - 3, r = s._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - 3), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;
                                do {
                                    ++e.strstart <= n && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart)
                                } while (0 != --e.prev_length);
                                if (e.match_available = 0, e.match_length = 2, e.strstart++, r && (p(e, !1), 0 === e.strm.avail_out)) return 1
                            } else if (e.match_available) {
                                if ((r = s._tr_tally(e, 0, e.window[e.strstart - 1])) && p(e, !1), e.strstart++, e.lookahead--, 0 === e.strm.avail_out) return 1
                            } else e.match_available = 1, e.strstart++, e.lookahead--
                        }
                        return e.match_available && (r = s._tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < 2 ? e.strstart : 2, 4 === t ? (p(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (p(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                    }

                    function w(e, t, i, r, n) {
                        this.good_length = e, this.max_lazy = t, this.nice_length = i, this.max_chain = r, this.func = n
                    }

                    function M() {
                        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = 8, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new n.Buf16(1146), this.dyn_dtree = new n.Buf16(122), this.bl_tree = new n.Buf16(78), d(this.dyn_ltree), d(this.dyn_dtree), d(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new n.Buf16(16), this.heap = new n.Buf16(573), d(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new n.Buf16(573), d(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
                    }

                    function A(e) {
                        var t;
                        return e && e.state ? (e.total_in = e.total_out = 0, e.data_type = 2, (t = e.state).pending = 0, t.pending_out = 0, t.wrap < 0 && (t.wrap = -t.wrap), t.status = t.wrap ? 42 : 113, e.adler = 2 === t.wrap ? 0 : 1, t.last_flush = 0, s._tr_init(t), 0) : c(e, -2)
                    }

                    function x(e) {
                        var t = A(e);
                        return 0 === t && function(e) {
                            e.window_size = 2 * e.w_size, d(e.head), e.max_lazy_match = r[e.level].max_lazy, e.good_match = r[e.level].good_length, e.nice_match = r[e.level].nice_length, e.max_chain_length = r[e.level].max_chain, e.strstart = 0, e.block_start = 0, e.lookahead = 0, e.insert = 0, e.match_length = e.prev_length = 2, e.match_available = 0, e.ins_h = 0
                        }(e.state), t
                    }

                    function C(e, t, i, r, s, o) {
                        if (!e) return -2;
                        var a = 1;
                        if (-1 === t && (t = 6), r < 0 ? (a = 0, r = -r) : r > 15 && (a = 2, r -= 16), s < 1 || s > 9 || 8 !== i || r < 8 || r > 15 || t < 0 || t > 9 || o < 0 || o > 4) return c(e, -2);
                        8 === r && (r = 9);
                        var l = new M;
                        return e.state = l, l.strm = e, l.wrap = a, l.gzhead = null, l.w_bits = r, l.w_size = 1 << l.w_bits, l.w_mask = l.w_size - 1, l.hash_bits = s + 7, l.hash_size = 1 << l.hash_bits, l.hash_mask = l.hash_size - 1, l.hash_shift = ~~((l.hash_bits + 3 - 1) / 3), l.window = new n.Buf8(2 * l.w_size), l.head = new n.Buf16(l.hash_size), l.prev = new n.Buf16(l.w_size), l.lit_bufsize = 1 << s + 6, l.pending_buf_size = 4 * l.lit_bufsize, l.pending_buf = new n.Buf8(l.pending_buf_size), l.d_buf = 1 * l.lit_bufsize, l.l_buf = 3 * l.lit_bufsize, l.level = t, l.strategy = o, l.method = i, x(e)
                    }
                    r = [new w(0, 0, 0, 0, (function(e, t) {
                        var i = 65535;
                        for (i > e.pending_buf_size - 5 && (i = e.pending_buf_size - 5);;) {
                            if (e.lookahead <= 1) {
                                if (v(e), 0 === e.lookahead && 0 === t) return 1;
                                if (0 === e.lookahead) break
                            }
                            e.strstart += e.lookahead, e.lookahead = 0;
                            var r = e.block_start + i;
                            if ((0 === e.strstart || e.strstart >= r) && (e.lookahead = e.strstart - r, e.strstart = r, p(e, !1), 0 === e.strm.avail_out)) return 1;
                            if (e.strstart - e.block_start >= e.w_size - 262 && (p(e, !1), 0 === e.strm.avail_out)) return 1
                        }
                        return e.insert = 0, 4 === t ? (p(e, !0), 0 === e.strm.avail_out ? 3 : 4) : (e.strstart > e.block_start && (p(e, !1), e.strm.avail_out), 1)
                    })), new w(4, 4, 8, 4, b), new w(4, 5, 16, 8, b), new w(4, 6, 32, 32, b), new w(4, 4, 16, 16, y), new w(8, 16, 32, 32, y), new w(8, 16, 128, 128, y), new w(8, 32, 128, 256, y), new w(32, 128, 258, 1024, y), new w(32, 258, 258, 4096, y)], i.deflateInit = function(e, t) {
                        return C(e, t, 8, 15, 8, 0)
                    }, i.deflateInit2 = C, i.deflateReset = x, i.deflateResetKeep = A, i.deflateSetHeader = function(e, t) {
                        return e && e.state ? 2 !== e.state.wrap ? -2 : (e.state.gzhead = t, 0) : -2
                    }, i.deflate = function(e, t) {
                        var i, n, o, l;
                        if (!e || !e.state || t > 5 || t < 0) return e ? c(e, -2) : -2;
                        if (n = e.state, !e.output || !e.input && 0 !== e.avail_in || 666 === n.status && 4 !== t) return c(e, 0 === e.avail_out ? -5 : -2);
                        if (n.strm = e, i = n.last_flush, n.last_flush = t, 42 === n.status)
                            if (2 === n.wrap) e.adler = 0, f(n, 31), f(n, 139), f(n, 8), n.gzhead ? (f(n, (n.gzhead.text ? 1 : 0) + (n.gzhead.hcrc ? 2 : 0) + (n.gzhead.extra ? 4 : 0) + (n.gzhead.name ? 8 : 0) + (n.gzhead.comment ? 16 : 0)), f(n, 255 & n.gzhead.time), f(n, n.gzhead.time >> 8 & 255), f(n, n.gzhead.time >> 16 & 255), f(n, n.gzhead.time >> 24 & 255), f(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0), f(n, 255 & n.gzhead.os), n.gzhead.extra && n.gzhead.extra.length && (f(n, 255 & n.gzhead.extra.length), f(n, n.gzhead.extra.length >> 8 & 255)), n.gzhead.hcrc && (e.adler = a(e.adler, n.pending_buf, n.pending, 0)), n.gzindex = 0, n.status = 69) : (f(n, 0), f(n, 0), f(n, 0), f(n, 0), f(n, 0), f(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0), f(n, 3), n.status = 113);
                            else {
                                var m = 8 + (n.w_bits - 8 << 4) << 8;
                                m |= (n.strategy >= 2 || n.level < 2 ? 0 : n.level < 6 ? 1 : 6 === n.level ? 2 : 3) << 6, 0 !== n.strstart && (m |= 32), m += 31 - m % 31, n.status = 113, _(n, m), 0 !== n.strstart && (_(n, e.adler >>> 16), _(n, 65535 & e.adler)), e.adler = 1
                            } if (69 === n.status)
                            if (n.gzhead.extra) {
                                for (o = n.pending; n.gzindex < (65535 & n.gzhead.extra.length) && (n.pending !== n.pending_buf_size || (n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), u(e), o = n.pending, n.pending !== n.pending_buf_size));) f(n, 255 & n.gzhead.extra[n.gzindex]), n.gzindex++;
                                n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), n.gzindex === n.gzhead.extra.length && (n.gzindex = 0, n.status = 73)
                            } else n.status = 73;
                        if (73 === n.status)
                            if (n.gzhead.name) {
                                o = n.pending;
                                do {
                                    if (n.pending === n.pending_buf_size && (n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), u(e), o = n.pending, n.pending === n.pending_buf_size)) {
                                        l = 1;
                                        break
                                    }
                                    l = n.gzindex < n.gzhead.name.length ? 255 & n.gzhead.name.charCodeAt(n.gzindex++) : 0, f(n, l)
                                } while (0 !== l);
                                n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), 0 === l && (n.gzindex = 0, n.status = 91)
                            } else n.status = 91;
                        if (91 === n.status)
                            if (n.gzhead.comment) {
                                o = n.pending;
                                do {
                                    if (n.pending === n.pending_buf_size && (n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), u(e), o = n.pending, n.pending === n.pending_buf_size)) {
                                        l = 1;
                                        break
                                    }
                                    l = n.gzindex < n.gzhead.comment.length ? 255 & n.gzhead.comment.charCodeAt(n.gzindex++) : 0, f(n, l)
                                } while (0 !== l);
                                n.gzhead.hcrc && n.pending > o && (e.adler = a(e.adler, n.pending_buf, n.pending - o, o)), 0 === l && (n.status = 103)
                            } else n.status = 103;
                        if (103 === n.status && (n.gzhead.hcrc ? (n.pending + 2 > n.pending_buf_size && u(e), n.pending + 2 <= n.pending_buf_size && (f(n, 255 & e.adler), f(n, e.adler >> 8 & 255), e.adler = 0, n.status = 113)) : n.status = 113), 0 !== n.pending) {
                            if (u(e), 0 === e.avail_out) return n.last_flush = -1, 0
                        } else if (0 === e.avail_in && h(t) <= h(i) && 4 !== t) return c(e, -5);
                        if (666 === n.status && 0 !== e.avail_in) return c(e, -5);
                        if (0 !== e.avail_in || 0 !== n.lookahead || 0 !== t && 666 !== n.status) {
                            var g = 2 === n.strategy ? function(e, t) {
                                for (var i;;) {
                                    if (0 === e.lookahead && (v(e), 0 === e.lookahead)) {
                                        if (0 === t) return 1;
                                        break
                                    }
                                    if (e.match_length = 0, i = s._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, i && (p(e, !1), 0 === e.strm.avail_out)) return 1
                                }
                                return e.insert = 0, 4 === t ? (p(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (p(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                            }(n, t) : 3 === n.strategy ? function(e, t) {
                                for (var i, r, n, o, a = e.window;;) {
                                    if (e.lookahead <= 258) {
                                        if (v(e), e.lookahead <= 258 && 0 === t) return 1;
                                        if (0 === e.lookahead) break
                                    }
                                    if (e.match_length = 0, e.lookahead >= 3 && e.strstart > 0 && (r = a[n = e.strstart - 1]) === a[++n] && r === a[++n] && r === a[++n]) {
                                        o = e.strstart + 258;
                                        do {} while (r === a[++n] && r === a[++n] && r === a[++n] && r === a[++n] && r === a[++n] && r === a[++n] && r === a[++n] && r === a[++n] && n < o);
                                        e.match_length = 258 - (o - n), e.match_length > e.lookahead && (e.match_length = e.lookahead)
                                    }
                                    if (e.match_length >= 3 ? (i = s._tr_tally(e, 1, e.match_length - 3), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (i = s._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), i && (p(e, !1), 0 === e.strm.avail_out)) return 1
                                }
                                return e.insert = 0, 4 === t ? (p(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (p(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                            }(n, t) : r[n.level].func(n, t);
                            if (3 !== g && 4 !== g || (n.status = 666), 1 === g || 3 === g) return 0 === e.avail_out && (n.last_flush = -1), 0;
                            if (2 === g && (1 === t ? s._tr_align(n) : 5 !== t && (s._tr_stored_block(n, 0, 0, !1), 3 === t && (d(n.head), 0 === n.lookahead && (n.strstart = 0, n.block_start = 0, n.insert = 0))), u(e), 0 === e.avail_out)) return n.last_flush = -1, 0
                        }
                        return 4 !== t ? 0 : n.wrap <= 0 ? 1 : (2 === n.wrap ? (f(n, 255 & e.adler), f(n, e.adler >> 8 & 255), f(n, e.adler >> 16 & 255), f(n, e.adler >> 24 & 255), f(n, 255 & e.total_in), f(n, e.total_in >> 8 & 255), f(n, e.total_in >> 16 & 255), f(n, e.total_in >> 24 & 255)) : (_(n, e.adler >>> 16), _(n, 65535 & e.adler)), u(e), n.wrap > 0 && (n.wrap = -n.wrap), 0 !== n.pending ? 0 : 1)
                    }, i.deflateEnd = function(e) {
                        var t;
                        return e && e.state ? 42 !== (t = e.state.status) && 69 !== t && 73 !== t && 91 !== t && 103 !== t && 113 !== t && 666 !== t ? c(e, -2) : (e.state = null, 113 === t ? c(e, -3) : 0) : -2
                    }, i.deflateSetDictionary = function(e, t) {
                        var i, r, s, a, l, c, h, u, p = t.length;
                        if (!e || !e.state) return -2;
                        if (2 === (a = (i = e.state).wrap) || 1 === a && 42 !== i.status || i.lookahead) return -2;
                        for (1 === a && (e.adler = o(e.adler, t, p, 0)), i.wrap = 0, p >= i.w_size && (0 === a && (d(i.head), i.strstart = 0, i.block_start = 0, i.insert = 0), u = new n.Buf8(i.w_size), n.arraySet(u, t, p - i.w_size, i.w_size, 0), t = u, p = i.w_size), l = e.avail_in, c = e.next_in, h = e.input, e.avail_in = p, e.next_in = 0, e.input = t, v(i); i.lookahead >= 3;) {
                            r = i.strstart, s = i.lookahead - 2;
                            do {
                                i.ins_h = (i.ins_h << i.hash_shift ^ i.window[r + 3 - 1]) & i.hash_mask, i.prev[r & i.w_mask] = i.head[i.ins_h], i.head[i.ins_h] = r, r++
                            } while (--s);
                            i.strstart = r, i.lookahead = 2, v(i)
                        }
                        return i.strstart += i.lookahead, i.block_start = i.strstart, i.insert = i.lookahead, i.lookahead = 0, i.match_length = i.prev_length = 2, i.match_available = 0, e.next_in = c, e.input = h, e.avail_in = l, i.wrap = a, 0
                    }, i.deflateInfo = "pako deflate (from Nodeca project)"
                }, {
                    "../utils/common": 3,
                    "./adler32": 5,
                    "./crc32": 7,
                    "./messages": 13,
                    "./trees": 14
                }],
                9: [function(e, t, i) {
                    t.exports = function() {
                        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
                    }
                }, {}],
                10: [function(e, t, i) {
                    t.exports = function(e, t) {
                        var i, r, n, s, o, a, l, c, h, d, u, p, f, _, m, g, v, b, y, w, M, A, x, C, P;
                        i = e.state, r = e.next_in, C = e.input, n = r + (e.avail_in - 5), s = e.next_out, P = e.output, o = s - (t - e.avail_out), a = s + (e.avail_out - 257), l = i.dmax, c = i.wsize, h = i.whave, d = i.wnext, u = i.window, p = i.hold, f = i.bits, _ = i.lencode, m = i.distcode, g = (1 << i.lenbits) - 1, v = (1 << i.distbits) - 1;
                        e: do {
                            f < 15 && (p += C[r++] << f, f += 8, p += C[r++] << f, f += 8), b = _[p & g];
                            t: for (;;) {
                                if (p >>>= y = b >>> 24, f -= y, 0 == (y = b >>> 16 & 255)) P[s++] = 65535 & b;
                                else {
                                    if (!(16 & y)) {
                                        if (0 == (64 & y)) {
                                            b = _[(65535 & b) + (p & (1 << y) - 1)];
                                            continue t
                                        }
                                        if (32 & y) {
                                            i.mode = 12;
                                            break e
                                        }
                                        e.msg = "invalid literal/length code", i.mode = 30;
                                        break e
                                    }
                                    w = 65535 & b, (y &= 15) && (f < y && (p += C[r++] << f, f += 8), w += p & (1 << y) - 1, p >>>= y, f -= y), f < 15 && (p += C[r++] << f, f += 8, p += C[r++] << f, f += 8), b = m[p & v];
                                    i: for (;;) {
                                        if (p >>>= y = b >>> 24, f -= y, !(16 & (y = b >>> 16 & 255))) {
                                            if (0 == (64 & y)) {
                                                b = m[(65535 & b) + (p & (1 << y) - 1)];
                                                continue i
                                            }
                                            e.msg = "invalid distance code", i.mode = 30;
                                            break e
                                        }
                                        if (M = 65535 & b, f < (y &= 15) && (p += C[r++] << f, (f += 8) < y && (p += C[r++] << f, f += 8)), (M += p & (1 << y) - 1) > l) {
                                            e.msg = "invalid distance too far back", i.mode = 30;
                                            break e
                                        }
                                        if (p >>>= y, f -= y, M > (y = s - o)) {
                                            if ((y = M - y) > h && i.sane) {
                                                e.msg = "invalid distance too far back", i.mode = 30;
                                                break e
                                            }
                                            if (A = 0, x = u, 0 === d) {
                                                if (A += c - y, y < w) {
                                                    w -= y;
                                                    do {
                                                        P[s++] = u[A++]
                                                    } while (--y);
                                                    A = s - M, x = P
                                                }
                                            } else if (d < y) {
                                                if (A += c + d - y, (y -= d) < w) {
                                                    w -= y;
                                                    do {
                                                        P[s++] = u[A++]
                                                    } while (--y);
                                                    if (A = 0, d < w) {
                                                        w -= y = d;
                                                        do {
                                                            P[s++] = u[A++]
                                                        } while (--y);
                                                        A = s - M, x = P
                                                    }
                                                }
                                            } else if (A += d - y, y < w) {
                                                w -= y;
                                                do {
                                                    P[s++] = u[A++]
                                                } while (--y);
                                                A = s - M, x = P
                                            }
                                            for (; w > 2;) P[s++] = x[A++], P[s++] = x[A++], P[s++] = x[A++], w -= 3;
                                            w && (P[s++] = x[A++], w > 1 && (P[s++] = x[A++]))
                                        } else {
                                            A = s - M;
                                            do {
                                                P[s++] = P[A++], P[s++] = P[A++], P[s++] = P[A++], w -= 3
                                            } while (w > 2);
                                            w && (P[s++] = P[A++], w > 1 && (P[s++] = P[A++]))
                                        }
                                        break
                                    }
                                }
                                break
                            }
                        } while (r < n && s < a);
                        r -= w = f >> 3, p &= (1 << (f -= w << 3)) - 1, e.next_in = r, e.next_out = s, e.avail_in = r < n ? n - r + 5 : 5 - (r - n), e.avail_out = s < a ? a - s + 257 : 257 - (s - a), i.hold = p, i.bits = f
                    }
                }, {}],
                11: [function(e, t, i) {
                    var r = e("../utils/common"),
                        n = e("./adler32"),
                        s = e("./crc32"),
                        o = e("./inffast"),
                        a = e("./inftrees");

                    function l(e) {
                        return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((65280 & e) << 8) + ((255 & e) << 24)
                    }

                    function c() {
                        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new r.Buf16(320), this.work = new r.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
                    }

                    function h(e) {
                        var t;
                        return e && e.state ? (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = "", t.wrap && (e.adler = 1 & t.wrap), t.mode = 1, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new r.Buf32(852), t.distcode = t.distdyn = new r.Buf32(592), t.sane = 1, t.back = -1, 0) : -2
                    }

                    function d(e) {
                        var t;
                        return e && e.state ? ((t = e.state).wsize = 0, t.whave = 0, t.wnext = 0, h(e)) : -2
                    }

                    function u(e, t) {
                        var i, r;
                        return e && e.state ? (r = e.state, t < 0 ? (i = 0, t = -t) : (i = 1 + (t >> 4), t < 48 && (t &= 15)), t && (t < 8 || t > 15) ? -2 : (null !== r.window && r.wbits !== t && (r.window = null), r.wrap = i, r.wbits = t, d(e))) : -2
                    }

                    function p(e, t) {
                        var i, r;
                        return e ? (r = new c, e.state = r, r.window = null, 0 !== (i = u(e, t)) && (e.state = null), i) : -2
                    }
                    var f, _, m = !0;

                    function g(e) {
                        if (m) {
                            var t;
                            for (f = new r.Buf32(512), _ = new r.Buf32(32), t = 0; t < 144;) e.lens[t++] = 8;
                            for (; t < 256;) e.lens[t++] = 9;
                            for (; t < 280;) e.lens[t++] = 7;
                            for (; t < 288;) e.lens[t++] = 8;
                            for (a(1, e.lens, 0, 288, f, 0, e.work, {
                                    bits: 9
                                }), t = 0; t < 32;) e.lens[t++] = 5;
                            a(2, e.lens, 0, 32, _, 0, e.work, {
                                bits: 5
                            }), m = !1
                        }
                        e.lencode = f, e.lenbits = 9, e.distcode = _, e.distbits = 5
                    }

                    function v(e, t, i, n) {
                        var s, o = e.state;
                        return null === o.window && (o.wsize = 1 << o.wbits, o.wnext = 0, o.whave = 0, o.window = new r.Buf8(o.wsize)), n >= o.wsize ? (r.arraySet(o.window, t, i - o.wsize, o.wsize, 0), o.wnext = 0, o.whave = o.wsize) : ((s = o.wsize - o.wnext) > n && (s = n), r.arraySet(o.window, t, i - n, s, o.wnext), (n -= s) ? (r.arraySet(o.window, t, i - n, n, 0), o.wnext = n, o.whave = o.wsize) : (o.wnext += s, o.wnext === o.wsize && (o.wnext = 0), o.whave < o.wsize && (o.whave += s))), 0
                    }
                    i.inflateReset = d, i.inflateReset2 = u, i.inflateResetKeep = h, i.inflateInit = function(e) {
                        return p(e, 15)
                    }, i.inflateInit2 = p, i.inflate = function(e, t) {
                        var i, c, h, d, u, p, f, _, m, b, y, w, M, A, x, C, P, k, E, I, T, D, S, B, j = 0,
                            L = new r.Buf8(4),
                            R = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                        if (!e || !e.state || !e.output || !e.input && 0 !== e.avail_in) return -2;
                        12 === (i = e.state).mode && (i.mode = 13), u = e.next_out, h = e.output, f = e.avail_out, d = e.next_in, c = e.input, p = e.avail_in, _ = i.hold, m = i.bits, b = p, y = f, D = 0;
                        e: for (;;) switch (i.mode) {
                            case 1:
                                if (0 === i.wrap) {
                                    i.mode = 13;
                                    break
                                }
                                for (; m < 16;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if (2 & i.wrap && 35615 === _) {
                                    i.check = 0, L[0] = 255 & _, L[1] = _ >>> 8 & 255, i.check = s(i.check, L, 2, 0), _ = 0, m = 0, i.mode = 2;
                                    break
                                }
                                if (i.flags = 0, i.head && (i.head.done = !1), !(1 & i.wrap) || (((255 & _) << 8) + (_ >> 8)) % 31) {
                                    e.msg = "incorrect header check", i.mode = 30;
                                    break
                                }
                                if (8 != (15 & _)) {
                                    e.msg = "unknown compression method", i.mode = 30;
                                    break
                                }
                                if (m -= 4, T = 8 + (15 & (_ >>>= 4)), 0 === i.wbits) i.wbits = T;
                                else if (T > i.wbits) {
                                    e.msg = "invalid window size", i.mode = 30;
                                    break
                                }
                                i.dmax = 1 << T, e.adler = i.check = 1, i.mode = 512 & _ ? 10 : 12, _ = 0, m = 0;
                                break;
                            case 2:
                                for (; m < 16;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if (i.flags = _, 8 != (255 & i.flags)) {
                                    e.msg = "unknown compression method", i.mode = 30;
                                    break
                                }
                                if (57344 & i.flags) {
                                    e.msg = "unknown header flags set", i.mode = 30;
                                    break
                                }
                                i.head && (i.head.text = _ >> 8 & 1), 512 & i.flags && (L[0] = 255 & _, L[1] = _ >>> 8 & 255, i.check = s(i.check, L, 2, 0)), _ = 0, m = 0, i.mode = 3;
                            case 3:
                                for (; m < 32;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                i.head && (i.head.time = _), 512 & i.flags && (L[0] = 255 & _, L[1] = _ >>> 8 & 255, L[2] = _ >>> 16 & 255, L[3] = _ >>> 24 & 255, i.check = s(i.check, L, 4, 0)), _ = 0, m = 0, i.mode = 4;
                            case 4:
                                for (; m < 16;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                i.head && (i.head.xflags = 255 & _, i.head.os = _ >> 8), 512 & i.flags && (L[0] = 255 & _, L[1] = _ >>> 8 & 255, i.check = s(i.check, L, 2, 0)), _ = 0, m = 0, i.mode = 5;
                            case 5:
                                if (1024 & i.flags) {
                                    for (; m < 16;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    i.length = _, i.head && (i.head.extra_len = _), 512 & i.flags && (L[0] = 255 & _, L[1] = _ >>> 8 & 255, i.check = s(i.check, L, 2, 0)), _ = 0, m = 0
                                } else i.head && (i.head.extra = null);
                                i.mode = 6;
                            case 6:
                                if (1024 & i.flags && ((w = i.length) > p && (w = p), w && (i.head && (T = i.head.extra_len - i.length, i.head.extra || (i.head.extra = new Array(i.head.extra_len)), r.arraySet(i.head.extra, c, d, w, T)), 512 & i.flags && (i.check = s(i.check, c, w, d)), p -= w, d += w, i.length -= w), i.length)) break e;
                                i.length = 0, i.mode = 7;
                            case 7:
                                if (2048 & i.flags) {
                                    if (0 === p) break e;
                                    w = 0;
                                    do {
                                        T = c[d + w++], i.head && T && i.length < 65536 && (i.head.name += String.fromCharCode(T))
                                    } while (T && w < p);
                                    if (512 & i.flags && (i.check = s(i.check, c, w, d)), p -= w, d += w, T) break e
                                } else i.head && (i.head.name = null);
                                i.length = 0, i.mode = 8;
                            case 8:
                                if (4096 & i.flags) {
                                    if (0 === p) break e;
                                    w = 0;
                                    do {
                                        T = c[d + w++], i.head && T && i.length < 65536 && (i.head.comment += String.fromCharCode(T))
                                    } while (T && w < p);
                                    if (512 & i.flags && (i.check = s(i.check, c, w, d)), p -= w, d += w, T) break e
                                } else i.head && (i.head.comment = null);
                                i.mode = 9;
                            case 9:
                                if (512 & i.flags) {
                                    for (; m < 16;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    if (_ !== (65535 & i.check)) {
                                        e.msg = "header crc mismatch", i.mode = 30;
                                        break
                                    }
                                    _ = 0, m = 0
                                }
                                i.head && (i.head.hcrc = i.flags >> 9 & 1, i.head.done = !0), e.adler = i.check = 0, i.mode = 12;
                                break;
                            case 10:
                                for (; m < 32;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                e.adler = i.check = l(_), _ = 0, m = 0, i.mode = 11;
                            case 11:
                                if (0 === i.havedict) return e.next_out = u, e.avail_out = f, e.next_in = d, e.avail_in = p, i.hold = _, i.bits = m, 2;
                                e.adler = i.check = 1, i.mode = 12;
                            case 12:
                                if (5 === t || 6 === t) break e;
                            case 13:
                                if (i.last) {
                                    _ >>>= 7 & m, m -= 7 & m, i.mode = 27;
                                    break
                                }
                                for (; m < 3;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                switch (i.last = 1 & _, m -= 1, 3 & (_ >>>= 1)) {
                                    case 0:
                                        i.mode = 14;
                                        break;
                                    case 1:
                                        if (g(i), i.mode = 20, 6 === t) {
                                            _ >>>= 2, m -= 2;
                                            break e
                                        }
                                        break;
                                    case 2:
                                        i.mode = 17;
                                        break;
                                    case 3:
                                        e.msg = "invalid block type", i.mode = 30
                                }
                                _ >>>= 2, m -= 2;
                                break;
                            case 14:
                                for (_ >>>= 7 & m, m -= 7 & m; m < 32;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if ((65535 & _) != (_ >>> 16 ^ 65535)) {
                                    e.msg = "invalid stored block lengths", i.mode = 30;
                                    break
                                }
                                if (i.length = 65535 & _, _ = 0, m = 0, i.mode = 15, 6 === t) break e;
                            case 15:
                                i.mode = 16;
                            case 16:
                                if (w = i.length) {
                                    if (w > p && (w = p), w > f && (w = f), 0 === w) break e;
                                    r.arraySet(h, c, d, w, u), p -= w, d += w, f -= w, u += w, i.length -= w;
                                    break
                                }
                                i.mode = 12;
                                break;
                            case 17:
                                for (; m < 14;) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if (i.nlen = 257 + (31 & _), _ >>>= 5, m -= 5, i.ndist = 1 + (31 & _), _ >>>= 5, m -= 5, i.ncode = 4 + (15 & _), _ >>>= 4, m -= 4, i.nlen > 286 || i.ndist > 30) {
                                    e.msg = "too many length or distance symbols", i.mode = 30;
                                    break
                                }
                                i.have = 0, i.mode = 18;
                            case 18:
                                for (; i.have < i.ncode;) {
                                    for (; m < 3;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    i.lens[R[i.have++]] = 7 & _, _ >>>= 3, m -= 3
                                }
                                for (; i.have < 19;) i.lens[R[i.have++]] = 0;
                                if (i.lencode = i.lendyn, i.lenbits = 7, S = {
                                        bits: i.lenbits
                                    }, D = a(0, i.lens, 0, 19, i.lencode, 0, i.work, S), i.lenbits = S.bits, D) {
                                    e.msg = "invalid code lengths set", i.mode = 30;
                                    break
                                }
                                i.have = 0, i.mode = 19;
                            case 19:
                                for (; i.have < i.nlen + i.ndist;) {
                                    for (; C = (j = i.lencode[_ & (1 << i.lenbits) - 1]) >>> 16 & 255, P = 65535 & j, !((x = j >>> 24) <= m);) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    if (P < 16) _ >>>= x, m -= x, i.lens[i.have++] = P;
                                    else {
                                        if (16 === P) {
                                            for (B = x + 2; m < B;) {
                                                if (0 === p) break e;
                                                p--, _ += c[d++] << m, m += 8
                                            }
                                            if (_ >>>= x, m -= x, 0 === i.have) {
                                                e.msg = "invalid bit length repeat", i.mode = 30;
                                                break
                                            }
                                            T = i.lens[i.have - 1], w = 3 + (3 & _), _ >>>= 2, m -= 2
                                        } else if (17 === P) {
                                            for (B = x + 3; m < B;) {
                                                if (0 === p) break e;
                                                p--, _ += c[d++] << m, m += 8
                                            }
                                            m -= x, T = 0, w = 3 + (7 & (_ >>>= x)), _ >>>= 3, m -= 3
                                        } else {
                                            for (B = x + 7; m < B;) {
                                                if (0 === p) break e;
                                                p--, _ += c[d++] << m, m += 8
                                            }
                                            m -= x, T = 0, w = 11 + (127 & (_ >>>= x)), _ >>>= 7, m -= 7
                                        }
                                        if (i.have + w > i.nlen + i.ndist) {
                                            e.msg = "invalid bit length repeat", i.mode = 30;
                                            break
                                        }
                                        for (; w--;) i.lens[i.have++] = T
                                    }
                                }
                                if (30 === i.mode) break;
                                if (0 === i.lens[256]) {
                                    e.msg = "invalid code -- missing end-of-block", i.mode = 30;
                                    break
                                }
                                if (i.lenbits = 9, S = {
                                        bits: i.lenbits
                                    }, D = a(1, i.lens, 0, i.nlen, i.lencode, 0, i.work, S), i.lenbits = S.bits, D) {
                                    e.msg = "invalid literal/lengths set", i.mode = 30;
                                    break
                                }
                                if (i.distbits = 6, i.distcode = i.distdyn, S = {
                                        bits: i.distbits
                                    }, D = a(2, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, S), i.distbits = S.bits, D) {
                                    e.msg = "invalid distances set", i.mode = 30;
                                    break
                                }
                                if (i.mode = 20, 6 === t) break e;
                            case 20:
                                i.mode = 21;
                            case 21:
                                if (p >= 6 && f >= 258) {
                                    e.next_out = u, e.avail_out = f, e.next_in = d, e.avail_in = p, i.hold = _, i.bits = m, o(e, y), u = e.next_out, h = e.output, f = e.avail_out, d = e.next_in, c = e.input, p = e.avail_in, _ = i.hold, m = i.bits, 12 === i.mode && (i.back = -1);
                                    break
                                }
                                for (i.back = 0; C = (j = i.lencode[_ & (1 << i.lenbits) - 1]) >>> 16 & 255, P = 65535 & j, !((x = j >>> 24) <= m);) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if (C && 0 == (240 & C)) {
                                    for (k = x, E = C, I = P; C = (j = i.lencode[I + ((_ & (1 << k + E) - 1) >> k)]) >>> 16 & 255, P = 65535 & j, !(k + (x = j >>> 24) <= m);) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    _ >>>= k, m -= k, i.back += k
                                }
                                if (_ >>>= x, m -= x, i.back += x, i.length = P, 0 === C) {
                                    i.mode = 26;
                                    break
                                }
                                if (32 & C) {
                                    i.back = -1, i.mode = 12;
                                    break
                                }
                                if (64 & C) {
                                    e.msg = "invalid literal/length code", i.mode = 30;
                                    break
                                }
                                i.extra = 15 & C, i.mode = 22;
                            case 22:
                                if (i.extra) {
                                    for (B = i.extra; m < B;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    i.length += _ & (1 << i.extra) - 1, _ >>>= i.extra, m -= i.extra, i.back += i.extra
                                }
                                i.was = i.length, i.mode = 23;
                            case 23:
                                for (; C = (j = i.distcode[_ & (1 << i.distbits) - 1]) >>> 16 & 255, P = 65535 & j, !((x = j >>> 24) <= m);) {
                                    if (0 === p) break e;
                                    p--, _ += c[d++] << m, m += 8
                                }
                                if (0 == (240 & C)) {
                                    for (k = x, E = C, I = P; C = (j = i.distcode[I + ((_ & (1 << k + E) - 1) >> k)]) >>> 16 & 255, P = 65535 & j, !(k + (x = j >>> 24) <= m);) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    _ >>>= k, m -= k, i.back += k
                                }
                                if (_ >>>= x, m -= x, i.back += x, 64 & C) {
                                    e.msg = "invalid distance code", i.mode = 30;
                                    break
                                }
                                i.offset = P, i.extra = 15 & C, i.mode = 24;
                            case 24:
                                if (i.extra) {
                                    for (B = i.extra; m < B;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    i.offset += _ & (1 << i.extra) - 1, _ >>>= i.extra, m -= i.extra, i.back += i.extra
                                }
                                if (i.offset > i.dmax) {
                                    e.msg = "invalid distance too far back", i.mode = 30;
                                    break
                                }
                                i.mode = 25;
                            case 25:
                                if (0 === f) break e;
                                if (w = y - f, i.offset > w) {
                                    if ((w = i.offset - w) > i.whave && i.sane) {
                                        e.msg = "invalid distance too far back", i.mode = 30;
                                        break
                                    }
                                    w > i.wnext ? (w -= i.wnext, M = i.wsize - w) : M = i.wnext - w, w > i.length && (w = i.length), A = i.window
                                } else A = h, M = u - i.offset, w = i.length;
                                w > f && (w = f), f -= w, i.length -= w;
                                do {
                                    h[u++] = A[M++]
                                } while (--w);
                                0 === i.length && (i.mode = 21);
                                break;
                            case 26:
                                if (0 === f) break e;
                                h[u++] = i.length, f--, i.mode = 21;
                                break;
                            case 27:
                                if (i.wrap) {
                                    for (; m < 32;) {
                                        if (0 === p) break e;
                                        p--, _ |= c[d++] << m, m += 8
                                    }
                                    if (y -= f, e.total_out += y, i.total += y, y && (e.adler = i.check = i.flags ? s(i.check, h, y, u - y) : n(i.check, h, y, u - y)), y = f, (i.flags ? _ : l(_)) !== i.check) {
                                        e.msg = "incorrect data check", i.mode = 30;
                                        break
                                    }
                                    _ = 0, m = 0
                                }
                                i.mode = 28;
                            case 28:
                                if (i.wrap && i.flags) {
                                    for (; m < 32;) {
                                        if (0 === p) break e;
                                        p--, _ += c[d++] << m, m += 8
                                    }
                                    if (_ !== (4294967295 & i.total)) {
                                        e.msg = "incorrect length check", i.mode = 30;
                                        break
                                    }
                                    _ = 0, m = 0
                                }
                                i.mode = 29;
                            case 29:
                                D = 1;
                                break e;
                            case 30:
                                D = -3;
                                break e;
                            case 31:
                                return -4;
                            case 32:
                            default:
                                return -2
                        }
                        return e.next_out = u, e.avail_out = f, e.next_in = d, e.avail_in = p, i.hold = _, i.bits = m, (i.wsize || y !== e.avail_out && i.mode < 30 && (i.mode < 27 || 4 !== t)) && v(e, e.output, e.next_out, y - e.avail_out), b -= e.avail_in, y -= e.avail_out, e.total_in += b, e.total_out += y, i.total += y, i.wrap && y && (e.adler = i.check = i.flags ? s(i.check, h, y, e.next_out - y) : n(i.check, h, y, e.next_out - y)), e.data_type = i.bits + (i.last ? 64 : 0) + (12 === i.mode ? 128 : 0) + (20 === i.mode || 15 === i.mode ? 256 : 0), (0 === b && 0 === y || 4 === t) && 0 === D && (D = -5), D
                    }, i.inflateEnd = function(e) {
                        if (!e || !e.state) return -2;
                        var t = e.state;
                        return t.window && (t.window = null), e.state = null, 0
                    }, i.inflateGetHeader = function(e, t) {
                        var i;
                        return e && e.state ? 0 == (2 & (i = e.state).wrap) ? -2 : (i.head = t, t.done = !1, 0) : -2
                    }, i.inflateSetDictionary = function(e, t) {
                        var i, r = t.length;
                        return e && e.state ? 0 !== (i = e.state).wrap && 11 !== i.mode ? -2 : 11 === i.mode && n(1, t, r, 0) !== i.check ? -3 : v(e, t, r, r) ? (i.mode = 31, -4) : (i.havedict = 1, 0) : -2
                    }, i.inflateInfo = "pako inflate (from Nodeca project)"
                }, {
                    "../utils/common": 3,
                    "./adler32": 5,
                    "./crc32": 7,
                    "./inffast": 10,
                    "./inftrees": 12
                }],
                12: [function(e, t, i) {
                    var r = e("../utils/common"),
                        n = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                        s = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                        o = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                        a = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
                    t.exports = function(e, t, i, l, c, h, d, u) {
                        var p, f, _, m, g, v, b, y, w, M = u.bits,
                            A = 0,
                            x = 0,
                            C = 0,
                            P = 0,
                            k = 0,
                            E = 0,
                            I = 0,
                            T = 0,
                            D = 0,
                            S = 0,
                            B = null,
                            j = 0,
                            L = new r.Buf16(16),
                            R = new r.Buf16(16),
                            O = null,
                            F = 0;
                        for (A = 0; A <= 15; A++) L[A] = 0;
                        for (x = 0; x < l; x++) L[t[i + x]]++;
                        for (k = M, P = 15; P >= 1 && 0 === L[P]; P--);
                        if (k > P && (k = P), 0 === P) return c[h++] = 20971520, c[h++] = 20971520, u.bits = 1, 0;
                        for (C = 1; C < P && 0 === L[C]; C++);
                        for (k < C && (k = C), T = 1, A = 1; A <= 15; A++)
                            if (T <<= 1, (T -= L[A]) < 0) return -1;
                        if (T > 0 && (0 === e || 1 !== P)) return -1;
                        for (R[1] = 0, A = 1; A < 15; A++) R[A + 1] = R[A] + L[A];
                        for (x = 0; x < l; x++) 0 !== t[i + x] && (d[R[t[i + x]]++] = x);
                        if (0 === e ? (B = O = d, v = 19) : 1 === e ? (B = n, j -= 257, O = s, F -= 257, v = 256) : (B = o, O = a, v = -1), S = 0, x = 0, A = C, g = h, E = k, I = 0, _ = -1, m = (D = 1 << k) - 1, 1 === e && D > 852 || 2 === e && D > 592) return 1;
                        for (;;) {
                            b = A - I, d[x] < v ? (y = 0, w = d[x]) : d[x] > v ? (y = O[F + d[x]], w = B[j + d[x]]) : (y = 96, w = 0), p = 1 << A - I, C = f = 1 << E;
                            do {
                                c[g + (S >> I) + (f -= p)] = b << 24 | y << 16 | w | 0
                            } while (0 !== f);
                            for (p = 1 << A - 1; S & p;) p >>= 1;
                            if (0 !== p ? (S &= p - 1, S += p) : S = 0, x++, 0 == --L[A]) {
                                if (A === P) break;
                                A = t[i + d[x]]
                            }
                            if (A > k && (S & m) !== _) {
                                for (0 === I && (I = k), g += C, T = 1 << (E = A - I); E + I < P && !((T -= L[E + I]) <= 0);) E++, T <<= 1;
                                if (D += 1 << E, 1 === e && D > 852 || 2 === e && D > 592) return 1;
                                c[_ = S & m] = k << 24 | E << 16 | g - h | 0
                            }
                        }
                        return 0 !== S && (c[g + S] = A - I << 24 | 64 << 16 | 0), u.bits = k, 0
                    }
                }, {
                    "../utils/common": 3
                }],
                13: [function(e, t, i) {
                    t.exports = {
                        2: "need dictionary",
                        1: "stream end",
                        0: "",
                        "-1": "file error",
                        "-2": "stream error",
                        "-3": "data error",
                        "-4": "insufficient memory",
                        "-5": "buffer error",
                        "-6": "incompatible version"
                    }
                }, {}],
                14: [function(e, t, i) {
                    var r = e("../utils/common");

                    function n(e) {
                        for (var t = e.length; --t >= 0;) e[t] = 0
                    }
                    var s = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                        o = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                        a = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                        l = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                        c = new Array(576);
                    n(c);
                    var h = new Array(60);
                    n(h);
                    var d = new Array(512);
                    n(d);
                    var u = new Array(256);
                    n(u);
                    var p = new Array(29);
                    n(p);
                    var f, _, m, g = new Array(30);

                    function v(e, t, i, r, n) {
                        this.static_tree = e, this.extra_bits = t, this.extra_base = i, this.elems = r, this.max_length = n, this.has_stree = e && e.length
                    }

                    function b(e, t) {
                        this.dyn_tree = e, this.max_code = 0, this.stat_desc = t
                    }

                    function y(e) {
                        return e < 256 ? d[e] : d[256 + (e >>> 7)]
                    }

                    function w(e, t) {
                        e.pending_buf[e.pending++] = 255 & t, e.pending_buf[e.pending++] = t >>> 8 & 255
                    }

                    function M(e, t, i) {
                        e.bi_valid > 16 - i ? (e.bi_buf |= t << e.bi_valid & 65535, w(e, e.bi_buf), e.bi_buf = t >> 16 - e.bi_valid, e.bi_valid += i - 16) : (e.bi_buf |= t << e.bi_valid & 65535, e.bi_valid += i)
                    }

                    function A(e, t, i) {
                        M(e, i[2 * t], i[2 * t + 1])
                    }

                    function x(e, t) {
                        var i = 0;
                        do {
                            i |= 1 & e, e >>>= 1, i <<= 1
                        } while (--t > 0);
                        return i >>> 1
                    }

                    function C(e, t, i) {
                        var r, n, s = new Array(16),
                            o = 0;
                        for (r = 1; r <= 15; r++) s[r] = o = o + i[r - 1] << 1;
                        for (n = 0; n <= t; n++) {
                            var a = e[2 * n + 1];
                            0 !== a && (e[2 * n] = x(s[a]++, a))
                        }
                    }

                    function P(e) {
                        var t;
                        for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
                        for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
                        for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
                        e.dyn_ltree[512] = 1, e.opt_len = e.static_len = 0, e.last_lit = e.matches = 0
                    }

                    function k(e) {
                        e.bi_valid > 8 ? w(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0
                    }

                    function E(e, t, i, r) {
                        var n = 2 * t,
                            s = 2 * i;
                        return e[n] < e[s] || e[n] === e[s] && r[t] <= r[i]
                    }

                    function I(e, t, i) {
                        for (var r = e.heap[i], n = i << 1; n <= e.heap_len && (n < e.heap_len && E(t, e.heap[n + 1], e.heap[n], e.depth) && n++, !E(t, r, e.heap[n], e.depth));) e.heap[i] = e.heap[n], i = n, n <<= 1;
                        e.heap[i] = r
                    }

                    function T(e, t, i) {
                        var r, n, a, l, c = 0;
                        if (0 !== e.last_lit)
                            do {
                                r = e.pending_buf[e.d_buf + 2 * c] << 8 | e.pending_buf[e.d_buf + 2 * c + 1], n = e.pending_buf[e.l_buf + c], c++, 0 === r ? A(e, n, t) : (A(e, (a = u[n]) + 256 + 1, t), 0 !== (l = s[a]) && M(e, n -= p[a], l), A(e, a = y(--r), i), 0 !== (l = o[a]) && M(e, r -= g[a], l))
                            } while (c < e.last_lit);
                        A(e, 256, t)
                    }

                    function D(e, t) {
                        var i, r, n, s = t.dyn_tree,
                            o = t.stat_desc.static_tree,
                            a = t.stat_desc.has_stree,
                            l = t.stat_desc.elems,
                            c = -1;
                        for (e.heap_len = 0, e.heap_max = 573, i = 0; i < l; i++) 0 !== s[2 * i] ? (e.heap[++e.heap_len] = c = i, e.depth[i] = 0) : s[2 * i + 1] = 0;
                        for (; e.heap_len < 2;) s[2 * (n = e.heap[++e.heap_len] = c < 2 ? ++c : 0)] = 1, e.depth[n] = 0, e.opt_len--, a && (e.static_len -= o[2 * n + 1]);
                        for (t.max_code = c, i = e.heap_len >> 1; i >= 1; i--) I(e, s, i);
                        n = l;
                        do {
                            i = e.heap[1], e.heap[1] = e.heap[e.heap_len--], I(e, s, 1), r = e.heap[1], e.heap[--e.heap_max] = i, e.heap[--e.heap_max] = r, s[2 * n] = s[2 * i] + s[2 * r], e.depth[n] = (e.depth[i] >= e.depth[r] ? e.depth[i] : e.depth[r]) + 1, s[2 * i + 1] = s[2 * r + 1] = n, e.heap[1] = n++, I(e, s, 1)
                        } while (e.heap_len >= 2);
                        e.heap[--e.heap_max] = e.heap[1],
                            function(e, t) {
                                var i, r, n, s, o, a, l = t.dyn_tree,
                                    c = t.max_code,
                                    h = t.stat_desc.static_tree,
                                    d = t.stat_desc.has_stree,
                                    u = t.stat_desc.extra_bits,
                                    p = t.stat_desc.extra_base,
                                    f = t.stat_desc.max_length,
                                    _ = 0;
                                for (s = 0; s <= 15; s++) e.bl_count[s] = 0;
                                for (l[2 * e.heap[e.heap_max] + 1] = 0, i = e.heap_max + 1; i < 573; i++)(s = l[2 * l[2 * (r = e.heap[i]) + 1] + 1] + 1) > f && (s = f, _++), l[2 * r + 1] = s, r > c || (e.bl_count[s]++, o = 0, r >= p && (o = u[r - p]), a = l[2 * r], e.opt_len += a * (s + o), d && (e.static_len += a * (h[2 * r + 1] + o)));
                                if (0 !== _) {
                                    do {
                                        for (s = f - 1; 0 === e.bl_count[s];) s--;
                                        e.bl_count[s]--, e.bl_count[s + 1] += 2, e.bl_count[f]--, _ -= 2
                                    } while (_ > 0);
                                    for (s = f; 0 !== s; s--)
                                        for (r = e.bl_count[s]; 0 !== r;)(n = e.heap[--i]) > c || (l[2 * n + 1] !== s && (e.opt_len += (s - l[2 * n + 1]) * l[2 * n], l[2 * n + 1] = s), r--)
                                }
                            }(e, t), C(s, c, e.bl_count)
                    }

                    function S(e, t, i) {
                        var r, n, s = -1,
                            o = t[1],
                            a = 0,
                            l = 7,
                            c = 4;
                        for (0 === o && (l = 138, c = 3), t[2 * (i + 1) + 1] = 65535, r = 0; r <= i; r++) n = o, o = t[2 * (r + 1) + 1], ++a < l && n === o || (a < c ? e.bl_tree[2 * n] += a : 0 !== n ? (n !== s && e.bl_tree[2 * n]++, e.bl_tree[32]++) : a <= 10 ? e.bl_tree[34]++ : e.bl_tree[36]++, a = 0, s = n, 0 === o ? (l = 138, c = 3) : n === o ? (l = 6, c = 3) : (l = 7, c = 4))
                    }

                    function B(e, t, i) {
                        var r, n, s = -1,
                            o = t[1],
                            a = 0,
                            l = 7,
                            c = 4;
                        for (0 === o && (l = 138, c = 3), r = 0; r <= i; r++)
                            if (n = o, o = t[2 * (r + 1) + 1], !(++a < l && n === o)) {
                                if (a < c)
                                    do {
                                        A(e, n, e.bl_tree)
                                    } while (0 != --a);
                                else 0 !== n ? (n !== s && (A(e, n, e.bl_tree), a--), A(e, 16, e.bl_tree), M(e, a - 3, 2)) : a <= 10 ? (A(e, 17, e.bl_tree), M(e, a - 3, 3)) : (A(e, 18, e.bl_tree), M(e, a - 11, 7));
                                a = 0, s = n, 0 === o ? (l = 138, c = 3) : n === o ? (l = 6, c = 3) : (l = 7, c = 4)
                            }
                    }
                    n(g);
                    var j = !1;

                    function L(e, t, i, n) {
                        M(e, 0 + (n ? 1 : 0), 3),
                            function(e, t, i, n) {
                                k(e), n && (w(e, i), w(e, ~i)), r.arraySet(e.pending_buf, e.window, t, i, e.pending), e.pending += i
                            }(e, t, i, !0)
                    }
                    i._tr_init = function(e) {
                        j || (function() {
                            var e, t, i, r, n, l = new Array(16);
                            for (i = 0, r = 0; r < 28; r++)
                                for (p[r] = i, e = 0; e < 1 << s[r]; e++) u[i++] = r;
                            for (u[i - 1] = r, n = 0, r = 0; r < 16; r++)
                                for (g[r] = n, e = 0; e < 1 << o[r]; e++) d[n++] = r;
                            for (n >>= 7; r < 30; r++)
                                for (g[r] = n << 7, e = 0; e < 1 << o[r] - 7; e++) d[256 + n++] = r;
                            for (t = 0; t <= 15; t++) l[t] = 0;
                            for (e = 0; e <= 143;) c[2 * e + 1] = 8, e++, l[8]++;
                            for (; e <= 255;) c[2 * e + 1] = 9, e++, l[9]++;
                            for (; e <= 279;) c[2 * e + 1] = 7, e++, l[7]++;
                            for (; e <= 287;) c[2 * e + 1] = 8, e++, l[8]++;
                            for (C(c, 287, l), e = 0; e < 30; e++) h[2 * e + 1] = 5, h[2 * e] = x(e, 5);
                            f = new v(c, s, 257, 286, 15), _ = new v(h, o, 0, 30, 15), m = new v(new Array(0), a, 0, 19, 7)
                        }(), j = !0), e.l_desc = new b(e.dyn_ltree, f), e.d_desc = new b(e.dyn_dtree, _), e.bl_desc = new b(e.bl_tree, m), e.bi_buf = 0, e.bi_valid = 0, P(e)
                    }, i._tr_stored_block = L, i._tr_flush_block = function(e, t, i, r) {
                        var n, s, o = 0;
                        e.level > 0 ? (2 === e.strm.data_type && (e.strm.data_type = function(e) {
                            var t, i = 4093624447;
                            for (t = 0; t <= 31; t++, i >>>= 1)
                                if (1 & i && 0 !== e.dyn_ltree[2 * t]) return 0;
                            if (0 !== e.dyn_ltree[18] || 0 !== e.dyn_ltree[20] || 0 !== e.dyn_ltree[26]) return 1;
                            for (t = 32; t < 256; t++)
                                if (0 !== e.dyn_ltree[2 * t]) return 1;
                            return 0
                        }(e)), D(e, e.l_desc), D(e, e.d_desc), o = function(e) {
                            var t;
                            for (S(e, e.dyn_ltree, e.l_desc.max_code), S(e, e.dyn_dtree, e.d_desc.max_code), D(e, e.bl_desc), t = 18; t >= 3 && 0 === e.bl_tree[2 * l[t] + 1]; t--);
                            return e.opt_len += 3 * (t + 1) + 5 + 5 + 4, t
                        }(e), n = e.opt_len + 3 + 7 >>> 3, (s = e.static_len + 3 + 7 >>> 3) <= n && (n = s)) : n = s = i + 5, i + 4 <= n && -1 !== t ? L(e, t, i, r) : 4 === e.strategy || s === n ? (M(e, 2 + (r ? 1 : 0), 3), T(e, c, h)) : (M(e, 4 + (r ? 1 : 0), 3), function(e, t, i, r) {
                            var n;
                            for (M(e, t - 257, 5), M(e, i - 1, 5), M(e, r - 4, 4), n = 0; n < r; n++) M(e, e.bl_tree[2 * l[n] + 1], 3);
                            B(e, e.dyn_ltree, t - 1), B(e, e.dyn_dtree, i - 1)
                        }(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, o + 1), T(e, e.dyn_ltree, e.dyn_dtree)), P(e), r && k(e)
                    }, i._tr_tally = function(e, t, i) {
                        return e.pending_buf[e.d_buf + 2 * e.last_lit] = t >>> 8 & 255, e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t, e.pending_buf[e.l_buf + e.last_lit] = 255 & i, e.last_lit++, 0 === t ? e.dyn_ltree[2 * i]++ : (e.matches++, t--, e.dyn_ltree[2 * (u[i] + 256 + 1)]++, e.dyn_dtree[2 * y(t)]++), e.last_lit === e.lit_bufsize - 1
                    }, i._tr_align = function(e) {
                        M(e, 2, 3), A(e, 256, c),
                            function(e) {
                                16 === e.bi_valid ? (w(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = 255 & e.bi_buf, e.bi_buf >>= 8, e.bi_valid -= 8)
                            }(e)
                    }
                }, {
                    "../utils/common": 3
                }],
                15: [function(e, t, i) {
                    t.exports = function() {
                        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
                    }
                }, {}],
                "/": [function(e, t, i) {
                    var r = {};
                    (0, e("./lib/utils/common").assign)(r, e("./lib/deflate"), e("./lib/inflate"), e("./lib/zlib/constants")), t.exports = r
                }, {
                    "./lib/deflate": 1,
                    "./lib/inflate": 2,
                    "./lib/utils/common": 3,
                    "./lib/zlib/constants": 6
                }]
            }, {}, [])("/")
        })),
        Y_ = Object.freeze({
            __proto__: null,
            default: G_,
            __moduleExports: G_
        });
    let Z_ = window.pako || Y_;
    Z_.inflate || (Z_ = Z_.default);
    const X_ = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const K_ = {
        version: 1,
        parse: function(e, t, i, r) {
            ! function(e, t, i, r) {
                r.positionsCompression = "precompressed", r.normalsCompression = "precompressed";
                const n = i.positions,
                    s = i.normals,
                    o = i.indices,
                    a = i.edgeIndices,
                    l = i.meshPositions,
                    c = i.meshIndices,
                    h = i.meshEdgesIndices,
                    d = i.meshColors,
                    u = JSON.parse(i.entityIDs),
                    p = i.entityMeshes,
                    f = i.entityIsObjects,
                    _ = l.length,
                    m = p.length;
                for (let g = 0; g < m; g++) {
                    const v = u[g],
                        b = e.metaScene.metaObjects[v],
                        y = {},
                        w = {};
                    if (b) {
                        if (t.excludeTypesMap && b.type && t.excludeTypesMap[b.type]) continue;
                        if (t.includeTypesMap && b.type && !t.includeTypesMap[b.type]) continue;
                        const e = t.objectDefaults ? t.objectDefaults[b.type] || t.objectDefaults.DEFAULT : null;
                        e && (!1 === e.visible && (y.visible = !1), !1 === e.pickable && (y.pickable = !1), e.colorize && (w.color = e.colorize), void 0 !== e.opacity && null !== e.opacity && (w.opacity = e.opacity))
                    } else if (t.excludeUnclassifiedObjects) continue;
                    const M = g === m - 1,
                        A = [];
                    for (let e = p[g], t = M ? p.length : p[g + 1]; e < t; e++) {
                        const t = e === _ - 1,
                            u = v + ".mesh." + e,
                            p = X_(d.subarray(4 * e, 4 * e + 3)),
                            f = d[4 * e + 3] / 255;
                        r.createMesh(Ic.apply(w, {
                            id: u,
                            primitive: "triangles",
                            positions: n.subarray(l[e], t ? n.length : l[e + 1]),
                            normals: s.subarray(l[e], t ? n.length : l[e + 1]),
                            indices: o.subarray(c[e], t ? o.length : c[e + 1]),
                            edgeIndices: a.subarray(h[e], t ? a.length : h[e + 1]),
                            positionsDecodeMatrix: i.positionsDecodeMatrix,
                            color: p,
                            opacity: f
                        })), A.push(u)
                    }
                    r.createEntity(Ic.apply(y, {
                        id: v,
                        isObject: 1 === f[g],
                        meshIds: A
                    }))
                }
            }(e, t, function(e) {
                return {
                    positions: new Uint16Array(Z_.inflate(e.positions).buffer),
                    normals: new Int8Array(Z_.inflate(e.normals).buffer),
                    indices: new Uint32Array(Z_.inflate(e.indices).buffer),
                    edgeIndices: new Uint32Array(Z_.inflate(e.edgeIndices).buffer),
                    meshPositions: new Uint32Array(Z_.inflate(e.meshPositions).buffer),
                    meshIndices: new Uint32Array(Z_.inflate(e.meshIndices).buffer),
                    meshEdgesIndices: new Uint32Array(Z_.inflate(e.meshEdgesIndices).buffer),
                    meshColors: new Uint8Array(Z_.inflate(e.meshColors).buffer),
                    entityIDs: Z_.inflate(e.entityIDs, {
                        to: "string"
                    }),
                    entityMeshes: new Uint32Array(Z_.inflate(e.entityMeshes).buffer),
                    entityIsObjects: new Uint8Array(Z_.inflate(e.entityIsObjects).buffer),
                    positionsDecodeMatrix: new Float32Array(Z_.inflate(e.positionsDecodeMatrix).buffer)
                }
            }(function(e) {
                return {
                    positions: e[0],
                    normals: e[1],
                    indices: e[2],
                    edgeIndices: e[3],
                    meshPositions: e[4],
                    meshIndices: e[5],
                    meshEdgesIndices: e[6],
                    meshColors: e[7],
                    entityIDs: e[8],
                    entityMeshes: e[9],
                    entityIsObjects: e[10],
                    positionsDecodeMatrix: e[11]
                }
            }(i)), r)
        }
    };
    let Q_ = window.pako || Y_;
    Q_.inflate || (Q_ = Q_.default);
    const J_ = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const em = {
        version: 2,
        parse: function(e, t, i, r) {
            ! function(e, t, i, r) {
                r.positionsCompression = "precompressed", r.normalsCompression = "precompressed";
                const n = i.positions,
                    s = i.normals,
                    o = i.indices,
                    a = i.edgeIndices,
                    l = i.meshPositions,
                    c = i.meshIndices,
                    h = i.meshEdgesIndices,
                    d = i.meshColors,
                    u = JSON.parse(i.entityIDs),
                    p = i.entityMeshes,
                    f = i.entityIsObjects,
                    _ = i.entityMeshIds,
                    m = i.entityMatrices,
                    g = i.entityUsesInstancing,
                    v = l.length,
                    b = p.length,
                    y = {};
                for (let w = 0; w < b; w++) {
                    const M = u[w],
                        A = e.metaScene.metaObjects[M],
                        x = {},
                        C = {},
                        P = m.subarray(16 * w, 16 * w + 16);
                    if (A) {
                        if (t.excludeTypesMap && A.type && t.excludeTypesMap[A.type]) continue;
                        if (t.includeTypesMap && A.type && !t.includeTypesMap[A.type]) continue;
                        const e = t.objectDefaults ? t.objectDefaults[A.type] || t.objectDefaults.DEFAULT : null;
                        e && (!1 === e.visible && (x.visible = !1), !1 === e.pickable && (x.pickable = !1), e.colorize && (C.color = e.colorize), void 0 !== e.opacity && null !== e.opacity && (C.opacity = e.opacity))
                    } else if (t.excludeUnclassifiedObjects) continue;
                    const k = w === b - 1,
                        E = [];
                    for (let e = p[w], t = k ? _.length : p[w + 1]; e < t; e++) {
                        const t = _[e],
                            u = t === v - 1,
                            p = M + ".mesh." + t,
                            f = J_(d.subarray(4 * t, 4 * t + 3)),
                            m = d[4 * t + 3] / 255,
                            b = n.subarray(l[t], u ? n.length : l[t + 1]),
                            A = s.subarray(l[t], u ? n.length : l[t + 1]),
                            x = o.subarray(c[t], u ? o.length : c[t + 1]),
                            k = a.subarray(h[t], u ? a.length : h[t + 1]);
                        if (1 === g[w]) {
                            const e = "geometry." + t;
                            e in y || (r.createGeometry({
                                id: e,
                                positions: b,
                                normals: A,
                                indices: x,
                                edgeIndices: k,
                                primitive: "triangles",
                                positionsDecodeMatrix: i.positionsDecodeMatrix
                            }), y[e] = !0), r.createMesh(Ic.apply(C, {
                                id: p,
                                color: f,
                                opacity: m,
                                matrix: P,
                                geometryId: e
                            })), E.push(p)
                        } else r.createMesh(Ic.apply(C, {
                            id: p,
                            primitive: "triangles",
                            positions: b,
                            normals: A,
                            indices: x,
                            edgeIndices: k,
                            positionsDecodeMatrix: i.positionsDecodeMatrix,
                            color: f,
                            opacity: m
                        })), E.push(p)
                    }
                    E.length && r.createEntity(Ic.apply(x, {
                        id: M,
                        isObject: 1 === f[w],
                        meshIds: E
                    }))
                }
            }(e, t, function(e) {
                return {
                    positions: new Uint16Array(Q_.inflate(e.positions).buffer),
                    normals: new Int8Array(Q_.inflate(e.normals).buffer),
                    indices: new Uint32Array(Q_.inflate(e.indices).buffer),
                    edgeIndices: new Uint32Array(Q_.inflate(e.edgeIndices).buffer),
                    meshPositions: new Uint32Array(Q_.inflate(e.meshPositions).buffer),
                    meshIndices: new Uint32Array(Q_.inflate(e.meshIndices).buffer),
                    meshEdgesIndices: new Uint32Array(Q_.inflate(e.meshEdgesIndices).buffer),
                    meshColors: new Uint8Array(Q_.inflate(e.meshColors).buffer),
                    entityIDs: Q_.inflate(e.entityIDs, {
                        to: "string"
                    }),
                    entityMeshes: new Uint32Array(Q_.inflate(e.entityMeshes).buffer),
                    entityIsObjects: new Uint8Array(Q_.inflate(e.entityIsObjects).buffer),
                    positionsDecodeMatrix: new Float32Array(Q_.inflate(e.positionsDecodeMatrix).buffer),
                    entityMeshIds: new Uint32Array(Q_.inflate(e.entityMeshIds).buffer),
                    entityMatrices: new Float32Array(Q_.inflate(e.entityMatrices).buffer),
                    entityUsesInstancing: new Uint8Array(Q_.inflate(e.entityUsesInstancing).buffer)
                }
            }(function(e) {
                return {
                    positions: e[0],
                    normals: e[1],
                    indices: e[2],
                    edgeIndices: e[3],
                    meshPositions: e[4],
                    meshIndices: e[5],
                    meshEdgesIndices: e[6],
                    meshColors: e[7],
                    entityIDs: e[8],
                    entityMeshes: e[9],
                    entityIsObjects: e[10],
                    positionsDecodeMatrix: e[11],
                    entityMeshIds: e[12],
                    entityMatrices: e[13],
                    entityUsesInstancing: e[14]
                }
            }(i)), r)
        }
    };
    let tm = window.pako || Y_;
    tm.inflate || (tm = tm.default);
    const im = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const rm = {
        version: 3,
        parse: function(e, t, i, r) {
            ! function(e, t, i, r) {
                r.positionsCompression = "precompressed", r.normalsCompression = "precompressed";
                const n = i.positions,
                    s = i.normals,
                    o = i.indices,
                    a = i.edgeIndices,
                    l = i.meshPositions,
                    c = i.meshIndices,
                    h = i.meshEdgesIndices,
                    d = i.meshColors,
                    u = JSON.parse(i.entityIDs),
                    p = i.entityMeshes,
                    f = i.entityIsObjects,
                    _ = i.entityMeshIds,
                    m = i.entityMatrices,
                    g = i.entityUsesInstancing,
                    v = l.length,
                    b = p.length,
                    y = {};
                for (let k = 0; k < b; k++) {
                    const E = u[k],
                        I = e.metaScene.metaObjects[E],
                        T = {},
                        D = {},
                        S = m.subarray(16 * k, 16 * k + 16);
                    if (I) {
                        if (t.excludeTypesMap && I.type && t.excludeTypesMap[I.type]) continue;
                        if (t.includeTypesMap && I.type && !t.includeTypesMap[I.type]) continue;
                        const e = t.objectDefaults ? t.objectDefaults[I.type] || t.objectDefaults.DEFAULT : null;
                        e && (!1 === e.visible && (T.visible = !1), !1 === e.pickable && (T.pickable = !1), e.colorize && (D.color = e.colorize), void 0 !== e.opacity && null !== e.opacity && (D.opacity = e.opacity))
                    } else if (t.excludeUnclassifiedObjects) continue;
                    const B = k === b - 1,
                        j = [];
                    for (let e = p[k], t = B ? _.length : p[k + 1]; e < t; e++) {
                        var w = _[e];
                        const t = w === v - 1,
                            u = E + ".mesh." + w,
                            p = im(d.subarray(4 * w, 4 * w + 3)),
                            f = d[4 * w + 3] / 255;
                        var M = n.subarray(l[w], t ? n.length : l[w + 1]),
                            A = s.subarray(l[w], t ? n.length : l[w + 1]),
                            x = o.subarray(c[w], t ? o.length : c[w + 1]),
                            C = a.subarray(h[w], t ? a.length : h[w + 1]);
                        if (1 === g[k]) {
                            var P = "geometry." + w;
                            P in y || (r.createGeometry({
                                id: P,
                                positions: M,
                                normals: A,
                                indices: x,
                                edgeIndices: C,
                                primitive: "triangles",
                                positionsDecodeMatrix: i.instancedPositionsDecodeMatrix
                            }), y[P] = !0), r.createMesh(Ic.apply(D, {
                                id: u,
                                color: p,
                                opacity: f,
                                matrix: S,
                                geometryId: P
                            })), j.push(u)
                        } else r.createMesh(Ic.apply(D, {
                            id: u,
                            primitive: "triangles",
                            positions: M,
                            normals: A,
                            indices: x,
                            edgeIndices: C,
                            positionsDecodeMatrix: i.batchedPositionsDecodeMatrix,
                            color: p,
                            opacity: f
                        })), j.push(u)
                    }
                    j.length && r.createEntity(Ic.apply(T, {
                        id: E,
                        isObject: 1 === f[k],
                        meshIds: j
                    }))
                }
            }(e, t, function(e) {
                return {
                    positions: new Uint16Array(tm.inflate(e.positions).buffer),
                    normals: new Int8Array(tm.inflate(e.normals).buffer),
                    indices: new Uint32Array(tm.inflate(e.indices).buffer),
                    edgeIndices: new Uint32Array(tm.inflate(e.edgeIndices).buffer),
                    meshPositions: new Uint32Array(tm.inflate(e.meshPositions).buffer),
                    meshIndices: new Uint32Array(tm.inflate(e.meshIndices).buffer),
                    meshEdgesIndices: new Uint32Array(tm.inflate(e.meshEdgesIndices).buffer),
                    meshColors: new Uint8Array(tm.inflate(e.meshColors).buffer),
                    entityIDs: tm.inflate(e.entityIDs, {
                        to: "string"
                    }),
                    entityMeshes: new Uint32Array(tm.inflate(e.entityMeshes).buffer),
                    entityIsObjects: new Uint8Array(tm.inflate(e.entityIsObjects).buffer),
                    instancedPositionsDecodeMatrix: new Float32Array(tm.inflate(e.instancedPositionsDecodeMatrix).buffer),
                    batchedPositionsDecodeMatrix: new Float32Array(tm.inflate(e.batchedPositionsDecodeMatrix).buffer),
                    entityMeshIds: new Uint32Array(tm.inflate(e.entityMeshIds).buffer),
                    entityMatrices: new Float32Array(tm.inflate(e.entityMatrices).buffer),
                    entityUsesInstancing: new Uint8Array(tm.inflate(e.entityUsesInstancing).buffer)
                }
            }(function(e) {
                return {
                    positions: e[0],
                    normals: e[1],
                    indices: e[2],
                    edgeIndices: e[3],
                    meshPositions: e[4],
                    meshIndices: e[5],
                    meshEdgesIndices: e[6],
                    meshColors: e[7],
                    entityIDs: e[8],
                    entityMeshes: e[9],
                    entityIsObjects: e[10],
                    instancedPositionsDecodeMatrix: e[11],
                    batchedPositionsDecodeMatrix: e[12],
                    entityMeshIds: e[13],
                    entityMatrices: e[14],
                    entityUsesInstancing: e[15]
                }
            }(i)), r)
        }
    };
    let nm = window.pako || Y_;
    nm.inflate || (nm = nm.default);
    const sm = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const om = {
        version: 4,
        parse: function(e, t, i, r) {
            ! function(e, t, i, r) {
                r.positionsCompression = "precompressed", r.normalsCompression = "precompressed";
                const n = i.positions,
                    s = i.normals,
                    o = i.indices,
                    a = i.edgeIndices,
                    l = i.decodeMatrices,
                    c = i.matrices,
                    h = i.eachPrimitivePositionsAndNormalsPortion,
                    d = i.eachPrimitiveIndicesPortion,
                    u = i.eachPrimitiveEdgeIndicesPortion,
                    p = i.eachPrimitiveDecodeMatricesPortion,
                    f = i.eachPrimitiveColor,
                    _ = i.primitiveInstances,
                    m = JSON.parse(i.eachEntityId),
                    g = i.eachEntityPrimitiveInstancesPortion,
                    v = i.eachEntityMatricesPortion,
                    b = h.length,
                    y = _.length,
                    w = new Uint8Array(b),
                    M = new Uint32Array(b),
                    A = m.length;
                for (let e = 0; e < b; e++) M[e] = e;
                M.sort((e, t) => p[e] < p[t] ? -1 : p[e] > p[t] ? 1 : 0);
                for (let e = 0; e < y; e++) {
                    w[_[e]]++
                }
                const x = {};
                for (let e = 0; e < A; e++) {
                    const t = A - 1,
                        i = e === t,
                        r = g[e],
                        n = i ? g[t] : g[e + 1];
                    for (let t = r; t < n; t++) {
                        const i = _[t];
                        w[i] > 1 || (x[i] = e)
                    }
                }
                for (let e = 0; e < b; e++) {
                    const t = M[e],
                        i = t === b - 1,
                        c = w[t] > 1,
                        _ = sm(f.subarray(4 * t, 4 * t + 3)),
                        g = f[4 * t + 3] / 255,
                        v = n.subarray(h[t], i ? n.length : h[t + 1]),
                        y = s.subarray(h[t], i ? s.length : h[t + 1]),
                        A = o.subarray(d[t], i ? o.length : d[t + 1]),
                        P = a.subarray(u[t], i ? a.length : u[t + 1]),
                        k = l.subarray(p[t], p[t] + 16);
                    if (c) {
                        var C = "geometry" + t;
                        r.createGeometry({
                            id: C,
                            primitive: "triangles",
                            positions: v,
                            normals: y,
                            indices: A,
                            edgeIndices: P,
                            positionsDecodeMatrix: k
                        })
                    } else {
                        const e = t,
                            i = (m[x[t]], {});
                        r.createMesh(Ic.apply(i, {
                            id: e,
                            primitive: "triangles",
                            positions: v,
                            normals: y,
                            indices: A,
                            edgeIndices: P,
                            positionsDecodeMatrix: k,
                            color: _,
                            opacity: g
                        }))
                    }
                }
                let P = 0;
                for (let e = 0; e < A; e++) {
                    const t = A - 1,
                        i = e === t,
                        n = m[e],
                        s = g[e],
                        o = i ? g[t] : g[e + 1],
                        a = [];
                    for (let t = s; t < o; t++) {
                        const i = _[t];
                        if (w[i] > 1) {
                            const t = {},
                                n = "instance." + P++,
                                s = "geometry" + i,
                                o = 16 * v[e],
                                l = c.subarray(o, o + 16);
                            r.createMesh(Ic.apply(t, {
                                id: n,
                                geometryId: s,
                                matrix: l
                            })), a.push(n)
                        } else a.push(i)
                    }
                    if (a.length > 0) {
                        const e = {};
                        r.createEntity(Ic.apply(e, {
                            id: n,
                            isObject: !0,
                            meshIds: a
                        }))
                    }
                }
            }(0, 0, function(e) {
                return {
                    positions: new Uint16Array(nm.inflate(e.positions).buffer),
                    normals: new Int8Array(nm.inflate(e.normals).buffer),
                    indices: new Uint32Array(nm.inflate(e.indices).buffer),
                    edgeIndices: new Uint32Array(nm.inflate(e.edgeIndices).buffer),
                    decodeMatrices: new Float32Array(nm.inflate(e.decodeMatrices).buffer),
                    matrices: new Float32Array(nm.inflate(e.matrices).buffer),
                    eachPrimitivePositionsAndNormalsPortion: new Uint32Array(nm.inflate(e.eachPrimitivePositionsAndNormalsPortion).buffer),
                    eachPrimitiveIndicesPortion: new Uint32Array(nm.inflate(e.eachPrimitiveIndicesPortion).buffer),
                    eachPrimitiveEdgeIndicesPortion: new Uint32Array(nm.inflate(e.eachPrimitiveEdgeIndicesPortion).buffer),
                    eachPrimitiveDecodeMatricesPortion: new Uint32Array(nm.inflate(e.eachPrimitiveDecodeMatricesPortion).buffer),
                    eachPrimitiveColor: new Uint8Array(nm.inflate(e.eachPrimitiveColor).buffer),
                    primitiveInstances: new Uint32Array(nm.inflate(e.primitiveInstances).buffer),
                    eachEntityId: nm.inflate(e.eachEntityId, {
                        to: "string"
                    }),
                    eachEntityPrimitiveInstancesPortion: new Uint32Array(nm.inflate(e.eachEntityPrimitiveInstancesPortion).buffer),
                    eachEntityMatricesPortion: new Uint32Array(nm.inflate(e.eachEntityMatricesPortion).buffer)
                }
            }(function(e) {
                return {
                    positions: e[0],
                    normals: e[1],
                    indices: e[2],
                    edgeIndices: e[3],
                    decodeMatrices: e[4],
                    matrices: e[5],
                    eachPrimitivePositionsAndNormalsPortion: e[6],
                    eachPrimitiveIndicesPortion: e[7],
                    eachPrimitiveEdgeIndicesPortion: e[8],
                    eachPrimitiveDecodeMatricesPortion: e[9],
                    eachPrimitiveColor: e[10],
                    primitiveInstances: e[11],
                    eachEntityId: e[12],
                    eachEntityPrimitiveInstancesPortion: e[13],
                    eachEntityMatricesPortion: e[14],
                    eachEntityMatrix: e[15]
                }
            }(i)), r)
        }
    };
    let am = window.pako || Y_;
    am.inflate || (am = am.default);
    const lm = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const cm = {
        version: 5,
        parse: function(e, t, i, r) {
            ! function(e, t, i, r) {
                r.positionsCompression = "disabled", r.normalsCompression = "precompressed";
                const n = i.positions,
                    s = i.normals,
                    o = i.indices,
                    a = i.edgeIndices,
                    l = i.matrices,
                    c = i.eachPrimitivePositionsAndNormalsPortion,
                    h = i.eachPrimitiveIndicesPortion,
                    d = i.eachPrimitiveEdgeIndicesPortion,
                    u = i.eachPrimitiveColor,
                    p = i.primitiveInstances,
                    f = JSON.parse(i.eachEntityId),
                    _ = i.eachEntityPrimitiveInstancesPortion,
                    m = i.eachEntityMatricesPortion,
                    g = c.length,
                    v = p.length,
                    b = new Uint8Array(g),
                    y = f.length;
                for (let e = 0; e < v; e++) {
                    b[p[e]]++
                }
                const w = {};
                for (let e = 0; e < y; e++) {
                    const t = y - 1,
                        i = e === t,
                        r = _[e],
                        n = i ? _[t] : _[e + 1];
                    for (let t = r; t < n; t++) {
                        const i = p[t];
                        b[i] > 1 || (w[i] = e)
                    }
                }
                for (let e = 0; e < g; e++) {
                    const t = e === g - 1,
                        i = b[e] > 1,
                        l = lm(u.subarray(4 * e, 4 * e + 3)),
                        p = u[4 * e + 3] / 255,
                        _ = n.subarray(c[e], t ? n.length : c[e + 1]),
                        m = s.subarray(c[e], t ? s.length : c[e + 1]),
                        v = o.subarray(h[e], t ? o.length : h[e + 1]),
                        y = a.subarray(d[e], t ? a.length : d[e + 1]);
                    if (i) {
                        var M = "geometry" + e;
                        r.createGeometry({
                            id: M,
                            primitive: "triangles",
                            positions: _,
                            normals: m,
                            indices: v,
                            edgeIndices: y
                        })
                    } else {
                        const t = e,
                            i = (f[w[e]], {});
                        r.createMesh(Ic.apply(i, {
                            id: t,
                            primitive: "triangles",
                            positions: _,
                            normals: m,
                            indices: v,
                            edgeIndices: y,
                            color: l,
                            opacity: p
                        }))
                    }
                }
                let A = 0;
                for (let e = 0; e < y; e++) {
                    const t = y - 1,
                        i = e === t,
                        n = f[e],
                        s = _[e],
                        o = i ? _[t] : _[e + 1],
                        a = [];
                    for (let t = s; t < o; t++) {
                        const i = p[t];
                        if (b[i] > 1) {
                            const t = {},
                                n = "instance." + A++,
                                s = "geometry" + i,
                                o = 16 * m[e],
                                c = l.subarray(o, o + 16);
                            r.createMesh(Ic.apply(t, {
                                id: n,
                                geometryId: s,
                                matrix: c
                            })), a.push(n)
                        } else a.push(i)
                    }
                    if (a.length > 0) {
                        const e = {};
                        r.createEntity(Ic.apply(e, {
                            id: n,
                            isObject: !0,
                            meshIds: a
                        }))
                    }
                }
            }(0, 0, function(e) {
                return {
                    positions: new Float32Array(am.inflate(e.positions).buffer),
                    normals: new Int8Array(am.inflate(e.normals).buffer),
                    indices: new Uint32Array(am.inflate(e.indices).buffer),
                    edgeIndices: new Uint32Array(am.inflate(e.edgeIndices).buffer),
                    matrices: new Float32Array(am.inflate(e.matrices).buffer),
                    eachPrimitivePositionsAndNormalsPortion: new Uint32Array(am.inflate(e.eachPrimitivePositionsAndNormalsPortion).buffer),
                    eachPrimitiveIndicesPortion: new Uint32Array(am.inflate(e.eachPrimitiveIndicesPortion).buffer),
                    eachPrimitiveEdgeIndicesPortion: new Uint32Array(am.inflate(e.eachPrimitiveEdgeIndicesPortion).buffer),
                    eachPrimitiveColor: new Uint8Array(am.inflate(e.eachPrimitiveColor).buffer),
                    primitiveInstances: new Uint32Array(am.inflate(e.primitiveInstances).buffer),
                    eachEntityId: am.inflate(e.eachEntityId, {
                        to: "string"
                    }),
                    eachEntityPrimitiveInstancesPortion: new Uint32Array(am.inflate(e.eachEntityPrimitiveInstancesPortion).buffer),
                    eachEntityMatricesPortion: new Uint32Array(am.inflate(e.eachEntityMatricesPortion).buffer)
                }
            }(function(e) {
                return {
                    positions: e[0],
                    normals: e[1],
                    indices: e[2],
                    edgeIndices: e[3],
                    matrices: e[4],
                    eachPrimitivePositionsAndNormalsPortion: e[5],
                    eachPrimitiveIndicesPortion: e[6],
                    eachPrimitiveEdgeIndicesPortion: e[7],
                    eachPrimitiveColor: e[8],
                    primitiveInstances: e[9],
                    eachEntityId: e[10],
                    eachEntityPrimitiveInstancesPortion: e[11],
                    eachEntityMatricesPortion: e[12]
                }
            }(i)), r)
        }
    };
    let hm = window.pako || Y_;
    hm.inflate || (hm = hm.default);
    const dm = function() {
        const e = new Float32Array(3);
        return function(t) {
            return e[0] = t[0] / 255, e[1] = t[1] / 255, e[2] = t[2] / 255, e
        }
    }();
    const um = {
            version: 6,
            parse: function(e, t, i, r) {
                ! function(e, t, i, r) {
                    const n = i.positions,
                        s = i.normals,
                        o = i.indices,
                        a = i.edgeIndices,
                        l = i.matrices,
                        c = i.reusedPrimitivesDecodeMatrix,
                        h = i.eachPrimitivePositionsAndNormalsPortion,
                        d = i.eachPrimitiveIndicesPortion,
                        u = i.eachPrimitiveEdgeIndicesPortion,
                        p = i.eachPrimitiveColorAndOpacity,
                        f = i.primitiveInstances,
                        _ = JSON.parse(i.eachEntityId),
                        m = i.eachEntityPrimitiveInstancesPortion,
                        g = i.eachEntityMatricesPortion,
                        v = i.eachTileAABB,
                        b = i.eachTileEntitiesPortion,
                        y = h.length,
                        w = f.length,
                        M = _.length,
                        A = b.length;
                    let x = 0;
                    const C = new Uint32Array(y);
                    for (let e = 0; e < w; e++) {
                        const t = f[e];
                        void 0 !== C[t] ? C[t]++ : C[t] = 1
                    }
                    const P = $c.vec3(),
                        k = $c.AABB3();
                    for (let i = 0; i < A; i++) {
                        const w = i === A - 1,
                            E = b[i],
                            I = w ? M : b[i + 1],
                            T = 6 * i,
                            D = v.subarray(T, T + 6);
                        $c.getAABB3Center(D, P), k[0] = D[0] - P[0], k[1] = D[1] - P[1], k[2] = D[2] - P[2], k[3] = D[3] - P[0], k[4] = D[4] - P[1], k[5] = D[5] - P[2];
                        const S = Kh.createPositionsDecodeMatrix(k),
                            B = {};
                        for (let v = E; v < I; v++) {
                            const b = _[v],
                                w = g[v],
                                A = l.slice(w, w + 16),
                                k = v === M - 1,
                                E = m[v],
                                I = k ? f.length : m[v + 1],
                                T = [],
                                D = e.metaScene.metaObjects[b],
                                j = {},
                                L = {};
                            if (D) {
                                if (t.excludeTypesMap && D.type && t.excludeTypesMap[D.type]) continue;
                                if (t.includeTypesMap && D.type && !t.includeTypesMap[D.type]) continue;
                                const e = t.objectDefaults ? t.objectDefaults[D.type] || t.objectDefaults.DEFAULT : null;
                                e && (!1 === e.visible && (j.visible = !1), !1 === e.pickable && (j.pickable = !1), e.colorize && (L.color = e.colorize), void 0 !== e.opacity && null !== e.opacity && (L.opacity = e.opacity))
                            } else if (t.excludeUnclassifiedObjects) continue;
                            for (let e = E; e < I; e++) {
                                const t = f[e],
                                    l = C[t] > 1,
                                    _ = t === y - 1,
                                    m = n.subarray(h[t], _ ? n.length : h[t + 1]),
                                    g = s.subarray(h[t], _ ? s.length : h[t + 1]),
                                    v = o.subarray(d[t], _ ? o.length : d[t + 1]),
                                    b = a.subarray(u[t], _ ? a.length : u[t + 1]),
                                    w = dm(p.subarray(4 * t, 4 * t + 3)),
                                    M = p[4 * t + 3] / 255,
                                    k = x++;
                                if (l) {
                                    const e = "geometry." + i + "." + t;
                                    B[e] || (r.createGeometry({
                                        id: e,
                                        rtcCenter: P,
                                        primitive: "triangles",
                                        positions: m,
                                        normals: g,
                                        indices: v,
                                        edgeIndices: b,
                                        positionsDecodeMatrix: c
                                    }), B[e] = !0), r.createMesh(Ic.apply(L, {
                                        id: k,
                                        geometryId: e,
                                        matrix: A,
                                        color: w,
                                        opacity: M
                                    })), T.push(k)
                                } else r.createMesh(Ic.apply(L, {
                                    id: k,
                                    rtcCenter: P,
                                    primitive: "triangles",
                                    positions: m,
                                    normals: g,
                                    indices: v,
                                    edgeIndices: b,
                                    positionsDecodeMatrix: S,
                                    color: w,
                                    opacity: M
                                })), T.push(k)
                            }
                            T.length > 0 && r.createEntity(Ic.apply(j, {
                                id: b,
                                isObject: !0,
                                meshIds: T
                            }))
                        }
                    }
                }(e, t, function(e) {
                    return {
                        positions: new Uint16Array(hm.inflate(e.positions).buffer),
                        normals: new Int8Array(hm.inflate(e.normals).buffer),
                        indices: new Uint32Array(hm.inflate(e.indices).buffer),
                        edgeIndices: new Uint32Array(hm.inflate(e.edgeIndices).buffer),
                        matrices: new Float32Array(hm.inflate(e.matrices).buffer),
                        reusedPrimitivesDecodeMatrix: new Float32Array(hm.inflate(e.reusedPrimitivesDecodeMatrix).buffer),
                        eachPrimitivePositionsAndNormalsPortion: new Uint32Array(hm.inflate(e.eachPrimitivePositionsAndNormalsPortion).buffer),
                        eachPrimitiveIndicesPortion: new Uint32Array(hm.inflate(e.eachPrimitiveIndicesPortion).buffer),
                        eachPrimitiveEdgeIndicesPortion: new Uint32Array(hm.inflate(e.eachPrimitiveEdgeIndicesPortion).buffer),
                        eachPrimitiveColorAndOpacity: new Uint8Array(hm.inflate(e.eachPrimitiveColorAndOpacity).buffer),
                        primitiveInstances: new Uint32Array(hm.inflate(e.primitiveInstances).buffer),
                        eachEntityId: hm.inflate(e.eachEntityId, {
                            to: "string"
                        }),
                        eachEntityPrimitiveInstancesPortion: new Uint32Array(hm.inflate(e.eachEntityPrimitiveInstancesPortion).buffer),
                        eachEntityMatricesPortion: new Uint32Array(hm.inflate(e.eachEntityMatricesPortion).buffer),
                        eachTileAABB: new Float64Array(hm.inflate(e.eachTileAABB).buffer),
                        eachTileEntitiesPortion: new Uint32Array(hm.inflate(e.eachTileEntitiesPortion).buffer)
                    }
                }(function(e) {
                    return {
                        positions: e[0],
                        normals: e[1],
                        indices: e[2],
                        edgeIndices: e[3],
                        matrices: e[4],
                        reusedPrimitivesDecodeMatrix: e[5],
                        eachPrimitivePositionsAndNormalsPortion: e[6],
                        eachPrimitiveIndicesPortion: e[7],
                        eachPrimitiveEdgeIndicesPortion: e[8],
                        eachPrimitiveColorAndOpacity: e[9],
                        primitiveInstances: e[10],
                        eachEntityId: e[11],
                        eachEntityPrimitiveInstancesPortion: e[12],
                        eachEntityMatricesPortion: e[13],
                        eachTileAABB: e[14],
                        eachTileEntitiesPortion: e[15]
                    }
                }(i)), r)
            }
        },
        pm = {};
    pm[K_.version] = K_, pm[em.version] = em, pm[rm.version] = rm, pm[om.version] = om, pm[cm.version] = cm, pm[um.version] = um;
    class fm extends Af {
        constructor(e, t = {}) {
            super("XKTLoader", e, t), this.dataSource = t.dataSource, this.objectDefaults = t.objectDefaults, this.includeTypes = t.includeTypes, this.excludeTypes = t.excludeTypes, this.excludeUnclassifiedObjects = t.excludeUnclassifiedObjects
        }
        get supportedVersions() {
            return Object.keys(pm)
        }
        set dataSource(e) {
            this._dataSource = e || new z_
        }
        get dataSource() {
            return this._dataSource
        }
        set objectDefaults(e) {
            this._objectDefaults = e || U_
        }
        get objectDefaults() {
            return this._objectDefaults
        }
        set includeTypes(e) {
            this._includeTypes = e
        }
        get includeTypes() {
            return this._includeTypes
        }
        set excludeTypes(e) {
            this._excludeTypes = e
        }
        get excludeTypes() {
            return this._excludeTypes
        }
        set excludeUnclassifiedObjects(e) {
            this._excludeUnclassifiedObjects = !!e
        }
        get excludeUnclassifiedObjects() {
            return this._excludeUnclassifiedObjects
        }
        load(e = {}) {
            e.id && this.viewer.scene.components[e.id] && (this.error("Component with this ID already exists in viewer: " + e.id + " - will autogenerate this ID"), delete e.id);
            const t = new uf(this.viewer.scene, Ic.apply(e, {
                    isModel: !0
                })),
                i = t.id;
            if (!e.src && !e.xkt) return this.error("load() param expected: src or xkt"), t;
            const r = {};
            if (e.metaModelSrc || e.metaModelData) {
                const n = e.includeTypes || this._includeTypes,
                    s = e.excludeTypes || this._excludeTypes,
                    o = e.objectDefaults || this._objectDefaults;
                if (n) {
                    r.includeTypesMap = {};
                    for (let e = 0, t = n.length; e < t; e++) r.includeTypesMap[n[e]] = !0
                }
                if (s) {
                    r.excludeTypesMap = {};
                    for (let e = 0, t = s.length; e < t; e++) r.excludeTypesMap[s[e]] = !0
                }
                o && (r.objectDefaults = o), r.excludeUnclassifiedObjects = void 0 !== e.excludeUnclassifiedObjects ? !!e.excludeUnclassifiedObjects : this._excludeUnclassifiedObjects;
                const a = o => {
                    this.viewer.metaScene.createMetaModel(i, o, {
                        includeTypes: n,
                        excludeTypes: s
                    }), this.viewer.scene.canvas.spinner.processes--, e.src ? this._loadModel(e.src, e, r, t) : this._parseModel(e.xkt, e, r, t), t.once("destroyed", () => {
                        this.viewer.metaScene.destroyMetaModel(t.id)
                    })
                };
                if (e.metaModelSrc) {
                    const t = e.metaModelSrc;
                    this.viewer.scene.canvas.spinner.processes++, this._dataSource.getMetaModel(t, e => {
                        this.viewer.scene.canvas.spinner.processes--, a(e)
                    }, e => {
                        this.error(`load(): Failed to load model metadata for model '${i} from  '${t}' - ${e}`), this.viewer.scene.canvas.spinner.processes--
                    })
                } else e.metaModelData && a(e.metaModelData)
            } else e.src ? this._loadModel(e.src, e, r, t) : this._parseModel(e.xkt, e, r, t);
            return t
        }
        _loadModel(e, t, i, r) {
            const n = this.viewer.scene.canvas.spinner;
            n.processes++, this._dataSource.getXKT(t.src, e => {
                this._parseModel(e, t, i, r), n.processes--
            }, e => {
                n.processes--, this.error(e), r.fire("error", e)
            })
        }
        _parseModel(e, t, i, r) {
            const n = new DataView(e),
                s = new Uint8Array(e),
                o = n.getUint32(0, !0),
                a = pm[o];
            if (!a) return void this.error("Unsupported .XKT file version: " + o + " - this XKTLoaderPlugin supports versions " + Object.keys(pm));
            this.log("Loading .xkt V" + o);
            const l = n.getUint32(4, !0),
                c = [];
            let h = 4 * (l + 2);
            for (let e = 0; e < l; e++) {
                const t = n.getUint32(4 * (e + 2), !0);
                c.push(s.subarray(h, h + t)), h += t
            }
            a.parse(this.viewer, i, c, r), r.finalize(), r.scene.once("tick", () => {
                r.scene.fire("modelLoaded", r.id), r.fire("loaded", !0, !1)
            })
        }
    }

    function _m(e = {}) {
        let t = e.radiusTop || 1;
        t < 0 && (console.error("negative radiusTop not allowed - will invert"), t *= -1);
        let i = e.radiusBottom || 1;
        i < 0 && (console.error("negative radiusBottom not allowed - will invert"), i *= -1);
        let r = e.height || 1;
        r < 0 && (console.error("negative height not allowed - will invert"), r *= -1);
        let n = e.radialSegments || 32;
        n < 0 && (console.error("negative radialSegments not allowed - will invert"), n *= -1), n < 3 && (n = 3);
        let s = e.heightSegments || 1;
        s < 0 && (console.error("negative heightSegments not allowed - will invert"), s *= -1), s < 1 && (s = 1);
        const o = !!e.openEnded;
        let a = e.center;
        const l = a ? a[0] : 0,
            c = a ? a[1] : 0,
            h = a ? a[2] : 0,
            d = r / 2,
            u = r / s,
            p = 2 * Math.PI / n,
            f = 1 / n,
            _ = (t - i) / s,
            m = [],
            g = [],
            v = [],
            b = [];
        let y, w, M, A, x, C, P, k, E, I, T;
        const D = (90 - 180 * Math.atan(r / (i - t)) / Math.PI) / 90;
        for (y = 0; y <= s; y++)
            for (x = t - y * _, C = d - y * u, w = 0; w <= n; w++) M = Math.sin(w * p), A = Math.cos(w * p), g.push(x * M), g.push(D), g.push(x * A), v.push(w * f), v.push(1 * y / s), m.push(x * M + l), m.push(C + c), m.push(x * A + h);
        for (y = 0; y < s; y++)
            for (w = 0; w <= n; w++) P = y * (n + 1) + w, k = P + n, b.push(P), b.push(k), b.push(k + 1), b.push(P), b.push(k + 1), b.push(P + 1);
        if (!o && t > 0) {
            for (E = m.length / 3, g.push(0), g.push(1), g.push(0), v.push(.5), v.push(.5), m.push(0 + l), m.push(d + c), m.push(0 + h), w = 0; w <= n; w++) M = Math.sin(w * p), A = Math.cos(w * p), I = .5 * Math.sin(w * p) + .5, T = .5 * Math.cos(w * p) + .5, g.push(t * M), g.push(1), g.push(t * A), v.push(I), v.push(T), m.push(t * M + l), m.push(d + c), m.push(t * A + h);
            for (w = 0; w < n; w++) a = E, P = E + 1 + w, b.push(P), b.push(P + 1), b.push(a)
        }
        if (!o && i > 0) {
            for (E = m.length / 3, g.push(0), g.push(-1), g.push(0), v.push(.5), v.push(.5), m.push(0 + l), m.push(0 - d + c), m.push(0 + h), w = 0; w <= n; w++) M = Math.sin(w * p), A = Math.cos(w * p), I = .5 * Math.sin(w * p) + .5, T = .5 * Math.cos(w * p) + .5, g.push(i * M), g.push(-1), g.push(i * A), v.push(I), v.push(T), m.push(i * M + l), m.push(0 - d + c), m.push(i * A + h);
            for (w = 0; w < n; w++) a = E, P = E + 1 + w, b.push(a), b.push(P + 1), b.push(P)
        }
        return Ic.apply(e, {
            positions: m,
            normals: g,
            uv: v,
            indices: b
        })
    }

    function mm(e, t = {}) {
        const i = t.hoverColor || "rgba(0,0,0,0.4)";
        var r = 500 + 500 / 3,
            n = r / 24;
        const s = [{
                boundary: [6, 6, 6, 6],
                color: t.frontColor || t.color || "#55FF55"
            }, {
                boundary: [18, 6, 6, 6],
                color: t.backColor || t.color || "#55FF55"
            }, {
                boundary: [12, 6, 6, 6],
                color: t.leftColor || t.color || "#FF5555"
            }, {
                boundary: [0, 6, 6, 6],
                color: t.rightColor || t.color || "#FF5555"
            }, {
                boundary: [6, 0, 6, 6],
                color: t.topColor || t.color || "#7777FF"
            }, {
                boundary: [6, 12, 6, 6],
                color: t.bottomColor || t.color || "#7777FF"
            }],
            o = [{
                label: "front",
                boundaries: [
                    [7, 7, 4, 4]
                ],
                dir: [0, 1, 0],
                up: [0, 0, 1]
            }, {
                label: "back",
                boundaries: [
                    [19, 7, 4, 4]
                ],
                dir: [0, -1, 0],
                up: [0, 0, 1]
            }, {
                label: "right",
                boundaries: [
                    [13, 7, 4, 4]
                ],
                dir: [-1, 0, 0],
                up: [0, 0, 1]
            }, {
                label: "left",
                boundaries: [
                    [1, 7, 4, 4]
                ],
                dir: [1, 0, 0],
                up: [0, 0, 1]
            }, {
                label: "top",
                boundaries: [
                    [7, 1, 4, 4]
                ],
                dir: [0, 0, -1],
                up: [0, 1, 0]
            }, {
                label: "bottom",
                boundaries: [
                    [7, 13, 4, 4]
                ],
                dir: [0, 0, 1],
                up: [0, -1, 0]
            }, {
                boundaries: [
                    [7, 5, 4, 2]
                ],
                dir: [0, 1, -1],
                up: [0, 1, 1]
            }, {
                boundaries: [
                    [1, 6, 4, 1],
                    [6, 1, 1, 4]
                ],
                dir: [1, 0, -1],
                up: [1, 0, 1]
            }, {
                boundaries: [
                    [7, 0, 4, 1],
                    [19, 6, 4, 1]
                ],
                dir: [0, -1, -1],
                up: [0, -1, 1]
            }, {
                boundaries: [
                    [13, 6, 4, 1],
                    [11, 1, 1, 4]
                ],
                dir: [-1, 0, -1],
                up: [-1, 0, 1]
            }, {
                boundaries: [
                    [7, 11, 4, 2]
                ],
                dir: [0, 1, 1],
                up: [0, -1, 1]
            }, {
                boundaries: [
                    [1, 11, 4, 1],
                    [6, 13, 1, 4]
                ],
                dir: [1, 0, 1],
                up: [-1, 0, 1]
            }, {
                boundaries: [
                    [7, 17, 4, 1],
                    [19, 11, 4, 1]
                ],
                dir: [0, -1, 1],
                up: [0, 1, 1]
            }, {
                boundaries: [
                    [13, 11, 4, 1],
                    [11, 13, 1, 4]
                ],
                dir: [-1, 0, 1],
                up: [1, 0, 1]
            }, {
                boundaries: [
                    [5, 7, 2, 4]
                ],
                dir: [1, 1, 0],
                up: [0, 0, 1]
            }, {
                boundaries: [
                    [11, 7, 2, 4]
                ],
                dir: [-1, 1, 0],
                up: [0, 0, 1]
            }, {
                boundaries: [
                    [17, 7, 2, 4]
                ],
                dir: [-1, -1, 0],
                up: [0, 0, 1]
            }, {
                boundaries: [
                    [0, 7, 1, 4],
                    [23, 7, 1, 4]
                ],
                dir: [1, -1, 0],
                up: [0, 0, 1]
            }, {
                boundaries: [
                    [5, 11, 2, 2]
                ],
                dir: [1, 1, 1],
                up: [-1, -1, 1]
            }, {
                boundaries: [
                    [23, 11, 1, 1],
                    [6, 17, 1, 1],
                    [0, 11, 1, 1]
                ],
                dir: [1, -1, 1],
                up: [-1, 1, 1]
            }, {
                boundaries: [
                    [5, 5, 2, 2]
                ],
                dir: [1, 1, -1],
                up: [1, 1, 1]
            }, {
                boundaries: [
                    [11, 17, 1, 1],
                    [17, 11, 2, 1]
                ],
                dir: [-1, -1, 1],
                up: [1, 1, 1]
            }, {
                boundaries: [
                    [17, 6, 2, 1],
                    [11, 0, 1, 1]
                ],
                dir: [-1, -1, -1],
                up: [-1, -1, 1]
            }, {
                boundaries: [
                    [11, 11, 2, 2]
                ],
                dir: [-1, 1, 1],
                up: [1, -1, 1]
            }, {
                boundaries: [
                    [0, 6, 1, 1],
                    [6, 0, 1, 1],
                    [23, 6, 1, 1]
                ],
                dir: [1, -1, -1],
                up: [1, -1, 1]
            }, {
                boundaries: [
                    [11, 5, 2, 2]
                ],
                dir: [-1, 1, -1],
                up: [-1, 1, 1]
            }],
            a = (t.frontColor || t.color, t.backColor || t.color, t.leftColor || t.color, t.rightColor || t.color, t.topColor || t.color, t.bottomColor || t.color, [{
                label: "front",
                boundaries: [
                    [7, 7, 4, 4]
                ],
                dir: [0, 0, -1],
                up: [0, 1, 0]
            }, {
                label: "back",
                boundaries: [
                    [19, 7, 4, 4]
                ],
                dir: [0, 0, 1],
                up: [0, 1, 0]
            }, {
                label: "right",
                boundaries: [
                    [13, 7, 4, 4]
                ],
                dir: [-1, 0, 0],
                up: [0, 1, 0]
            }, {
                label: "left",
                boundaries: [
                    [1, 7, 4, 4]
                ],
                dir: [1, 0, 0],
                up: [0, 1, 0]
            }, {
                label: "top",
                boundaries: [
                    [7, 1, 4, 4]
                ],
                dir: [0, -1, 0],
                up: [0, 0, -1]
            }, {
                label: "bottom",
                boundaries: [
                    [7, 13, 4, 4]
                ],
                dir: [0, 1, 0],
                up: [0, 0, 1]
            }, {
                boundaries: [
                    [7, 5, 4, 2]
                ],
                dir: [0, -1, -1],
                up: [0, 1, -1]
            }, {
                boundaries: [
                    [1, 6, 4, 1],
                    [6, 1, 1, 4]
                ],
                dir: [1, -1, 0],
                up: [1, 1, 0]
            }, {
                boundaries: [
                    [7, 0, 4, 1],
                    [19, 6, 4, 1]
                ],
                dir: [0, -1, 1],
                up: [0, 1, 1]
            }, {
                boundaries: [
                    [13, 6, 4, 1],
                    [11, 1, 1, 4]
                ],
                dir: [-1, -1, 0],
                up: [-1, 1, 0]
            }, {
                boundaries: [
                    [7, 11, 4, 2]
                ],
                dir: [0, 1, -1],
                up: [0, 1, 1]
            }, {
                boundaries: [
                    [1, 11, 4, 1],
                    [6, 13, 1, 4]
                ],
                dir: [1, 1, 0],
                up: [-1, 1, 0]
            }, {
                boundaries: [
                    [7, 17, 4, 1],
                    [19, 11, 4, 1]
                ],
                dir: [0, 1, 1],
                up: [0, 1, -1]
            }, {
                boundaries: [
                    [13, 11, 4, 1],
                    [11, 13, 1, 4]
                ],
                dir: [-1, 1, 0],
                up: [1, 1, 0]
            }, {
                boundaries: [
                    [5, 7, 2, 4]
                ],
                dir: [1, 0, -1],
                up: [0, 1, 0]
            }, {
                boundaries: [
                    [11, 7, 2, 4]
                ],
                dir: [-1, 0, -1],
                up: [0, 1, 0]
            }, {
                boundaries: [
                    [17, 7, 2, 4]
                ],
                dir: [-1, 0, 1],
                up: [0, 1, 0]
            }, {
                boundaries: [
                    [0, 7, 1, 4],
                    [23, 7, 1, 4]
                ],
                dir: [1, 0, 1],
                up: [0, 1, 0]
            }, {
                boundaries: [
                    [5, 11, 2, 2]
                ],
                dir: [1, 1, -1],
                up: [-1, 1, 1]
            }, {
                boundaries: [
                    [23, 11, 1, 1],
                    [6, 17, 1, 1],
                    [0, 11, 1, 1]
                ],
                dir: [1, 1, 1],
                up: [-1, 1, -1]
            }, {
                boundaries: [
                    [5, 5, 2, 2]
                ],
                dir: [1, -1, -1],
                up: [1, 1, -1]
            }, {
                boundaries: [
                    [11, 17, 1, 1],
                    [17, 11, 2, 1]
                ],
                dir: [-1, 1, 1],
                up: [1, 1, -1]
            }, {
                boundaries: [
                    [17, 6, 2, 1],
                    [11, 0, 1, 1]
                ],
                dir: [-1, -1, 1],
                up: [-1, 1, 1]
            }, {
                boundaries: [
                    [11, 11, 2, 2]
                ],
                dir: [-1, 1, -1],
                up: [1, 1, 1]
            }, {
                boundaries: [
                    [0, 6, 1, 1],
                    [6, 0, 1, 1],
                    [23, 6, 1, 1]
                ],
                dir: [1, -1, 1],
                up: [1, 1, 1]
            }, {
                boundaries: [
                    [11, 5, 2, 2]
                ],
                dir: [-1, -1, -1],
                up: [-1, 1, -1]
            }]);
        for (let e = 0, t = o.length; e < t; e++) $c.normalizeVec3(o[e].dir, o[e].dir), $c.normalizeVec3(a[e].dir, a[e].dir);
        var l = a;
        this._textureCanvas = document.createElement("canvas"), this._textureCanvas.width = r, this._textureCanvas.height = 500, this._textureCanvas.style.width = r + "px", this._textureCanvas.style.height = "500px", this._textureCanvas.style.padding = "0", this._textureCanvas.style.margin = "0", this._textureCanvas.style.top = "0", this._textureCanvas.style.background = "lightgrey", this._textureCanvas.style.position = "absolute", this._textureCanvas.style.opacity = "1.0", this._textureCanvas.style.visibility = "hidden", this._textureCanvas.style["z-index"] = 2e6, document.getElementsByTagName("body")[0].appendChild(this._textureCanvas);
        const c = this._textureCanvas.getContext("2d");

        function h() {
            for (let e = 0, t = s.length; e < t; e++) {
                const t = s[e],
                    i = t.boundary,
                    r = Math.round(i[0] * n),
                    o = Math.round(i[1] * n),
                    a = Math.round(i[2] * n),
                    l = Math.round(i[3] * n);
                c.fillStyle = t.color, c.fillRect(r, o, a, l)
            }
            for (let s = 0, a = l.length; s < a; s++) {
                let a, h, u, p;
                const f = l[s],
                    _ = f.boundaries;
                for (var e = 0, t = _.length; e < t; e++) {
                    const t = _[e];
                    a = Math.round(t[0] * n), h = Math.round(t[1] * n), u = Math.round(t[2] * n), p = Math.round(t[3] * n), f.highlighted && (c.fillStyle = f.highlighted ? i : f.color || "lightgrey", c.fillRect(a, h, u, p))
                }
                if (f.label) {
                    c.fillStyle = "black", c.font = "60px sans-serif", c.textAlign = "center";
                    var r = a + .5 * u,
                        o = h + .7 * p;
                    c.fillText(d(f.label), r, o, 80)
                }
            }
        }
        var d = function() {
            const t = {
                yUp: {
                    front: "+Z",
                    back: "-Z",
                    right: "+X",
                    left: "-X",
                    top: "+Y",
                    bottom: "-Y"
                },
                en: {
                    front: "FRONT",
                    back: "BACK",
                    right: "RIGHT",
                    left: "LEFT",
                    top: "TOP",
                    bottom: "BOTTOM"
                }
            };
            return function(i) {
                var r;
                return (r = t[e.language || "en"]) && r[i] || i
            }
        }();
        this.setZUp = function() {
            l = o, this.clear()
        }, this.setYUp = function() {
            l = a, this.clear()
        }, this.clear = function() {
            c.fillStyle = "lightgrey", c.fillRect(0, 0, r, 500);
            for (var e = 0, t = l.length; e < t; e++) {
                l[e].highlighted = !1
            }
            h()
        }, this.getArea = function(e) {
            const t = e[0] * r,
                i = 500 - 500 * e[1];
            for (var s = 0, o = l.length; s < o; s++) {
                const e = l[s].boundaries;
                for (var a = 0, c = e.length; a < c; a++) {
                    const r = e[a];
                    if (t >= r[0] * n && t <= (r[0] + r[2]) * n && i >= r[1] * n && i <= (r[1] + r[3]) * n) return s
                }
            }
            return -1
        }, this.setAreaHighlighted = function(e, t) {
            var i = l[e];
            if (!i) throw "Area not found: " + e;
            i.highlighted = !!t, h()
        }, this.getAreaDir = function(e) {
            var t = l[e];
            if (!t) throw "Unknown area: " + e;
            return t.dir
        }, this.getAreaUp = function(e) {
            var t = l[e];
            if (!t) throw "Unknown area: " + e;
            return t.up
        }, this.getImage = function() {
            return this._textureCanvas
        }, this.destroy = function() {
            this._textureCanvas && (this._textureCanvas.parentNode.removeChild(this._textureCanvas), this._textureCanvas = null)
        }, this.clear()
    }
    class gm extends Af {
        constructor(e, t = {}) {
            super("NavCube", e, t), e.navCube = this;
            try {
                this._navCubeScene = new md({
                    canvasId: t.canvasId,
                    canvasElement: t.canvasElement,
                    transparent: !0
                }), this._navCubeCanvas = this._navCubeScene.canvas.canvas, this._navCubeScene.input.keyboardEnabled = !1
            } catch (e) {
                return void this.error(e)
            }
            const i = this._navCubeScene;
            i.clearLights(), new $h(i, {
                dir: [.4, -.4, .8],
                color: [.8, 1, 1],
                intensity: 1,
                space: "view"
            }), new $h(i, {
                dir: [-.8, -.3, -.4],
                color: [.8, .8, .8],
                intensity: 1,
                space: "view"
            }), new $h(i, {
                dir: [.8, -.6, -.8],
                color: [1, 1, 1],
                intensity: 1,
                space: "view"
            }), this._navCubeCamera = i.camera, this._navCubeCamera.ortho.scale = 7, this._navCubeCamera.ortho.near = .1, this._navCubeCamera.ortho.far = 2e3, this._zUp = Boolean(e.camera.zUp);
            var r = this;
            this._synchCamera = function() {
                var t = $c.rotationMat4c(-90 * $c.DEGTORAD, 1, 0, 0),
                    i = $c.vec3(),
                    n = $c.vec3(),
                    s = $c.vec3();
                return function() {
                    var o = e.camera.eye,
                        a = e.camera.look,
                        l = e.camera.up;
                    i = $c.mulVec3Scalar($c.normalizeVec3($c.subVec3(o, a, i)), 5), r._zUp ? ($c.transformVec3(t, i, n), $c.transformVec3(t, l, s), r._navCubeCamera.look = [0, 0, 0], r._navCubeCamera.eye = $c.transformVec3(t, i, n), r._navCubeCamera.up = $c.transformPoint3(t, l, s)) : (r._navCubeCamera.look = [0, 0, 0], r._navCubeCamera.eye = i, r._navCubeCamera.up = l)
                }
            }(), this._cubeTextureCanvas = new mm(e, t), this._cubeSampler = new B_(i, {
                image: this._cubeTextureCanvas.getImage(),
                flipY: !0,
                wrapS: "clampToEdge",
                wrapT: "clampToEdge"
            }), this._cubeMesh = new p_(i, {
                geometry: new id(i, {
                    primitive: "triangles",
                    normals: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],
                    positions: [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1],
                    uv: [.5, .6666, .25, .6666, .25, .3333, .5, .3333, .5, .6666, .5, .3333, .75, .3333, .75, .6666, .5, .6666, .5, 1, .25, 1, .25, .6666, .25, .6666, 0, .6666, 0, .3333, .25, .3333, .25, 0, .5, 0, .5, .3333, .25, .3333, .75, .3333, 1, .3333, 1, .6666, .75, .6666],
                    indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
                }),
                material: new ad(i, {
                    diffuse: [.4, .4, .4],
                    specular: [.4, .4, .4],
                    emissive: [.6, .6, .6],
                    diffuseMap: this._cubeSampler,
                    emissiveMap: this._cubeSampler
                }),
                visible: !0,
                edges: !0
            }), this._shadow = new p_(i, {
                geometry: new id(i, _m({
                    center: [0, 0, 0],
                    radiusTop: .001,
                    radiusBottom: 1.4,
                    height: .01,
                    radialSegments: 20,
                    heightSegments: 1,
                    openEnded: !0
                })),
                material: new ad(i, {
                    diffuse: [0, 0, 0],
                    specular: [0, 0, 0],
                    emissive: [0, 0, 0],
                    alpha: .5
                }),
                position: [0, -1.5, 0],
                visible: !0,
                pickable: !1,
                backfaces: !1
            }), this._onCameraMatrix = e.camera.on("matrix", this._synchCamera), this._onCameraWorldAxis = e.camera.on("worldAxis", () => {
                e.camera.zUp ? (this._zUp = !0, this._cubeTextureCanvas.setZUp(), this._repaint(), this._synchCamera()) : e.camera.yUp && (this._zUp = !1, this._cubeTextureCanvas.setYUp(), this._repaint(), this._synchCamera())
            }), this._onCameraFOV = e.camera.perspective.on("fov", e => {
                this._synchProjection && (this._navCubeCamera.perspective.fov = e)
            }), this._onCameraProjection = e.camera.on("projection", e => {
                this._synchProjection && (this._navCubeCamera.projection = e)
            });
            var n = -1;

            function s(e) {
                var t = [0, 0];
                if (e) {
                    for (var i = e.target, r = 0, n = 0; i.offsetParent;) r += i.offsetLeft, n += i.offsetTop, i = i.offsetParent;
                    t[0] = e.pageX - r, t[1] = e.pageY - n
                } else e = window.event, t[0] = e.x, t[1] = e.y;
                return t
            }
            var o, a, l = null,
                c = null,
                h = !1,
                d = !1,
                u = .5;
            r._navCubeCanvas.addEventListener("mouseenter", r._onMouseEnter = function(e) {
                d = !0
            }), r._navCubeCanvas.addEventListener("mouseleave", r._onMouseLeave = function(e) {
                d = !1
            }), r._navCubeCanvas.addEventListener("mousedown", r._onMouseDown = function(e) {
                if (1 === e.which) {
                    l = e.x, c = e.y, o = e.clientX, a = e.clientY;
                    var t = s(e),
                        r = i.pick({
                            canvasPos: t
                        });
                    h = !!r
                }
            }), document.addEventListener("mouseup", r._onMouseUp = function(e) {
                if (1 === e.which && (h = !1, null !== l)) {
                    var t = s(e),
                        o = i.pick({
                            canvasPos: t,
                            pickSurface: !0
                        });
                    if (o && o.uv) {
                        var a = r._cubeTextureCanvas.getArea(o.uv);
                        if (a >= 0 && (document.body.style.cursor = "pointer", n >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(n, !1), r._repaint(), n = -1), a >= 0)) {
                            if (r._cubeTextureCanvas.setAreaHighlighted(a, !0), n = a, r._repaint(), e.x < l - 3 || e.x > l + 3 || e.y < c - 3 || e.y > c + 3) return;
                            var d = r._cubeTextureCanvas.getAreaDir(a);
                            if (d) {
                                var u = r._cubeTextureCanvas.getAreaUp(a);
                                p(d, u, (function() {
                                    n >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(n, !1), r._repaint(), n = -1);
                                    var e = i.pick({
                                        canvasPos: t,
                                        pickSurface: !0
                                    });
                                    if (e && e.uv) {
                                        var s = r._cubeTextureCanvas.getArea(e.uv);
                                        void 0 !== s && (document.body.style.cursor = "pointer", n >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(n, !1), r._repaint(), n = -1), s >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(s, !0), n = s, r._repaint()))
                                    }
                                }))
                            }
                        }
                    }
                }
            }), document.addEventListener("mousemove", r._onMouseMove = function(t) {
                if (n >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(n, !1), r._repaint(), n = -1), 1 !== t.buttons || h) {
                    if (h) {
                        var l = t.clientX,
                            c = t.clientY;
                        return document.body.style.cursor = "move", void
                        function(t, i) {
                            var r = (t - o) * -u,
                                n = (i - a) * -u;
                            e.camera.orbitYaw(r), e.camera.orbitPitch(-n), o = t, a = i
                        }(l, c)
                    }
                    if (d) {
                        var p = s(t),
                            f = i.pick({
                                canvasPos: p,
                                pickSurface: !0
                            });
                        if (f) {
                            if (f.uv) {
                                document.body.style.cursor = "pointer";
                                var _ = r._cubeTextureCanvas.getArea(f.uv);
                                if (_ === n) return;
                                n >= 0 && r._cubeTextureCanvas.setAreaHighlighted(n, !1), _ >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(_, !0), r._repaint(), n = _)
                            }
                        } else document.body.style.cursor = "default", n >= 0 && (r._cubeTextureCanvas.setAreaHighlighted(n, !1), r._repaint(), n = -1)
                    }
                }
            });
            var p = function() {
                var t = $c.vec3();
                return function(i, n, s) {
                    var o = r._fitVisible ? e.scene.getAABB(e.scene.visibleObjectIds) : e.scene.aabb,
                        a = $c.getAABB3Diag(o);
                    $c.getAABB3Center(o, t);
                    var l = Math.abs(a / Math.tan(27.5));
                    e.cameraControl.pivotPos = t, r._cameraFly ? e.cameraFlight.flyTo({
                        look: t,
                        eye: [t[0] - l * i[0], t[1] - l * i[1], t[2] - l * i[2]],
                        up: n || [0, 1, 0],
                        orthoScale: 1.3 * a,
                        fitFOV: r._cameraFitFOV,
                        duration: r._cameraFlyDuration
                    }, s) : e.cameraFlight.jumpTo({
                        look: t,
                        eye: [t[0] - l * i[0], t[1] - l * i[1], t[2] - l * i[2]],
                        up: n || [0, 1, 0],
                        orthoScale: 1.3 * a,
                        fitFOV: r._cameraFitFOV
                    }, s)
                }
            }();
            this.setVisible(t.visible), this.setCameraFitFOV(t.cameraFitFOV), this.setCameraFly(t.cameraFly), this.setCameraFlyDuration(t.cameraFlyDuration), this.setFitVisible(t.fitVisible), this.setSynchProjection(t.synchProjection)
        }
        send(e, t) {
            switch (e) {
                case "language":
                    this._cubeTextureCanvas.clear(), this._repaint()
            }
        }
        _repaint() {
            const e = this._cubeTextureCanvas.getImage();
            this._cubeMesh.material.diffuseMap.image = e, this._cubeMesh.material.emissiveMap.image = e
        }
        setVisible(e = !0) {
            this._navCubeCanvas && (this._cubeMesh.visible = e, this._shadow.visible = e, this._navCubeCanvas.style.visibility = e ? "visible" : "hidden")
        }
        getVisible() {
            return !!this._navCubeCanvas && this._cubeMesh.visible
        }
        setFitVisible(e = !1) {
            this._fitVisible = e
        }
        getFitVisible() {
            return this._fitVisible
        }
        setCameraFly(e = !0) {
            this._cameraFly = e
        }
        getCameraFly() {
            return this._cameraFly
        }
        setCameraFitFOV(e = 45) {
            this._cameraFitFOV = e
        }
        getCameraFitFOV() {
            return this._cameraFitFOV
        }
        setCameraFlyDuration(e = .5) {
            this._cameraFlyDuration = e
        }
        getCameraFlyDuration() {
            return this._cameraFlyDuration
        }
        setSynchProjection(e = !1) {
            this._synchProjection = e
        }
        getSynchProjection() {
            return this._synchProjection
        }
        destroy() {
            this._navCubeCanvas && (this.viewer.camera.off(this._onCameraMatrix), this.viewer.camera.off(this._onCameraWorldAxis), this.viewer.camera.perspective.off(this._onCameraFOV), this.viewer.camera.off(this._onCameraProjection), this._navCubeCanvas.removeEventListener("mouseenter", this._onMouseEnter), this._navCubeCanvas.removeEventListener("mouseleave", this._onMouseLeave), this._navCubeCanvas.removeEventListener("mousedown", this._onMouseDown), document.removeEventListener("mousemove", this._onMouseMove), document.removeEventListener("mouseup", this._onMouseUp), this._navCubeCanvas = null, this._cubeTextureCanvas.destroy(), this._cubeTextureCanvas = null, this._onMouseEnter = null, this._onMouseLeave = null, this._onMouseDown = null, this._onMouseMove = null, this._onMouseUp = null), this._navCubeScene.destroy(), this._navCubeScene = null, this._cubeMesh = null, this._shadow = null, super.destroy()
        }
    }
    const vm = $c.vec3(),
        bm = $c.vec3(),
        ym = $c.mat4();
    class wm {
        constructor() {
            this.normal = $c.vec3(), this.offset = 0, this.testVertex = $c.vec3()
        }
        set(e, t, i, r) {
            const n = 1 / Math.sqrt(e * e + t * t + i * i);
            this.normal[0] = e * n, this.normal[1] = t * n, this.normal[2] = i * n, this.offset = r * n, this.testVertex[0] = this.normal[0] >= 0 ? 1 : 0, this.testVertex[1] = this.normal[1] >= 0 ? 1 : 0, this.testVertex[2] = this.normal[2] >= 0 ? 1 : 0
        }
    }
    class Mm {
        constructor() {
            this.planes = [new wm, new wm, new wm, new wm, new wm, new wm]
        }
    }
    Mm.INSIDE = 0, Mm.INTERSECT = 1, Mm.OUTSIDE = 2;
    class Am {
        constructor(e) {
            this._scene = e, this._objects = [], this._objectsViewCulled = [], this._objectsDetailCulled = [], this._objectsChanged = [], this._objectsChangedList = [], this._modelInfos = {}, this._numObjects = 0, this._lenObjectsChangedList = 0, this._dirty = !0, this._onModelLoaded = e.on("modelLoaded", t => {
                const i = e.models[t];
                i && this._addModel(i)
            }), this._onTick = e.on("tick", () => {
                this._dirty && this._build(), this._applyChanges()
            })
        }
        _addModel(e) {
            const t = {
                model: e,
                onDestroyed: e.on("destroyed", () => {
                    this._removeModel(e)
                })
            };
            this._modelInfos[e.id] = t, this._dirty = !0
        }
        _removeModel(e) {
            const t = this._modelInfos[e.id];
            t && (t.model.off(t.onDestroyed), delete this._modelInfos[e.id], this._dirty = !0)
        }
        _build() {
            if (!this._dirty) return;
            this._applyChanges();
            const e = this._scene.objects;
            for (let e = 0; e < this._numObjects; e++) this._objects[e] = null;
            this._numObjects = 0;
            for (let t in e) {
                const i = e[t];
                this._objects[this._numObjects++] = i
            }
            this._lenObjectsChangedList = 0, this._dirty = !1
        }
        _applyChanges() {
            if (this._lenObjectsChangedList > 0) {
                for (let e = 0; e < this._lenObjectsChangedList; e++) {
                    const t = this._objectsChangedList[e],
                        i = this._objects[t],
                        r = this._objectsViewCulled[t],
                        n = this._objectsDetailCulled[t],
                        s = r || n;
                    i.culled = s, this._objectsChanged[t] = !1
                }
                this._lenObjectsChangedList = 0
            }
        }
        get objects() {
            return this._dirty && this._build(), this._objects
        }
        get numObjects() {
            return this._dirty && this._build(), this._numObjects
        }
        setObjectViewCulled(e, t) {
            this._dirty && this._build(), this._objectsViewCulled[e] !== t && (this._objectsViewCulled[e] = t, this._objectsChanged[e] || (this._objectsChanged[e] = !0, this._objectsChangedList[this._lenObjectsChangedList++] = e))
        }
        setObjectDetailCulled(e, t) {
            this._dirty && this._build(), this._objectsDetailCulled[e] !== t && (this._objectsDetailCulled[e] = t, this._objectsChanged[e] || (this._objectsChanged[e] = !0, this._objectsChangedList[this._lenObjectsChangedList++] = e))
        }
        _destroy() {
            this._clear(), this._scene.off(this._onModelLoaded), this._scene.off(this._onTick)
        }
        _clear() {
            for (let e in this._modelInfos) {
                const t = this._modelInfos[e];
                t.model.off(t.onDestroyed)
            }
            this._modelInfos = {}, this._dirty = !0
        }
    }
    const xm = {};
    const Cm = new Float32Array(3);
    class Pm extends Af {
        constructor(e, t = {}) {
            super("ViewCull", e), this._objectCullStates = function(e) {
                const t = e.id;
                let i = xm[t];
                return i || (i = new Am(e), xm[t] = i, e.on("destroyed", () => {
                    delete xm[t], i._destroy()
                })), i
            }(e.scene), this._maxTreeDepth = t.maxTreeDepth || 8, this._modelInfos = {}, this._frustum = new Mm, this._kdRoot = null, this._frustumDirty = !1, this._kdTreeDirty = !1, this._onViewMatrix = e.scene.camera.on("viewMatrix", () => {
                this._frustumDirty = !0
            }), this._onProjMatrix = e.scene.camera.on("projMatMatrix", () => {
                this._frustumDirty = !0
            }), this._onModelLoaded = e.scene.on("modelLoaded", e => {
                const t = this.viewer.scene.models[e];
                t && this._addModel(t)
            }), this._onSceneTick = e.scene.on("tick", () => {
                this._doCull()
            })
        }
        set enabled(e) {
            this._enabled = e
        }
        get enabled() {
            return this._enabled
        }
        _addModel(e) {
            const t = {
                model: e,
                onDestroyed: e.on("destroyed", () => {
                    this._removeModel(e)
                })
            };
            this._modelInfos[e.id] = t, this._kdTreeDirty = !0
        }
        _removeModel(e) {
            const t = this._modelInfos[e.id];
            t && (t.model.off(t.onDestroyed), delete this._modelInfos[e.id], this._kdTreeDirty = !0)
        }
        _doCull() {
            const e = this._frustumDirty || this._kdTreeDirty;
            if (this._frustumDirty && this._buildFrustum(), this._kdTreeDirty && this._buildKDTree(), e) {
                const e = this._kdRoot;
                e && this._visitKDNode(e)
            }
        }
        _buildFrustum() {
            const e = this.viewer.scene.camera;
            ! function(e, t, i) {
                const r = $c.mulMat4(i, t, ym),
                    n = r[0],
                    s = r[1],
                    o = r[2],
                    a = r[3],
                    l = r[4],
                    c = r[5],
                    h = r[6],
                    d = r[7],
                    u = r[8],
                    p = r[9],
                    f = r[10],
                    _ = r[11],
                    m = r[12],
                    g = r[13],
                    v = r[14],
                    b = r[15];
                e.planes[0].set(a - n, d - l, _ - u, b - m), e.planes[1].set(a + n, d + l, _ + u, b + m), e.planes[2].set(a - s, d - c, _ - p, b - g), e.planes[3].set(a + s, d + c, _ + p, b + g), e.planes[4].set(a - o, d - h, _ - f, b - v), e.planes[5].set(a + o, d + h, _ + f, b + v)
            }(this._frustum, e.viewMatrix, e.projMatrix), this._frustumDirty = !1
        }
        _buildKDTree() {
            const e = this.viewer.scene;
            this._kdRoot, this._kdRoot = {
                aabb: e.getAABB(),
                intersection: Mm.INTERSECT
            };
            for (let e = 0, t = this._objectCullStates.numObjects; e < t; e++) {
                const t = this._objectCullStates.objects[e];
                this._insertEntityIntoKDTree(this._kdRoot, t, e, 1)
            }
            this._kdTreeDirty = !1
        }
        _insertEntityIntoKDTree(e, t, i, r) {
            const n = t.aabb;
            if (r >= this._maxTreeDepth) return e.objects = e.objects || [], e.objects.push(i), void $c.expandAABB3(e.aabb, n);
            if (e.left && $c.containsAABB3(e.left.aabb, n)) return void this._insertEntityIntoKDTree(e.left, t, i, r + 1);
            if (e.right && $c.containsAABB3(e.right.aabb, n)) return void this._insertEntityIntoKDTree(e.right, t, i, r + 1);
            const s = e.aabb;
            Cm[0] = s[3] - s[0], Cm[1] = s[4] - s[1], Cm[2] = s[5] - s[2];
            let o = 0;
            if (Cm[1] > Cm[o] && (o = 1), Cm[2] > Cm[o] && (o = 2), !e.left) {
                const a = s.slice();
                if (a[o + 3] = (s[o] + s[o + 3]) / 2, e.left = {
                        aabb: a,
                        intersection: Mm.INTERSECT
                    }, $c.containsAABB3(a, n)) return void this._insertEntityIntoKDTree(e.left, t, i, r + 1)
            }
            if (!e.right) {
                const a = s.slice();
                if (a[o] = (s[o] + s[o + 3]) / 2, e.right = {
                        aabb: a,
                        intersection: Mm.INTERSECT
                    }, $c.containsAABB3(a, n)) return void this._insertEntityIntoKDTree(e.right, t, i, r + 1)
            }
            e.objects = e.objects || [], e.objects.push(i), $c.expandAABB3(e.aabb, n)
        }
        _visitKDNode(e, t = Mm.INTERSECT) {
            if (t !== Mm.INTERSECT && e.intersects === t) return;
            t === Mm.INTERSECT && (t = function(e, t) {
                let i = Mm.INSIDE;
                const r = vm,
                    n = bm;
                r[0] = t[0], r[1] = t[1], r[2] = t[2], n[0] = t[3], n[1] = t[4], n[2] = t[5];
                const s = [r, n];
                for (let t = 0; t < 6; ++t) {
                    const r = e.planes[t];
                    if (r.normal[0] * s[r.testVertex[0]][0] + r.normal[1] * s[r.testVertex[1]][1] + r.normal[2] * s[r.testVertex[2]][2] + r.offset < 0) return Mm.OUTSIDE;
                    r.normal[0] * s[1 - r.testVertex[0]][0] + r.normal[1] * s[1 - r.testVertex[1]][1] + r.normal[2] * s[1 - r.testVertex[2]][2] + r.offset < 0 && (i = Mm.INTERSECT)
                }
                return i
            }(this._frustum, e.aabb), e.intersects = t);
            const i = t === Mm.OUTSIDE,
                r = e.objects;
            if (r && r.length > 0)
                for (let e = 0, t = r.length; e < t; e++) {
                    const t = r[e];
                    this._objectCullStates.setObjectViewCulled(t, i)
                }
            e.left && this._visitKDNode(e.left, t), e.right && this._visitKDNode(e.right, t)
        }
        send(e, t) {}
        destroy() {
            super.destroy(), this._clear();
            const e = this.viewer.scene,
                t = e.camera;
            e.off(this._onModelLoaded), e.off(this._onSceneTick), t.off(this._onViewMatrix), t.off(this._onProjMatrix)
        }
        _clear() {
            for (let e in this._modelInfos) {
                const t = this._modelInfos[e];
                t.model.off(t.onDestroyed)
            }
            this._modelInfos = {}, this._kdRoot = null, this._kdTreeDirty = !0
        }
    }
    class km extends Wc {
        get type() {
            return "SectionPlane"
        }
        constructor(e, t = {}) {
            super(e, t), this._state = new xh({
                active: !0,
                pos: $c.vec3(),
                dir: $c.vec3(),
                dist: 0
            }), this.active = t.active, this.pos = t.pos, this.dir = t.dir, this.scene._sectionPlaneCreated(this)
        }
        set active(e) {
            this._state.active = !1 !== e, this.glRedraw(), this.fire("active", this._state.active)
        }
        get active() {
            return this._state.active
        }
        set pos(e) {
            this._state.pos.set(e || [0, 0, 0]), this._state.dist = -$c.dotVec3(this._state.pos, this._state.dir), this.glRedraw(), this.fire("pos", this._state.pos)
        }
        get pos() {
            return this._state.pos
        }
        set dir(e) {
            this._state.dir.set(e || [0, 0, -1]), this._state.dist = -$c.dotVec3(this._state.pos, this._state.dir), this.glRedraw(), this.fire("dir", this._state.dir)
        }
        get dir() {
            return this._state.dir
        }
        get dist() {
            return this._state.dist
        }
        flipDir() {
            const e = this._state.dir;
            e[0] *= -1, e[1] *= -1, e[2] *= -1, this.fire("dir", this._state.dir), this.glRedraw()
        }
        destroy() {
            this._state.destroy(), this.scene._sectionPlaneDestroyed(this), super.destroy()
        }
    }

    function Em(e = {}) {
        let t = e.radius || 1;
        t < 0 && (console.error("negative radius not allowed - will invert"), t *= -1), t *= .5;
        let i = e.tube || .3;
        i < 0 && (console.error("negative tube not allowed - will invert"), i *= -1);
        let r = e.radialSegments || 32;
        r < 0 && (console.error("negative radialSegments not allowed - will invert"), r *= -1), r < 4 && (r = 4);
        let n = e.tubeSegments || 24;
        n < 0 && (console.error("negative tubeSegments not allowed - will invert"), n *= -1), n < 4 && (n = 4);
        let s = e.arc || 2 * Math.PI;
        s < 0 && (console.warn("negative arc not allowed - will invert"), s *= -1), s > 360 && (s = 360);
        const o = e.center;
        let a = o ? o[0] : 0,
            l = o ? o[1] : 0;
        const c = o ? o[2] : 0,
            h = [],
            d = [],
            u = [],
            p = [];
        let f, _, m, g, v, b, y, w, M, A, x, C;
        for (w = 0; w <= n; w++)
            for (y = 0; y <= r; y++) f = y / r * s, _ = .785398 + w / n * Math.PI * 2, a = t * Math.cos(f), l = t * Math.sin(f), m = (t + i * Math.cos(_)) * Math.cos(f), g = (t + i * Math.cos(_)) * Math.sin(f), v = i * Math.sin(_), h.push(m + a), h.push(g + l), h.push(v + c), u.push(1 - y / r), u.push(w / n), b = $c.normalizeVec3($c.subVec3([m, g, v], [a, l, c], []), []), d.push(b[0]), d.push(b[1]), d.push(b[2]);
        for (w = 1; w <= n; w++)
            for (y = 1; y <= r; y++) M = (r + 1) * w + y - 1, A = (r + 1) * (w - 1) + y - 1, x = (r + 1) * (w - 1) + y, C = (r + 1) * w + y, p.push(M), p.push(A), p.push(x), p.push(x), p.push(C), p.push(M);
        return Ic.apply(e, {
            positions: h,
            normals: d,
            uv: u,
            indices: p
        })
    }

    function Im(e = {}) {
        const t = e.lod || 1,
            i = e.center ? e.center[0] : 0,
            r = e.center ? e.center[1] : 0,
            n = e.center ? e.center[2] : 0;
        let s = e.radius || 1;
        s < 0 && (console.error("negative radius not allowed - will invert"), s *= -1);
        let o = e.heightSegments || 18;
        o < 0 && (console.error("negative heightSegments not allowed - will invert"), o *= -1), o = Math.floor(t * o), o < 18 && (o = 18);
        let a = e.widthSegments || 18;
        a < 0 && (console.error("negative widthSegments not allowed - will invert"), a *= -1), a = Math.floor(t * a), a < 18 && (a = 18);
        const l = [],
            c = [],
            h = [],
            d = [];
        let u, p, f, _, m, g, v, b, y, w, M, A, x, C, P;
        for (u = 0; u <= o; u++)
            for (f = u * Math.PI / o, _ = Math.sin(f), m = Math.cos(f), p = 0; p <= a; p++) g = 2 * p * Math.PI / a, v = Math.sin(g), b = Math.cos(g), y = b * _, w = m, M = v * _, A = 1 - p / a, x = u / o, c.push(y), c.push(w), c.push(M), h.push(A), h.push(x), l.push(i + s * y), l.push(r + s * w), l.push(n + s * M);
        for (u = 0; u < o; u++)
            for (p = 0; p < a; p++) C = u * (a + 1) + p, P = C + a + 1, d.push(C + 1), d.push(P + 1), d.push(P), d.push(C + 1), d.push(P), d.push(C);
        return Ic.apply(e, {
            positions: l,
            normals: c,
            uv: h,
            indices: d
        })
    }
    const Tm = new Float32Array([0, 0, 1]),
        Dm = new Float32Array(4);
    class Sm {
        constructor(e) {
            this.id = null, this._viewer = e.viewer, this._visible = !1, this._pos = $c.vec3(), this._rtcCenter = $c.vec3(), this._rtcPos = $c.vec3(), this._baseDir = $c.vec3(), this._rootNode = null, this._displayMeshes = null, this._affordanceMeshes = null, this._createNodes(), this._bindEvents()
        }
        _setSectionPlane(e) {
            this._sectionPlane && (this._sectionPlane.off(this._onSectionPlanePos), this._sectionPlane.off(this._onSectionPlaneDir), this._onSectionPlanePos = null, this._onSectionPlaneDir = null, this._sectionPlane = null), e && (this.id = e.id, this._setPos(e.pos), this._setDir(e.dir), this._sectionPlane = e, this._onSectionPlanePos = e.on("pos", () => {
                this._setPos(this._sectionPlane.pos)
            }), this._onSectionPlaneDir = e.on("dir", () => {
                this._setDir(this._sectionPlane.dir)
            }))
        }
        get sectionPlane() {
            return this._sectionPlane
        }
        _setPos(e) {
            this._pos.set(e), Jc(this._pos, this._rtcCenter, this._rtcPos), this._rootNode.rtcCenter = this._rtcCenter, this._rootNode.position = this._rtcPos
        }
        _setDir(e) {
            this._baseDir.set(e), this._rootNode.quaternion = $c.vec3PairToQuaternion(Tm, e, Dm)
        }
        setVisible(e = !0) {
            if (this._visible !== e) {
                var t;
                for (t in this._visible = e, this._displayMeshes) this._displayMeshes.hasOwnProperty(t) && (this._displayMeshes[t].visible = e);
                if (!e)
                    for (t in this._affordanceMeshes) this._affordanceMeshes.hasOwnProperty(t) && (this._affordanceMeshes[t].visible = e)
            }
        }
        getVisible() {
            return this._visible
        }
        setCulled(e) {
            var t;
            for (t in this._displayMeshes) this._displayMeshes.hasOwnProperty(t) && (this._displayMeshes[t].culled = e);
            if (!e)
                for (t in this._affordanceMeshes) this._affordanceMeshes.hasOwnProperty(t) && (this._affordanceMeshes[t].culled = e)
        }
        _createNodes() {
            const e = this._viewer.scene;
            this._rootNode = new Mf(e, {
                position: [0, 0, 0],
                scale: [5, 5, 5]
            });
            const t = this._rootNode,
                i = {
                    arrowHead: new id(t, _m({
                        radiusTop: .001,
                        radiusBottom: .07,
                        radialSegments: 32,
                        heightSegments: 1,
                        height: .2,
                        openEnded: !1
                    })),
                    arrowHeadBig: new id(t, _m({
                        radiusTop: .001,
                        radiusBottom: .09,
                        radialSegments: 32,
                        heightSegments: 1,
                        height: .25,
                        openEnded: !1
                    })),
                    arrowHeadHandle: new id(t, _m({
                        radiusTop: .09,
                        radiusBottom: .09,
                        radialSegments: 8,
                        heightSegments: 1,
                        height: .37,
                        openEnded: !1
                    })),
                    curve: new id(t, Em({
                        radius: .8,
                        tube: .01,
                        radialSegments: 64,
                        tubeSegments: 14,
                        arc: 2 * Math.PI / 4
                    })),
                    curveHandle: new id(t, Em({
                        radius: .8,
                        tube: .06,
                        radialSegments: 64,
                        tubeSegments: 14,
                        arc: 2 * Math.PI / 4
                    })),
                    hoop: new id(t, Em({
                        radius: .8,
                        tube: .01,
                        radialSegments: 64,
                        tubeSegments: 8,
                        arc: 2 * Math.PI
                    })),
                    axis: new id(t, _m({
                        radiusTop: .01,
                        radiusBottom: .01,
                        radialSegments: 20,
                        heightSegments: 1,
                        height: 1,
                        openEnded: !1
                    })),
                    axisHandle: new id(t, _m({
                        radiusTop: .08,
                        radiusBottom: .08,
                        radialSegments: 20,
                        heightSegments: 1,
                        height: 1,
                        openEnded: !1
                    }))
                },
                r = {
                    pickable: new ad(t, {
                        diffuse: [1, 1, 0],
                        alpha: 0,
                        alphaMode: "blend"
                    }),
                    red: new ad(t, {
                        diffuse: [1, 0, 0],
                        emissive: [1, 0, 0],
                        ambient: [0, 0, 0],
                        specular: [.6, .6, .3],
                        shininess: 80,
                        lineWidth: 2
                    }),
                    highlightRed: new cd(t, {
                        edges: !1,
                        fill: !0,
                        fillColor: [1, 0, 0],
                        fillAlpha: .6
                    }),
                    green: new ad(t, {
                        diffuse: [0, 1, 0],
                        emissive: [0, 1, 0],
                        ambient: [0, 0, 0],
                        specular: [.6, .6, .3],
                        shininess: 80,
                        lineWidth: 2
                    }),
                    highlightGreen: new cd(t, {
                        edges: !1,
                        fill: !0,
                        fillColor: [0, 1, 0],
                        fillAlpha: .6
                    }),
                    blue: new ad(t, {
                        diffuse: [0, 0, 1],
                        emissive: [0, 0, 1],
                        ambient: [0, 0, 0],
                        specular: [.6, .6, .3],
                        shininess: 80,
                        lineWidth: 2
                    }),
                    highlightBlue: new cd(t, {
                        edges: !1,
                        fill: !0,
                        fillColor: [0, 0, 1],
                        fillAlpha: .2
                    }),
                    center: new ad(t, {
                        diffuse: [0, 0, 0],
                        emissive: [0, 0, 0],
                        ambient: [0, 0, 0],
                        specular: [.6, .6, .3],
                        shininess: 80
                    }),
                    highlightBall: new cd(t, {
                        edges: !1,
                        fill: !0,
                        fillColor: [.5, .5, .5],
                        fillAlpha: .5,
                        vertices: !1
                    }),
                    highlightPlane: new cd(t, {
                        edges: !0,
                        edgeWidth: 3,
                        fill: !1,
                        fillColor: [.5, .5, .5],
                        fillAlpha: .5,
                        vertices: !1
                    })
                };
            this._displayMeshes = {
                plane: t.addChild(new p_(t, {
                    geometry: new id(t, {
                        primitive: "triangles",
                        positions: [.5, .5, 0, .5, -.5, 0, -.5, -.5, 0, -.5, .5, 0, .5, .5, -0, .5, -.5, -0, -.5, -.5, -0, -.5, .5, -0],
                        indices: [0, 1, 2, 2, 3, 0]
                    }),
                    material: new ad(t, {
                        emissive: [0, 0, 0],
                        diffuse: [0, 0, 0],
                        backfaces: !0
                    }),
                    opacity: .6,
                    ghosted: !0,
                    ghostMaterial: new cd(t, {
                        edges: !1,
                        filled: !0,
                        fillColor: [1, 1, 0],
                        edgeColor: [0, 0, 0],
                        fillAlpha: .1,
                        backfaces: !0
                    }),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1,
                    scale: [2.4, 2.4, 1]
                }), !1),
                planeFrame: t.addChild(new p_(t, {
                    geometry: new id(t, Em({
                        center: [0, 0, 0],
                        radius: 1.7,
                        tube: .02,
                        radialSegments: 4,
                        tubeSegments: 4,
                        arc: 2 * Math.PI
                    })),
                    material: new ad(t, {
                        emissive: [0, 0, 0],
                        diffuse: [0, 0, 0],
                        specular: [0, 0, 0],
                        shininess: 0
                    }),
                    highlightMaterial: new cd(t, {
                        edges: !1,
                        edgeColor: [0, 0, 0],
                        filled: !0,
                        fillColor: [.8, .8, .8],
                        fillAlpha: 1
                    }),
                    pickable: !1,
                    collidable: !1,
                    clippable: !1,
                    visible: !1,
                    scale: [1, 1, .1],
                    rotation: [0, 0, 45]
                }), !1),
                xCurve: t.addChild(new p_(t, {
                    geometry: i.curve,
                    material: r.red,
                    matrix: function() {
                        const e = $c.rotationMat4v(90 * $c.DEGTORAD, [0, 1, 0], $c.identityMat4()),
                            t = $c.rotationMat4v(270 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    backfaces: !0,
                    visible: !1
                }), !1),
                xCurveHandle: t.addChild(new p_(t, {
                    geometry: i.curveHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.rotationMat4v(90 * $c.DEGTORAD, [0, 1, 0], $c.identityMat4()),
                            t = $c.rotationMat4v(270 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    backfaces: !0,
                    visible: !1
                }), !1),
                xCurveArrow1: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.red,
                    matrix: function() {
                        const e = $c.translateMat4c(0, -.07, -.8, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4()),
                            i = $c.rotationMat4v(0 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4($c.mulMat4(e, t, $c.identityMat4()), i, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                xCurveArrow2: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.red,
                    matrix: function() {
                        const e = $c.translateMat4c(0, -.8, -.07, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4()),
                            i = $c.rotationMat4v(90 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4($c.mulMat4(e, t, $c.identityMat4()), i, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yCurve: t.addChild(new p_(t, {
                    geometry: i.curve,
                    material: r.green,
                    rotation: [-90, 0, 0],
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    backfaces: !0,
                    visible: !1
                }), !1),
                yCurveHandle: t.addChild(new p_(t, {
                    geometry: i.curveHandle,
                    material: r.pickable,
                    rotation: [-90, 0, 0],
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    backfaces: !0,
                    visible: !1
                }), !1),
                yCurveArrow1: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.green,
                    matrix: function() {
                        const e = $c.translateMat4c(.07, 0, -.8, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4()),
                            i = $c.rotationMat4v(90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4($c.mulMat4(e, t, $c.identityMat4()), i, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yCurveArrow2: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.green,
                    matrix: function() {
                        const e = $c.translateMat4c(.8, 0, -.07, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4()),
                            i = $c.rotationMat4v(90 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4($c.mulMat4(e, t, $c.identityMat4()), i, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zCurve: t.addChild(new p_(t, {
                    geometry: i.curve,
                    material: r.blue,
                    matrix: $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4()),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zCurveHandle: t.addChild(new p_(t, {
                    geometry: i.curveHandle,
                    material: r.pickable,
                    matrix: $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4()),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zCurveCurveArrow1: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.blue,
                    matrix: function() {
                        const e = $c.translateMat4c(.8, -.07, 0, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4());
                        return $c.mulMat4(e, t, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zCurveArrow2: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.blue,
                    matrix: function() {
                        const e = $c.translateMat4c(.05, -.8, 0, $c.identityMat4()),
                            t = $c.scaleMat4v([.6, .6, .6], $c.identityMat4()),
                            i = $c.rotationMat4v(90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4($c.mulMat4(e, t, $c.identityMat4()), i, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                center: t.addChild(new p_(t, {
                    geometry: new id(t, Im({
                        radius: .05
                    })),
                    material: r.center,
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                xAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.red,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                xAxisArrowHandle: t.addChild(new p_(t, {
                    geometry: i.arrowHeadHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                xAxis: t.addChild(new p_(t, {
                    geometry: i.axis,
                    material: r.red,
                    matrix: function() {
                        const e = $c.translateMat4c(0, .5, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                xAxisHandle: t.addChild(new p_(t, {
                    geometry: i.axisHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.translateMat4c(0, .5, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.green,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yAxisArrowHandle: t.addChild(new p_(t, {
                    geometry: i.arrowHeadHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1,
                    opacity: .2
                }), !1),
                yShaft: t.addChild(new p_(t, {
                    geometry: i.axis,
                    material: r.green,
                    position: [0, -.5, 0],
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yShaftHandle: t.addChild(new p_(t, {
                    geometry: i.axisHandle,
                    material: r.pickable,
                    position: [0, -.5, 0],
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHead,
                    material: r.blue,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [.8, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zAxisArrowHandle: t.addChild(new p_(t, {
                    geometry: i.arrowHeadHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [.8, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !0,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zShaft: t.addChild(new p_(t, {
                    geometry: i.axis,
                    material: r.blue,
                    matrix: function() {
                        const e = $c.translateMat4c(0, .5, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    clippable: !1,
                    pickable: !1,
                    collidable: !0,
                    visible: !1
                }), !1),
                zAxisHandle: t.addChild(new p_(t, {
                    geometry: i.axisHandle,
                    material: r.pickable,
                    matrix: function() {
                        const e = $c.translateMat4c(0, .5, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    clippable: !1,
                    pickable: !0,
                    collidable: !0,
                    visible: !1
                }), !1)
            }, this._affordanceMeshes = {
                planeFrame: t.addChild(new p_(t, {
                    geometry: new id(t, Em({
                        center: [0, 0, 0],
                        radius: 2,
                        tube: .01,
                        radialSegments: 4,
                        tubeSegments: 4,
                        arc: 2 * Math.PI
                    })),
                    material: new ad(t, {
                        ambient: [1, 1, 1],
                        diffuse: [0, 0, 0],
                        emissive: [1, 1, 0]
                    }),
                    highlighted: !0,
                    highlightMaterial: new cd(t, {
                        edges: !1,
                        filled: !0,
                        fillColor: [1, 1, 0],
                        fillAlpha: 1
                    }),
                    pickable: !1,
                    collidable: !1,
                    clippable: !1,
                    visible: !1,
                    scale: [1, 1, 1],
                    rotation: [0, 0, 45]
                }), !1),
                xHoop: t.addChild(new p_(t, {
                    geometry: i.hoop,
                    material: r.red,
                    highlighted: !0,
                    highlightMaterial: r.highlightRed,
                    matrix: function() {
                        const e = $c.rotationMat4v(90 * $c.DEGTORAD, [0, 1, 0], $c.identityMat4()),
                            t = $c.rotationMat4v(270 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yHoop: t.addChild(new p_(t, {
                    geometry: i.hoop,
                    material: r.green,
                    highlighted: !0,
                    highlightMaterial: r.highlightGreen,
                    rotation: [-90, 0, 0],
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zHoop: t.addChild(new p_(t, {
                    geometry: i.hoop,
                    material: r.blue,
                    highlighted: !0,
                    highlightMaterial: r.highlightBlue,
                    matrix: $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4()),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    backfaces: !0,
                    visible: !1
                }), !1),
                xAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHeadBig,
                    material: r.red,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [0, 0, 1], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                yAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHeadBig,
                    material: r.green,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(180 * $c.DEGTORAD, [1, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1),
                zAxisArrow: t.addChild(new p_(t, {
                    geometry: i.arrowHeadBig,
                    material: r.blue,
                    matrix: function() {
                        const e = $c.translateMat4c(0, 1.1, 0, $c.identityMat4()),
                            t = $c.rotationMat4v(-90 * $c.DEGTORAD, [.8, 0, 0], $c.identityMat4());
                        return $c.mulMat4(t, e, $c.identityMat4())
                    }(),
                    pickable: !1,
                    collidable: !0,
                    clippable: !1,
                    visible: !1
                }), !1)
            }
        }
        _bindEvents() {
            const e = this;
            var t = !1;
            const i = -1,
                r = 0,
                n = 1,
                s = 2,
                o = 3,
                a = 4,
                l = 5,
                c = this._rootNode;
            var h = null,
                d = null;
            const u = $c.vec2(),
                p = $c.vec3([1, 0, 0]),
                f = $c.vec3([0, 1, 0]),
                _ = $c.vec3([0, 0, 1]),
                m = this._viewer.scene.canvas.canvas,
                g = this._viewer.camera,
                v = this._viewer.scene; {
                const e = $c.vec3([0, 0, 0]);
                var b = -1;
                this._onCameraViewMatrix = v.camera.on("viewMatrix", () => {}), this._onCameraProjMatrix = v.camera.on("projMatrix", () => {}), this._onSceneTick = v.on("tick", () => {
                    var t = Math.abs($c.lenVec3($c.subVec3(v.camera.eye, c.position, e)));
                    if (t !== b) {
                        const e = t / 50 * 10;
                        c.scale = [e, e, e], b = t
                    }
                })
            }
            const y = function() {
                    const e = new Float32Array(2);
                    return function(t) {
                        if (t) {
                            for (var i = t.target, r = 0, n = 0; i.offsetParent;) r += i.offsetLeft, n += i.offsetTop, i = i.offsetParent;
                            e[0] = t.pageX - r, e[1] = t.pageY - n
                        } else t = window.event, e[0] = t.x, e[1] = t.y;
                        return e
                    }
                }(),
                w = function() {
                    const t = $c.mat4();
                    return function(i, r) {
                        return $c.quaternionToMat4(e._rootNode.quaternion, t), $c.transformVec3(t, i, r), $c.normalizeVec3(r), r
                    }
                }();
            var M = function() {
                const e = $c.vec3();
                return function(t) {
                    const i = Math.abs(t[0]);
                    return i > Math.abs(t[1]) && i > Math.abs(t[2]) ? $c.cross3Vec3(t, [0, 1, 0], e) : $c.cross3Vec3(t, [1, 0, 0], e), $c.cross3Vec3(e, t, e), $c.normalizeVec3(e), e
                }
            }();
            const A = function() {
                const t = $c.vec3(),
                    i = $c.vec3(),
                    r = $c.vec4();
                return function(n, s, o) {
                    w(n, r);
                    const a = M(r, s, o);
                    C(s, a, t), C(o, a, i), $c.subVec3(i, t);
                    const l = $c.dotVec3(i, r);
                    e._pos[0] += r[0] * l, e._pos[1] += r[1] * l, e._pos[2] += r[2] * l, e._rootNode.position = e._pos, e.sectionPlane && (e.sectionPlane.pos = e._pos)
                }
            }();
            var x = function() {
                    const t = $c.vec4(),
                        i = $c.vec4(),
                        r = $c.vec4(),
                        n = $c.vec4();
                    return function(s, o, a) {
                        if (w(s, n), !(C(o, n, t) && C(a, n, i))) {
                            const e = M(n, o, a);
                            C(o, e, t, 1), C(a, e, i, 1);
                            var l = $c.dotVec3(t, n);
                            t[0] -= l * n[0], t[1] -= l * n[1], t[2] -= l * n[2], l = $c.dotVec3(i, n), i[0] -= l * n[0], i[1] -= l * n[1], i[2] -= l * n[2]
                        }
                        $c.normalizeVec3(t), $c.normalizeVec3(i), l = $c.dotVec3(t, i), l = $c.clamp(l, -1, 1);
                        var c = Math.acos(l) * $c.RADTODEG;
                        $c.cross3Vec3(t, i, r), $c.dotVec3(r, n) < 0 && (c = -c), e._rootNode.rotate(s, c), P()
                    }
                }(),
                C = function() {
                    const t = $c.vec4([0, 0, 0, 1]),
                        i = $c.mat4();
                    return function(r, n, s, o) {
                        o = o || 0, t[0] = r[0] / m.width * 2 - 1, t[1] = -(r[1] / m.height * 2 - 1), t[2] = 0, t[3] = 1, $c.mulMat4(g.projMatrix, g.viewMatrix, i), $c.inverseMat4(i), $c.transformVec4(i, t, t), $c.mulVec4Scalar(t, 1 / t[3]);
                        var a = g.eye;
                        $c.subVec4(t, a, t);
                        const l = e._sectionPlane.pos;
                        var c = -$c.dotVec3(l, n) - o,
                            h = $c.dotVec3(n, t);
                        if (Math.abs(h) > .005) {
                            var d = -($c.dotVec3(n, a) + c) / h;
                            return $c.mulVec3Scalar(t, d, s), $c.addVec3(s, a), $c.subVec3(s, l, s), !0
                        }
                        return !1
                    }
                }();
            const P = function() {
                const t = $c.vec3(),
                    i = $c.mat4();
                return function() {
                    e.sectionPlane && ($c.quaternionToMat4(c.quaternion, i), $c.transformVec3(i, [0, 0, 1], t), e._sectionPlane.dir = t)
                }
            }();
            var k, E = !1;
            this._onCameraControlHover = this._viewer.cameraControl.on("hoverEnter", e => {
                if (!this._visible) return;
                if (E) return;
                var c;
                switch (t = !1, k && (k.visible = !1), e.entity.id) {
                    case this._displayMeshes.xAxisArrowHandle.id:
                    case this._displayMeshes.xAxisHandle.id:
                        c = this._affordanceMeshes.xAxisArrow, h = r;
                        break;
                    case this._displayMeshes.yAxisArrowHandle.id:
                    case this._displayMeshes.yShaftHandle.id:
                        c = this._affordanceMeshes.yAxisArrow, h = n;
                        break;
                    case this._displayMeshes.zAxisArrowHandle.id:
                    case this._displayMeshes.zAxisHandle.id:
                        c = this._affordanceMeshes.zAxisArrow, h = s;
                        break;
                    case this._displayMeshes.xCurveHandle.id:
                        c = this._affordanceMeshes.xHoop, h = o;
                        break;
                    case this._displayMeshes.yCurveHandle.id:
                        c = this._affordanceMeshes.yHoop, h = a;
                        break;
                    case this._displayMeshes.zCurveHandle.id:
                        c = this._affordanceMeshes.zHoop, h = l;
                        break;
                    default:
                        return void(h = i)
                }
                c && (c.visible = !0), k = c, t = !0
            }), this._onCameraControlHoverLeave = this._viewer.cameraControl.on("hoverOut", e => {
                this._visible && (k && (k.visible = !1), k = null, h = i)
            }), m.addEventListener("mousedown", this._canvasMouseDownListener = e => {
                if (e.preventDefault(), this._visible && t) switch (this._viewer.cameraControl.pointerEnabled = !1, e.which) {
                    case 1:
                        E = !0;
                        var i = y(e);
                        d = h, u[0] = i[0], u[1] = i[1]
                }
            }), m.addEventListener("mousemove", this._canvasMouseMoveListener = e => {
                if (!this._visible) return;
                if (!E) return;
                var t = y(e);
                const i = t[0],
                    c = t[1];
                switch (d) {
                    case r:
                        A(p, u, t);
                        break;
                    case n:
                        A(f, u, t);
                        break;
                    case s:
                        A(_, u, t);
                        break;
                    case o:
                        x(p, u, t);
                        break;
                    case a:
                        x(f, u, t);
                        break;
                    case l:
                        x(_, u, t)
                }
                u[0] = i, u[1] = c
            }), m.addEventListener("mouseup", this._canvasMouseUpListener = e => {
                this._visible && (this._viewer.cameraControl.pointerEnabled = !0, E && (e.which, E = !1, t = !1))
            }), m.addEventListener("wheel", this._canvasWheelListener = e => {
                if (this._visible) Math.max(-1, Math.min(1, 40 * -e.deltaY))
            })
        }
        _destroy() {
            this._unbindEvents(), this._destroyNodes()
        }
        _unbindEvents() {
            const e = this._viewer,
                t = e.scene,
                i = t.canvas.canvas,
                r = e.camera,
                n = e.cameraControl;
            t.off(this._onSceneTick), i.removeEventListener("mousedown", this._canvasMouseDownListener), i.removeEventListener("mousemove", this._canvasMouseMoveListener), i.removeEventListener("mouseup", this._canvasMouseUpListener), i.removeEventListener("wheel", this._canvasWheelListener), r.off(this._onCameraViewMatrix), r.off(this._onCameraProjMatrix), n.off(this._onCameraControlHover), n.off(this._onCameraControlHoverLeave)
        }
        _destroyNodes() {
            this._setSectionPlane(null), this._rootNode.destroy(), this._displayMeshes = {}, this._affordanceMeshes = {}
        }
    }
    class Bm {
        constructor(e, t, i) {
            this.id = i.id, this._sectionPlane = i, this._mesh = new p_(t, {
                id: i.id,
                geometry: new id(t, rd({
                    xSize: .5,
                    ySize: .5,
                    zSize: .001
                })),
                material: new ad(t, {
                    emissive: [1, 1, 1],
                    diffuse: [0, 0, 0],
                    backfaces: !1
                }),
                edgeMaterial: new dd(t, {
                    edgeColor: [0, 0, 0],
                    edgeAlpha: 1,
                    edgeWidth: 1
                }),
                highlightMaterial: new cd(t, {
                    fill: !0,
                    fillColor: [.5, 1, .5],
                    fillAlpha: .7,
                    edges: !0,
                    edgeColor: [0, 0, 0],
                    edgeAlpha: 1,
                    edgeWidth: 1
                }),
                selectedMaterial: new cd(t, {
                    fill: !0,
                    fillColor: [0, 0, 1],
                    fillAlpha: .7,
                    edges: !0,
                    edgeColor: [1, 0, 0],
                    edgeAlpha: 1,
                    edgeWidth: 1
                }),
                highlighted: !0,
                scale: [3, 3, 3],
                position: [0, 0, 0],
                rotation: [0, 0, 0],
                opacity: .3,
                edges: !0
            }); {
                const e = $c.vec3([0, 0, 0]),
                    t = $c.vec3(),
                    i = $c.vec3([0, 0, 1]),
                    r = $c.vec4(4),
                    n = $c.vec3(),
                    s = () => {
                        const s = this._sectionPlane.scene.center,
                            o = [-this._sectionPlane.dir[0], -this._sectionPlane.dir[1], -this._sectionPlane.dir[2]];
                        $c.subVec3(s, this._sectionPlane.pos, e);
                        const a = -$c.dotVec3(o, e);
                        $c.normalizeVec3(o), $c.mulVec3Scalar(o, a, t);
                        const l = $c.vec3PairToQuaternion(i, this._sectionPlane.dir, r);
                        n[0] = .1 * t[0], n[1] = .1 * t[1], n[2] = .1 * t[2], this._mesh.quaternion = l, this._mesh.position = n
                    };
                this._onSectionPlanePos = this._sectionPlane.on("pos", s), this._onSectionPlaneDir = this._sectionPlane.on("dir", s)
            }
            this._highlighted = !1, this._selected = !1
        }
        setHighlighted(e) {
            this._highlighted = !!e, this._mesh.highlighted = this._highlighted, this._mesh.highlightMaterial.fillColor = e ? [0, .7, 0] : [0, 0, 0]
        }
        getHighlighted() {
            return this._highlighted
        }
        setSelected(e) {
            this._selected = !!e, this._mesh.edgeMaterial.edgeWidth = e ? 3 : 1, this._mesh.highlightMaterial.edgeWidth = e ? 3 : 1
        }
        getSelected() {
            return this._selected
        }
        destroy() {
            this._sectionPlane.off(this._onSectionPlanePos), this._sectionPlane.off(this._onSectionPlaneDir), this._mesh.destroy()
        }
    }
    class jm {
        constructor(e, t) {
            if (!(t.onHoverEnterPlane && t.onHoverLeavePlane && t.onClickedNothing && t.onClickedPlane)) throw "Missing config(s): onHoverEnterPlane, onHoverLeavePlane, onClickedNothing || onClickedPlane";
            this.plugin = e, this._viewer = e.viewer, this._onHoverEnterPlane = t.onHoverEnterPlane, this._onHoverLeavePlane = t.onHoverLeavePlane, this._onClickedNothing = t.onClickedNothing, this._onClickedPlane = t.onClickedPlane, this._visible = !0, this._planes = {}, this._canvas = t.overviewCanvas, this._scene = new md({
                canvasId: this._canvas.id,
                transparent: !0
            }), this._scene.clearLights(), new $h(this._scene, {
                dir: [.4, -.4, .8],
                color: [.8, 1, 1],
                intensity: 1,
                space: "view"
            }), new $h(this._scene, {
                dir: [-.8, -.3, -.4],
                color: [.8, .8, .8],
                intensity: 1,
                space: "view"
            }), new $h(this._scene, {
                dir: [.8, -.6, -.8],
                color: [1, 1, 1],
                intensity: 1,
                space: "view"
            }), this._scene.camera, this._scene.camera.perspective.fov = 70, this._zUp = !1; {
                const e = this._scene.camera,
                    t = $c.rotationMat4c(-90 * $c.DEGTORAD, 1, 0, 0),
                    i = $c.vec3(),
                    r = $c.vec3(),
                    n = $c.vec3();
                this._synchCamera = () => {
                    const s = this._viewer.camera.eye,
                        o = this._viewer.camera.look,
                        a = this._viewer.camera.up;
                    $c.mulVec3Scalar($c.normalizeVec3($c.subVec3(s, o, i)), 7), this._zUp ? ($c.transformVec3(t, i, r), $c.transformVec3(t, a, n), e.look = [0, 0, 0], e.eye = $c.transformVec3(t, i, r), e.up = $c.transformPoint3(t, a, n)) : (e.look = [0, 0, 0], e.eye = i, e.up = a)
                }
            }
            this._onViewerCameraMatrix = this._viewer.camera.on("matrix", this._synchCamera), this._onViewerCameraWorldAxis = this._viewer.camera.on("worldAxis", this._synchCamera), this._onViewerCameraFOV = this._viewer.camera.perspective.on("fov", e => {
                this._scene.camera.perspective.fov = e
            }), this._onViewerCameraProjection = this._viewer.camera.on("projection", e => {
                this._scene.camera.projection = e
            });
            var i = null;
            this._onInputMouseMove = this._scene.input.on("mousemove", e => {
                const t = this._scene.pick({
                    canvasPos: e
                });
                if (t) {
                    if (!i || t.entity.id !== i.id) {
                        if (i) {
                            this._planes[i.id] && this._onHoverLeavePlane(i.id)
                        }
                        i = t.entity, this._planes[i.id] && this._onHoverEnterPlane(i.id)
                    }
                } else i && (this._onHoverLeavePlane(i.id), i = null)
            }), this._scene.canvas.canvas.addEventListener("mouseup", this._onCanvasMouseUp = () => {
                if (i) {
                    this._planes[i.id] && this._onClickedPlane(i.id)
                } else this._onClickedNothing()
            }), this._scene.canvas.canvas.addEventListener("mouseout", this._onCanvasMouseOut = () => {
                i && (this._onHoverLeavePlane(i.id), i = null)
            }), this.setVisible(t.overviewVisible)
        }
        addSectionPlane(e) {
            this._planes[e.id] = new Bm(this, this._scene, e)
        }
        setPlaneHighlighted(e, t) {
            const i = this._planes[e];
            i && i.setHighlighted(t)
        }
        setPlaneSelected(e, t) {
            const i = this._planes[e];
            i && i.setSelected(t)
        }
        removeSectionPlane(e) {
            const t = this._planes[e.id];
            t && (t.destroy(), delete this._planes[e.id])
        }
        setVisible(e = !0) {
            this._visible = e, this._canvas.style.visibility = e ? "visible" : "hidden"
        }
        getVisible() {
            return this._visible
        }
        destroy() {
            this._viewer.camera.off(this._onViewerCameraMatrix), this._viewer.camera.off(this._onViewerCameraWorldAxis), this._viewer.camera.perspective.off(this._onViewerCameraFOV), this._viewer.camera.off(this._onViewerCameraProjection), this._scene.input.off(this._onInputMouseMove), this._scene.canvas.canvas.removeEventListener("mouseup", this._onCanvasMouseUp), this._scene.canvas.canvas.removeEventListener("mouseout", this._onCanvasMouseOut), this._scene.destroy()
        }
    }
    const Lm = $c.AABB3(),
        Rm = $c.vec3();
    class Om extends Af {
        constructor(e, t = {}) {
            if (super("SectionPlanes", e), this._freeControls = [], this._sectionPlanes = e.scene.sectionPlanes, this._controls = {}, this._shownControlId = null, t.overviewCanvasId) {
                const e = document.getElementById(t.overviewCanvasId);
                e ? this._overview = new jm(this, {
                    overviewCanvas: e,
                    visible: t.overviewVisible,
                    onHoverEnterPlane: e => {
                        this._overview.setPlaneHighlighted(e, !0)
                    },
                    onHoverLeavePlane: e => {
                        this._overview.setPlaneHighlighted(e, !1)
                    },
                    onClickedPlane: e => {
                        if (this.getShownControl() === e) return void this.hideControl();
                        this.showControl(e);
                        const t = this.sectionPlanes[e].pos;
                        Lm.set(this.viewer.scene.aabb), $c.getAABB3Center(Lm, Rm), Lm[0] += t[0] - Rm[0], Lm[1] += t[1] - Rm[1], Lm[2] += t[2] - Rm[2], Lm[3] += t[0] - Rm[0], Lm[4] += t[1] - Rm[1], Lm[5] += t[2] - Rm[2], this.viewer.cameraFlight.flyTo({
                            aabb: Lm,
                            fitFOV: 65
                        })
                    },
                    onClickedNothing: () => {
                        this.hideControl()
                    }
                }) : this.error("Can't find overview canvas: '" + t.overviewCanvasId + "' - will create plugin without overview")
            } else this.error("Config missing: overviewCanvasId - will create plugin without overview");
            this._onSceneSectionPlaneCreated = e.scene.on("sectionPlaneCreated", e => {
                this._sectionPlaneCreated(e)
            })
        }
        setOverviewVisible(e) {
            this._overview && this._overview.setVisible(e)
        }
        getOverviewVisible() {
            if (this._overview) return this._overview.getVisible()
        }
        get sectionPlanes() {
            return this._sectionPlanes
        }
        createSectionPlane(e = {}) {
            return void 0 !== e.id && null !== e.id && this.viewer.scene.components[e.id] && (this.error("Viewer component with this ID already exists: " + e.id), delete e.id), new km(this.viewer.scene, {
                id: e.id,
                pos: e.pos,
                dir: e.dir,
                active: !0
            })
        }
        _sectionPlaneCreated(e) {
            const t = this._freeControls.length > 0 ? this._freeControls.pop() : new Sm(this);
            t._setSectionPlane(e), t.setVisible(!1), this._controls[e.id] = t, this._overview && this._overview.addSectionPlane(e), e.once("destroyed", () => {
                this._sectionPlaneDestroyed(e)
            })
        }
        flipSectionPlanes() {
            const e = this.viewer.scene.sectionPlanes;
            for (let t in e) {
                e[t].flipDir()
            }
        }
        showControl(e) {
            const t = this._controls[e];
            t ? (this.hideControl(), t.setVisible(!0), this._overview && this._overview.setPlaneSelected(e, !0), this._shownControlId = e) : this.error("Control not found: " + e)
        }
        getShownControl() {
            return this._shownControlId
        }
        hideControl() {
            for (var e in this._controls) this._controls.hasOwnProperty(e) && (this._controls[e].setVisible(!1), this._overview && this._overview.setPlaneSelected(e, !1));
            this._shownControlId = null
        }
        destroySectionPlane(e) {
            var t = this.viewer.scene.sectionPlanes[e];
            t ? (this._sectionPlaneDestroyed(t), t.destroy(), e === this._shownControlId && (this._shownControlId = null)) : this.error("SectionPlane not found: " + e)
        }
        _sectionPlaneDestroyed(e) {
            this._overview && this._overview.removeSectionPlane(e);
            const t = this._controls[e.id];
            t && (t.setVisible(!1), t._setSectionPlane(null), delete this._controls[e.id], this._freeControls.push(t))
        }
        clear() {
            const e = Object.keys(this._sectionPlanes);
            for (var t = 0, i = e.length; t < i; t++) this.destroySectionPlane(e[t])
        }
        send(e, t) {
            switch (e) {
                case "snapshotStarting":
                    for (let e in this._controls) this._controls.hasOwnProperty(e) && this._controls[e].setCulled(!0);
                    break;
                case "snapshotFinished":
                    for (let e in this._controls) this._controls.hasOwnProperty(e) && this._controls[e].setCulled(!1);
                    break;
                case "clearSectionPlanes":
                    this.clear()
            }
        }
        destroy() {
            this.clear(), this._overview && this._overview.destroy(), this._destroyFreeControls(), super.destroy()
        }
        _destroyFreeControls() {
            for (var e = this._freeControls.pop(); e;) e._destroy(), e = this._freeControls.pop();
            this.viewer.scene.off(this._onSceneSectionPlaneCreated)
        }
    }
    const Fm = $c.vec3();
    class Nm extends Af {
        constructor(e, t = {}) {
            super("BCFViewpoints", e, t), this.originatingSystem = t.originatingSystem || "xeokit.io", this.authoringTool = t.authoringTool || "xeokit.io"
        }
        getViewpoint(e = {}) {
            const t = this.viewer.scene,
                i = t.camera,
                r = t.realWorldOffset,
                n = !0 === e.reverseClippingPlanes;
            let s = {},
                o = $c.normalizeVec3($c.subVec3(i.look, i.eye, $c.vec3())),
                a = i.eye,
                l = i.up;
            i.yUp && (o = Vm(o), a = Vm(a), l = Vm(l));
            const c = Um($c.addVec3(a, r));
            "ortho" === i.projection ? s.orthogonal_camera = {
                camera_view_point: c,
                camera_direction: Um(o),
                camera_up_vector: Um(l),
                view_to_world_scale: i.ortho.scale
            } : s.perspective_camera = {
                camera_view_point: c,
                camera_direction: Um(o),
                camera_up_vector: Um(l),
                field_of_view: i.perspective.fov
            };
            const h = t.sectionPlanes;
            for (let e in h)
                if (h.hasOwnProperty(e)) {
                    let t, o = h[e],
                        a = o.pos;
                    t = n ? $c.negateVec3(o.dir, $c.vec3()) : o.dir, i.yUp && (a = Vm(a), t = Vm(t)), $c.addVec3(a, r), a = Um(a), t = Um(t), s.clipping_planes || (s.clipping_planes = []), s.clipping_planes.push({
                        location: a,
                        direction: t
                    })
                } s.components = {
                visibility: {
                    view_setup_hints: {
                        spaces_visible: !!e.spacesVisible,
                        space_boundaries_visible: !!e.spaceBoundariesVisible,
                        openings_visible: !!e.openingsVisible
                    }
                }
            };
            const d = new Set(t.opacityObjectIds),
                u = new Set(t.xrayedObjectIds),
                p = new Set(t.colorizedObjectIds),
                f = Object.values(t.objects).filter(e => d.has(e.id) || p.has(e.id) || u.has(e.id)).reduce((e, i) => {
                    let r, n = function(e) {
                        let t = "";
                        return t += Math.round(255 * e[0]).toString(16).padStart(2, "0"), t += Math.round(255 * e[1]).toString(16).padStart(2, "0"), t += Math.round(255 * e[2]).toString(16).padStart(2, "0"), t
                    }(i.colorize);
                    return i.xrayed ? (r = 0 === t.xrayMaterial.fillAlpha && 0 !== t.xrayMaterial.edgeAlpha ? .1 : t.xrayMaterial.fillAlpha, r = Math.round(255 * r).toString(16).padStart(2, "0"), n = r + n) : d.has(i.id) && (r = Math.round(255 * i.opacity).toString(16).padStart(2, "0"), n = r + n), e[n] || (e[n] = []), e[n].push({
                        ifc_guid: i.id,
                        originating_system: this.originatingSystem
                    }), e
                }, {}),
                _ = Object.entries(f).map(([e, t]) => ({
                    color: e,
                    components: t
                }));
            s.components.coloring = _;
            const m = t.objectIds,
                g = t.visibleObjects,
                v = t.visibleObjectIds,
                b = m.filter(e => !g[e]),
                y = t.selectedObjectIds;
            return e.defaultInvisible || v.length < b.length ? (s.components.visibility.exceptions = v.map(e => this._objectIdToComponent(e)), s.components.visibility.default_visibility = !1) : (s.components.visibility.exceptions = b.map(e => this._objectIdToComponent(e)), s.components.visibility.default_visibility = !0), s.components.selection = y.map(e => this._objectIdToComponent(e)), !1 !== e.snapshot && (s.snapshot = {
                snapshot_type: "png",
                snapshot_data: this.viewer.getSnapshot({
                    format: "png"
                })
            }), s
        }
        _objectIdToComponent(e) {
            return {
                ifc_guid: e,
                originating_system: this.originatingSystem,
                authoring_tool_id: this.authoringTool
            }
        }
        setViewpoint(e, t = {}) {
            if (!e) return;
            const i = this.viewer,
                r = i.scene,
                n = r.camera,
                s = !1 !== t.rayCast,
                o = !1 !== t.immediate,
                a = !1 !== t.reset,
                l = !!t.updateCompositeObjects,
                c = r.realWorldOffset,
                h = !0 === t.reverseClippingPlanes;
            if (r.clearSectionPlanes(), e.clipping_planes && e.clipping_planes.forEach((function(e) {
                    let t = Hm(e.location, Fm),
                        i = Hm(e.direction, Fm);
                    h && $c.negateVec3(i), $c.subVec3(t, c), n.yUp && (t = zm(t), i = zm(i)), new km(r, {
                        pos: t,
                        dir: i
                    })
                })), a && (r.setObjectsXRayed(r.xrayedObjectIds, !1), r.setObjectsHighlighted(r.highlightedObjectIds, !1), r.setObjectsSelected(r.selectedObjectIds, !1)), e.components) {
                if (e.components.visibility) {
                    e.components.visibility.default_visibility ? (r.setObjectsVisible(r.objectIds, !0), e.components.visibility.exceptions && e.components.visibility.exceptions.forEach(e => {
                        const t = i.scene.objects[e.ifc_guid];
                        t ? t.visible = !1 : r.setObjectsVisible(l ? i.metaScene.getObjectIDsInSubtree(e.ifc_guid) : e.ifc_guid, !1)
                    })) : (r.setObjectsVisible(r.objectIds, !1), e.components.visibility.exceptions && e.components.visibility.exceptions.forEach(e => {
                        const t = i.scene.objects[e.ifc_guid];
                        t ? t.visible = !0 : r.setObjectsVisible(l ? i.metaScene.getObjectIDsInSubtree(e.ifc_guid) : e.ifc_guid, !0)
                    }));
                    const t = e.components.visibility.view_setup_hints;
                    t && (!1 === t.spaces_visible && r.setObjectsVisible(i.metaScene.getObjectIDsByType("IfcSpace"), !1), !1 === t.openings_visible && r.setObjectsVisible(i.metaScene.getObjectIDsByType("IfcOpening"), !1), t.space_boundaries_visible)
                }
                e.components.selection && (r.setObjectsSelected(r.selectedObjectIds, !1), Object.keys(r.models).forEach(() => {
                    e.components.selection.forEach(e => r.setObjectsSelected(l ? i.metaScene.getObjectIDsInSubtree(e.ifc_guid) : e.ifc_guid, !0))
                })), e.components.coloring && e.components.coloring.forEach(e => {
                    let t = e.components.map(e => e.ifc_guid),
                        i = e.color;
                    if (8 === i.length) {
                        let e = parseInt(i.substring(0, 2), 16) / 256;
                        i = i.substring(2), r.setObjectsOpacity(t, e)
                    }
                    let n = [parseInt(i.substring(0, 2), 16) / 256, parseInt(i.substring(2, 4), 16) / 256, parseInt(i.substring(4, 6), 16) / 256];
                    r.setObjectsColorized(t, n)
                })
            }
            if (e.perspective_camera || e.orthogonal_camera) {
                let a, l, h, d;
                if (e.perspective_camera ? (a = Hm(e.perspective_camera.camera_view_point, Fm), l = Hm(e.perspective_camera.camera_direction, Fm), h = Hm(e.perspective_camera.camera_up_vector, Fm), n.perspective.fov = e.perspective_camera.field_of_view, d = "perspective") : (a = Hm(e.orthogonal_camera.camera_view_point, Fm), l = Hm(e.orthogonal_camera.camera_direction, Fm), h = Hm(e.orthogonal_camera.camera_up_vector, Fm), n.ortho.scale = e.orthogonal_camera.view_to_world_scale, d = "ortho"), $c.subVec3(a, c), n.yUp && (a = zm(a), l = zm(l), h = zm(h)), s) {
                    const e = r.pick({
                        pickSurface: !0,
                        origin: a,
                        direction: l
                    });
                    l = e ? e.worldPos : $c.addVec3(a, l, Fm)
                } else l = $c.addVec3(a, l, Fm);
                o ? (n.eye = a, n.look = l, n.up = h, n.projection = d) : i.cameraFlight.flyTo({
                    eye: a,
                    look: l,
                    up: h,
                    duration: t.duration,
                    projection: d
                })
            }
        }
        destroy() {
            super.destroy()
        }
    }

    function Um(e) {
        return {
            x: e[0],
            y: e[1],
            z: e[2]
        }
    }

    function Hm(e, t) {
        return (t = new Float64Array(3))[0] = e.x, t[1] = e.y, t[2] = e.z, t
    }

    function Vm(e) {
        return new Float64Array([e[0], -e[2], e[1]])
    }

    function zm(e) {
        return new Float64Array([e[0], e[2], -e[1]])
    }
    const $m = $c.vec4(),
        Wm = $c.vec4();
    class qm extends Wc {
        constructor(e, t) {
            super(e, t), this._entity = null, this._visible = null, this._worldPos = $c.vec3(), this._rtcCenter = $c.vec3(), this._rtcPos = $c.vec3(), this._viewPos = $c.vec3(), this._canvasPos = $c.vec2(), this._occludable = !1, this._onCameraViewMatrix = this.scene.camera.on("matrix", () => {
                this._viewPosDirty = !0, this._needUpdate()
            }), this._onCameraProjMatrix = this.scene.camera.on("projMatrix", () => {
                this._canvasPosDirty = !0, this._needUpdate()
            }), this._onEntityDestroyed = null, this._onEntityModelDestroyed = null, this._renderer.addMarker(this), this.entity = t.entity, this.worldPos = t.worldPos, this.occludable = t.occludable
        }
        _update() {
            if (this._viewPosDirty && ($c.transformPoint3(this.scene.camera.viewMatrix, this._worldPos, this._viewPos), this._viewPosDirty = !1, this._canvasPosDirty = !0, this.fire("viewPos", this._viewPos)), this._canvasPosDirty) {
                $m.set(this._viewPos), $m[3] = 1, $c.transformPoint4(this.scene.camera.projMatrix, $m, Wm);
                const e = this.scene.canvas.boundary;
                this._canvasPos[0] = Math.floor((1 + Wm[0] / Wm[3]) * e[2] / 2), this._canvasPos[1] = Math.floor((1 - Wm[1] / Wm[3]) * e[3] / 2), this._canvasPosDirty = !1, this.fire("canvasPos", this._canvasPos)
            }
        }
        _setVisible(e) {
            this._visible, this._visible = e, this.fire("visible", this._visible)
        }
        set entity(e) {
            if (this._entity) {
                if (this._entity === e) return;
                null !== this._onEntityDestroyed && (this._entity.off(this._onEntityDestroyed), this._onEntityDestroyed = null), null !== this._onEntityModelDestroyed && (this._entity.model.off(this._onEntityModelDestroyed), this._onEntityModelDestroyed = null)
            }
            this._entity = e, this._entity && (this._entity instanceof hu ? this._onEntityModelDestroyed = this._entity.model.once("destroyed", () => {
                this._entity = null, this._onEntityModelDestroyed = null
            }) : this._onEntityDestroyed = this._entity.once("destroyed", () => {
                this._entity = null, this._onEntityDestroyed = null
            })), this.fire("entity", this._entity, !0)
        }
        get entity() {
            return this._entity
        }
        set occludable(e) {
            (e = !!e) !== this._occludable && (this._occludable = e)
        }
        get occludable() {
            return this._occludable
        }
        set worldPos(e) {
            this._worldPos.set(e || [0, 0, 0]), Jc(this._worldPos, this._rtcCenter, this._rtcPos), this._occludable && this._renderer.markerWorldPosUpdated(this), this._viewPosDirty = !0, this.fire("worldPos", this._worldPos)
        }
        get worldPos() {
            return this._worldPos
        }
        get rtcCenter() {
            return this._rtcCenter
        }
        get rtcPos() {
            return this._rtcPos
        }
        get viewPos() {
            return this._update(), this._viewPos
        }
        get canvasPos() {
            return this._update(), this._canvasPos
        }
        get visible() {
            return !!this._visible
        }
        destroy() {
            this.fire("destroyed", !0), this.scene.camera.off(this._onCameraViewMatrix), this.scene.camera.off(this._onCameraProjMatrix), this._entity && (null !== this._onEntityDestroyed && this._entity.off(this._onEntityDestroyed), null !== this._onEntityModelDestroyed && this._entity.model.off(this._onEntityModelDestroyed)), this._renderer.removeMarker(this), super.destroy()
        }
    }
    class Gm extends qm {
        constructor(e, t) {
            if (super(e, t), this.plugin = t.plugin, this._container = t.container, !this._container) throw "config missing: container";
            if (!t.markerElement && !t.markerHTML) throw "config missing: need either markerElement or markerHTML";
            if (!t.labelElement && !t.labelHTML) throw "config missing: need either labelElement or labelHTML";
            this._htmlDirty = !1, t.markerElement ? (this._marker = t.markerElement, this._marker.addEventListener("click", this._onMouseClickedExternalMarker = () => {
                this.plugin.fire("markerClicked", this)
            }), this._marker.addEventListener("mouseenter", this._onMouseEnterExternalMarker = () => {
                this.plugin.fire("markerMouseEnter", this)
            }), this._marker.addEventListener("mouseleave", this._onMouseLeaveExternalMarker = () => {
                this.plugin.fire("markerMouseLeave", this)
            }), this._markerExternal = !0) : (this._markerHTML = t.markerHTML, this._htmlDirty = !0, this._markerExternal = !1), t.labelElement ? (this._label = t.labelElement, this._labelExternal = !0) : (this._labelHTML = t.labelHTML, this._htmlDirty = !0, this._labelExternal = !1), this._markerShown = !!t.markerShown, this._labelShown = !!t.labelShown, this._values = t.values || {}, this._layoutDirty = !0, this._visibilityDirty = !0, this._buildHTML(), this._onTick = this.scene.on("tick", () => {
                this._htmlDirty && (this._buildHTML(), this._htmlDirty = !1, this._layoutDirty = !0, this._visibilityDirty = !0), (this._layoutDirty || this._visibilityDirty) && (this._markerShown || this._labelShown) && (this._updatePosition(), this._layoutDirty = !1), this._visibilityDirty && (this._marker.style.visibility = this.visible && this._markerShown ? "visible" : "hidden", this._label.style.visibility = this.visible && this._markerShown && this._labelShown ? "visible" : "hidden", this._visibilityDirty = !1)
            }), this.on("canvasPos", () => {
                this._layoutDirty = !0
            }), this.on("visible", () => {
                this._visibilityDirty = !0
            }), this.setMarkerShown(!1 !== t.markerShown), this.setLabelShown(t.labelShown), this.eye = t.eye ? t.eye.slice() : null, this.look = t.look ? t.look.slice() : null, this.up = t.up ? t.up.slice() : null, this.projection = t.projection
        }
        _buildHTML() {
            if (!this._markerExternal) {
                this._marker && (this._container.removeChild(this._marker), this._marker = null);
                let e = this._markerHTML || "<p></p>";
                Ic.isArray(e) && (e = e.join("")), e = this._renderTemplate(e);
                const t = document.createRange().createContextualFragment(e);
                this._marker = t.firstChild, this._container.appendChild(this._marker), this._marker.style.visibility = this._markerShown ? "visible" : "hidden", this._marker.addEventListener("click", () => {
                    this.plugin.fire("markerClicked", this)
                }), this._marker.addEventListener("mouseenter", () => {
                    this.plugin.fire("markerMouseEnter", this)
                }), this._marker.addEventListener("mouseleave", () => {
                    this.plugin.fire("markerMouseLeave", this)
                })
            }
            if (!this._labelExternal) {
                this._label && (this._container.removeChild(this._label), this._label = null);
                let e = this._labelHTML || "<p></p>";
                Ic.isArray(e) && (e = e.join("")), e = this._renderTemplate(e);
                const t = document.createRange().createContextualFragment(e);
                this._label = t.firstChild, this._container.appendChild(this._label), this._label.style.visibility = this._markerShown && this._labelShown ? "visible" : "hidden"
            }
        }
        _updatePosition() {
            const e = this.scene.canvas.boundary,
                t = e[0],
                i = e[1],
                r = this.canvasPos;
            this._marker.style.left = Math.floor(t + r[0]) - 12 + "px", this._marker.style.top = Math.floor(i + r[1]) - 12 + "px", this._marker.style["z-index"] = 90005 + Math.floor(10 * this._viewPos[2]) + 1;
            this._label.style.left = 20 + Math.floor(t + r[0] + 20) + "px", this._label.style.top = Math.floor(i + r[1] + -17) + "px", this._label.style["z-index"] = 90005 + Math.floor(10 * this._viewPos[2]) + 1
        }
        _renderTemplate(e) {
            for (var t in this._values)
                if (this._values.hasOwnProperty(t)) {
                    const i = this._values[t];
                    e = e.replace(new RegExp("{{" + t + "}}", "g"), i)
                } return e
        }
        setMarkerShown(e) {
            e = !!e, this._markerShown !== e && (this._markerShown = e, this._visibilityDirty = !0)
        }
        getMarkerShown() {
            return this._markerShown
        }
        setLabelShown(e) {
            e = !!e, this._labelShown !== e && (this._labelShown = e, this._visibilityDirty = !0)
        }
        getLabelShown() {
            return this._labelShown
        }
        setField(e, t) {
            this._values[e] = t || "", this._htmlDirty = !0
        }
        getField(e) {
            return this._values[e]
        }
        setValues(e) {
            for (var t in e)
                if (e.hasOwnProperty(t)) {
                    const i = e[t];
                    this.setField(t, i)
                }
        }
        getValues() {
            return this._values
        }
        destroy() {
            this._marker && (this._markerExternal ? (this._marker.removeEventListener("click", this._onMouseClickedExternalMarker), this._marker.removeEventListener("mouseenter", this._onMouseEnterExternalMarker), this._marker.removeEventListener("mouseleave", this._onMouseLeaveExternalMarker), this._marker = null) : this._marker.parentNode.removeChild(this._marker)), this._label && (this._labelExternal || this._label.parentNode.removeChild(this._label), this._label = null), this.scene.off(this._onTick), super.destroy()
        }
    }
    const Ym = $c.vec3(),
        Zm = $c.vec3(),
        Xm = $c.vec3();
    class Km extends Af {
        constructor(e, t) {
            super("Annotations", e), this._labelHTML = t.labelHTML || "<div></div>", this._markerHTML = t.markerHTML || "<div></div>", this._container = t.container || document.body, this._values = t.values || {}, this.annotations = {}, this.surfaceOffset = t.surfaceOffset
        }
        send(e, t) {
            switch (e) {
                case "clearAnnotations":
                    this.clear()
            }
        }
        set surfaceOffset(e) {
            null == e && (e = .3), this._surfaceOffset = e
        }
        get surfaceOffset() {
            return this._surfaceOffset
        }
        createAnnotation(e) {
            var t, i;
            if (this.viewer.scene.components[e.id] && (this.error("Viewer component with this ID already exists: " + e.id), delete e.id), e.pickResult = e.pickResult || e.pickRecord, e.pickResult) {
                const r = e.pickResult;
                if (r.worldPos && r.worldNormal) {
                    const e = $c.normalizeVec3(r.worldNormal, Ym),
                        n = $c.mulVec3Scalar(e, this._surfaceOffset, Zm);
                    t = $c.addVec3(r.worldPos, n, Xm), i = r.entity
                } else this.error("Param 'pickResult' does not have both worldPos and worldNormal")
            } else t = e.worldPos, i = e.entity;
            var r = null;
            e.markerElementId && ((r = document.getElementById(e.markerElementId)) || this.error("Can't find DOM element for 'markerElementId' value '" + e.markerElementId + "' - defaulting to internally-generated empty DIV"));
            var n = null;
            e.labelElementId && ((n = document.getElementById(e.labelElementId)) || this.error("Can't find DOM element for 'labelElementId' value '" + e.labelElementId + "' - defaulting to internally-generated empty DIV"));
            const s = new Gm(this.viewer.scene, {
                id: e.id,
                plugin: this,
                entity: i,
                worldPos: t,
                container: this._container,
                markerElement: r,
                labelElement: n,
                markerHTML: e.markerHTML || this._markerHTML,
                labelHTML: e.labelHTML || this._labelHTML,
                occludable: e.occludable,
                values: Ic.apply(e.values, Ic.apply(this._values, {})),
                markerShown: e.markerShown,
                labelShown: e.labelShown,
                eye: e.eye,
                look: e.look,
                up: e.up,
                projection: e.projection
            });
            return this.annotations[s.id] = s, s.on("destroyed", () => {
                delete this.annotations[s.id]
            }), s
        }
        destroyAnnotation(e) {
            var t = this.annotations[e];
            t ? t.destroy() : this.log("Annotation not found: " + e)
        }
        clear() {
            const e = Object.keys(this.annotations);
            for (var t = 0, i = e.length; t < i; t++) this.destroyAnnotation(e[t])
        }
        destroy() {
            this.clear(), super.destroy()
        }
    }
    const {
        mapState: Qm,
        mapGetters: Jm,
        mapMutations: eg
    } = Ma("viewer");
    const tg = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "viewer3d",
                on: {
                    contextmenu: function(t) {
                        return e.onClick(t, !0)
                    },
                    click: function(t) {
                        return !t.type.indexOf("key") && e._k(t.keyCode, "left", 37, t.key, ["Left", "ArrowLeft"]) ? null : "button" in t && 0 !== t.button ? null : e.onClick(t, !1)
                    }
                }
            }, [i("canvas", {
                staticClass: "viewer3d__viewer",
                attrs: {
                    id: e.canvasId
                }
            }), e._v(" "), i("canvas", {
                staticClass: "viewer3d__overview",
                attrs: {
                    id: "overview"
                },
                on: {
                    mouseup: e.onOverviewMouseUp
                }
            }), e._v(" "), e.navCubeVisible ? i("canvas", {
                staticClass: "viewer3d__overview",
                attrs: {
                    id: "xeokitNavCubeCanvas"
                }
            }) : e._e(), e._v(" "), i("div", {
                attrs: {
                    id: "viewer-3d-spinner"
                }
            })])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-ede54590_0", {
            source: ".viewer3d{width:100%;height:100%;position:relative}.viewer3d__viewer{width:100%;height:100%;display:block;touch-action:none}.viewer3d__overview{width:10%;height:15%;position:absolute;bottom:0;right:0}.annotation-marker{width:30px;height:30px;display:flex;align-items:center;justify-content:center;position:absolute;border:1px solid #ffff;border-radius:100%;background-color:#ffff;color:#2f374a;box-shadow:0 5px 10px 0 rgba(0,0,0,.07);visibility:hidden;z-index:0;font-size:.6428571429em}.camera-pivot-marker{color:#2f374a;position:absolute;top:0;width:15px;height:15px;border-radius:100%;border:2px solid #d8d8d8;background:#2f374a;visibility:hidden;z-index:10000;pointer-events:none}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataSpinner: xl
        },
        name: "Viewer3D",
        data: () => ({
            canvasId: "viewer-xeokit-canvas",
            rightClick: !1,
            ctrlOrCmdPressed: !1,
            altPressed: !1,
            xeokit: !0,
            sectionPlanesPlugin: null,
            sectionMode: !1,
            lastViewedSectionPlaneId: null,
            models: new Map,
            gltfLoader: !1,
            xktLoader: !0,
            navCube: null,
            bcfViewpointsPlugin: null,
            annotationsPlugin: !1,
            highlightOnHover: !1,
            selectOnClick: !0,
            navCubeVisible: !0,
            commands: !1,
            hubSubscriptions: !1,

        }),
        created() {
            this.navCubeVisible = !1 !== this.$utils.getCfg().bimdataPlugins.viewer3DNavCube, this.hubSubscriptions = [{
                name: "set-projection-type",
                handler: ({
                    projection: e
                }) => this.changeProjection(e)
            }, {
                name: "set-section-mode",
                handler: ({
                    active: e
                }) => this.setSectionMode(e)
            }, {
                name: "create-section-plane",
                handler: e => this.createSectionPlane(e)
            }, {
                name: "delete-section-plane",
                handler: this.removeActiveSectionPlane
            }, {
                name: "delete-all-section-planes",
                handler: this.deleteAllSectionPlanes
            }, {
                name: "select-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsSelected(e, !0)
            }, {
                name: "deselect-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsSelected(e, !1)
            }, {
                name: "show-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsVisible(e, !0)
            }, {
                name: "hide-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsVisible(e, !1)
            }, {
                name: "highlight-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsHighlighted(e, !0)
            }, {
                name: "unhighlight-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsHighlighted(e, !1)
            }, {
                name: "colorize-objects",
                handler: ({
                    ids: e,
                    color: t
                }) => this.setObjectsColorized(e, t)
            }, {
                name: "set-viewpoint",
                handler: this.setViewpoint
            }, {
                name: "fit-view-objects",
                handler: ({
                    ids: e
                }) => this.fitViewObjects(e)
            }, {
                name: "isolate-objects",
                handler: ({
                    ids: e
                }) => this.setObjectsisolated(e)
            }, {
                name: "unisolate-all-objects",
                handler: this.unIsolateAllObjects
            }, {
                name: "clear-annotations",
                handler: this.clearAnnotations
            }, {
                name: "delete-annotations",
                handler: this.deleteAnnotations
            }, {
                name: "create-annotations",
                handler: this.createAnnotations
            }], this.hubSubscriptions.forEach(e => this.$hub.on(e.name, e.handler)), this.hubSubscriptions.hubCopy = this.$hub
        },
        mounted() {
            this.rightClickMenu && this.registerRightClickMenuActions();
            const e = new Kd({
                canvasId: this.canvasId,
                transparent: !0,
                spinnerElementId: "viewer-3d-spinner"
            });
            e.scene.clearLights();
            const t = Object.values(e.scene.lights).find(e => "AmbientLight" === e.type) || {};
            t.color = [1, 1, 1], t.intensity = .3, new $h(e.scene, {
                id: "keyLight",
                dir: [.8, -.6, -.8],
                color: [1, 1, 1],
                intensity: .8,
                space: "world"
            }), new $h(e.scene, {
                id: "fillLight",
                dir: [-.8, -.4, -.4],
                color: [1, 1, 1],
                intensity: .5,
                space: "world"
            }), new $h(e.scene, {
                id: "rimLight",
                dir: [.2, -.8, .8],
                color: [1, 1, 1],
                intensity: .2,
                space: "world"
            }), e.cameraControl.doublePickFlyTo = !1, e.cameraControl.panRightClick = !1, e.cameraControl.followPointer = !0;
            const i = document.createRange().createContextualFragment("<div class='camera-pivot-marker'></div>").firstChild;
            document.body.appendChild(i), e.cameraControl.pivotElement = i, e.cameraControl.touchDollyRate = .2, e.cameraControl.mouseWheelDollyRate = 60, e.cameraControl.keyboardDollyRate = 20, e.cameraControl.rotationInertia = 0, e.cameraControl.dollyInertia = 0, "fr" == this.$i18n.locale && (e.cameraControl.keyMap = "azerty"), e.scene.highlightMaterial.fillColor = new Float32Array([47 / 255, 55 / 255, 74 / 255]), e.scene.highlightMaterial.fillAlpha = .7, e.scene.xrayMaterial.fillColor = [1, 1, 1], e.scene.xrayMaterial.edgeColor = [0.3, 0.3, 0.3], e.scene.xrayMaterial.fillAlpha = 0, e.scene.xrayMaterial.edgeAlpha = 0.3, this.culling = new Pm(e, {
                maxTreeDepth: 20
            }), this.gltfLoader = new V_(e, {
                objectDefaults: {
                    IfcSpace: {
                        pickable: !1,
                        opacity: .2,
                        colorize: [0, 0, 1]
                    }
                }
            }), this.xktLoader = new fm(e, {
                objectDefaults: {
                    IfcSpace: {
                        pickable: !1,
                        opacity: .2,
                        colorize: [0, 0, 1]
                    }
                }
            }), this.navCubeVisible && (this.navCube = new gm(e, {
                canvasId: "xeokitNavCubeCanvas",
                visible: !1,
                cameraFly: !0,
                cameraFitFOV: 45,
                cameraFlyDuration: .5,
                color: "#FFFFFF"
            }));
            const r = new Om(e, {
                id: "SectionPlanes",
                overviewCanvasId: "overview",
                overviewVisible: !1
            });
            this.bcfViewpointsPlugin = new Nm(e, {
                originatingSystem: "BIMDataViewer/v1.0",
                authoringTool: "BIMData.io"
            }), e.camera.up = [0, 1, 0], e.scene.selectedMaterial.fillAlpha = .1, this.annotationsPlugin = new Km(e, {
                container: document.getElementById(this.canvasId).parentElement
            }), this.annotationsPlugin.on("markerClicked", e => this.$hub.emit("annotation-click", e));
            let n = 400,
                s = !1;
            e.scene.camera.on("matrix", () => {
                n = 400, s || (e.scene.edgeMaterial.edges = !1, s = !0)
            }), e.scene.on("tick", t => {
                s && (n -= t.deltaTime, n <= 0 && s && (e.scene.edgeMaterial.edges = !0, s = !1))
            });
            let o = null;
            this.$watch("selectOnClick", t => {
                t ? o = e.cameraControl.on("picked", e => {
                    setTimeout(() => {
                        this.rightClick || this.onEntityPick({
                            entity: e.entity,
                            ctrlDown: this.ctrlOrCmdPressed,
                            altDown: this.altPressed
                        })
                    })
                }) : e.cameraControl.off(o)
            }, {
                immediate: !0
            });
            let a = null,
                l = null;
            this.$watch("highlightOnHover", t => {
                t ? (a = e.cameraControl.on("hover", e => {
                    e && e.entity && e.entity.isObject && (e.entity.highlighted = !0)
                }), l = e.cameraControl.on("hoverOut", e => {
                    e.entity && e.entity.highlighted && (e.entity.highlighted = !1)
                })) : (e.cameraControl.off(a), e.cameraControl.off(l))
            }, {
                immediate: !0
            }), this.xeokit = e, this.sectionPlanesPlugin = r, this.$watch("ifcs", async (e = [], t = []) => {
                const i = e.filter(e => !t.includes(e)),
                    r = i.map(e => {
                        const t = this.$utils.getObjectsWithRepresentation().find(t => t.ifcId === e.id);
                        return t ? e.metaObjects = t.filter(e => "space" === e.type).map(e => ({
                            id: e.uuid,
                            type: "IfcSpace"
                        })) : (console.error(`Cannot get detailed objects list (structure) of ifc ${e.id}, some feature may not work properly.`), e.metaObjects = []), this.loadModel(e)
                    });
                if (r.length) {
                    let e = await Promise.all(r);
                    this.onModelsLoaded(i, e)
                }
                t.filter(t => !e.includes(t)).forEach(e => {
                    this.models.get(e).destroy(), this.models.delete(e), this.$hub.emit("3d-model-unloaded", {
                        ifc: e
                    })
                })
            }, {
                immediate: !0
            })
        },
        computed: {
            ...Qm({
                ifcs: e => e.selectedIfcs,
                selectedObjectIds: e => e.selectedObjectIds,
                selectionMode: e => e.selectionMode,
                rightClickMenu: e => e.plugins.get("rightClickMenu")
            }),
            ...Jm(["idsByTypeOf", "allIds"])
        },
        methods: {
            ...eg({
                setSelectOption: "SET_SELECTION_MODE",
                incrementSpinnerProcesses: "INCREMENT_SPINNER_PROCESSES",
                decrementSpinnerProcesses: "DECREMENT_SPINNER_PROCESSES"
            }),
            onEntityPick({
                entity: e,
                ctrlDown: t = !1,
                altDown: i = !1
            }) {
                const r = e.id,
                    n = i || "type" === this.selectionMode ? new Set(this.idsByTypeOf([r])) : new Set([r]),
                    s = !e.selected;
                if (!t) {
                    const e = Set.difference(this.selectedObjectIds, n);
                    e.size && this.$hub.emit(s ? "deselect-objects" : "select-objects", {
                        ids: e,
                        trigger: this
                    })
                }
                this.$hub.emit(s ? "select-objects" : "deselect-objects", {
                    ids: s ? Set.difference(n, this.selectedObjectIds) : Set.intersection(n, this.selectedObjectIds),
                    trigger: this
                })
            },
            onClick(e, t) {
                this.ctrlOrCmdPressed = e.metaKey || e.ctrlKey, this.altPressed = e.altKey, this.rightClick = t
            },
            loadModel(e) {
                return this.incrementSpinnerProcesses(), e.world_position && (this.xeokit.scene.realWorldOffset = e.world_position, console.log("offset set to " + this.xeokit.scene.realWorldOffset)), new Promise((t, i) => {
                    const r = e.xkt_file ? this.xktLoader : this.gltfLoader,
                        n = e.xkt_file || e.gltf_file;
                    try {
                        const i = r.load({
                            src: n,
                            edges: !0,
                            metaModelData: e.metaObjects.length ? {
                                metaObjects: e.metaObjects
                            } : void 0
                        });
                        this.models.set(e, i), i.once("loaded", () => {
                            this.decrementSpinnerProcesses(), t(i)
                        })
                    } catch (e) {
                        this.decrementSpinnerProcesses(), i(e)
                    }
                })
            },
            onModelsLoaded(e, t) {
                !this.sectionMode && this.navCubeVisible && this.navCube.setVisible(!0);
                const i = this.xeokit.cameraControl.pivotPos;
                0 === i[0] && 0 === i[1] && 0 === i[2] && (this.xeokit.cameraControl.pivotPos = this.xeokit.scene.center), this.xeokit.cameraFlight.flyTo({
                    duration: 1
                }), setTimeout(() => {
                    e.forEach((e, i) => this.$hub.emit("3d-model-loaded", {
                        ifc: e,
                        model: t[i]
                    }))
                }, 1e3)
            },
            changeProjection(e) {
                ["perspective", "ortho"].includes(e) ? (this.xeokit.cameraControl.firstPerson = !1, this.xeokit.cameraFlight.flyTo({
                    projection: e,
                    duration: .5
                })) : "firstperson" === e && ("ortho" === this.xeokit.camera.projection && this.xeokit.cameraFlight.flyTo({
                    projection: "perspective",
                    duration: .5
                }), this.xeokit.cameraControl.firstPerson = !0)
            },
            getProjection() {
                return this.xeokit.camera.projection
            },
            getLights() {
                return this.xeokit.scene.lights
            },
            onOverviewMouseUp() {
                const e = this.sectionPlanesPlugin.getShownControl();
                e && (this.lastViewedSectionPlaneId = e)
            },
            setSectionMode(e) {
                const t = this.sectionPlanesPlugin.getShownControl();
                this.sectionMode = e, e ? (this.navCubeVisible && this.navCube.setVisible(!1), this.sectionPlanesPlugin.setOverviewVisible(e), Object.values(this.sectionPlanesPlugin.sectionPlanes).forEach(t => t.active = e), this.lastViewedSectionPlaneId && this.sectionPlanesPlugin.showControl(this.lastViewedSectionPlaneId)) : (this.navCubeVisible && this.navCube.setVisible(!0), this.sectionPlanesPlugin.setOverviewVisible(e), this.sectionPlanesPlugin.hideControl(), Object.values(this.sectionPlanesPlugin.sectionPlanes).forEach(t => t.active = e)), t && (this.lastViewedSectionPlaneId = t)
            },
            removeActiveSectionPlane() {
                const e = this.sectionPlanesPlugin.getShownControl();
                if (e) {
                    this.sectionPlanesPlugin.destroySectionPlane(e);
                    const t = Object.values(this.sectionPlanesPlugin.sectionPlanes);
                    t.length && this.sectionPlanesPlugin.showControl(t[t.length - 1].id)
                }
                e === this.lastViewedSectionPlaneId && (this.lastViewedSectionPlaneId = null)
            },
            createSectionPlane(e) {
                let t = null,
                    i = null;
                if (e.axis) {
                    if (!["x", "y", "z"].includes(e.axis)) throw new Error(`Cannot create section plane on ${e} axis. Available options are 'x', 'y' or 'z'.`);
                    switch (i = $c.getAABB3Center(this.xeokit.scene.getAABB()), e.axis) {
                        case "x":
                            t = this.xeokit.camera.worldRight.map(e => -e);
                            break;
                        case "y":
                            t = this.xeokit.camera.worldForward.map(e => -e);
                            break;
                        case "z":
                            t = this.xeokit.camera.worldUp.map(e => -e)
                    }
                } else {
                    if (!e.position || !e.direction) throw new Error("A position and a direction must be provided to create section plane.");
                    t = e.direction.map(e => -e), i = e.position
                }
                const r = this.sectionPlanesPlugin.createSectionPlane({
                    dir: t,
                    pos: i
                });
                this.sectionPlanesPlugin.showControl(r.id), this.lastViewedSectionPlaneId = r.id
            },
            deleteAllSectionPlanes() {
                this.lastViewedSectionPlaneId = null, this.sectionPlanesPlugin.clear()
            },
            setObjectsVisible(e, t) {
                this.xeokit.scene.setObjectsVisible([...e], t), t || this.$hub.emit("deselect-objects", {
                    ids: e,
                    trigger: this
                })
            },
            setObjectsSelected(e, t) {
                this.xeokit.scene.setObjectsSelected([...e], t)
            },
            setObjectsColorized(e, t) {
                this.xeokit.scene.setObjectsColorized([...e], t)
            },
            setObjectsHighlighted(e, t) {
                this.xeokit.scene.setObjectsHighlighted([...e], t)
            },
            setObjectsPickable(e, t) {
                this.xeokit.scene.setObjectsPickable([...e], t)
            },
            fitViewObjects(e = []) {
                this.xeokit.cameraFlight.flyTo(this.xeokit.scene.getAABB([...e]))
            },
            setObjectsisolated(e) {
                if (!e || !e.length && !e.size) return;
                let t = null;
                t = e instanceof Set ? this.xeokit.scene.objectIds.filter(t => !e.has(t)) : this.xeokit.scene.objectIds.filter(t => !new Set(e).has(t)), this.xeokit.scene.setObjectsXRayed(t, !0), this.xeokit.scene.setObjectsPickable(t, !1), this.$hub.emit("deselect-objects", {
                    ids: e,
                    trigger: this
                })
            },
            unIsolateAllObjects() {
                Object.values(this.xeokit.scene.objects).map(e => {
                    e.xrayed = !1, e.pickable = !0
                })
            },
            getObjectIfcId(e) {
                const t = Object.values(this.xeokit.scene.objects).find(t => t.id === e) || {};
                if (t)
                    for (const [e, i] of this.models.entries())
                        if (i === t.model) return e.id
            },
            getAllObjectIds() {
                return this.xeokit ? this.xeokit.scene.objectIds : []
            },
            getViewpoint() {
                return this.bcfViewpointsPlugin.getViewpoint({
                    spacesVisible: !0,
                    spaceBoundariesVisible: !0,
                    openingsVisible: !0,
                    reverseClippingPlanes: !0
                })
            },
            setViewpoint(e) {
                let t = null;
                e.components && (t = e.components.selection, e.components.selection = []), e.components && e.components.coloring && e.components.coloring.some(e => 8 === e.color.length) && this.models.forEach(e => e.edges = !1), this.bcfViewpointsPlugin.setViewpoint(e, {
                    rayCast: !1,
                    duration: .3,
                    reverseClippingPlanes: !0,
                    immediate: !1
                }), t && (e.components.selection = t)
            },
            getCameraPosition() {
                const e = this.bcfViewpointsPlugin.getViewpoint({
                    snapshot: !1
                });
                let t = null;
                return "perspective" === this.xeokit.scene.camera.projection ? (t = e.perspective_camera, t.projection = "perspective") : "ortho" === this.xeokit.scene.camera.projection && (t = e.orthogonal_camera, t.projection = "ortho"), t
            },
            setCameraPosition(e = {}) {
                if (!["perspective", "ortho"].includes(e.projection)) throw `Cannot set camera position without valide camera projection. Accepted values : "perspective" or "ortho". Got : "${e.projection}"`;
                const t = "perspective" === e.projection ? "perspective_camera" : "orthogonal_camera",
                    i = {
                        components: {
                            visibility: {
                                default_visibility: !0,
                                exceptions: Object.values(this.xeokit.scene.objects).filter(e => !e.visible).map(e => ({
                                    ifc_guid: e.id
                                }))
                            },
                            selection: Array.from(this.selectedObjectIds).map(e => ({
                                ifc_guid: e
                            }))
                        }
                    };
                i[t] = e, this.bcfViewpointsPlugin.setViewpoint(i)
            },
            createAnnotations({
                ids: e = [],
                index: t,
                priority: i
            } = {}) {
                e.forEach(e => {
                    if (!Object.values(this.annotationsPlugin.annotations).find(t => t.id === `annotation-${e}`)) {
                        const r = this.xeokit.scene.objects[e];
                        if (!r) throw new Error(`Impossible to add annotation on unknown entity id : ${e}`);
                        const n = r.aabb,
                            s = [(n[0] + n[3]) / 2, (n[1] + n[4]) / 2, (n[2] + n[5]) / 2],
                            o = {
                                id: `annotation-${e}`,
                                entity: this.xeokit.scene.objects[e],
                                worldPos: s,
                                markerHTML: `<div class='annotation-marker ${i}'>${t}</div>`
                            };
                        this.annotationsPlugin.createAnnotation(o)
                    }
                })
            },
            deleteAnnotations({
                ids: e = []
            } = {}) {
                e.forEach(e => {
                    this.annotationsPlugin.destroyAnnotation(`annotation-${e}`)
                })
            },
            clearAnnotations() {
                this.annotationsPlugin.clear()
            },
            destroy() {
                this.xeokit && this.xeokit.destroy(), this.commands && this.unregisterRightClickMenuActions(), this.hubSubscriptions.forEach(e => {
                    this.$hub.off(e.name, e.handler)
                })
            },
            registerRightClickMenuActions() {
                this.commands = [{
                    label: "right_click.hide_all",
                    picto: null,
                    execute: () => this.$hub.emit("hide-objects", {
                        ids: new Set(this.allIds)
                    }),
                    predicate: () => this.xeokit.scene.visibleObjectIds.length && !this.selectedObjectIds.size
                }, {
                    label: "right_click.show_all",
                    picto: "R",
                    execute: () => this.$hub.emit("show-objects", {
                        ids: new Set(this.allIds)
                    }),
                    predicate: () => this.xeokit.scene.objectIds.length > this.xeokit.scene.visibleObjectIds.length
                }, {
                    label: "right_click.isolate",
                    picto: "I",
                    execute: () => this.$hub.emit("isolate-objects", {
                        ids: this.selectedObjectIds
                    }),
                    predicate: () => this.selectedObjectIds.size && !this.xeokit.scene.xrayedObjectIds.length
                }, {
                    label: "right_click.reintegrate",
                    picto: "U",
                    execute: () => this.$hub.emit("unisolate-all-objects"),
                    predicate: () => !!this.xeokit.scene.xrayedObjectIds.length
                }, {
                    label: "right_click.fit_view",
                    picto: "F",
                    execute: () => this.$hub.emit("fit-view-objects", {
                        ids: this.selectedObjectIds
                    }),
                    predicate: () => !0
                }], this.commands.forEach(e => {
                    this.rightClickMenu.registerCommand(e), e.picto && this.$plugins.keyboardShortcutsManager.registerKeyboardShortcut(e.picto, e.execute)
                })
            },
            unregisterRightClickMenuActions() {
                this.commands.forEach(e => {
                    this.rightClickMenu.unregisterCommand(e), e.picto && this.$plugins.keyboardShortcutsManager.unregisterKeyboardShortcut(e.picto, e.execute)
                })
            }
        },
        beforeDestroy() {
            this.destroy()
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    /**
     * Verte v0.0.12
     * (c) 2019 Baianat
     * @license MIT
     */
    /**
     * color-fns v0.0.10
     * (c) 2019 Baianat
     * @license MIT
     */
    function ig(e) {
        return (ig = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(e)
    }

    function rg(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }

    function ng(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
        }
    }

    function sg(e, t, i) {
        return t && ng(e.prototype, t), i && ng(e, i), e
    }

    function og(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), t && lg(e, t)
    }

    function ag(e) {
        return (ag = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        })(e)
    }

    function lg(e, t) {
        return (lg = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t, e
        })(e, t)
    }

    function cg(e, t) {
        return !t || "object" != typeof t && "function" != typeof t ? function(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }(e) : t
    }

    function hg(e, t, i) {
        return (hg = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, i) {
            var r = function(e, t) {
                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = ag(e)););
                return e
            }(e, t);
            if (r) {
                var n = Object.getOwnPropertyDescriptor(r, t);
                return n.get ? n.get.call(i) : n.value
            }
        })(e, t, i || e)
    }

    function dg(e) {
        return "object" === ig(e) && e.model ? e.model : ("#" !== e.slice(0, 1) || 4 !== e.length && 7 !== e.length) && ("#" !== e.slice(0, 1) || 6 !== e.length && 9 !== e.length) ? "RGBA" === e.slice(0, 4).toUpperCase() ? "rgb" : "RGB" === e.slice(0, 3).toUpperCase() ? "rgb" : "HSLA" === e.slice(0, 4).toUpperCase() ? "hsl" : "HSL" === e.slice(0, 3).toUpperCase() && "hsl" : "hex"
    }

    function ug(e) {
        return isNaN(parseInt(e, 16)) ? 0 : parseInt(e, 16)
    }

    function pg(e, t) {
        return function(i) {
            return i >= e && i <= t
        }
    }

    function fg(e, t) {
        return Math.floor(Math.random() * (t - e + 1) + e)
    }

    function _g(e, t) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .5;
        return Number((e * (1 - i) + t * i).toFixed(2))
    }

    function mg(e) {
        return !(void 0 === e || isNaN(e) || e < 0 || e > 1)
    }
    var gg = function() {
            function e(t) {
                var i = this;
                rg(this, e), this.invalid = !this.validate(t), this.invalid || Object.keys(t).forEach((function(e) {
                    i[e] = t[e]
                })), this.init()
            }
            return sg(e, [{
                key: "init",
                value: function() {}
            }, {
                key: "validate",
                value: function(e) {
                    return !!e && "object" === ig(e)
                }
            }]), e
        }(),
        vg = function(e) {
            function t() {
                return rg(this, t), cg(this, ag(t).apply(this, arguments))
            }
            return og(t, e), sg(t, [{
                key: "validate",
                value: function(e) {
                    if (!hg(ag(t.prototype), "validate", this).call(this, e)) return !1;
                    var i = pg(0, 255);
                    return i(e.red) && i(e.green) && i(e.blue)
                }
            }, {
                key: "init",
                value: function() {
                    this.model = "rgb", this.alpha = mg(this.alpha) ? this.alpha : 1
                }
            }, {
                key: "toString",
                value: function() {
                    return this.invalid ? "Invalid Color" : pg(0, .999)(this.alpha) ? "rgba(".concat(this.red, ",").concat(this.green, ",").concat(this.blue, ",").concat(this.alpha, ")") : "rgb(".concat(this.red, ",").concat(this.green, ",").concat(this.blue, ")")
                }
            }]), t
        }(gg),
        bg = function(e) {
            function t() {
                return rg(this, t), cg(this, ag(t).apply(this, arguments))
            }
            return og(t, e), sg(t, [{
                key: "validate",
                value: function(e) {
                    if (!hg(ag(t.prototype), "validate", this).call(this, e)) return !1;
                    var i = pg(0, 100);
                    return pg(0, 360)(e.hue) && i(e.lum) && i(e.sat)
                }
            }, {
                key: "init",
                value: function() {
                    this.model = "hsl", this.alpha = mg(this.alpha) ? this.alpha : 1
                }
            }, {
                key: "toString",
                value: function() {
                    return this.invalid ? "Invalid Color" : pg(0, .999)(this.alpha) ? "hsla(".concat(this.hue, ",").concat(this.sat, "%,").concat(this.lum, "%,").concat(this.alpha, ")") : "hsl(".concat(this.hue, ",").concat(this.sat, "%,").concat(this.lum, "%)")
                }
            }]), t
        }(gg),
        yg = function(e) {
            function t() {
                return rg(this, t), cg(this, ag(t).apply(this, arguments))
            }
            return og(t, e), sg(t, [{
                key: "validate",
                value: function(e) {
                    return !!hg(ag(t.prototype), "validate", this).call(this, e) && /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test("#".concat(e.red).concat(e.green).concat(e.blue))
                }
            }, {
                key: "init",
                value: function() {
                    this.model = "hex", this.alpha = void 0 !== this.alpha ? this.alpha : "ff"
                }
            }, {
                key: "toString",
                value: function() {
                    return this.invalid ? "Invalid Color" : pg(0, .999)(ug(this.alpha) / 255) ? "#".concat(this.red).concat(this.green).concat(this.blue).concat(this.alpha) : "#".concat(this.red).concat(this.green).concat(this.blue)
                }
            }]), t
        }(gg),
        wg = Object.freeze({
            Color: gg,
            RgbColor: vg,
            HslColor: bg,
            HexColor: yg
        });

    function Mg(e) {
        if ("object" === ig(e)) return e;
        var t = e.match(/^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,*\s*(\d*(?:\.\d+)*)*\)/i);
        return !t || t.length < 4 ? new vg : new vg({
            red: Number(t[1]),
            green: Number(t[2]),
            blue: Number(t[3]),
            alpha: Number(t[4])
        })
    }

    function Ag(e) {
        if ("object" === ig(e)) return e;
        var t = function(e) {
                var t = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])*$/i;
                return 5 !== e.length && 4 !== e.length || !t.test(e) || (e = e.replace(t, (function(e, t, i, r, n) {
                    return "#".concat(t).concat(t).concat(i).concat(i).concat(r).concat(r).concat(n ? "".concat(n).concat(n) : "")
                }))), e
            }(e),
            i = t.match(/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})*/i);
        return !i || i.length < 4 ? new yg : new yg({
            hex: t,
            red: i[1],
            green: i[2],
            blue: i[3],
            alpha: i[4]
        })
    }

    function xg(e) {
        if ("object" === ig(e)) return e;
        var t = e.match(/^hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*,*\s*(\d*(?:\.\d+)*)*\)/i);
        return !t || t.length < 4 ? new bg : new bg({
            hue: Number(t[1]),
            sat: Number(t[2]),
            lum: Number(t[3]),
            alpha: Number(t[4])
        })
    }

    function Cg(e) {
        return e = Math.floor(e), isNaN(e) ? "00" : ("0" + e.toString(16)).slice(-2)
    }

    function Pg(e) {
        if (!e) return new yg;
        var t = [Cg((e = Mg(e)).red), Cg(e.green), Cg(e.blue), e.alpha ? Cg(255 * e.alpha) : null];
        return new yg({
            red: t[0],
            green: t[1],
            blue: t[2],
            alpha: t[3] || "ff"
        })
    }

    function kg(e) {
        if (!e) return new bg;
        var t = [(e = Mg(e)).red / 255, e.green / 255, e.blue / 255, e.alpha],
            i = t[0],
            r = t[1],
            n = t[2],
            s = t[3],
            o = 0,
            a = 0,
            l = 0,
            c = Math.min(i, r, n),
            h = Math.max(i, r, n);
        return l = (c + h) / 2, c !== h && (a = l > .5 ? (h - c) / (2 - h - c) : (h - c) / (h + c)), i >= h && c !== h && (o = (r - n) / (h - c) * 60), r >= h && c !== h && (o = 60 * (2 + (n - i) / (h - c))), n >= h && c !== h && (o = 60 * (4 + (i - r) / (h - c))), o = o < 0 ? Math.floor(o + 360) : Math.floor(o), a = Math.floor(100 * a), l = Math.floor(100 * l), new bg({
            hue: o,
            sat: a,
            lum: l,
            alpha: s
        })
    }

    function Eg(e) {
        if (!e) return new vg;
        var t = Ag(e),
            i = t.red,
            r = t.green,
            n = t.blue,
            s = t.alpha;
        return new vg({
            red: ug(i),
            green: ug(r),
            blue: ug(n),
            alpha: void 0 === s ? 1 : Number((ug(s) / 255).toFixed(2))
        })
    }

    function Ig(e) {
        return Math.min(Math.max(parseInt(e), 0), 255)
    }

    function Tg(e) {
        if (!e) return new vg;
        var t = [(e = xg(e)).hue / 360, e.sat / 100, e.lum / 100, e.alpha],
            i = t[0],
            r = t[1],
            n = t[2],
            s = t[3],
            o = 0,
            a = 0,
            l = 0;
        if (0 === r && (o = a = l = Ig(255 * n)), 0 !== r) {
            var c = n >= 50 ? n + r - n * r : n * (1 + r),
                h = 2 * n - c,
                d = function(e) {
                    return e < 0 && (e += 1), e > 1 && (e -= 1), e < 1 / 6 ? h + 6 * (c - h) * e : e < .5 ? c : e < 2 / 3 ? h + (c - h) * (2 / 3 - e) * 6 : h
                };
            o = Ig(255 * d(i + 1 / 3)), a = Ig(255 * d(i)), l = Ig(255 * d(i - 1 / 3))
        }
        return new vg({
            red: o,
            green: a,
            blue: l,
            alpha: s
        })
    }

    function Dg(e) {
        var t = dg(e);
        return "hex" === t ? Eg(e) : "hsl" === t ? Tg(e) : "rgb" === t && "string" == typeof e ? Mg(e) : "rgb" === t && "object" === ig(e) ? e : new vg
    }

    function Sg(e) {
        var t, i = dg(e);
        return "hex" === i ? (t = e) ? kg(Eg(t)) : new bg : "rgb" === i ? kg(e) : "hsl" === i && "string" == typeof e ? xg(e) : "hsl" === i && "object" === ig(e) ? e : new bg
    }

    function Bg(e) {
        var t, i = dg(e);
        return "rgb" === i ? Pg(e) : "hsl" === i ? (t = e) ? Pg(Tg(t)) : new yg : "hex" === i && "string" == typeof e ? Ag(e) : "hex" === i && "object" === ig(e) ? e : new yg
    }

    function jg() {
        return "rgb(".concat(fg(0, 255), ", ").concat(fg(0, 255), ", ").concat(fg(0, 255), ")")
    }

    function Lg(e, t, i) {
        e = Dg(e), t = Dg(t);
        var r = Math.floor(_g(e.red, t.red, i)),
            n = Math.floor(_g(e.green, t.green, i)),
            s = Math.floor(_g(e.blue, t.blue, i)),
            o = _g(e.alpha, t.alpha, i);
        return new vg({
            red: r,
            green: n,
            blue: s,
            alpha: o
        })
    }

    function Rg(e, t) {
        for (var i = [], r = 0; r < e; r++) {
            var n = "function" == typeof t ? t() : t;
            i.push(n)
        }
        return i
    }

    function Og(e, t) {
        for (; e !== document && null !== e;) {
            if (e === t) return !0;
            e = e.parentNode
        }
        return !1
    }

    function Fg(e, t) {
        return e.reduce((function(e, i) {
            return Math.abs(i - t) < Math.abs(e - t) ? i : e
        }))
    }

    function Ng(e, t) {
        return function(e) {
            var i = -1 !== t.indexOf(e);
            return i
        }
    }

    function Ug(e) {
        if (e.type.match(/^touch/i)) {
            var t = e.touches[0];
            return {
                x: t.clientX,
                y: t.clientY
            }
        }
        return e.type.match(/^mouse/i) ? {
            x: e.clientX,
            y: e.clientY
        } : {
            x: 0,
            y: 0
        }
    }
    var Hg = {
            name: "VerteSlider",
            props: {
                gradient: Array,
                classes: Array,
                colorCode: {
                    type: Boolean,
                    default: !1
                },
                editable: {
                    type: Boolean,
                    default: !0
                },
                reverse: {
                    type: Boolean,
                    default: !1
                },
                label: {
                    type: Boolean,
                    default: !1
                },
                trackSlide: {
                    type: Boolean,
                    default: !0
                },
                min: {
                    type: Number,
                    default: 0
                },
                max: {
                    type: Number,
                    default: 255
                },
                step: {
                    type: Number,
                    default: 1
                },
                value: {
                    type: Number,
                    default: 0
                },
                handlesValue: {
                    type: Array,
                    default: function() {
                        return [0]
                    }
                }
            },
            data: function() {
                return {
                    fill: {
                        translate: 0,
                        scale: 0
                    },
                    multiple: !1,
                    currentValue: 0,
                    handles: [],
                    values: []
                }
            },
            watch: {
                gradient: function(e) {
                    this.initGradient(e), this.reloadHandlesColor()
                },
                values: function() {
                    this.multiple = this.values.length > 1, this.fill = !this.multiple && (this.fill || {})
                },
                value: function(e, t) {
                    e !== t && e !== this.currentValue && this.updateValue(this.value, !0)
                }
            },
            methods: {
                init: function() {
                    var e = this;
                    this.$emitInputEvent = function(e, t) {
                        var i;
                        return void 0 === t && (t = !1),
                            function() {
                                var r = arguments,
                                    n = function() {
                                        i = null, t || e.apply(void 0, r)
                                    },
                                    s = t && !i;
                                window.cancelAnimationFrame(i), i = window.requestAnimationFrame(n), s && e.apply(void 0, arguments)
                            }
                    }((function() {
                        e.$emit("input", e.currentValue)
                    })), this.multiple = this.values.length > 1, this.values = this.handlesValue, this.handles = this.handlesValue.map((function(e, t) {
                        return {
                            value: e,
                            position: 0,
                            color: "#fff"
                        }
                    })), 1 === this.values.length && (this.values[0] = Number(this.value)), this.values.sort(), this.initElements(), this.gradient && this.initGradient(this.gradient), this.initEvents(), this.values.forEach((function(t, i) {
                        e.activeHandle = i, e.updateValue(t, !0)
                    }))
                },
                initElements: function() {
                    var e;
                    this.wrapper = this.$refs.wrapper, this.track = this.$refs.track, this.fill = this.$refs.fill, this.wrapper.classList.toggle("slider--editable", this.editable), this.wrapper.classList.toggle("slider--reverse", this.reverse), this.classes && (e = this.wrapper.classList).add.apply(e, this.classes)
                },
                initGradient: function(e) {
                    e.length > 1 ? this.fill.style.backgroundImage = "linear-gradient(90deg, " + e + ")" : (this.fill.style.backgroundImage = "", this.fill.style.backgroundColor = e[0], this.handles.forEach((function(t) {
                        t.style.color = e[0]
                    })))
                },
                handleResize: function() {
                    this.updateWidth(), this.updateValue(this.currentValue, !0)
                },
                initEvents: function() {
                    window.addEventListener("resize", this.handleResize)
                },
                select: function(e) {
                    if (e.preventDefault(), e.stopPropagation(), 2 !== e.buttons) {
                        this.updateWidth(), this.track.classList.add("slider--dragging"), this.ticking = !1;
                        var t = this.getStepValue(e);
                        if (this.multiple) {
                            var i = Fg(this.values, t);
                            this.activeHandle = this.values.indexOf(i)
                        }
                        this.updateValue(t), this.tempDrag = this.dragging.bind(this), this.tempRelease = this.release.bind(this), document.addEventListener("mousemove", this.tempDrag), document.addEventListener("touchmove", this.tempDrag), document.addEventListener("touchend", this.tempRelease), document.addEventListener("mouseup", this.tempRelease)
                    }
                },
                dragging: function(e) {
                    var t = this,
                        i = this.getStepValue(e);
                    this.ticking || (window.requestAnimationFrame((function() {
                        t.updateValue(i), t.ticking = !1
                    })), this.ticking = !0)
                },
                release: function() {
                    this.track.classList.remove("slider--dragging"), document.removeEventListener("mousemove", this.tempDrag), document.removeEventListener("touchmove", this.tempDrag), document.removeEventListener("mouseup", this.tempRelease), document.removeEventListener("touchend", this.tempRelease)
                },
                getStepValue: function(e) {
                    var t = Ug(e).x - this.currentX,
                        i = parseInt(t / this.stepWidth + .5, 10) * this.step + this.min;
                    return this.decimalsCount ? Number(i.toFixed(this.decimalsCount)) : i
                },
                updateWidth: function() {
                    var e = this.track.getBoundingClientRect();
                    this.currentX = e.left, this.width = e.width, this.stepWidth = this.width / (this.max - this.min) * this.step
                },
                getPositionPercentage: function(e) {
                    return ((e - this.min) / (this.max - this.min)).toFixed(2)
                },
                normalizeValue: function(e) {
                    if (isNaN(Number(e))) return this.value;
                    if (this.multiple) {
                        var t = this.values[this.activeHandle - 1] || this.min,
                            i = this.values[this.activeHandle + 1] || this.max;
                        e = Math.min(Math.max(Number(e), t), i)
                    }
                    return Math.min(Math.max(Number(e), this.min), this.max)
                },
                addHandle: function(e) {
                    var t = Fg(this.values, e),
                        i = this.values.indexOf(t),
                        r = this.values[i] <= e ? i + 1 : i;
                    this.handles.splice(r, 0, {
                        value: e,
                        position: 0,
                        color: "#fff"
                    }), this.values.splice(r, 0, e), this.activeHandle = r, this.currentValue = null, this.updateValue(e)
                },
                removeHandle: function(e) {
                    this.handles.splice(e, 1), this.values.splice(e, 1), this.activeHandle = 0 === e ? e + 1 : e - 1
                },
                getHandleColor: function(e) {
                    for (var t = this.gradient.length - 1, i = e, r = 1; r <= t; r++)
                        if (i >= (r - 1) / t && i <= r / t) {
                            var n = (i - (r - 1) / t) / (1 / t);
                            return Lg(this.gradient[r - 1], this.gradient[r], n)
                        } return "rgb(0, 0, 0)"
                },
                reloadHandlesColor: function() {
                    var e = this;
                    this.handles.forEach((function(t, i) {
                        var r = e.getPositionPercentage(t.value),
                            n = e.getHandleColor(r);
                        e.handles[i].color = n.toString()
                    }))
                },
                updateValue: function(e, t) {
                    var i = this;
                    void 0 === t && (t = !1), window.requestAnimationFrame((function() {
                        var r = i.normalizeValue(e),
                            n = i.getPositionPercentage(r);
                        if (i.fill && (i.fill.translate = n * i.width, i.fill.scale = 1 - n), i.values[i.activeHandle] = r, i.handles[i.activeHandle].value = r, i.handles[i.activeHandle].position = n * i.width, i.currentValue = r, i.$refs.input.value = i.currentValue, i.gradient) {
                            var s = i.getHandleColor(n);
                            i.handles[i.activeHandle].color = s.toString(), i.colorCode && (i.currentValue = s)
                        }
                        t || i.$emitInputEvent()
                    }))
                }
            },
            created: function() {
                var e = this.step.toString().split(".")[1];
                this.currentValue = this.value, this.decimalsCount = e ? e.length : 0
            },
            mounted: function() {
                var e = this;
                this.init(), this.$nextTick((function() {
                    e.updateWidth(), e.updateValue(void 0, !0)
                }))
            },
            destroyed: function() {
                window.removeEventListener("resize", this.handleResize)
            }
        },
        Vg = function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                ref: "wrapper",
                staticClass: "slider"
            }, [i("div", e._g({
                ref: "track",
                staticClass: "slider__track"
            }, e.trackSlide ? {
                mousedown: e.select,
                touchstart: e.select
            } : {}), [i("div", {
                ref: "fill",
                staticClass: "slider__fill"
            }), e._l(e.handles, (function(t) {
                return i("div", {
                    staticClass: "slider__handle",
                    style: "transform: translate(" + t.position + "px, 0); background-color: " + t.color + ";",
                    on: {
                        mousedown: e.select,
                        touchstart: e.select
                    }
                }, [e.label ? i("div", {
                    staticClass: "slider__label"
                }, [e._v(e._s(t.value))]) : e._e()])
            }))], 2), i("input", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.editable,
                    expression: "editable"
                }],
                ref: "input",
                staticClass: "slider__input",
                attrs: {
                    type: e.colorCode ? "text" : "number"
                },
                on: {
                    change: function(t) {
                        e.updateValue(t.target.value)
                    }
                }
            })])
        };
    Vg._withStripped = !0;
    var zg, $g, Wg, qg, Gg, Yg = (zg = {
            render: Vg,
            staticRenderFns: []
        }, Wg = void 0, qg = !1, (Gg = ("function" == typeof($g = Hg) ? $g.options : $g) || {}).__file = "/mnt/c/Users/Abdelrahman/Projects/verte/src/components/Slider.vue", Gg.render || (Gg.render = zg.render, Gg.staticRenderFns = zg.staticRenderFns, Gg._compiled = !0, qg && (Gg.functional = !0)), Gg._scopeId = Wg, Gg),
        Zg = {
            name: "VertePicker",
            components: {
                Slider: Yg
            },
            props: {
                mode: {
                    type: String,
                    default: "square"
                },
                edge: {
                    type: Number,
                    default: 250
                },
                diameter: {
                    type: Number,
                    default: 180
                },
                satSlider: {
                    type: Boolean,
                    default: !0
                },
                alpha: {
                    type: Number,
                    default: 1
                },
                value: {
                    type: String,
                    default: "#fff"
                }
            },
            data: function() {
                return {
                    currentHue: 0,
                    currentSat: 0,
                    currentColor: "",
                    cursor: {},
                    preventUpdating: !1,
                    preventEcho: !1
                }
            },
            watch: {
                value: function(e) {
                    this.preventUpdating ? this.preventUpdating = !1 : this.handleValue(e, !0)
                },
                currentSat: function() {
                    this.updateWheelColors(), this.updateColor()
                },
                currentHue: function() {
                    this.updateSquareColors(), this.updateColor()
                }
            },
            methods: {
                initSquare: function() {
                    this.$refs.canvas.width = this.edge, this.$refs.canvas.height = this.edge - 100, this.ctx = this.$refs.canvas.getContext("2d"), this.updateSquareColors()
                },
                initWheel: function() {
                    this.$refs.canvas.width = this.diameter, this.$refs.canvas.height = this.diameter, this.ctx = this.$refs.canvas.getContext("2d"), this.circle = {
                        path: new Path2D,
                        xCords: this.diameter / 2,
                        yCords: this.diameter / 2,
                        radius: this.diameter / 2
                    }, this.circle.path.moveTo(this.circle.xCords, this.circle.yCords), this.circle.path.arc(this.circle.xCords, this.circle.yCords, this.circle.radius, 0, 360), this.circle.path.closePath(), this.updateWheelColors()
                },
                handleValue: function(e, t) {
                    var i = this.pickerRect,
                        r = i.width,
                        n = i.height;
                    if (this.currentColor = Sg(e), this.preventEcho = !0, "wheel" === this.mode) {
                        var s = (100 - this.currentColor.lum) * (this.diameter / 200),
                            o = this.diameter / 2,
                            a = function(e, t) {
                                return {
                                    x: e * Math.cos(t * Math.PI * 2),
                                    y: e * Math.sin(t * Math.PI * 2)
                                }
                            }(s, this.currentColor.hue / 360);
                        this.cursor = {
                            x: a.x + o,
                            y: a.y + o
                        }, this.currentSat = this.currentColor.sat
                    }
                    if ("square" === this.mode) {
                        var l = this.currentColor.sat / 100 * r,
                            c = (100 - this.currentColor.lum) / 100 * n;
                        this.cursor = {
                            x: l,
                            y: c
                        }, this.currentHue = this.currentColor.hue
                    }
                },
                updateCursorPosition: function(e) {
                    var t = e.x,
                        i = e.y,
                        r = this.pickerRect,
                        n = r.left,
                        s = r.top,
                        o = r.width,
                        a = r.height,
                        l = {
                            x: Math.min(Math.max(t - n, 0), o),
                            y: Math.min(Math.max(i - s, 0), a)
                        };
                    ("wheel" !== this.mode || this.ctx.isPointInPath(this.circle.path, l.x, l.y)) && (this.cursor = l, this.updateColor())
                },
                updateColor: function(e) {
                    this.preventEcho ? this.preventEcho = !1 : (this.currentColor = this.getCanvasColor(), this.preventUpdating = !0, this.$emit("change", this.currentColor), this.$emit("input", this.currentColor))
                },
                updateWheelColors: function() {
                    if (this.circle) {
                        var e = this.pickerRect,
                            t = e.width,
                            i = e.height,
                            r = this.circle.xCords,
                            n = this.circle.yCords,
                            s = this.circle.radius,
                            o = this.satSlider ? this.currentSat : 100;
                        this.ctx.clearRect(0, 0, t, i);
                        for (var a = 0; a < 360; a += 1) {
                            var l = this.ctx.createRadialGradient(r, n, 0, r, n, s),
                                c = (a - 2) * Math.PI / 180,
                                h = (a + 2) * Math.PI / 180;
                            this.ctx.beginPath(), this.ctx.moveTo(r, n), this.ctx.arc(r, n, s, c, h), this.ctx.closePath(), l.addColorStop(0, "hsl(" + a + ", " + o + "%, 100%)"), l.addColorStop(.5, "hsl(" + a + ", " + o + "%, 50%)"), l.addColorStop(1, "hsl(" + a + ", " + o + "%, 0%)"), this.ctx.fillStyle = l, this.ctx.fill()
                        }
                    }
                },
                updateSquareColors: function() {
                    var e = this.pickerRect,
                        t = e.width,
                        i = e.height;
                    this.ctx.clearRect(0, 0, t, i), this.ctx.fillStyle = "hsl(" + this.currentHue + ", 100%, 50%)", this.ctx.fillRect(0, 0, t, i);
                    var r = this.ctx.createLinearGradient(0, 0, t, 0);
                    r.addColorStop(0, "hsl(0, 0%, 50%)"), r.addColorStop(1, "hsla(0, 0%, 50%, 0)"), this.ctx.fillStyle = r, this.ctx.fillRect(0, 0, t, i);
                    var n = this.ctx.createLinearGradient(0, 0, 0, i);
                    n.addColorStop(0, "hsl(0, 0%, 100%)"), n.addColorStop(.5, "hsla(0, 0%, 100%, 0)"), n.addColorStop(.5, "hsla(0, 0%, 0%, 0)"), n.addColorStop(1, "hsl(0, 0%, 0%) "), this.ctx.fillStyle = n, this.ctx.fillRect(0, 0, t, i)
                },
                getCanvasColor: function() {
                    var e = this.cursor,
                        t = e.x,
                        i = e.y,
                        r = 0,
                        n = 0,
                        s = 0;
                    if ("wheel" === this.mode) {
                        var o = this.diameter / 2,
                            a = function(e, t) {
                                return {
                                    r: Math.sqrt(e * e + t * t),
                                    theta: 180 * Math.atan2(t, e) / Math.PI
                                }
                            }(t - o, -1 * (i - o)),
                            l = a.r,
                            c = a.theta;
                        n = 100 * (o - l) / o, s = ~Math.sign(c) ? 360 - c : -c, r = this.currentSat
                    }
                    if ("square" === this.mode) {
                        var h = this.pickerRect;
                        r = 100 * t / h.width, n = 100 - 100 * i / h.height, s = this.currentHue
                    }
                    return new wg.HslColor({
                        alpha: this.alpha,
                        hue: Math.round(s),
                        sat: Math.round(r),
                        lum: Math.round(n)
                    })
                },
                handleSelect: function(e) {
                    var t = this;
                    e.preventDefault(), this.pickerRect = this.$refs.canvas.getBoundingClientRect(), this.updateCursorPosition(Ug(e));
                    var i = function(e) {
                            window.requestAnimationFrame((function() {
                                t.updateCursorPosition(Ug(e))
                            }))
                        },
                        r = function() {
                            document.removeEventListener("mousemove", i), document.removeEventListener("touchmove", i), document.removeEventListener("mouseup", r), document.removeEventListener("touchend", r)
                        };
                    document.addEventListener("mousemove", i), document.addEventListener("touchmove", i), document.addEventListener("mouseup", r), document.addEventListener("touchend", r)
                }
            },
            mounted: function() {
                var e = this;
                this.pickerRect = this.$refs.canvas.getBoundingClientRect(), "wheel" === this.mode && this.initWheel(), "square" === this.mode && this.initSquare(), this.$nextTick((function() {
                    e.handleValue(e.value)
                }))
            }
        },
        Xg = function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                ref: "picker",
                staticClass: "verte-picker",
                class: "verte-picker--" + e.mode
            }, [i("div", {
                ref: "origin",
                staticClass: "verte-picker__origin"
            }, [i("canvas", {
                ref: "canvas",
                staticClass: "verte-picker__canvas",
                on: {
                    mousedown: e.handleSelect,
                    touchstart: e.handleSelect
                }
            }), i("div", {
                ref: "cursor",
                staticClass: "verte-picker__cursor",
                style: "transform: translate3d(" + e.cursor.x + "px, " + e.cursor.y + "px, 0)"
            })]), "square" === e.mode ? i("slider", {
                staticClass: "verte-picker__slider",
                attrs: {
                    gradient: ["#f00", "#ff0", "#0f0", "#0ff", "#00f", "#f0f", "#f00"],
                    editable: !1,
                    max: 360
                },
                model: {
                    value: e.currentHue,
                    callback: function(t) {
                        e.currentHue = t
                    },
                    expression: "currentHue"
                }
            }) : e._e(), "wheel" === e.mode ? i("slider", {
                staticClass: "verte-picker__slider",
                attrs: {
                    gradient: ["hsl(" + e.currentColor.hue + ",0%," + e.currentColor.lum + "%)", "hsl(" + e.currentColor.hue + ",100%," + e.currentColor.lum + "%)"],
                    editable: !1,
                    max: 100
                },
                model: {
                    value: e.currentSat,
                    callback: function(t) {
                        e.currentSat = t
                    },
                    expression: "currentSat"
                }
            }) : e._e()], 1)
        };
    Xg._withStripped = !0;
    var Kg, Qg = function(e, t, i, r, n, s, o, a) {
        var l = ("function" == typeof i ? i.options : i) || {};
        return l.__file = "/mnt/c/Users/Abdelrahman/Projects/verte/src/components/Picker.vue", l.render || (l.render = e.render, l.staticRenderFns = e.staticRenderFns, l._compiled = !0, n && (l.functional = !0)), l._scopeId = r, l
    }({
        render: Xg,
        staticRenderFns: []
    }, 0, Zg, void 0, !1);

    function Jg(e, t) {
        if (Kg) return Kg;
        var i = (t = t || {}).recentColors,
            r = t.onRecentColorsChange;
        return Kg = new e({
            data: function() {
                return {
                    recentColors: i || Rg(6, jg)
                }
            },
            methods: {
                addRecentColor: function(e) {
                    this.recentColors.includes(e) || (this.recentColors.length >= 6 && this.recentColors.pop(), this.recentColors.unshift(e), r && r(this.recentColors))
                }
            }
        })
    }
    var ev = {
            name: "Verte",
            components: {
                Picker: Qg,
                Slider: Yg
            },
            props: {
                pickerEdge: Number,
                picker: {
                    type: String,
                    default: "square",
                    validator: Ng(0, ["wheel", "square"])
                },
                value: {
                    type: String,
                    default: "#000"
                },
                model: {
                    type: String,
                    default: "hsl",
                    validator: Ng(0, ["rgb", "hex", "hsl"])
                },
                display: {
                    type: String,
                    default: "picker",
                    validator: Ng(0, ["picker", "widget"])
                },
                menuPosition: {
                    type: String,
                    default: "bottom",
                    validator: Ng(0, ["top", "bottom", "left", "right", "center"])
                },
                showHistory: {
                    type: Boolean,
                    default: !0
                },
                colorHistory: {
                    type: Array,
                    default: null
                },
                enableAlpha: {
                    type: Boolean,
                    default: !0
                },
                rgbSliders: {
                    type: Boolean,
                    default: !1
                },
                draggable: {
                    type: Boolean,
                    default: !0
                }
            },
            data: function() {
                return {
                    isMenuActive: !0,
                    isLoading: !0,
                    rgb: Dg("#000"),
                    hex: Bg("#000"),
                    hsl: Sg("#000"),
                    delta: {
                        x: 0,
                        y: 0
                    },
                    currentModel: "",
                    internalColorHistory: []
                }
            },
            computed: {
                $_verteStore: function() {
                    return Jg()
                },
                historySource: function() {
                    return this.colorHistory ? this.internalColorHistory : this.$_verteStore.recentColors
                },
                currentColor: {
                    get: function() {
                        return this[this.model], this[this.model].toString()
                    },
                    set: function(e) {
                        this.selectColor(e)
                    }
                },
                alpha: {
                    get: function() {
                        return this[this.model] ? isNaN(this[this.model].alpha) ? 1 : this[this.model].alpha : 1
                    },
                    set: function(e) {
                        this[this.model].alpha = e, this.selectColor(this[this.model])
                    }
                },
                menuOnly: function() {
                    return "widget" === this.display
                }
            },
            watch: {
                value: function(e, t) {
                    e !== t && e !== this.currentColor && this.selectColor(e)
                },
                rgb: {
                    handler: function(e) {
                        this.hex = Bg(e.toString()), this.$emit("input", this.currentColor)
                    },
                    deep: !0
                },
                colorHistory: function(e) {
                    this.internalColorHistory !== e && (this.internalColorHistory = [].concat(e))
                }
            },
            beforeCreate: function() {
                Jg(this.$options._base)
            },
            install: function(e, t) {
                Jg(e, t), e.component("Verte", this)
            },
            created: function() {
                this.colorHistory && (this.internalColorHistory = [].concat(this.colorHistory)), this.selectColor(this.value || "#000", !0), this.currentModel = this.model
            },
            mounted: function() {
                var e = this;
                this.$nextTick((function() {
                    e.isLoading = !1, e.menuOnly || (e.isMenuActive = !1)
                }))
            },
            methods: {
                selectColor: function(e, t) {
                    void 0 === t && (t = !1),
                        function(e) {
                            var t = dg(e);
                            return "rgb" === t ? !Mg(e).invalid : "hex" === t ? !Ag(e).invalid : "hsl" === t && !xg(e).invalid
                        }(e) && (this.rgb = Dg(e), this.hex = Bg(e), this.hsl = Sg(e), t || this.$emit("input", this.currentColor))
                },
                switchModel: function() {
                    var e = ["hex", "rgb", "hsl"],
                        t = e.indexOf(this.currentModel);
                    this.currentModel = e[t + 1] || e[0]
                },
                handleMenuDrag: function(e) {
                    var t = this;
                    if (2 !== e.button) {
                        e.preventDefault();
                        var i = Object.assign({}, this.delta),
                            r = Ug(e),
                            n = function(e) {
                                window.requestAnimationFrame((function() {
                                    var n = Ug(e);
                                    t.delta.x = i.x + n.x - r.x, t.delta.y = i.y + n.y - r.y
                                }))
                            },
                            s = function() {
                                document.removeEventListener("mousemove", n), document.removeEventListener("mouseup", s), document.removeEventListener("touchmove", n), document.removeEventListener("touchup", s)
                            };
                        document.addEventListener("mousemove", n), document.addEventListener("mouseup", s), document.addEventListener("touchmove", n), document.addEventListener("touchup", s)
                    }
                },
                submit: function() {
                    this.$emit("beforeSubmit", this.currentColor), this.addColorToHistory(this.currentColor), this.$emit("input", this.currentColor), this.$emit("submit", this.currentColor)
                },
                addColorToHistory: function(e) {
                    if (this.colorHistory) return this.internalColorHistory.length >= 6 && this.internalColorHistory.pop(), this.internalColorHistory.unshift(e), void this.$emit("update:colorHistory", this.internalColorHistory);
                    this.$_verteStore.addRecentColor(this.currentColor)
                },
                inputChanged: function(e, t) {
                    var i = e.target;
                    if ("hex" !== this.currentModel) {
                        var r = Math.min(Math.max(i.value, i.min), i.max);
                        this[this.currentModel][t] = r, this.selectColor(this[this.currentModel])
                    } else this.selectColor(i.value)
                },
                toggleMenu: function() {
                    this.isMenuActive ? this.closeMenu() : this.openMenu()
                },
                closeMenu: function() {
                    this.isMenuActive = !1, document.removeEventListener("mousedown", this.closeCallback), this.$emit("close", this.currentColor)
                },
                openMenu: function() {
                    var e = this;
                    this.isMenuActive = !0, this.closeCallback = function(t) {
                        Og(t.target, e.$refs.menu) || Og(t.target, e.$refs.guide) || e.closeMenu()
                    }, document.addEventListener("mousedown", this.closeCallback)
                }
            }
        },
        tv = function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "verte",
                class: {
                    "verte--loading": e.isLoading
                }
            }, [e.menuOnly ? e._e() : i("button", {
                ref: "guide",
                staticClass: "verte__guide",
                style: "color: " + e.currentColor + "; fill: " + e.currentColor + ";",
                attrs: {
                    type: "button"
                },
                on: {
                    click: e.toggleMenu
                }
            }, [e._t("default", [i("svg", {
                staticClass: "verte__icon",
                attrs: {
                    viewBox: "0 0 24 24"
                }
            }, [i("pattern", {
                attrs: {
                    id: "checkerboard",
                    width: "6",
                    height: "6",
                    patternUnits: "userSpaceOnUse",
                    fill: "FFF"
                }
            }, [i("rect", {
                attrs: {
                    fill: "#7080707f",
                    x: "0",
                    width: "3",
                    height: "3",
                    y: "0"
                }
            }), i("rect", {
                attrs: {
                    fill: "#7080707f",
                    x: "3",
                    width: "3",
                    height: "3",
                    y: "3"
                }
            })]), i("circle", {
                attrs: {
                    cx: "12",
                    cy: "12",
                    r: "12",
                    fill: "url(#checkerboard)"
                }
            }), i("circle", {
                attrs: {
                    cx: "12",
                    cy: "12",
                    r: "12"
                }
            })])])], 2), i("div", {
                staticClass: "verte__menu-origin",
                class: ["verte__menu-origin--" + e.menuPosition, {
                    "verte__menu-origin--static": e.menuOnly,
                    "verte__menu-origin--active": e.isMenuActive
                }]
            }, [i("div", {
                ref: "menu",
                staticClass: "verte__menu",
                style: "transform: translate(" + e.delta.x + "px, " + e.delta.y + "px)",
                attrs: {
                    tabindex: "-1"
                }
            }, [e.menuOnly ? e._e() : i("button", {
                staticClass: "verte__close",
                attrs: {
                    type: "button"
                },
                on: {
                    click: e.closeMenu
                }
            }, [i("svg", {
                staticClass: "verte__icon verte__icon--small",
                attrs: {
                    viewBox: "0 0 24 24"
                }
            }, [i("title", [e._v("Close Icon")]), i("path", {
                attrs: {
                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                }
            })])]), e.draggable && !e.menuOnly ? i("div", {
                staticClass: "verte__draggable",
                on: {
                    mousedown: e.handleMenuDrag,
                    touchstart: e.handleMenuDrag
                }
            }) : e._e(), i("Picker", {
                attrs: {
                    mode: e.picker,
                    alpha: e.alpha
                },
                props: {
                    edge: e.pickerEdge
                },
                model: {
                    value: e.currentColor,
                    callback: function(t) {
                        e.currentColor = t
                    },
                    expression: "currentColor"
                }
            }), i("div", {
                staticClass: "verte__controller"
            }, [e.enableAlpha ? i("Slider", {
                attrs: {
                    gradient: ["rgba(" + e.rgb.red + ", " + e.rgb.green + ", " + e.rgb.blue + ", 0)", "rgba(" + e.rgb.red + ", " + e.rgb.green + ", " + e.rgb.blue + ", 1)"],
                    min: 0,
                    max: 1,
                    step: .01,
                    editable: !1
                },
                model: {
                    value: e.alpha,
                    callback: function(t) {
                        e.alpha = t
                    },
                    expression: "alpha"
                }
            }) : e._e(), e.rgbSliders ? [i("Slider", {
                attrs: {
                    gradient: ["rgb(0," + e.rgb.green + "," + e.rgb.blue + ")", "rgb(255," + e.rgb.green + "," + e.rgb.blue + ")"]
                },
                model: {
                    value: e.rgb.red,
                    callback: function(t) {
                        e.$set(e.rgb, "red", t)
                    },
                    expression: "rgb.red"
                }
            }), i("Slider", {
                attrs: {
                    gradient: ["rgb(" + e.rgb.red + ",0," + e.rgb.blue + ")", "rgb(" + e.rgb.red + ",255," + e.rgb.blue + ")"]
                },
                model: {
                    value: e.rgb.green,
                    callback: function(t) {
                        e.$set(e.rgb, "green", t)
                    },
                    expression: "rgb.green"
                }
            }), i("Slider", {
                attrs: {
                    gradient: ["rgb(" + e.rgb.red + "," + e.rgb.green + ",0)", "rgb(" + e.rgb.red + "," + e.rgb.green + ",255)"]
                },
                model: {
                    value: e.rgb.blue,
                    callback: function(t) {
                        e.$set(e.rgb, "blue", t)
                    },
                    expression: "rgb.blue"
                }
            })] : e._e(), i("div", {
                staticClass: "verte__inputs"
            }, [i("button", {
                staticClass: "verte__model",
                attrs: {
                    type: "button"
                },
                on: {
                    click: e.switchModel
                }
            }, [e._v(e._s(e.currentModel))]), "hsl" === e.currentModel ? [i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    max: "360",
                    min: "0"
                },
                domProps: {
                    value: e.hsl.hue
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "hue")
                    }
                }
            }), i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    min: "0",
                    max: "100"
                },
                domProps: {
                    value: e.hsl.sat
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "sat")
                    }
                }
            }), i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    min: "0",
                    max: "100"
                },
                domProps: {
                    value: e.hsl.lum
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "lum")
                    }
                }
            })] : e._e(), "rgb" === e.currentModel ? [i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    min: "0",
                    max: "255"
                },
                domProps: {
                    value: e.rgb.red
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "red")
                    }
                }
            }), i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    min: "0",
                    max: "255"
                },
                domProps: {
                    value: e.rgb.green
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "green")
                    }
                }
            }), i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "number",
                    min: "0",
                    max: "255"
                },
                domProps: {
                    value: e.rgb.blue
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "blue")
                    }
                }
            })] : e._e(), "hex" === e.currentModel ? [i("input", {
                staticClass: "verte__input",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: e.hex
                },
                on: {
                    change: function(t) {
                        e.inputChanged(t, "hex")
                    }
                }
            })] : e._e(), i("button", {
                staticClass: "verte__submit",
                attrs: {
                    type: "button"
                },
                on: {
                    click: e.submit
                }
            }, [i("title", [e._v("Submit Icon")]), i("svg", {
                staticClass: "verte__icon",
                attrs: {
                    viewBox: "0 0 24 24"
                }
            }, [i("path", {
                attrs: {
                    d: "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                }
            })])])], 2), e.showHistory ? i("div", {
                ref: "recent",
                staticClass: "verte__recent"
            }, e._l(e.historySource, (function(t) {
                return i("a", {
                    staticClass: "verte__recent-color",
                    style: "color: " + t,
                    attrs: {
                        role: "button",
                        href: "#"
                    },
                    on: {
                        click: function(i) {
                            i.preventDefault(), e.selectColor(t)
                        }
                    }
                })
            }))) : e._e()], 2)], 1)])])
        };
    tv._withStripped = !0;
    var iv = function(e, t, i, r, n, s, o, a) {
        var l = ("function" == typeof i ? i.options : i) || {};
        return l.__file = "/mnt/c/Users/Abdelrahman/Projects/verte/src/components/Verte.vue", l.render || (l.render = e.render, l.staticRenderFns = e.staticRenderFns, l._compiled = !0, n && (l.functional = !0)), l._scopeId = r, l
    }({
        render: tv,
        staticRenderFns: []
    }, 0, ev, void 0, !1);

    function rv(e) {
        return e.substring(4, e.length - 1).split(",").map(e => e / 255)
    }
    const {
        mapState: nv,
        mapGetters: sv
    } = Ma("viewer");
    const ov = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return e.active ? i("div", {
                    staticClass: "color-picker p-b-6",
                    style: e.colorPickerStyle,
                    on: {
                        click: function(e) {
                            e.stopPropagation()
                        }
                    }
                }, [i("BIMDataColorPicker", {
                    attrs: {
                        display: "widget",
                        model: "rgb",
                        pickerEdge: 155,
                        enableAlpha: !1
                    },
                    model: {
                        value: e.choosedColor,
                        callback: function(t) {
                            e.choosedColor = t
                        },
                        expression: "choosedColor"
                    }
                }), e._v(" "), i("div", {
                    staticClass: "color-picker__btn m-t-6"
                }, [i("BIMDataButton", {
                    staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                    attrs: {
                        width: "100%"
                    },
                    on: {
                        click: function(t) {
                            return e.validateColorize()
                        }
                    }
                }, [e._v("validate")])], 1)], 1) : e._e()
            },
            staticRenderFns: []
        }, void 0, {
            components: {
                BIMDataColorPicker: iv,
                BIMDataButton: Ml
            },
            data: () => ({
                colorizeActionDisplayed: !1,
                choosedColor: "rgb(47, 55, 74)",
                colorPickerStyle: null
            }),
            props: {
                active: {
                    type: Boolean,
                    required: !0
                },
                parent: HTMLElement
            },
            computed: {
                ...nv(["selectedObjectIds", "viewerBoundingClientRect"])
            },
            watch: {
                active(e) {
                    e && this.displayColorPicker()
                }
            },
            methods: {
                validateColorize() {
                    this.$hub.emit("colorize-objects", {
                        ids: this.selectedObjectIds,
                        color: rv(this.choosedColor)
                    }), this.displayedColorPicker = !1, this.$emit("active-change", !1), this.$hub.emit("deselect-objects", {
                        ids: this.selectedObjectIds
                    })
                },
                displayColorPicker() {
                    const {
                        x: e,
                        y: t,
                        width: i,
                        height: r
                    } = this.viewerBoundingClientRect, {
                        x: n,
                        y: s,
                        width: o,
                        height: a
                    } = this.parent.getBoundingClientRect(), l = n + window.scrollX + o + 177 > i + e, c = s + a + 244 > r + t;
                    this.colorPickerStyle = {
                        [c ? "bottom" : "top"]: 0,
                        [l ? "right" : "left"]: "100%"
                    }, this.displayedColorPicker = !this.displayedColorPicker
                }
            }
        }, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: av,
            mapGetters: lv
        } = Ma("viewer");
    const cv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return e.displayed && e.currentCommands.length ? i("ul", {
                directives: [{
                    name: "clickaway",
                    rawName: "v-clickaway",
                    value: e.away,
                    expression: "away"
                }],
                staticClass: "bimdata-list bimdata-right-click-menu",
                style: e.position
            }, e._l(e.currentCommands, (function(t, r) {
                return i("LiWrapper", {
                    key: t.label,
                    nativeOn: {
                        click: function(i) {
                            return e.executeCommand(t)
                        }
                    }
                }, [e.isGroupIntersection(r) ? i("div", {
                    staticClass: "separator"
                }) : e._e(), e._v(" "), i("div", {
                    staticClass: "menu-text"
                }, [e._v(e._s(e.$t(t.label)))]), e._v(" "), !t.component && t.picto ? i("span", {
                    staticClass: "menu-picto"
                }, [e._v(e._s(t.picto))]) : t.component ? i("BIMDataIcon", {
                    staticClass: "icon-chevron",
                    attrs: {
                        "icon-name": "chevron-right",
                        width: "8",
                        height: "8",
                        x: "13",
                        y: "23"
                    }
                }, [i("BIMDataChevronRightIcon")], 1) : e._e(), e._v(" "), t.component ? i("ComponentWrapper", {
                    attrs: {
                        command: t
                    },
                    on: {
                        close: e.away
                    }
                }) : e._e()], 1)
            })), 1) : e._e()
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-1c01ffe1_0", {
            source: ".bimdata-right-click-menu{padding:9px 0;position:absolute;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.12);border-radius:3px;list-style:none;z-index:2}.bimdata-right-click-menu li{height:calc(12px * 3);padding:0 12px;cursor:pointer;display:flex;align-items:center;justify-content:space-between;position:relative}.bimdata-right-click-menu li:hover{background-color:#f8f8f8}.bimdata-right-click-menu li .separator{position:absolute;top:0;left:0;background-color:#d8d8d8;height:1px;width:100%}.bimdata-right-click-menu li .menu-text{color:#2f374a;font-size:.8571428571em}.bimdata-right-click-menu li .menu-picto{font-size:.7142857143em}",
            map: void 0,
            media: void 0
        })
    }), {
        data: () => ({
            displayed: !1,
            top: null,
            bottom: null,
            left: null,
            width: 200,
            defaultCommands: [],
            currentCommands: [],
            contextCommand: [],
            registeredCommands: []
        }),
        directives: {
            clickaway: Pl
        },
        components: {
            LiWrapper: {
                render(e) {
                    return e("li", this.$slots.default)
                }
            },
            ComponentWrapper: {
                data: () => ({
                    active: !1
                }),
                created() {
                    this.$parent.$parent.$on(`toggle-${this.command.name}`, () => {
                        this.active = !this.active
                    })
                },
                props: {
                    command: {
                        required: !0,
                        validator: e => !!e.component && !!e.name
                    }
                },
                render(e) {
                    return e(this.command.component, {
                        props: {
                            active: this.active,
                            parent: this.$parent.$el
                        },
                        on: {
                            "active-change": e => {
                                this.active = e, !1 === e && this.$emit("close")
                            }
                        }
                    })
                }
            },
            BIMDataIcon: El,
            BIMDataChevronRightIcon: ql,
            BIMDataButton: Ml
        },
        computed: {
            ...lv(["allIds", "idsByTypeOf"]),
            ...av(["viewerBoundingClientRect", "viewerComponent", "viewerElement", "selectedObjectIds", "objectsWithRepresentation"]),
            position() {
                return {
                    top: this.top ? this.top + "px" : "unset",
                    bottom: this.bottom ? this.bottom + "px" : "unset",
                    left: this.left + "px",
                    width: this.width + "px"
                }
            }
        },
        created() {
            this.viewerComponent.$on("right-click", e => this.open(e)), this.registerDefaultCommands()
        },
        detroyed() {
            this.unregisterDefaultCommands()
        },
        methods: {
            isGroupIntersection(e) {
                if (0 === e) return !1;
                const t = this.currentCommands[e - 1],
                    i = this.currentCommands[e];
                null == t.group || t.group, null == i.group || i.group;
                return t.group < i.group
            },
            unregisterDefaultCommands() {
                this.defaultCommands.forEach(e => {
                    e.picto && this.$plugins.keyboardShortcutsManager.unregisterKeyboardShortcut(e.picto.toLowerCase(), e.execute)
                })
            },
            registerDefaultCommands() {
                this.defaultCommands = [{
                    label: "right_click.select_all",
                    picto: "C",
                    execute: () => this.$hub.emit("select-objects", {
                        ids: new Set(this.allIds)
                    }),
                    predicate: () => !this.selectedObjectIds.size
                }, {
                    label: "right_click.deselect_all",
                    group: 1,
                    position: 1,
                    picto: "V",
                    execute: () => this.$hub.emit("deselect-objects", {
                        ids: this.selectedObjectIds
                    }),
                    predicate: () => !!this.selectedObjectIds.size
                }, {
                    label: "right_click.select_similar",
                    picto: "Y",
                    group: 1,
                    position: 2,
                    execute: () => this.selectedObjectIds.size ? this.$hub.emit("select-objects", {
                        ids: new Set(this.idsByTypeOf(this.selectedObjectIds))
                    }) : this.$hub.emit("alert", {
                        type: "infos",
                        message: this.$t("right_click.no_selection")
                    }),
                    predicate: () => 1 === this.selectedObjectIds.size
                }, {
                    label: "right_click.reverse_selection",
                    group: 1,
                    position: 3,
                    execute: () => {
                        const e = new Set(this.selectedObjectIds);
                        this.selectedObjectIds.size > 0 && this.$hub.emit("deselect-objects", {
                            ids: this.selectedObjectIds
                        }), this.$hub.emit("select-objects", {
                            ids: Set.difference(new Set(this.objectsWithRepresentation.flat().map(e => e.uuid)), e)
                        })
                    },
                    predicate: () => !!this.selectedObjectIds.size
                }, {
                    label: "right_click.hide",
                    picto: "H",
                    group: 2,
                    position: 3,
                    execute: () => this.$hub.emit("hide-objects", {
                        ids: this.selectedObjectIds
                    }),
                    predicate: () => this.selectedObjectIds.size
                }, {
                    name: "color-picker",
                    label: "right_click.colorize",
                    group: 2,
                    position: 4,
                    component: ov,
                    predicate: () => this.selectedObjectIds.size
                }], this.defaultCommands.forEach(e => {
                    this.registerCommand(e), e.picto && this.$plugins.keyboardShortcutsManager.registerKeyboardShortcut(e.picto.toLowerCase(), e.execute)
                })
            },
            registerContextCommand(e) {
                this.contextCommand.push(e)
            },
            registerCommand(e) {
                this.registeredCommands.push(e)
            },
            unregisterCommand(e) {
                return !!this.registeredCommands.find(t => t === e) && (this.registeredCommands = this.registeredCommands.filter(t => t !== e), !0)
            },
            async open(e) {
                this.setPosition(e), await this.setcurrentCommands(), this.displayed = !0
            },
            setPosition(e) {
                const t = this.viewerElement.getBoundingClientRect();
                this.left = e.clientX - t.left, this.top = e.clientY - t.top, this.left + this.width > t.right && (this.left = this.left - this.width), e.clientY > t.top + t.height / 2 ? (this.bottom = t.height - this.top, this.top = null) : this.bottom = null
            },
            setcurrentCommands() {
                return this.currentCommands = [], new Promise(e => {
                    setTimeout(() => {
                        this.currentCommands = this.registeredCommands.filter(e => e.predicate && e.predicate()), this.currentCommands.push(...this.contextCommand);
                        const t = new Map;
                        this.currentCommands.forEach(e => {
                            null === e.group || void 0 === e.group ? t.has(null) ? t.get(null).push(e) : t.set(null, [e]) : t.has(e.group) ? t.get(e.group).push(e) : t.set(e.group, [e])
                        }), t.forEach(e => e.sort((e, t) => (e.position = e.position || 0, t.position = t.position || 0, e.position > t.position ? 1 : e.position < t.position ? -1 : 0)));
                        const i = [...t.keys()].sort().map(e => t.get(e)).flat();
                        this.currentCommands = i, this.contextCommand = [], e()
                    })
                })
            },
            executeCommand(e) {
                if (e.execute && (e.execute(), this.displayed = !1), e.component) {
                    if (!e.name) throw new Error("Command with component property must have a name property");
                    this.$emit(`toggle-${e.name}`)
                }
            },
            away() {
                this.displayed = !1
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const hv = gl({}, void 0, {
        data: () => ({
            handlers: new Map
        }),
        render: () => null,
        created() {
            this.$store.commit("viewer/REGISTER_KEYBOARD_SHORTCUTS_MANAGER", this), document.addEventListener("keydown", this.handleKeyboardEvent)
        },
        destroyed() {
            document.removeEventListener("keydown", this.handleKeyboardEvent)
        },
        methods: {
            handleKeyboardEvent(e) {
                if ("INPUT" !== e.target.tagName && "TEXTAREA" !== e.target.tagName && !event.ctrlKey && !event.metaKey) {
                    const t = this.handlers.get(e.key.toUpperCase());
                    t && t()
                }
            },
            registerKeyboardShortcut(e = "", t) {
                if (this.handlers.get(e.toUpperCase())) throw new Error(`Keyboard shortcuts : An action is already registered for this key ${e}`);
                e && t && this.handlers.set(e.toUpperCase(), t)
            },
            unregisterKeyboardShortcut(e, t) {
                return this.handlers.get(e.toUpperCase()) === t && this.handlers.delete(e.toUpperCase())
            }
        }
    }, void 0, void 0, void 0, !1, void 0, void 0, void 0);
    var dv = {
            name: "viewer3D",
            component: tg,
            i18n: {
                en: {
                    viewer3D: {
                        no_element_selected: "No element selected"
                    }
                },
            }
        },
        uv = {
            name: "rightClickMenu",
            component: cv,
            contexts: ["3D", "2D"],
            i18n: {
                en: {
                    right_click: {
                        select_all: "Select all",
                        deselect_all: "Clear selection",
                        select_similar: "Select similar elements",
                        hide_all: "Hide all",
                        show_all: "Display hidden elements",
                        hide: "Hide",
                        isolate: "Isolate",
                        reintegrate: "Reintegrate",
                        fit_view: "Fit View",
                        colorize: "Colorize",
                        no_selection: "No object selected",
                        reverse_selection: "Reverse selection"
                    }
                },
            }
        },
        pv = {
            name: "model",
            keepActive: !0,
            component: fc,
            display: {
                content: "header"
            },
            i18n: {
                en: {
                    model: {
                        select_ifc: "Please select an IFC",
                        selected_models: "Selected models"
                    }
                },
            }
        };
    var fv = {
        name: "section",
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return e.active ? i("div", {
                    staticClass: "bimdata-section"
                }, [i("main", [i("div", {
                    staticClass: "bimdata-section__axis"
                }, [i("BIMDataButton", {
                    staticClass: "bimdata-btn__outline bimdata-btn__outline--default bimdata-btn__radius",
                    attrs: {
                        width: "27px",
                        height: "27px"
                    },
                    on: {
                        click: function(t) {
                            return e.createSectionPlaneOnAxis("x")
                        }
                    }
                }, [e._v("+")]), e._v(" "), i("span", [e._v("X")])], 1), e._v(" "), i("div", {
                    staticClass: "bimdata-section__axis"
                }, [i("BIMDataButton", {
                    staticClass: "bimdata-btn__outline bimdata-btn__outline--default bimdata-btn__radius",
                    attrs: {
                        width: "27px",
                        height: "27px"
                    },
                    on: {
                        click: function(t) {
                            return e.createSectionPlaneOnAxis("y")
                        }
                    }
                }, [e._v("+")]), e._v(" "), i("span", [e._v("Y")])], 1), e._v(" "), i("div", {
                    staticClass: "bimdata-section__axis"
                }, [i("BIMDataButton", {
                    staticClass: "bimdata-btn__outline bimdata-btn__outline--default bimdata-btn__radius",
                    attrs: {
                        width: "27px",
                        height: "27px"
                    },
                    on: {
                        click: function(t) {
                            return e.createSectionPlaneOnAxis("z")
                        }
                    }
                }, [e._v("+")]), e._v(" "), i("span", [e._v("Z")])], 1)]), e._v(" "), i("BIMDataButton", {
                    staticClass: "bimdata-btn__outline bimdata-btn__outline--default bimdata-btn__radius m-t-12",
                    attrs: {
                        width: "100%"
                    },
                    on: {
                        click: e.onDeleteClick
                    }
                }, [e._v(e._s(e.$t("section.section_btn")))])], 1) : e._e()
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-cdc3fca0_0", {
                source: ".bimdata-section{align-items:center}.bimdata-section main{width:100%;display:flex;justify-content:space-between}.bimdata-section__axis{display:flex;justify-content:center;align-items:center}.bimdata-section__axis .bimdata-btn{margin-right:8px;border:1px solid #d8d8d8;border-radius:3px}.bimdata-section__axis span{font-size:.8571428571em;font-weight:700}.bimdata-section__axis:last-child{margin-right:0}.overlapped{opacity:.5}",
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataButton: Ml
            },
            props: {
                active: {
                    type: Boolean,
                    required: !0
                }
            },
            watch: {
                active: {
                    handler(e) {
                        this.$hub.emit("set-section-mode", {
                            active: e,
                            trigger: this
                        })
                    }
                }
            },
            methods: {
                onDeleteClick() {
                    this.$hub.emit("delete-section-plane", {
                        trigger: this
                    })
                },
                createSectionPlaneOnAxis(e) {
                    this.$hub.emit("create-section-plane", {
                        axis: e,
                        trigger: this
                    })
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        tooltip: "section.tooltip",
        keepActive: !0,
        overlapWith: ["projection"],
        display: {
            iconPosition: "right",
            content: "simple"
        },
        icon: {
            component: gl({
                render: function() {
                    var e = this.$createElement,
                        t = this._self._c || e;
                    return t("g", [t("path", {
                        attrs: {
                            d: "M0,19.2V6.7l11.6-6.3v9.4L7.8,8.1c0,0-1.9-1-2.9,0.7c-1.3,2.1,0.2,2.8,0.4,2.9 c0.2,0.1,4.8,2.2,4.8,2.2L0,19.2z"
                        }
                    }), this._v(" "), t("path", {
                        attrs: {
                            d: "M15.3,9.8l1.3-0.6l2.7,6.9l-6.9,2.8l-0.8-1.1l4.5-2L6,11.2c0,0-0.6-0.2-0.1-1.2 c0.5-0.8,1.3-0.4,1.3-0.4l9.8,4.6L15.3,9.8z"
                        }
                    })])
                },
                staticRenderFns: []
            }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
            props: {
                name: "section",
                height: 21
            }
        },
        i18n: {
            en: {
                section: {
                    tooltip: "Section",
                    section_btn: "Delete"
                }
            },
        }
    };
    const _v = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("label", {
                staticClass: "bimdata-radio"
            }, [i("input", {
                attrs: {
                    type: "radio",
                    name: e.name,
                    id: e.id
                },
                domProps: {
                    checked: e.selectedValue === e.value,
                    value: e.value
                },
                on: {
                    input: e.onInput
                }
            }), e._v(" "), i("span", {
                staticClass: "bimdata-radio__text"
            }, [e._v(e._s(e.text))])])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-0bf6a9e9_0", {
            source: '.bimdata-radio{position:relative;color:#2f374a;line-height:1.5}.bimdata-radio>input{margin:0;width:30px;height:30px;position:absolute;left:-5px;top:-5px;border-radius:50%;background-color:rgba(47,55,74,.6);outline:0;opacity:0;transform:scale(1);pointer-events:none;transition:opacity .3s,transform .2s;appearance:none;z-index:-1}.bimdata-radio>input:checked{background-color:rgba(47,55,74,.4)}.bimdata-radio>input:checked+span::before{border-color:#2f374a}.bimdata-radio>input:checked+span::after{transform:translate(5px,5px) scale(1)}.bimdata-radio>input:active{opacity:1;transform:scale(0);transition:transform 0s,opacity 0s}.bimdata-radio>input:active+span::before{border-color:#2f374a}.bimdata-radio>span{padding-left:28px;display:flex;align-items:center;cursor:pointer}.bimdata-radio>span::after,.bimdata-radio>span::before{content:"";display:block;position:absolute;top:0;left:0;border-radius:50%;transition:all .2s ease}.bimdata-radio>span::before{border:1.5px solid rgba(47,55,74,.6);width:20px;height:20px}.bimdata-radio>span::after{width:10px;height:10px;background-color:#2f374a;transform:translate(5px,5px) scale(0)}.bimdata-radio:hover>input:focus{opacity:.2}',
            map: void 0,
            media: void 0
        })
    }), {
        model: {
            prop: "selectedValue"
        },
        props: {
            text: {
                type: String,
                default: null
            },
            name: {
                type: String,
                default: "option"
            },
            id: {
                type: [String, Number]
            },
            value: {},
            selectedValue: {}
        },
        methods: {
            onInput() {
                this.$emit("input", this.value)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    var mv = {
        data: () => ({
            options: ["perspective", "ortho", "firstperson"],
            selectedProjection: null
        }),
        components: {
            BIMDataRadio: _v
        },
        props: {
            cfg: {
                type: Object,
                default: () => ({})
            }
        },
        created() {
            this.$hub.on("set-projection-type", e => {
                if (e.trigger !== this) {
                    if (!this.options.includes(e.projection)) throw new Error(`Projection plugin does not support ${e.projection} projection type.`);
                    this.selectedProjection = e.projection
                }
            }), this.cfg.options && this.cfg.options.length && (this.options = this.cfg.options, this.selectedProjection = this.options[0])
        },
        mounted() {
            const e = this.$plugins.viewer3D;
            if (!e) throw new Error("Plugin Projection cannot work without viewer3D plugin.");
            this.selectedProjection = e.getProjection()
        },
        watch: {
            selectedProjection: {
                handler(e) {
                    this.$emit("set-button-text", e)
                },
                immediate: !0
            }
        },
        methods: {
            onProjectionInput(e) {
                this.$hub.emit("set-projection-type", {
                    projection: e,
                    trigger: this
                }), this.selectedProjection = e, this.$emit("set-inactive")
            }
        }
    };
    var gv = {
            projection: {
                tooltip: "Projection",
                perspective: "Perspective",
                ortho: "Ortho",
                firstperson: "First person"
            }
        },
        vv = {
            projection: {
                tooltip: "Projection",
                perspective: "Perspective",
                ortho: "Ortho",
                firstperson: "Première personne"
            }
        };
    var bv = {
        name: "projection",
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "bimdata-projection"
                }, e._l(e.options, (function(t) {
                    return i("div", {
                        key: t,
                        staticClass: "bimdata-projection__content"
                    }, [i("BIMDataRadio", {
                        attrs: {
                            text: e.$t("projection." + t),
                            id: t,
                            value: t,
                            name: "projection",
                            selectedValue: e.selectedProjection
                        },
                        on: {
                            input: function(i) {
                                return e.onProjectionInput(t)
                            }
                        }
                    })], 1)
                })), 0)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-07314e54_0", {
                source: ".bimdata-projection__content{margin-top:11px}.bimdata-projection__content label{font-size:.8571428571em;z-index:2}.bimdata-projection__content:first-child{margin-top:0}",
                map: void 0,
                media: void 0
            })
        }), mv, void 0, !1, void 0, !1, bl, void 0, void 0),
        tooltip: "projection.tooltip",
        display: {
            iconPosition: "right",
            content: "simple"
        },
        icon: {
            component: gl({
                render: function() {
                    var e = this.$createElement;
                    return (this._self._c || e)("path", {
                        attrs: {
                            d: "M4.9,5.9c-1,0-1.8-0.8-1.8-1.7s0.8-1.7,1.8-1.7s1.8,0.8,1.8,1.7S5.9,5.9,4.9,5.9 M20.1,0.7 l-3.1,3.1V1.3c0-0.7-0.6-1.3-1.3-1.3H1.3C0.6,0,0,0.6,0,1.3v9.1c0,0.7,0.6,1.3,1.3,1.3h14.3c0.7,0,1.3-0.6,1.3-1.3V7.5l3.1,3.1\nc0.3,0.3,0.9,0.1,0.9-0.4V1.1C21,0.6,20.4,0.3,20.1,0.7"
                        }
                    })
                },
                staticRenderFns: []
            }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
            props: {
                name: "projection",
                width: 21,
                height: 12,
                x: 21,
                y: 12
            }
        },
        i18n: {
            en: gv,
            fr: vv
        }
    };
    const {
        mapState: yv
    } = Ma("viewer");
    var wv = {
        name: "selectOptions",
        contexts: ["3D", "2D"],
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "bimdata-select-options"
                }, e._l(e.selectionModes, (function(t) {
                    return i("div", {
                        key: t,
                        staticClass: "bimdata-select-options__content"
                    }, [i("BIMDataRadio", {
                        attrs: {
                            text: e.$t("select_options.by_" + t),
                            id: t,
                            value: t
                        },
                        model: {
                            value: e.selectedMode,
                            callback: function(t) {
                                e.selectedMode = t
                            },
                            expression: "selectedMode"
                        }
                    })], 1)
                })), 0)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-456613f6_0", {
                source: ".bimdata-select-options__content{margin-top:11px;display:flex;align-items:center;position:relative}.bimdata-select-options__content label{font-size:.8571428571em;z-index:2}.bimdata-select-options__content:first-child{margin-top:0}",
                map: void 0,
                media: void 0
            })
        }), {
            data: () => ({
                selectedMode: null,
                shortcutCommands: []
            }),
            components: {
                BIMDataRadio: _v
            },
            computed: {
                ...yv({
                    selectionModes: e => e.selectionModes,
                    selectionMode: e => e.selectionMode
                })
            },
            created() {
                this.selectedMode = this.selectionMode, this.$hub.on("set-selection-mode", ({
                    mode: e,
                    trigger: t
                }) => {
                    t !== this && (this.selectedMode = e)
                }), this.shortcutCommands = [{
                    key: "o",
                    execute: () => this.$hub.emit("set-selection-mode", {
                        mode: "object"
                    })
                }, {
                    key: "t",
                    execute: () => this.$hub.emit("set-selection-mode", {
                        mode: "type"
                    })
                }], this.shortcutCommands.forEach(e => this.$plugins.keyboardShortcutsManager.registerKeyboardShortcut(e.key, e.execute))
            },
            destroyed() {
                this.shortcutCommands.forEach(e => this.$plugins.keyboardShortcutsManager.unregisterKeyboardShortcut(e.key, e.execute))
            },
            watch: {
                selectedMode(e) {
                    this.$hub.emit("set-selection-mode", {
                        mode: e,
                        trigger: this
                    }), this.$emit("set-button-text", e), this.$emit("set-inactive")
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        tooltip: "select_options.tooltip",
        display: {
            iconPosition: "right",
            content: "simple"
        },
        truncateSize: 3,
        icon: {
            component: gl({
                render: function() {
                    var e = this.$createElement;
                    return (this._self._c || e)("polygon", {
                        attrs: {
                            points: "18,0 0,7.5 0,8.5 6.8,11.2 9.5,18 10.5,18"
                        }
                    })
                },
                staticRenderFns: []
            }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
            props: {
                name: "selectOptions",
                height: 21,
                x: 18,
                y: 19
            }
        },
        i18n: {
            en: {
                select_options: {
                    tooltip: "Select options",
                    by_object: "Selection by object",
                    by_type: "Selection by type"
                }
            },
        }
    };
    const Mv = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Av = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-quick-select__search"
            }, [t("div", {
                staticClass: "bimdata-quick-select__search--picto"
            }, [t("BIMDataIcon", {
                attrs: {
                    "icon-name": "search",
                    width: "20",
                    height: "21",
                    x: "20",
                    y: "21"
                }
            }, [t("BIMDataSearchIcon")], 1)], 1), this._v(" "), t("input", {
                attrs: {
                    autocomplete: "off",
                    type: "text",
                    name: "search",
                    id: "search",
                    placeholder: "Search"
                },
                domProps: {
                    value: this.value
                },
                on: {
                    input: this.onInput
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataSearchIcon: Mv
        },
        props: {
            value: String
        },
        methods: {
            onInput(e) {
                this.$emit("input", e.currentTarget.value)
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const xv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("g", [i("ellipse", {
                staticClass: "bimdata-fill-border",
                attrs: {
                    cx: "115.3",
                    cy: "143.9",
                    rx: "27",
                    ry: "1.4"
                }
            }), e._v(" "), i("g", [i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M47.2,89.2c0,3.5,2.8,6.3,6.3,6.3s6.3-2.8,6.3-6.3c0-3.5-2.8-6.3-6.3-6.3S47.2,85.8,47.2,89.2z M53.5,86.3\n\t\t\tc1.6,0,3,1.3,3,3c0,1.6-1.3,3-3,3s-3-1.3-3-3C50.5,87.6,51.9,86.3,53.5,86.3z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M31.6,91.4c0,3.6,2.9,6.5,6.5,6.5s6.5-2.9,6.5-6.5s-2.9-6.5-6.5-6.5S31.6,87.8,31.6,91.4z M38.1,88.3\n\t\t\tc1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1S36.4,88.3,38.1,88.3z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M17.8,79v58.9c0,4.1,3.3,7.4,7.4,7.4c3.5,0,6.5-2.5,7.2-5.9c0.6,0.1,1.2,0.2,1.8,0.2c3.9,0,7-3,7.4-6.7\n\t\t\tc0.5,0.1,1.1,0.2,1.7,0.2h0.4c0.6,0,1.1-0.1,1.6-0.2v3.6c0,4.1,3.3,7.4,7.4,7.4c4,0,7.3-3.2,7.4-7.2c0.5,0.1,1.1,0.2,1.7,0.2\n\t\t\tc4.1,0,7.4-3.3,7.4-7.4V79c0-14.1-11.5-25.6-25.6-25.6S17.8,64.9,17.8,79z M26.8,123.6l0,14.3c0,0.9-0.7,1.7-1.6,1.7\n\t\t\tc-0.9,0-1.6-0.7-1.6-1.6V79c0-11,8.9-19.9,19.9-19.9c11,0,19.9,8.9,19.9,19.9v50.5c0,0.9-0.7,1.6-1.6,1.6s-1.6-0.7-1.6-1.6v-4.7\n\t\t\th-5.7v11.7c0,0.9-0.7,1.6-1.6,1.6c-0.9,0-1.6-0.7-1.6-1.6l0-24.1h-5.7v13.3c0,0.9-0.7,1.6-1.6,1.6h-0.4c-0.9,0-1.6-0.7-1.6-1.6\n\t\t\tv-3.6h-5.7l0,10.1c0,0.9-0.7,1.7-1.6,1.7c-0.9,0-1.6-0.7-1.6-1.6v-8.7H26.8z"
                }
            })]), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    cx: "78.6",
                    cy: "46.7",
                    r: "6.1"
                }
            }), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-secondary",
                attrs: {
                    cx: "96.6",
                    cy: "57.7",
                    r: "4.3"
                }
            }), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    cx: "80.3",
                    cy: "70.6",
                    r: "2.8"
                }
            }), e._v(" "), i("g", [i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M41.9,33.9l-0.1-1c-0.2-2.2,0.5-4.5,2.5-7c1.8-2.1,2.8-3.7,2.8-5.5c0-2.1-1.3-3.4-3.8-3.5\n\t\t\tc-1.4,0-3.1,0.5-4.1,1.2l-1-2.5c1.3-1,3.6-1.6,5.8-1.6c4.6,0,6.7,2.9,6.7,5.9c0,2.7-1.5,4.7-3.5,7c-1.8,2.1-2.4,3.9-2.3,5.9l0,1\n\t\t\tH41.9z M41.1,39.5c0-1.5,1-2.5,2.4-2.5c1.4,0,2.4,1,2.4,2.5c0,1.4-0.9,2.5-2.4,2.5C42,42,41.1,40.9,41.1,39.5z"
                }
            })]), e._v(" "), i("g", [i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "88.8",
                    y: "82.9",
                    width: "7.9",
                    height: "7.9"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "99.2",
                    y: "85.7",
                    width: "42.6",
                    height: "2.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "99.2",
                    y: "98.5",
                    width: "42.6",
                    height: "2.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "109.7",
                    y: "110.5",
                    width: "32.1",
                    height: "2.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "109.7",
                    y: "123.7",
                    width: "32.1",
                    height: "2.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "88.8",
                    y: "95.7",
                    width: "7.9",
                    height: "7.9"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "99.3",
                    y: "108.1",
                    width: "7.9",
                    height: "7.9"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "99.3",
                    y: "120.9",
                    width: "7.9",
                    height: "7.9"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "92",
                    y: "111.7",
                    width: "5.7",
                    height: "1.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "92",
                    y: "124.2",
                    width: "5.7",
                    height: "1.3"
                }
            }), e._v(" "), i("rect", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    x: "82.7",
                    y: "114.4",
                    transform: "matrix(-1.836970e-16 1 -1 -1.836970e-16 207.6002 22.3994)",
                    width: "19.8",
                    height: "1.3"
                }
            })])])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Cv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return e.active ? i("div", {
                staticClass: "bimdata-empty"
            }, [e._t("default"), e._v(" "), i("p", {
                staticClass: "m-t-6"
            }, [e._v(e._s(e.message))]), e._v(" "), e._t("footer")], 2) : e._e()
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-bc9c25e8_0", {
            source: ".bimdata-empty{height:100%;display:flex;flex-direction:column;align-items:center;justify-content:flex-start;color:#616060;text-align:center}.bimdata-empty h2{color:#2f374a}.bimdata-empty p{width:90%;color:#616060;line-height:1.5;text-transform:lowercase;font-size:.8571428571em}.bimdata-empty p::first-letter{text-transform:capitalize}",
            map: void 0,
            media: void 0
        })
    }), {
        props: {
            message: String,
            active: {
                type: Boolean,
                default: !0
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Pv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-quick-select__choose"
            }, [i("div", {
                staticClass: "bimdata-quick-select__choose--label",
                class: {
                    "not-empty": e.selectedValues.length
                }
            }, [i("ul", {
                staticClass: "bimdata-list bimdata-quick-select__choose-type",
                class: {
                    disabled: null === e.types
                },
                attrs: {
                    disabled: null === e.types
                }
            }, [e.types && e.types.length ? e._l(e.types, (function(t) {
                return i("li", {
                    key: t
                }, [i("BIMDataCheckbox", {
                    attrs: {
                        text: t
                    },
                    on: {
                        change: function(i) {
                            return e.selectedValueChange(t, i)
                        }
                    }
                })], 1)
            })) : i("BIMDataEmpty", {
                attrs: {
                    message: e.$t("quick_select.no_search")
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "empty-tree",
                    width: "0",
                    height: "0",
                    x: "160",
                    y: "160"
                }
            }, [i("BIMDataEmptyTreeIllustration")], 1)], 1)], 2)])])
        },
        staticRenderFns: []
    }, void 0, {
        data: () => ({
            selectedValues: []
        }),
        components: {
            BIMDataIcon: El,
            BIMDataEmptyTreeIllustration: xv,
            BIMDataCheckbox: Jl,
            BIMDataEmpty: Cv
        },
        props: {
            types: Array
        },
        directives: {
            clickaway: Pl
        },
        methods: {
            selectedValueChange(e, t) {
                t ? this.selectedValues.push(e) : this.selectedValues = this.selectedValues.filter(t => t !== e), this.$emit("selectedValuesChange", this.selectedValues)
            },
            displaySelectedValues: e => e.reduce((e, t, i, r) => e + ", " + t)
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const kv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("li", {
                on: {
                    mouseover: function(t) {
                        e.isButtonHover = !0
                    },
                    mouseleave: function(t) {
                        e.isButtonHover = !1
                    },
                    click: function(t) {
                        return e.onActionClick({
                            action: e.action
                        })
                    }
                }
            }, [i("transition", {
                attrs: {
                    name: "slide-fade-in-up"
                }
            }, [e.isButtonHover ? e._e() : e._t("default"), e._v(" "), e.isButtonHover ? i("span", [e._v(e._s(e.text))]) : e._e()], 2), e._v(" "), i("transition", {
                attrs: {
                    name: "slide-fade-down"
                }
            }, [e.colorPickerDisplayed ? i("div", {
                staticClass: "color-picker p-b-6"
            }, [i("colorPicker", {
                attrs: {
                    display: "widget",
                    model: "rgb",
                    pickerEdge: 155,
                    enableAlpha: !1
                },
                model: {
                    value: e.choosedColor,
                    callback: function(t) {
                        e.choosedColor = t
                    },
                    expression: "choosedColor"
                }
            }), e._v(" "), i("div", {
                staticClass: "color-picker__btns m-t-6"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__outline bimdata-btn__outline--grey bimdata-btn__radius",
                attrs: {
                    width: "48%"
                },
                on: {
                    click: function(t) {
                        return t.stopPropagation(), e.cancelColorPicker()
                    }
                }
            }, [e._v(e._s(e.$t("quick_select.btn_cancel")))]), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    width: "48%"
                },
                on: {
                    click: function(t) {
                        return t.stopPropagation(), e.validateColorPicker()
                    }
                }
            }, [e._v(e._s(e.$t("quick_select.btn_validate")))])], 1)], 1) : e._e()])], 1)
        },
        staticRenderFns: []
    }, void 0, {
        model: {
            prop: "colorPickerDisplayed",
            event: "colorPickerDisplayed"
        },
        data: () => ({
            isButtonHover: !1,
            choosedColor: "rgb(47, 55, 74)"
        }),
        components: {
            colorPicker: iv,
            BIMDataButton: Ml
        },
        props: {
            text: {
                type: String,
                required: !0
            },
            action: {
                type: String,
                required: !0
            },
            colorPickerDisplayed: {
                type: Boolean,
                default: !1
            }
        },
        watch: {
            choosedColor(e) {
                this.$emit("input", {
                    option: "colorize",
                    color: rv(e)
                })
            }
        },
        methods: {
            onActionClick(e) {
                "colorize" === e.action ? this.$emit("colorPickerDisplayed", !0) : this.$emit("action-click", e)
            },
            cancelColorPicker() {
                this.$emit("colorPickerDisplayed", !1), this.isButtonHover = !1
            },
            validateColorPicker() {
                this.$emit("action-click", {
                    action: "colorize",
                    color: rv(this.choosedColor)
                }), this.$emit("colorPickerDisplayed", !1), this.isButtonHover = !1
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ev = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M18.6 16.5998L12.9 11.9998L7.20001 7.2998L7.30001 14.5998V21.9998L11.6 16.3998L18.6 16.5998Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M7.60001 4.3C7.80001 4.3 7.90001 4.1 7.90001 4V0.3C7.90001 0.0999999 7.70001 0 7.60001 0C7.50001 0 7.20001 0.0999999 7.20001 0.3V3.9C7.20001 4.2 7.40001 4.3 7.60001 4.3Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M10.4 5.3L13 2.7C13.1 2.6 13.1 2.3 13 2.2C12.9 2.1 12.6 2.1 12.5 2.2L9.90001 4.8C9.80001 4.9 9.80001 5.2 9.90001 5.3C10 5.4 10.3 5.4 10.4 5.3Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M4.8 9.9002L2.2 12.5002C2.1 12.6002 2.1 12.9002 2.2 13.0002C2.3 13.1002 2.6 13.1002 2.7 13.0002L5.3 10.4002C5.4 10.3002 5.4 10.0002 5.3 9.9002C5.1 9.8002 4.9 9.8002 4.8 9.9002Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M10.9 7.60004C10.9 7.80004 11.1 7.90004 11.2 7.90004H14.8C15 7.90004 15.1 7.70004 15.1 7.60004C15.1 7.40004 14.9 7.30004 14.8 7.30004H11.2C11 7.20004 10.9 7.40004 10.9 7.60004Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M4.3 7.60004C4.3 7.40004 4.1 7.30004 4 7.30004H0.3C0.0999999 7.20004 0 7.40004 0 7.60004C0 7.80004 0.2 7.90004 0.3 7.90004H3.9C4.1 7.90004 4.3 7.80004 4.3 7.60004Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M2.7 2.2C2.6 2.1 2.3 2.1 2.2 2.2C2.1 2.4 2.1 2.6 2.2 2.7L4.8 5.3C4.9 5.4 5.1 5.4 5.3 5.3C5.4 5.2 5.4 4.9 5.3 4.8L2.7 2.2Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Iv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M11.4475 5.88086C10.8174 5.88086 10.1872 6.0909 9.66211 6.511L14.0731 10.922C14.3881 10.3968 14.7032 9.7667 14.7032 9.13657C14.5982 7.35118 13.1279 5.88086 11.4475 5.88086Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M11.4475 1.26074C9.34702 1.26074 7.45661 1.78586 5.77625 2.62604L8.19177 5.04156C9.13698 4.3064 10.1872 3.88631 11.4475 3.88631C14.2831 3.88631 16.6986 6.19682 16.6986 9.13745C16.6986 10.3977 16.2785 11.553 15.5434 12.3932L18.1689 15.0187C20.3744 13.6534 22.0548 11.553 23 9.13745C21.1096 4.41143 16.6986 1.26074 11.4475 1.26074Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M0.945206 0.73516L3.99087 3.78082C2.20548 5.14612 0.840183 6.93151 0 9.03196C1.78539 13.653 6.30137 16.8037 11.4475 16.8037C13.1279 16.8037 14.7032 16.4886 16.1735 15.8584L18.6941 18.379L19.4292 17.6438L1.68037 0L0.945206 0.73516ZM11.4475 14.2831C8.61187 14.2831 6.19635 11.9726 6.19635 9.03196C6.19635 8.19178 6.40639 7.3516 6.82648 6.61644L8.40183 8.19178C8.2968 8.40183 8.2968 8.7169 8.2968 9.03196C8.2968 10.7123 9.6621 12.1826 11.4475 12.1826C11.7626 12.1826 11.9726 12.1826 12.2877 12.0776L13.863 13.653C13.1279 14.0731 12.2877 14.2831 11.4475 14.2831Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Tv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M4.92858 10.6238L11.3905 13.581L17.8524 10.6238C17.9619 10.6238 18.0714 10.4048 18.0714 10.2952V3.28571C18.0714 3.17619 17.9619 3.06667 17.8524 2.95714L11.3905 0C11.281 0 11.1714 0 11.0619 0L6.57144 2.3C6.46191 2.40952 6.35239 2.51905 6.46191 2.7381C6.57144 2.84762 6.79049 2.95714 6.90001 2.84762L11.5 0.657143L17.0857 3.17619L11.3905 5.58571L5.14763 3.06667C5.0381 3.06667 4.92858 3.06667 4.81906 3.06667C4.81906 3.17619 4.70953 3.28571 4.70953 3.39524V10.4048C4.70953 10.5143 4.81906 10.6238 4.92858 10.6238ZM5.36668 3.83333L11.281 6.35238C11.3905 6.35238 11.5 6.35238 11.5 6.35238L17.5238 3.83333V10.1857L11.7191 12.8143V7.66667C11.7191 7.44762 11.6095 7.3381 11.3905 7.3381C11.1714 7.3381 11.0619 7.44762 11.0619 7.66667V12.8143L5.36668 10.1857V3.83333Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M18.9476 5.58105V10.4001C18.9476 10.8382 18.7286 11.1668 18.4 11.2763L11.6095 14.2334C11.6095 14.2334 11.6095 14.2334 11.5 14.2334H11.281H11.0619H10.9524L4.6 11.2763C4.27143 11.1668 4.05238 10.7287 4.05238 10.4001V5.58105C1.53333 6.78582 0 8.5382 0 10.5096C0 14.1239 5.14762 16.9715 11.5 16.9715C17.8524 16.9715 23 14.1239 23 10.5096C23 8.5382 21.4667 6.78582 18.9476 5.58105Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Dv = gl({
            render: function() {
                var e = this.$createElement;
                return (this._self._c || e)("path", {
                    attrs: {
                        d: "M11.405 0.00183247C5.89928 0.118975 1.7993 3.51609 0.393597 8.67035C-1.01211 13.8246 1.7993 17.9246 1.7993 17.9246C1.7993 17.9246 4.025 21.7903 8.35926 22.9617C10.9364 23.6645 13.5135 23.7817 16.2078 21.6731C16.2078 21.6731 16.6763 21.3217 16.5592 20.9703C16.4421 20.6188 15.6221 20.736 15.6221 20.736H14.2164C13.1621 20.736 12.2249 19.7988 12.2249 18.7446C12.2249 17.6903 13.1621 16.7531 14.2164 16.7531H18.3163C18.6678 16.7531 20.3078 16.7531 21.1277 15.4646C21.2449 15.2303 21.4792 14.8789 21.5963 14.6446C26.6334 5.39037 16.9106 -0.11531 11.405 0.00183247ZM4.49357 11.716C3.43929 11.716 2.50215 10.7789 2.50215 9.72462C2.50215 8.67035 3.43929 7.73321 4.49357 7.73321C5.54785 7.73321 6.48499 8.67035 6.48499 9.72462C6.48499 10.7789 5.54785 11.716 4.49357 11.716ZM8.35926 6.56179C7.30498 6.56179 6.36784 5.62465 6.36784 4.57037C6.36784 3.51609 7.30498 2.57896 8.35926 2.57896C9.41354 2.57896 10.3507 3.51609 10.3507 4.57037C10.3507 5.62465 9.53068 6.56179 8.35926 6.56179ZM14.8021 6.44465C13.7478 6.44465 12.8107 5.50751 12.8107 4.45323C12.8107 3.39895 13.7478 2.46182 14.8021 2.46182C15.8564 2.46182 16.7935 3.39895 16.7935 4.45323C16.7935 5.50751 15.8564 6.44465 14.8021 6.44465ZM18.7849 11.716C17.7306 11.716 16.7935 10.7789 16.7935 9.72462C16.7935 8.67035 17.7306 7.73321 18.7849 7.73321C19.8392 7.73321 20.7763 8.67035 20.7763 9.72462C20.6592 10.7789 19.8392 11.716 18.7849 11.716Z"
                    }
                })
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: Sv,
            mapGetters: Bv
        } = Ma("viewer");
    gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return e.active ? i("div", {
                staticClass: "bimdata-quick-select",
                class: {
                    "bimdata-quick-select__overlay": e.colorPickerDisplayed
                }
            }, [i("BIMDataQuickSelectSearch", {
                model: {
                    value: e.filter,
                    callback: function(t) {
                        e.filter = t
                    },
                    expression: "filter"
                }
            }), e._v(" "), i("BIMDataQuickSelectTypes", {
                attrs: {
                    types: e.filteredTypes
                },
                on: {
                    selectedValuesChange: e.onSelectedValuesChange
                }
            }), e._v(" "), i("div", {
                staticClass: "bimdata-quick-select__choose"
            }, [i("div", {
                staticClass: "bimdata-quick-select__choose--label"
            }, [i("ul", {
                staticClass: "bimdata-list bimdata-quick-select__choose-action"
            }, [i("BIMDataQuickSelectAction", {
                attrs: {
                    text: "select",
                    action: "select"
                },
                on: {
                    "action-click": e.onActionClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "select",
                    width: "15",
                    height: "19",
                    x: "19",
                    y: "22"
                }
            }, [i("BIMDataSelectIcon")], 1)], 1), e._v(" "), i("BIMDataQuickSelectAction", {
                attrs: {
                    text: "hide",
                    action: "hide"
                },
                on: {
                    "action-click": e.onActionClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "hide",
                    width: "19",
                    height: "16",
                    x: "23",
                    y: "19"
                }
            }, [i("BIMDataHideIcon")], 1)], 1), e._v(" "), i("BIMDataQuickSelectAction", {
                attrs: {
                    text: "isolate",
                    action: "isolate"
                },
                on: {
                    "action-click": e.onActionClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "isolate",
                    width: "21",
                    height: "17",
                    x: "23",
                    y: "17"
                }
            }, [i("BIMDataIsolateIcon")], 1)], 1), e._v(" "), i("BIMDataQuickSelectAction", {
                attrs: {
                    text: "color",
                    action: "colorize"
                },
                on: {
                    "action-click": e.onActionClick
                },
                model: {
                    value: e.colorPickerDisplayed,
                    callback: function(t) {
                        e.colorPickerDisplayed = t
                    },
                    expression: "colorPickerDisplayed"
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "color",
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "24"
                }
            }, [i("BIMDataColorIcon")], 1)], 1)], 1)])])], 1) : e._e()
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-6b674d5e_0", {
            source: '.bimdata-quick-select.submenu{padding:0;min-height:195px;justify-content:space-between}.bimdata-quick-select__search{margin:0 12px;height:34px;display:flex;align-items:center}.bimdata-quick-select__search input{margin-left:calc(12px / 2);width:100%;min-width:auto;min-height:calc(12px * 2);border:none}.bimdata-quick-select__search input:focus{outline:0}.bimdata-quick-select__choose{position:relative}.bimdata-quick-select__choose:first-child{margin-top:0}.bimdata-quick-select__choose--label{cursor:pointer}.bimdata-quick-select__choose--label .bimdata-checkbox__text{width:90%;text-transform:capitalize;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.bimdata-quick-select__choose-type{height:315px;min-height:315px;max-height:315px;overflow:auto;box-shadow:0 2px 10px 0 rgba(0,0,0,.1) inset}.bimdata-quick-select__choose-type li{padding:0 12px;height:32px}.bimdata-quick-select__choose-type li:hover{background-color:#f8f8f8}.bimdata-quick-select__choose-type li label{width:100%;height:100%;align-items:center;position:inherit;transform:inherit}.bimdata-quick-select__choose-type .bimdata-empty{margin:0;height:100%}.bimdata-quick-select__choose-action{display:flex;height:38px;align-items:center}.bimdata-quick-select__choose-action li{width:47px;height:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;position:relative;overflow:hidden}.bimdata-quick-select__choose-action li span{width:100%;text-align:center;position:relative;overflow:initial}.bimdata-quick-select__choose-action li span::after{content:"";display:block;position:absolute;width:4px;height:4px;background-color:#2f374a;border-radius:50%;left:21px;bottom:-6px}.bimdata-quick-select__choose-action li::after{content:"";display:block;position:absolute;width:1px;height:27px;background-color:#d8d8d8;right:0}.bimdata-quick-select__choose-action li:last-child{position:initial}.bimdata-quick-select__choose-action li:last-child::after{content:none}.bimdata-quick-select__choose-action .color-picker{left:5px;bottom:5px}.bimdata-quick-select__overlay:after{height:100%;width:100%;background-color:rgba(255,255,255,.8);top:0;left:0;content:"";display:block;position:absolute}',
            map: void 0,
            media: void 0
        })
    }), {
        name: "BIMDataQuickSelect",
        components: {
            BIMDataQuickSelectSearch: Av,
            BIMDataQuickSelectTypes: Pv,
            BIMDataQuickSelectAction: kv,
            BIMDataIcon: El,
            BIMDataSelectIcon: Ev,
            BIMDataHideIcon: Iv,
            BIMDataIsolateIcon: Tv,
            BIMDataColorIcon: Dv
        },
        data: () => ({
            structures: null,
            types: null,
            selectedColor: null,
            selectedValues: [],
            clickOptionSelected: null,
            colorPickerDisplayed: !1,
            filter: null
        }),
        props: {
            active: {
                type: Boolean,
                default: !1
            }
        },
        computed: {
            ...Bv(["typesOf", "allObjectsOfType"]),
            filteredTypes() {
                return this.filter ? this.types.filter(e => e.includes(this.filter)) : this.types
            }
        },
        created() {
            if (!this.$plugins.viewer3D) throw new Error("Quick select cannot work without viewer3D plugin.");
            this.$watch("active", () => {
                this.types = this.typesOf(this.$plugins.viewer3D.getAllObjectIds())
            }, {
                immediate: !0
            })
        },
        methods: {
            getAllUUIDsByType() {
                return this.selectedValues.flatMap(e => this.allObjectsOfType(e).map(e => e.uuid))
            },
            onSelectedValuesChange(e) {
                this.selectedValues = e
            },
            onActionClick(e) {
                if (!this.selectedValues.length) return this.$hub.emit("alert", {
                    type: "infos",
                    message: this.$t("quick_select.no_element")
                });
                const {
                    action: t,
                    color: i
                } = e, r = {};
                r.ids = new Set(this.getAllUUIDsByType());
                let n = null;
                switch (t) {
                    case "select":
                        n = "select-objects";
                        break;
                    case "hide":
                        n = "hide-objects";
                        break;
                    case "isolate":
                        n = "isolate-objects";
                        break;
                    case "colorize":
                        n = "colorize-objects", r.color = i
                }
                this.$hub.emit(n, r)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M13,3H5C3.9,3,3,3.9,3,5v8H2c-1.1,0-2-0.9-2-2V2c0-1.1,0.9-2,2-2h9c1.1,0,2,0.9,2,2V3z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M6,4h9c1.1,0,2,0.9,2,2v9c0,1.1-0.9,2-2,2H6c-1.1,0-2-0.9-2-2V6C4,4.9,4.9,4,6,4z M14.5,7l-5.5,5.5l-2.2-2.2\n  L6,11.1L8.9,14l6.3-6.3L14.5,7z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const jv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M5.1,3.9c-1.1,0-2,0.9-2,2s0.9,2,2,2s2-0.9,2-2S6.2,3.9,5.1,3.9z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M5.4,0L3,1.4l2.5,1.4V1.9C7.5,2,9.2,3.7,9.2,5.8c0,2.2-1.8,4-4.1,4S1,8,1,5.8 c0-1,0.4-2,1.1-2.7L1.3,2.5C0.5,3.4,0,4.5,0,5.8c0,2.7,2.3,5,5.1,5s5.1-2.2,5.1-5c0-2.6-2.1-4.8-4.8-4.9V0z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Lv = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M4.5,0C2,0,0,2,0,4.5c0,3.3,4.5,8.3,4.5 8.3s4.5-4.9,4.5-8.3C8.9,2,6.9,0,4.5,0z M4.5,6.1 c-0.9 0-1.6-0.7-1.6-1.6s0.7-1.6,1.6-1.6s1.6,0.7,1.6,1.6S5.3,6.1,4.5,6.1z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Rv = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M7.3,5.5V1.8L5.5,0L3.7,1.8v1.2H0v8.6h11V5.5H7.3z M2.4,10.4H1.2V9.2h1.2V10.4z M2.4,7.9H1.2 V6.7h1.2V7.9z M2.4,5.5H1.2V4.3h1.2V5.5z M6.1,10.4H4.9V9.2h1.2V10.4z M6.1,7.9H4.9V6.7h1.2V7.9z M6.1,5.5H4.9V4.3h1.2V5.5z M6.1,3.1H4.9V1.8h1.2V3.1z M9.8,10.4H8.6V9.2h1.2V10.4z M9.8,7.9H8.6V6.7h1.2V7.9z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ov = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M5.5,10.1L1,6.6L0,7.4l5.5,4.3L11,7.4l-1-0.8L5.5,10.1z M5.5,8.6L10,5.1l1-0.8L5.5,0L0,4.3 l1,0.8L5.5,8.6z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Fv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M11.2,0.2L1.7,5.6v10.9l9.5-5.5V0.2z M8,8.6L5.6,10V7.3L8,6V8.6z"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "11.8,0.2 11.8,11.1 14.7,12.7 14.7,5.4 17.8,7.2 17.8,14.5 21.3,16.5 21.3,5.6"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M11.5,22.8l-9.8-5.8l9.8-5.7l9.8,5.7L11.5,22.8z M2.3,17.1l9.2,5.4l9.2-5.4l-9.2-5.3L2.3,17.1z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Nv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("polygon", {
                attrs: {
                    points: "8,10.9 10.7,9.7 10.7,3.5 1,7.7"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "0.1,14.8 10.7,19.5 10.7,13.2 0.1,8.4"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "22,7.7 12.3,3.5 12.3,9.7 15,10.9"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "12.3,13.2 12.3,19.5 22.9,14.8 22.9,8.4"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Uv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("rect", {
                attrs: {
                    x: "8.9",
                    y: "0.5",
                    width: "13.3",
                    height: "3.9"
                }
            }), this._v(" "), t("rect", {
                attrs: {
                    x: "8.9",
                    y: "6.3",
                    width: "10.4",
                    height: "3.9"
                }
            }), this._v(" "), t("rect", {
                attrs: {
                    x: "8.9",
                    y: "12.1",
                    width: "7.4",
                    height: "3.9"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "7.1,0.5 3.2,0.5 3.2,17.9 0.7,17.9 2.9,20.2 5.1,22.5 7.3,20.2 9.5,17.9 7.1,17.9"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Hv = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("rect", {
                attrs: {
                    x: "5.1",
                    y: "5",
                    width: "12.7",
                    height: "2.6"
                }
            }), this._v(" "), t("rect", {
                attrs: {
                    x: "5.1",
                    y: "10.2",
                    width: "12.7",
                    height: "2.6"
                }
            }), this._v(" "), t("rect", {
                attrs: {
                    x: "5.1",
                    y: "15.3",
                    width: "12.7",
                    height: "2.6"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "8.9,0.5 3.1,0.5 0.5,0.5 0.5,3.1 0.5,8.8 3.1,8.8 3.1,3.1 8.9,3.1"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "19.9,14.2 19.9,19.9 14.1,19.9 14.1,22.5 19.9,22.5 22.5,22.5 22.5,19.9 22.5,14.2"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Vv = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M17.8,15.2c-1.1,0-2.1,0.5-2.8,1.3l-6.3-3.7c0.1-0.4,0.2-0.8,0.2-1.2c0-0.4-0.1-0.9-0.2-1.2L15,6.6\n\tc0.7,0.8,1.7,1.3,2.8,1.3c2.1,0,3.7-1.7,3.7-3.7s-1.7-3.7-3.7-3.7c-2.1,0-3.7,1.7-3.7,3.7c0,0.4,0.1,0.9,0.2,1.2L8,9.1\n\tC7.3,8.3,6.3,7.8,5.2,7.8c-2.1,0-3.7,1.7-3.7,3.7c0,2.1,1.7,3.7,3.7,3.7c1.1,0,2.1-0.5,2.8-1.3l6.3,3.7c-0.1,0.4-0.2,0.8-0.2,1.2\n\tc0,2.1,1.7,3.7,3.7,3.7c2.1,0,3.7-1.7,3.7-3.7C21.5,16.8,19.9,15.2,17.8,15.2z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const zv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("li", {
                staticClass: "node-template",
                attrs: {
                    id: "tree-" + e.treeIndex + "-node-" + e.node.id,
                    hidden: e.node.hidden
                }
            }, [e.active ? [e.node.hidden ? e._e() : i("div", {
                staticClass: "node",
                class: {
                    selected: e.node.selected
                },
                style: {
                    "padding-left": 12 * e.depth + "px"
                },
                on: {
                    click: function(t) {
                        return e.$listeners["label-click"](e.node)
                    }
                }
            }, [i("div", {
                staticClass: "node-tree__expand"
            }, [e.node.children && e.node.children.length ? i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost-icon",
                attrs: {
                    width: "16px",
                    height: "26px"
                },
                on: {
                    click: function(t) {
                        return t.stopPropagation(), e.$listeners["extend-click"](e.node, t)
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-chevron",
                class: {
                    expanded: e.node.extended
                },
                attrs: {
                    "icon-name": "chevron-right",
                    width: "10",
                    height: "10",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1) : e._e()], 1), e._v(" "), i("BIMDataCheckbox", {
                attrs: {
                    state: e.tree.getState(e.node)
                },
                on: {
                    change: function(t) {
                        return e.$listeners["checkbox-change"](e.node, t)
                    }
                },
                nativeOn: {
                    click: function(e) {
                        e.stopPropagation()
                    }
                }
            }), e._v(" "), e.node.picto ? i("div", {
                staticClass: "node-tree__picto"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": e.node.picto.name,
                    width: e.node.picto.width,
                    height: e.node.picto.height,
                    x: e.node.picto.x,
                    y: e.node.picto.y
                }
            }, [i(e.node.picto.name, {
                tag: "component"
            })], 1)], 1) : e._e(), e._v(" "), i("span", {
                staticClass: "node-tree__label"
            }, [e._v(e._s(e.node.label || e.notSpecified))]), e._v(" "), e.node.displayLength && e.node.children && e.node.children.length ? i("span", {
                staticClass: "node-tree__length bimdata-info-length"
            }, [e._v(e._s(e.node.children.length))]) : e._e()], 1)] : i("div", {
                staticClass: "node-template-placeholder"
            })], 2)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataCheckbox: Jl,
            BIMDataIcon: El,
            BIMDataChevronRightIcon: ql,
            BIMDataProjectIcon: jv,
            BIMDataSiteIcon: Lv,
            BIMDataBuildingIcon: Rv,
            BIMDataStoreyIcon: Ov,
            BIMDataSpaceIcon: Fv,
            BIMDataZoneIcon: Nv,
            BIMDataClassificationCategoryIcon: Uv,
            BIMDataClassificationElementIcon: Hv,
            BIMDataSystemsIcon: Vv,
            BIMDataButton: Ml
        },
        data: () => ({
            active: !1
        }),
        inject: ["tree"],
        props: {
            notSpecified: String,
            node: {
                type: Object,
                require: !0
            },
            depth: {
                type: Number,
                default: 1
            },
            index: {
                type: Number
            },
            treeIndex: {
                type: Number
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const $v = gl({}, void 0, {
        name: "node",
        functional: !0,
        inject: ["tree"],
        props: {
            notSpecified: String,
            node: {
                type: Object,
                require: !0
            },
            depth: {
                type: Number,
                default: 1
            },
            index: {
                type: Number,
                default: 0
            },
            structureIndex: {
                type: Number,
                default: 0
            },
            treeIndex: {
                type: Number,
                required: !0
            },
            parentLabel: {
                type: String,
                default: "Root"
            }
        },
        render: (e, t) => [e(zv, {
            ...t,
            ...t.data,
            key: t.props.node.id || `${t.props.node.label}-${t.props.structureIndex}-${t.props.index}-${t.props.treeIndex}-parent-label-${t.props.parentLabel}`
        }), ...t.props.node.extended ? t.props.node.children.map((i, r) => e("node", {
            props: {
                node: i,
                depth: t.props.node.hidden ? t.props.depth : t.props.depth + 1,
                notSpecified: t.props.notSpecified,
                index: r,
                structureIndex: t.props.structureIndex,
                treeIndex: t.props.treeIndex,
                parentLabel: t.props.parentLabel + t.props.node.label
            },
            on: t.listeners
        })) : []]
    }, void 0, void 0, void 0, !1, void 0, void 0, void 0);
    const Wv = gl({
        render: function() {
            var e = this.$createElement;
            this._self._c;
            return this._m(0)
        },
        staticRenderFns: [function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "bimdata-loading"
            }, [t("span", {
                staticClass: "bimdata-loading--square"
            }), this._v(" "), t("p", {
                staticClass: "bimdata-loading--text"
            }, [t("span", [this._v("loading...")])])])
        }]
    }, (function(e) {
        e && e("data-v-7cd3b2fa_0", {
            source: "@keyframes bimdataloading{0%{box-shadow:inset 0 0 0 0 rgba(255,255,255,.1);transform:rotate(0)}20%{transform:rotate(180deg)}40%{transform:rotate(0)}60%{transform:rotate(0);box-shadow:inset 0 0 0 0 rgba(255,255,255,.1)}80%{box-shadow:inset 0 -20px 0 0 #fff}100%{box-shadow:inset 0 0 0 0 rgba(255,255,255,.1)}}.bimdata-loading{width:100%;height:100%;position:absolute;top:0;left:0;display:flex;align-items:center;justify-content:center;flex-direction:column;background-color:rgba(47,55,74,.9);color:#fff;z-index:2}.bimdata-loading--square{width:20px;height:20px;position:relative;border:2px #fff solid;animation:bimdataloading 1.4s linear infinite}.bimdata-loading--text{margin-top:12px;display:block}",
            map: void 0,
            media: void 0
        })
    }), {}, void 0, !1, void 0, !1, bl, void 0, void 0);
    const qv = gl({}, void 0, {
        data() {
            return {
                intersectionObservables: new Map,
                intersectionObserver: null,
                mutationObserver: new MutationObserver(this.handleMutation)
            }
        },
        props: {
            listContainerId: {
                type: String,
                required: !0
            }
        },
        mounted() {
            this.intersectionObserver = new IntersectionObserver(this.handleIntersect, {
                root: document.getElementById(this.listContainerId),
                threshold: [0, 1],
                rootMargin: "300px"
            }), this.$slots.default.forEach(e => {
                this.intersectionObservables.set(e.elm, e), this.intersectionObserver.observe(e.elm)
            }), this.mutationObserver.observe(this.$el, {
                childList: !0
            })
        },
        destroyed() {
            this.intersectionObserver.disconnect(), this.mutationObserver.disconnect()
        },
        methods: {
            handleIntersect(e) {
                e.forEach(e => {
                    0 === e.intersectionRatio ? this.onElementHidden(e.target) : 1 === e.intersectionRatio && this.onElementShown(e.target)
                })
            },
            handleMutation(e) {
                e.flatMap(e => [...e.removedNodes]).forEach(e => {
                    this.intersectionObservables.delete(e), this.intersectionObserver.unobserve(e)
                }), e.flatMap(e => [...e.addedNodes]).forEach(e => {
                    if (!this.intersectionObservables.has(e)) {
                        const t = this.$slots.default.find(t => t.elm === e);
                        if (!t) throw new Error("No component found");
                        this.intersectionObservables.set(e, t), this.intersectionObserver.observe(e)
                    }
                })
            },
            getNextElement: e => e.nextSibing && e.nextSibing.getAttribute("out") ? e.nextSibing : e.previousSibling && e.previousSibling.getAttribute("out") ? e.previousSibling : null,
            onElementHidden(e) {
                this.intersectionObservables.get(e).componentInstance.active = !1
            },
            onElementShown(e) {
                this.intersectionObservables.get(e).componentInstance.active = !0
            }
        },
        render(e) {
            return e("ul", {
                class: ["bimdata-list"]
            }, this.$slots.default)
        }
    }, void 0, void 0, void 0, !1, void 0, void 0, void 0);
    const Gv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return e.active ? i("div", {
                staticClass: "h-100p"
            }, [e.structures && e.structures.length ? i("BIMDataVirtualList", {
                attrs: {
                    listContainerId: e.listContainerId
                }
            }, e._l(e.structures, (function(t, r) {
                return i("node", {
                    key: t.ifcId + e.name + e.index,
                    attrs: {
                        treeIndex: e.index,
                        structureIndex: r,
                        node: t,
                        notSpecified: e.$t("structure.no_label")
                    },
                    on: {
                        "label-click": e.onNodeLabelClick,
                        "extend-click": e.onExtendButtonClick,
                        "checkbox-change": e.onCheckboxChange
                    }
                })
            })), 1) : e.loading ? i("BIMDataLoading") : i("BIMDataEmpty", {
                attrs: {
                    message: e.$t("structure.no") + " " + e.$t(e.name) + " " + e.$t("structure.currently_model"),
                    active: e.active
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "empty-tree",
                    width: "0",
                    height: "0",
                    x: "160",
                    y: "160"
                }
            }, [i("BIMDataEmptyTreeIllustration")], 1)], 1)], 1) : e._e()
        },
        staticRenderFns: []
    }, void 0, {
        name: "tree",
        components: {
            BIMDataVirtualList: qv,
            Node: $v,
            BIMDataIcon: El,
            BIMDataEmptyTreeIllustration: xv,
            BIMDataEmpty: Cv,
            BIMDataLoading: Wv,
            BIMDataCheckbox: Jl
        },
        props: {
            loading: {
                type: Boolean,
                default: !1
            },
            name: {
                type: String,
                required: !0
            },
            structures: {
                type: Array
            },
            active: {
                type: Boolean,
                default: !1
            },
            listContainerId: {
                type: String,
                required: !0
            },
            index: {
                type: Number,
                required: !0
            }
        },
        data: () => ({
            changedIds: [],
            check: null,
            selectGroups: new Map,
            nodeIds: new Map,
            noIdNodes: []
        }),
        provide() {
            return {
                tree: this
            }
        },
        watch: {
            structures: {
                handler(e) {
                    e && e.length && e.forEach(e => {
                        [e, ...this.flatStructure(e.children)].forEach(e => {
                            e.id ? this.nodeIds.set(e.id, e) : this.noIdNodes.push(e)
                        })
                    })
                },
                immediate: !0
            },
            changedIds: {
                handler: function(e) {
                    e.length && (this.$emit("set-objects-visible", {
                        visible: this.check,
                        trigger: this,
                        ids: this.changedIds.filter(e => e)
                    }), this.changedIds = [])
                },
                deep: !0
            }
        },
        computed: {
            nodes() {
                return [...this.nodeIds.values(), ...this.noIdNodes]
            }
        },
        methods: {
            flatStructure(e) {
                return e.reduce((e, t) => (e.push(t), t.children && t.children.length > 0 && e.push(...this.flatStructure(t.children)), e), [])
            },
            getSelectedNodes() {
                const e = [];
                for (let t of this.nodes) t.selected && e.push(t);
                return e
            },
            showSelected() {
                const e = this.getSelectedNodes();
                e.forEach(e => {
                    this.getNodeAncestors(e).forEach(e => e.extended = !0)
                });
                const t = e.find(e => e.id);
                t && this.$nextTick(() => {
                    this.scrollToElement(`tree-${this.index}-node-${t.id}`)
                })
            },
            onLabelClick(e, t, i) {
                this.$emit("set-objects-selected", {
                    ids: e,
                    selected: t,
                    trigger: this
                }), t && i.isGroup && this.selectGroups.set(i, this.getNodeDescendants(i).map(e => e.id))
            },
            checkNodes({
                ids: e,
                selection: t = !1
            }) {
                if (t) this.nodes.forEach(e => {
                    e.selected && (e.checked = !0)
                });
                else if (e) {
                    const t = new Set;
                    e.forEach((e, i) => {
                        const r = this.getNodeById(e);
                        r && (r.checked = !0, this.getNodeAncestors(r).forEach(e => t.add(e)))
                    }), t.forEach(e => e.checked = !0)
                } else this.nodes.forEach(e => e.checked = !0)
            },
            uncheckNodes({
                ids: e,
                selection: t = !1
            }) {
                if (t) this.nodes.forEach(e => {
                    e.selected && (e.checked = !1, e.selected = !1)
                });
                else if (e) {
                    const t = [];
                    e.forEach((e, i) => {
                        const r = this.getNodeById(e);
                        r && (r.checked = !1, r.selected = !1, t.push(r))
                    }), this.uncheckParentsIfChildrenAllUnchecked(t)
                } else this.nodes.forEach(e => {
                    e.checked = !1, e.selected = !1
                })
            },
            uncheckParentsIfChildrenAllUnchecked(e) {
                if (!e || !e.length) return;
                const t = [];
                new Set(e.filter(e => e.parent).map(e => e.parent)).forEach(e => {
                    e.children.every(e => !e.checked) && (e.checked = !1, e.selected = !1, t.push(e))
                }), this.uncheckParentsIfChildrenAllUnchecked(t)
            },
            selectNodes({
                ids: e,
                exclusive: t
            }) {
                let i = !0;
                e.forEach(e => {
                    const t = this.getNodeById(e);
                    t && (t.selected = !0, this.active && (this.getNodeAncestors(t).forEach(e => e.extended = !0), i && (i = !1, this.$nextTick(() => {
                        this.scrollToElement(`tree-${this.index}-node-${e}`)
                    }))))
                })
            },
            scrollToElement(e) {
                const t = document.getElementById(e);
                return t && t.scrollIntoView({
                    block: "center"
                }), !!t
            },
            deselectNodes({
                ids: e
            }) {
                e.forEach(e => {
                    const t = this.getNodeById(e);
                    t && (t.selected = !1), this.selectGroups.forEach((t, i) => {
                        t.find(t => t === e) && (i.selected = !1, this.selectGroups.delete(i))
                    })
                })
            },
            getNodeById(e) {
                return this.nodeIds.get(e)
            },
            getNodeSiblings(e) {
                const t = [];
                return e.parent && t.push(...e.parent.children.filter(t => t !== e)), t
            },
            getNodeAncestors(e) {
                const t = [];
                return e.parent && t.push(e.parent, ...this.getNodeAncestors(e.parent)), t
            },
            getNodeDescendants(e) {
                const t = e.children || [];
                return [...t, ...t.map(e => this.getNodeDescendants(e)).flat()]
            },
            getState(e) {
                return !!e.checked && (!!this.getNodeDescendants(e).every(e => e.checked) || null)
            },
            onCheckboxChange(e, t) {
                this.changeChecked(e, t);
                const i = this.getNodeDescendants(e);
                i.forEach(e => e.checked = t), this.changedIds.push(...i.map(e => e.id).filter(e => !!e))
            },
            onNodeLabelClick(e) {
                e.selected = !e.selected;
                const t = this.getNodeDescendants(e);
                let i = null;
                e.exclusiveSelect ? i = [e.id] : (i = [...t.map(e => e.id).filter(e => !!e)], e.id && i.push(e.id)), this.onLabelClick(i, e.selected, e)
            },
            onChildChangeChecked(e, t) {
                if (!e) return;
                e.children.every(e => !e.checked) ? this.changeChecked(e, !1) : this.changeChecked(e, !0)
            },
            onExtendButtonClick(e, t) {
                e.extended = !e.extended, t.altKey && this.getNodeSiblings(e).forEach(t => t.extended = e.extended)
            },
            changeChecked(e, t) {
                if (e.checked !== t) {
                    e.checked;
                    e.checked = t, this.onChildChangeChecked(e.parent, t), this.check = t, this.changedIds.push(e.id)
                }
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);

    function Yv(e, t = null) {
        return e.parent = t, (e.children || []).forEach(t => Yv(t, e)), e
    }
    const Zv = e => e.reduce((e, t) => (e.push(t), t.children && t.children.length > 0 && e.push(...Zv(t.children)), e), []);

    function Xv(e = []) {
        return e.map(e => ({
            label: e.longname || e.name,
            id: e.uuid,
            displayLength: e.children && e.children.length,
            checked: !0,
            extended: !1,
            selected: !1,
            children: e.children ? Xv(e.children) : null
        }))
    }
    const Kv = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M20 4L23 6.93137L9.02 20.6111L0 11.817L3 8.88562L9.02 14.7484L20 4Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Qv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-pie-spinner"
            }, [i("svg", {
                staticStyle: {
                    transform: "rotate(-90deg)"
                },
                attrs: {
                    viewBox: "0 0 " + e.width + " " + e.width,
                    xmlns: "http://www.w3.org/2000/svg",
                    fill: "transparent",
                    width: e.width,
                    height: e.width
                }
            }, [i("circle", {
                staticClass: "bimdata-pie-spinner__path",
                style: "--delay: " + e.delay + "s;\n      --iteration: " + e.laps + ";\n      --dasharray: " + e.dashArray + ";\n      --dashoffset-from: " + e.dashOffsetFrom + ";\n      --dashoffset-to: " + e.dashOffsetTo + ";",
                attrs: {
                    cx: e.width / 2,
                    cy: e.width / 2,
                    r: (e.width - e.strokeWidth) / 2,
                    stroke: e.stroke,
                    "stroke-width": e.strokeWidth
                },
                on: {
                    animationiteration: function(t) {
                        e.$emit("lap", (e.delay * e.laps - t.elapsedTime) / e.delay)
                    },
                    animationend: function(t) {
                        return e.$emit("stop")
                    }
                }
            })]), e._v(" "), i("div", {
                staticClass: "bimdata-pie-spinner__inside",
                style: {
                    width: e.width + "px",
                    height: e.width + "px"
                }
            }, [e._t("default")], 2)])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-221af0d4_0", {
            source: ".bimdata-pie-spinner{position:relative}.bimdata-pie-spinner__inside{position:absolute;display:flex;justify-content:center;align-items:center}.bimdata-pie-spinner svg{position:absolute}.bimdata-pie-spinner__path{stroke-dasharray:var(--dasharray);animation:clock var(--delay) linear var(--iteration) running forwards}@keyframes clock{from{stroke-dashoffset:var(--dashoffset-from)}to{stroke-dashoffset:var(--dashoffset-to)}}.bimdata-pie-spinner:hover .bimdata-pie-spinner__path{animation-play-state:paused}",
            map: void 0,
            media: void 0
        })
    }), {
        props: {
            width: {
                type: Number,
                default: 22
            },
            strokeWidth: {
                type: Number,
                default: 2
            },
            stroke: {
                type: String,
                default: "currentColor"
            },
            delay: {
                type: Number,
                default: 1
            },
            laps: {
                type: [Number, String],
                default: 1
            },
            dashOffsetFrom: {
                type: Number,
                default: 0
            },
            dashOffsetTo: {
                type: Number,
                default: 63
            },
            dashArray: {
                type: Number,
                default: 63
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Jv = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "merge-modal-success"
            }, [i("div", {
                staticClass: "merge-modal-success__close"
            }, [i("BIMDataPieSpinner", {
                attrs: {
                    delay: 5
                },
                on: {
                    stop: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-close",
                attrs: {
                    "icon-name": "close",
                    width: "16",
                    height: "16",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1)], 1), e._v(" "), i("div", {
                staticClass: "merge-modal-success__title"
            }, [i("h2", [e._v(e._s(e.$t("merge.success-modal.title")))]), e._v(" "), i("span", {
                staticClass: "merge-modal-success__title--icon"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-green",
                attrs: {
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataSuccessIcon")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "merge-modal-success__text"
            }, [e._v(e._s(e.$t("merge.success-modal.text")))]), e._v(" "), i("div", {
                staticClass: "merge-modal-success__button"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [e._v(e._s(e.$t("merge.success-modal.button")))])], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataButton: Ml,
            BIMDataIcon: El,
            BIMDataSuccessIcon: Kv,
            BIMDataCrossIcon: $l,
            BIMDataPieSpinner: Qv
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const eb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-input",
                class: {
                    error: e.error, success: e.success, disabled: e.disabled, loading: e.loading, "not-empty": !!this.text
                }
            }, [i("input", {
                ref: "input",
                attrs: {
                    type: "text",
                    id: "bimdata-input-" + e._uid,
                    disabled: e.disabled
                },
                domProps: {
                    value: e.text
                },
                on: {
                    input: function(t) {
                        return e.$emit("input", t.currentTarget.value)
                    },
                    focus: function(e) {
                        return e.target.select()
                    }
                }
            }), e._v(" "), i("label", {
                attrs: {
                    for: "bimdata-input-" + e._uid
                }
            }, [e._v(e._s(e.placeholder))]), e._v(" "), i("span", {
                staticClass: "bar"
            }), e._v(" "), e.error ? i("span", {
                staticClass: "error"
            }, [e._v(e._s(e.errorMessage))]) : e._e(), e._v(" "), e.success ? i("span", {
                staticClass: "success"
            }, [e._v(e._s(e.successMessage))]) : e._e()])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-11ffc8c7_0", {
            source: '@keyframes scaleX{0%{transform:scaleX(0);left:-50%}25%{transform:scaleX(1);left:0}50%{transform:scaleX(1);left:50%}75%{transform:scaleX(0);left:50%}100%{transform:scaleX(0);left:50%}}input:-webkit-autofill{box-shadow:0 0 0 1000px #fff inset}.bimdata-input{height:32px;min-height:32px;margin:calc(12px * 2) 0;position:relative}.bimdata-input.not-empty label{top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-input input{padding:0;width:100%;height:32px;border:none;cursor:pointer;font-size:1em}.bimdata-input input:focus{outline:0}.bimdata-input input:focus~label{font-size:.7142857143em;top:-22px;font-size:.7142857143em}.bimdata-input input:focus~.bar:after{width:100%;transition:transform .2s cubic-bezier(.55,0,.55,.2);transform:scaleX(1)}.bimdata-input label{position:absolute;top:0;left:0;font-size:.8571428571em;transform:translateY(12px);transition:.2s ease all;color:#616060;cursor:pointer}.bimdata-input .bar{width:100%;height:1px;position:absolute;display:block;background:#d8d8d8;bottom:0}.bimdata-input .bar::after,.bimdata-input .bar::before{width:0;height:2px;content:"";display:block;position:absolute;bottom:0;left:0;right:0;background-color:#2f374a;transform:scaleX(0)}.bimdata-input.loading input~.bar:after{width:50%;animation:scaleX 2s linear infinite none;transform-origin:right}.bimdata-input.loading input~.bar:before{width:50%;animation:scaleX 2s linear 1s infinite none;transform-origin:right}.bimdata-input .error{top:2px;position:relative;color:#ff3d1e;font-size:.7857142857em}.bimdata-input .success{top:2px;position:relative;color:#00af50;font-size:.7857142857em}.bimdata-input.disabled{opacity:.6}.bimdata-input.error label{color:#ff3d1e}.bimdata-input.error .bar{background-color:#ff3d1e}.bimdata-input.error .bar::after,.bimdata-input.error .bar::before{background-color:#ff3d1e}.bimdata-input.success label{color:#00af50}.bimdata-input.success .bar{background-color:#00af50}.bimdata-input.success .bar::after,.bimdata-input.success .bar::before{background-color:#00af50}.bimdata-input label{position:absolute;top:0;left:0;font-size:.8571428571em;transform:translateY(12px);transition:.2s ease all;color:#616060}.bimdata-input .bar{width:100%;height:1px;position:absolute;display:block;background:#d8d8d8;bottom:0}.bimdata-input .bar::after,.bimdata-input .bar::before{width:0;height:2px;content:"";display:block;position:absolute;bottom:0;left:0;right:0;background-color:#2f374a;transform:scaleX(0)}',
            map: void 0,
            media: void 0
        })
    }), {
        model: {
            prop: "text",
            event: "input"
        },
        created() {
            this.$watch(() => this.success && this.error, e => {
                if (e) throw "Input state cannot be both success and error."
            })
        },
        props: {
            text: {
                type: [String, Number, Boolean]
            },
            placeholder: {
                type: String,
                default: ""
            },
            error: {
                type: Boolean,
                default: !1
            },
            success: {
                type: Boolean,
                default: !1
            },
            errorMessage: {
                type: String,
                default: ""
            },
            successMessage: {
                type: String,
                default: ""
            },
            loading: {
                type: Boolean,
                default: !1
            },
            disabled: {
                type: Boolean,
                default: !1
            }
        },
        methods: {
            focus() {
                this.$refs.input && this.$refs.input.focus()
            },
            blur() {
                this.$refs.input && this.$refs.input.blur()
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const tb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "merge-merge-modal"
            }, [i("div", {
                staticClass: "merge-merge-modal__close"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-default",
                attrs: {
                    "icon-name": "close",
                    width: "20",
                    height: "20",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "merge-merge-modal__content"
            }, [i("h2", {
                staticClass: "merge-merge-modal__content__title"
            }, [e._v(e._s(e.$t("merge.merge-modal.title")))]), e._v(" "), e.errorDisplayed ? i("div", {
                staticClass: "merge-merge-modal__content__error"
            }, [e._v(e._s(e.errorMessage))]) : e._e(), e._v(" "), i("div", {
                staticClass: "merge-merge-modal__content__input"
            }, [i("BIMDataInput", {
                attrs: {
                    placeholder: e.$t("merge.merge-modal.label"),
                    error: !e.fileName,
                    errorMessage: e.$t("merge.merge-modal.input-error"),
                    loading: e.loading
                },
                model: {
                    value: e.fileName,
                    callback: function(t) {
                        e.fileName = t
                    },
                    expression: "fileName"
                }
            })], 1), e._v(" "), i("div", {
                staticClass: "merge-merge-modal__merge"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    disabled: !e.fileName || e.loading
                },
                on: {
                    click: e.onMergeClick
                }
            }, [e._v("\n        " + e._s(e.$t("merge.merge-modal.verb")) + "\n      ")])], 1)])])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-5e731f34_0", {
            source: ".merge-merge-modal,.merge-modal-success{margin:12px;align-items:center;display:flex;flex-direction:column;justify-content:space-between;min-width:500px;position:relative}.merge-merge-modal__error,.merge-modal-success__error{color:#ff3d1e}.merge-merge-modal__close,.merge-modal-success__close{width:100%;display:flex;flex-direction:row-reverse}.merge-merge-modal__close *,.merge-modal-success__close *{cursor:pointer}.merge-merge-modal__content,.merge-modal-success__content{width:100%;padding:20px 36px;display:flex;flex-direction:column;align-items:center}.merge-merge-modal__content__title,.merge-modal-success__content__title{margin-top:0;font-size:1.4285714286em}.merge-merge-modal__content__merge,.merge-modal-success__content__merge{margin:20px 0}.merge-merge-modal__content__input,.merge-merge-modal__content__warning,.merge-modal-success__content__input,.merge-modal-success__content__warning{width:100%}.merge-merge-modal__content__input input,.merge-modal-success__content__input input{color:#2f374a}.merge-merge-modal__content__warning,.merge-modal-success__content__warning{margin-top:9px;color:#ff9100;font-size:.8571428571em}.merge-merge-modal__merge,.merge-modal-success__merge{margin-top:calc(12px * 3)}.merge-modal-success{width:500px}.merge-modal-success__close{position:absolute;right:0;top:0}.merge-modal-success__close .bimdata-pie-spinner{height:23px;width:23px}.merge-modal-success__title{margin:calc(12px * 3) 0 calc(12px * 2);display:inline-flex;align-items:center}.merge-modal-success__title h2{margin:0;font-size:1.4285714286em}.merge-modal-success__title--icon{margin-left:calc(12px / 2)}.merge-modal-success__text{margin:0;width:300px;text-align:center;line-height:1.5;color:#7b7b7b;font-size:.8571428571em}.merge-modal-success__button{margin:calc(12px * 2) 0}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataCrossIcon: $l,
            BIMDataButton: Ml,
            BIMDataInput: eb
        },
        data: () => ({
            fileName: "",
            errorDisplayed: !1,
            errorMessage: "",
            loading: !1
        }),
        created() {
            if (this.$utils.getSelectedIfcs().length <= 1) return this.$hub.emit("alert", {
                type: "error",
                message: this.$t("merge.merge-modal.not-enough-models")
            }), void this.$emit("close");
            const e = this.$utils.getSelectedIfcs()[0];
            console.log(e);
            const t = e.document.file_name.split(".");
            t.pop();
            const i = t.join(".");
            this.fileName = i + "-merge-" + (new Date).toLocaleDateString(this.$i18n.locale).replace(/\//g, "-")
        },
        methods: {
            onMergeClick() {
                this.fileName ? this.merge() : this.errorDisplayed = !0
            },
            async merge() {
                this.loading = !0;
                try {
                    await (new this.$bimdataApiClient.IfcApi).mergeIfcs(this.$utils.getCloudId(), this.$utils.getProjectId(), {
                        ifc_ids: this.$utils.getSelectedIfcs().map(e => e.id),
                        export_name: this.fileName + ".ifc"
                    }), this.$plugins.modalManager.pushModal(Jv), this.$emit("close")
                } catch (e) {
                    this.errorDisplayed = !0, this.errorMessage = e.message
                } finally {
                    this.loading = !1
                }
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const ib = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "export-modal-success"
            }, [i("div", {
                staticClass: "export-modal-success__close"
            }, [i("BIMDataPieSpinner", {
                attrs: {
                    delay: 5
                },
                on: {
                    stop: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-close",
                attrs: {
                    "icon-name": "close",
                    width: "16",
                    height: "16",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1)], 1), e._v(" "), i("div", {
                staticClass: "export-modal-success__title"
            }, [i("h2", [e._v(e._s(e.$t("export.success-modal.title")))]), e._v(" "), i("span", {
                staticClass: "export-modal-success__title--icon"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-green",
                attrs: {
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataSuccessIcon")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "export-modal-success__text"
            }, [e._v(e._s(e.$t("export.success-modal.text")))]), e._v(" "), i("div", {
                staticClass: "export-modal-success__button"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [e._v(e._s(e.$t("export.success-modal.button")))])], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataButton: Ml,
            BIMDataIcon: El,
            BIMDataSuccessIcon: Kv,
            BIMDataCrossIcon: $l,
            BIMDataPieSpinner: Qv
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const rb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "export-modal"
            }, [i("div", {
                staticClass: "export-modal__close"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-default",
                attrs: {
                    "icon-name": "close",
                    width: "20",
                    height: "20",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "export-modal__content"
            }, [i("h2", {
                staticClass: "export-modal__content__title"
            }, [e._v(e._s(e.$t("export.export-modal.title")))]), e._v(" "), e.errorDisplayed ? i("div", {
                staticClass: "export-modal__content__error"
            }, [e._v(e._s(e.errorMessage))]) : e._e(), e._v(" "), i("div", {
                staticClass: "export-modal__content-inner"
            }, [i("h3", {
                staticClass: "export-modal__content__title"
            }, [e._v(e._s(e.$t("export.export-modal.model-selection")))]), e._v(" "), e._l(e.$utils.getSelectedIfcs(), (function(t) {
                return i("div", {
                    key: t.id,
                    staticClass: "bimdata-projection__content"
                }, [i("BIMDataRadio", {
                    attrs: {
                        text: t.name,
                        id: t.id.toString(),
                        value: t.id.toString(),
                        name: "model",
                        selectedValue: e.selectedModel.id.toString()
                    },
                    on: {
                        input: function(i) {
                            return e.onSelectedModelInput(t)
                        }
                    }
                })], 1)
            }))], 2), e._v(" "), i("div", {
                staticClass: "export-modal__content-inner"
            }, [i("h3", {
                staticClass: "export-modal__content__title"
            }, [e._v(e._s(e.$t("export.export-modal.export-file-name")))]), e._v(" "), i("div", {
                staticClass: "export-modal__content__input"
            }, [i("BIMDataInput", {
                attrs: {
                    placeholder: e.$t("export.export-modal.label"),
                    error: !e.fileName,
                    errorMessage: e.$t("export.export-modal.input-error"),
                    loading: e.loading
                },
                model: {
                    value: e.fileName,
                    callback: function(t) {
                        e.fileName = t
                    },
                    expression: "fileName"
                }
            })], 1)]), e._v(" "), i("div", {
                staticClass: "export-modal__export"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    disabled: !e.fileName || e.loading
                },
                on: {
                    click: e.onExportClick
                }
            }, [e._v("\n        " + e._s(e.$t("export.export-modal.verb")) + "\n      ")])], 1)])])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-6a7df37f_0", {
            source: ".export-modal,.export-modal-success{margin:12px;align-items:center;display:flex;flex-direction:column;justify-content:space-between;min-width:500px;position:relative}.export-modal-success__error,.export-modal__error{color:#ff3d1e}.export-modal-success__close,.export-modal__close{width:100%;display:flex;flex-direction:row-reverse}.export-modal-success__close *,.export-modal__close *{cursor:pointer}.export-modal-success__content,.export-modal__content{width:100%;padding:20px 36px;display:flex;flex-direction:column;align-items:center}.export-modal-success__content-inner,.export-modal__content-inner{width:100%;margin:calc(12px * 2) 0}.export-modal-success__content__title,.export-modal__content__title{margin-top:0;font-size:1.4285714286em}.export-modal-success__content__export,.export-modal__content__export{margin:20px 0}.export-modal-success__content__input,.export-modal-success__content__warning,.export-modal__content__input,.export-modal__content__warning{width:100%}.export-modal-success__content__input input,.export-modal__content__input input{color:#2f374a}.export-modal-success__content__warning,.export-modal__content__warning{margin-top:9px;color:#ff9100;font-size:.8571428571em}.export-modal-success{width:500px}.export-modal-success__close{position:absolute;right:0;top:0}.export-modal-success__close .bimdata-pie-spinner{height:23px;width:23px}.export-modal-success__title{margin:calc(12px * 3) 0 calc(12px * 2);display:inline-flex;align-items:center}.export-modal-success__title h2{margin:0;font-size:1.4285714286em}.export-modal-success__title--icon{margin-left:calc(12px / 2)}.export-modal-success__text{margin:0;width:300px;text-align:center;line-height:1.5;color:#7b7b7b;font-size:.8571428571em}.export-modal-success__button{margin:calc(12px * 2) 0}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataCrossIcon: $l,
            BIMDataButton: Ml,
            BIMDataInput: eb,
            BIMDataRadio: _v
        },
        data: () => ({
            fileName: "",
            errorDisplayed: !1,
            errorMessage: "",
            loading: !1,
            selectedModel: null
        }),
        created() {
            const e = this.$utils.getSelectedIfcs()[0];
            this.selectedModel = e, this.onSelectedModelInput(e)
        },
        methods: {
            onSelectedModelInput(e) {
                this.selectedModel = e;
                const t = e.document.file_name.split(".");
                t.pop();
                const i = t.join(".");
                this.fileName = i + "-export-" + (new Date).toLocaleDateString(this.$i18n.locale).replace(/\//g, "-")
            },
            onExportClick() {
                this.fileName ? this.export() : this.errorDisplayed = !0
            },
            async export () {
                this.loading = !0;
                try {
                    await (new this.$bimdataApiClient.IfcApi).exportIfc(this.$utils.getCloudId(), this.selectedModel.id, this.$utils.getProjectId(), {
                        file_name: this.fileName + ".ifc"
                    }), this.$plugins.modalManager.pushModal(ib), this.$emit("close")
                } catch (e) {
                    this.errorDisplayed = !0, this.errorMessage = e.message
                } finally {
                    this.loading = !1
                }
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const nb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "tree-content__menu"
            }, [e.items.length > e.displayedItems ? i("BIMDataButton", {
                class: {
                    active: e.btnLeftActive
                },
                attrs: {
                    width: "32px",
                    disabled: e.btnLeftActive
                },
                on: {
                    click: function(t) {
                        return e.onLeftClickTab(-1)
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-primary",
                attrs: {
                    "icon-name": "chevron-left",
                    width: "6",
                    height: "10",
                    x: "11",
                    y: "20"
                }
            }, [i("BIMDataChevronLeftIcon")], 1)], 1) : e._e(), e._v(" "), i("ul", {
                ref: "carousel",
                staticClass: "bimdata-list tree-content__menu__content",
                style: e.width
            }, e._l(e.items, (function(t) {
                return i("li", {
                    key: t,
                    staticClass: "tree-content__menu__content__element",
                    class: {
                        active: t === e.activeItem
                    },
                    on: {
                        click: function(i) {
                            return e.onClickListItem(t)
                        }
                    }
                }, [e._v("\n      " + e._s(t) + "\n    ")])
            })), 0), e._v(" "), e.items.length > e.displayedItems ? i("BIMDataButton", {
                class: {
                    active: e.btnRightActive
                },
                attrs: {
                    width: "32px",
                    disabled: e.btnRightActive
                },
                on: {
                    click: function(t) {
                        return e.onRightClickTab(1)
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-primary",
                attrs: {
                    "icon-name": "chevron-left",
                    width: "6",
                    height: "10",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1) : e._e()], 1)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataButton: Ml,
            BIMDataIcon: El,
            BIMDataChevronLeftIcon: Gl,
            BIMDataChevronRightIcon: ql
        },
        data: () => ({
            btnLeftActive: !0,
            btnRightActive: !1
        }),
        props: {
            width: {
                type: [String, Number],
                default: "100%"
            },
            items: {
                type: Array
            },
            activeItem: {
                type: String
            },
            displayedItems: {
                type: Number,
                default: 5
            }
        },
        methods: {
            changeElement(e) {
                const t = this.$refs.carousel,
                    i = t.offsetWidth;
                t.scrollTo(t.scrollLeft + i * e, 0)
            },
            onLeftClickTab(e) {
                this.changeElement(e), this.btnLeftActive = !0, this.btnRightActive = !1
            },
            onRightClickTab(e) {
                this.changeElement(e), this.btnRightActive = !0, this.btnLeftActive = !1
            },
            onClickListItem(e) {
                this.$emit("click", e)
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const sb = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M8.84004 7.35879C7.30851 6.0723 5.21348 6.08012 3.76466 6.10599L3.75529 6.10616H0V4.00844H3.73653L3.80954 4.00711C5.1905 3.98164 8.01896 3.92949 10.1893 5.75255C10.6906 6.17367 11.1428 6.66936 11.6089 7.18025L11.6089 7.18026L11.6637 7.24029C12.7701 8.45348 13.9944 9.79599 16.1075 10.3458V7.45467L23 11.5003L16.1075 15.5459V12.9849C13.9595 13.5583 12.7298 14.8913 11.6089 16.12C11.1428 16.6309 10.6906 17.1266 10.1893 17.5477C8.01896 19.3708 5.1905 19.3186 3.80954 19.2931L3.73653 19.2918H0V17.1941H3.75529L3.76466 17.1943C5.21348 17.2201 7.30851 17.2279 8.84004 15.9415C9.1053 15.7186 9.40553 15.3834 9.76024 14.9874C10.657 13.9862 11.9021 12.5962 13.8109 11.6501C11.9021 10.7041 10.657 9.31402 9.76024 8.31281C9.40553 7.91679 9.1053 7.58161 8.84004 7.35879Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ob = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M17.9865 18.033H5.03756V1.11117H13.1306V6.11419H17.7808V5.78295L17.9865 5.99691V18.033ZM17.5655 5.55894L15.5865 3.50001L13.6859 1.60172V5.55894H17.5655ZM4.44897 0.522583H13.4383L16.0067 3.0878L18.5751 5.7599V18.6216H4.44897V0.522583Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M3.95959 0.0332031H13.6408L16.3595 2.7486L19.0644 5.56284V19.111H3.95959V0.0332031ZM17.4971 6.60353H12.6412V1.60051H5.52691V17.5437H17.4971V6.60353ZM16.4163 5.06956L15.2371 3.8427L14.1752 2.7821V5.06956H16.4163Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M13.1306 16.9266H9.81979V19.6488L8.49548 19.6488L11.512 23.0332L14.5285 19.6488L13.1306 19.6488V16.9266Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M12.1284 7.711C12.6481 7.38438 13.3424 7.45995 13.7786 7.92448L15.0067 9.2321C15.4414 9.69506 15.4756 10.3907 15.1224 10.8901L15.1218 10.8895C15.0719 10.9602 15.0142 11.027 14.9488 11.0886L13.9675 12.0132C13.8882 12.088 13.8019 12.151 13.7111 12.2021L13.7114 12.2025C13.6177 12.2551 13.5191 12.2952 13.4179 12.3229C13.0646 12.4202 12.6796 12.3662 12.3638 12.164L12.3648 12.163L12.3565 12.1577L13.0552 11.5053L13.0588 11.5091L14.461 10.1879L12.7794 8.40231L12.2569 8.90229L11.6035 8.21698L12.1302 7.71296L12.1284 7.711ZM12.2389 10.638L11.5155 11.3135L10.8934 10.6479C10.4763 10.2017 10.4301 9.54124 10.7422 9.04786L12.2389 10.638ZM7.8334 10.7782C7.50759 10.2576 7.58316 9.56217 8.04689 9.12513L9.35181 7.89535C9.81398 7.45979 10.5083 7.42538 11.0068 7.77905L11.0064 7.77941C11.0769 7.82938 11.1435 7.88711 11.205 7.95256L12.1284 8.936C12.203 9.01553 12.2659 9.10192 12.317 9.193L12.3174 9.19259C12.3969 9.33456 12.4478 9.48786 12.4705 9.64429C12.5154 9.95223 12.4509 10.2725 12.2787 10.5423L12.2779 10.5415L12.2727 10.5495L11.6216 9.84979L11.6253 9.84637L10.306 8.44137L8.52356 10.1259L9.02288 10.6496L8.33771 11.3052L7.83434 10.7773L7.8334 10.7782ZM10.7559 10.6675L11.43 11.392L10.7653 12.0155C10.32 12.4332 9.66089 12.4795 9.16841 12.1669L10.7559 10.6675ZM10.8961 15.067C10.3764 15.3935 9.68221 15.3179 9.24597 14.8534L8.01795 13.5458C7.5832 13.0829 7.54897 12.3873 7.9022 11.8879L7.90267 11.8884C7.95261 11.8177 8.01031 11.7509 8.07573 11.6893L9.05704 10.7646C9.13631 10.6899 9.22242 10.627 9.3132 10.5759L9.31283 10.5755C9.40456 10.5239 9.50102 10.4844 9.60001 10.4568C9.95513 10.3569 10.343 10.4104 10.6607 10.6138L10.6595 10.615L10.6674 10.6202L9.96882 11.2724L9.96552 11.2689L8.56345 12.59L10.2452 14.3758L10.7679 13.8757L11.4248 14.5647L10.8984 15.0684L10.8273 14.9939L10.8961 15.067ZM10.7851 12.1397L11.5084 11.4643L12.1307 12.13C12.5478 12.5762 12.5941 13.2367 12.282 13.73L10.7851 12.1397ZM14.9769 13.6664C15.4407 13.2294 15.5162 12.5339 15.1904 12.0133L15.1896 12.0141L14.6863 11.4863L14.0012 12.1418L14.5005 12.6654L12.7182 14.3497L11.399 12.9448L11.4026 12.9414L10.7514 12.2416L10.7463 12.2497L10.7455 12.2489C10.5992 12.4781 10.5306 12.7436 10.5408 13.0071C10.5485 13.2115 10.6035 13.4147 10.7066 13.5989L10.7072 13.5983C10.7583 13.6893 10.8211 13.7757 10.8958 13.8552L11.8192 14.8387C11.8807 14.9041 11.9472 14.9618 12.0177 15.0118L12.017 15.0125C12.5155 15.3662 13.2098 15.3318 13.672 14.8962L14.9769 13.6664ZM11.5942 11.3992L12.2683 12.1237L13.8556 10.6245C13.3631 10.3119 12.704 10.3582 12.2587 10.7759L11.5942 11.3992Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ab = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M14.8073 2.39557L16.5123 4.06153L8.56717 11.836L3.44092 6.83813L5.14588 5.17217L8.56717 8.50408L14.8073 2.39557Z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M2.6301 8.54753C2.6301 11.822 5.27332 14.4652 8.54777 14.4652C11.8222 14.4652 14.4654 11.822 14.4654 8.54753C14.4654 8.07663 14.4108 7.61879 14.3074 7.17999L16.3854 5.13105C16.8421 6.17744 17.0955 7.33299 17.0955 8.54774C17.0955 10.665 16.3196 12.6112 15.0309 14.1103L15.3991 14.4654H16.438L23 21.0406L21.0406 23L14.4654 16.438V15.3991L14.1103 15.0309C12.6112 16.3196 10.665 17.0955 8.54774 17.0955C3.82676 17.0955 0 13.2687 0 8.54774C0 3.82676 3.82676 0 8.54774 0C10.6686 0 12.6091 0.772332 14.1031 2.05111C14.0703 2.08251 14.036 2.11539 14.0003 2.14964C13.5498 2.58138 12.8728 3.23028 12.1952 3.88334C11.191 3.09761 9.92522 2.62986 8.54777 2.62986C5.27332 2.62986 2.6301 5.27309 2.6301 8.54753Z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const lb = gl({
            render: function() {
                var e = this.$createElement;
                return (this._self._c || e)("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M0 6.55556H23V4H0V6.55556ZM0 12.9446H23V10.389H0V12.9446ZM0 19.3332H23V16.7777H0V19.3332Z",
                        fill: "black"
                    }
                })
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: cb,
            mapMutations: hb
        } = Ma("viewer");
    const db = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "tree-content"
            }, [i("div", {
                staticClass: "submenu__header"
            }, [i("div", {
                directives: [{
                    name: "clickaway",
                    rawName: "v-clickaway",
                    value: e.away,
                    expression: "away"
                }],
                staticClass: "submenu__header--left"
            }, [i("div", {
                staticClass: "submenu__header__menu",
                on: {
                    click: function(t) {
                        e.headerMenuDisplayed = !e.headerMenuDisplayed
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "menu",
                    width: "20",
                    height: "20",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataMenuIcon")], 1)], 1), e._v(" "), i("transition", {
                attrs: {
                    name: "slide-fade-down"
                }
            }, [e.headerMenuDisplayed ? i("div", {
                staticClass: "submenu__header__submenu",
                staticStyle: {
                    "z-index": "2"
                }
            }, [i("ul", {
                staticClass: "bimdata-list"
            }, [i("li", {
                on: {
                    click: e.onShowSelectedClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "show",
                    width: "15",
                    height: "15",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataShowIcon")], 1), e._v("\n              " + e._s(e.$t("structure.show_selected")) + "\n            ")], 1), e._v(" "), e.mergeAllowed ? i("li", {
                on: {
                    click: e.mergeSelectedModels
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "merge",
                    width: "15",
                    height: "15",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataMergeIcon")], 1), e._v("\n              " + e._s(e.$t("merge.merge-ifc")) + "\n            ")], 1) : e._e(), e._v(" "), e.exportAllowed ? i("li", {
                on: {
                    click: e.exportModels
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "export",
                    width: "15",
                    height: "15",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataExportModelIcon")], 1), e._v("\n              " + e._s(e.$t("export.export-ifc")) + "\n            ")], 1) : e._e()])]) : e._e()])], 1), e._v(" "), e._m(0)]), e._v(" "), i("BIMDataHorizontalList", {
                attrs: {
                    items: e.getHorizontalListItems(),
                    activeItem: e.activeTree && e.$t(e.activeTree.name)
                },
                on: {
                    click: function(t) {
                        return e.onHorizontalListItemClick(t)
                    }
                }
            }), e._v(" "), i("div", {
                staticClass: "tree-content__body",
                attrs: {
                    id: "bimdata-structure-tree-container"
                }
            }, e._l(e.displayedTrees, (function(t, r) {
                return i("tree", {
                    key: t.name,
                    ref: "trees",
                    refInFor: !0,
                    attrs: {
                        index: r + 1,
                        listContainerId: "bimdata-structure-tree-container",
                        structures: e.$data[t.data],
                        name: t.name,
                        active: t.active,
                        loading: t.loading
                    },
                    on: {
                        "set-objects-selected": function(t) {
                            return e.onEvent("set-objects-selected", t)
                        },
                        "set-objects-visible": function(t) {
                            return e.onEvent("set-objects-visible", t)
                        }
                    }
                })
            })), 1)], 1)
        },
        staticRenderFns: [function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "submenu__header--right"
            }, [t("div", {
                staticClass: "submenu__header__actions"
            })])
        }]
    }, (function(e) {
        e && e("data-v-2f5a61ad_0", {
            source: '.tree-content{padding:0;width:100%;height:calc(100% - 12px);background-color:#fff;flex-flow:row wrap}.tree-content__menu{margin:12px 0 0;position:relative;display:flex;align-items:center;justify-content:space-between}.tree-content__menu .bimdata-btn{justify-content:center}.tree-content__menu .bimdata-btn:disabled svg{fill:#d8d8d8}.tree-content__menu__content{width:100%;height:30px;display:flex;justify-content:space-between;overflow:hidden;scroll-behavior:smooth}.tree-content__menu__content__element{padding:0 calc(12px / 2);position:relative;display:flex;align-items:center;justify-content:center;flex:0 0 19%;color:#616060;text-align:center;cursor:pointer;font-size:.7857142857em}.tree-content__menu__content__element.active{color:#2f374a;border-bottom:2px solid #2f374a;background-color:#f8f8f8;z-index:1}.tree-content__menu__content__element::after{content:"";display:block;position:absolute;width:100%;height:1px;bottom:0;left:0;background-color:#f8f8f8}.tree-content__body{padding:6px 0;height:calc(100% - 32px - 32px);position:relative;overflow:auto}.tree-content__body>li{margin:12px 0}.tree-content__body ul{padding:0}.tree-content__body>ul>li ul:last-child{padding-left:40px}.tree-content__body .node{padding-right:1rem;min-height:26px;display:flex;align-items:baseline;position:relative}.tree-content__body .node:hover{background-color:rgba(178,227,228,.3)}.tree-content__body .node .checkbox{padding:6px 0;display:inline-flex;align-self:flex-start}.tree-content__body .node .checkbox__text{margin-left:0}.tree-content__body .node .bimdata-checkbox{min-height:26px}.tree-content__body .node-tree__expand{min-width:13px;display:inline-flex}.tree-content__body .node-tree__picto{margin-left:5px;padding:6px 0;display:inline-flex;align-self:flex-start}.tree-content__body .node-tree__label{margin-left:5px;padding:6px 12px 6px 0;width:80%;display:flex;align-self:end;font-size:.8571428571em;line-height:1.2;word-break:break-word}.tree-content__body .node-tree__length{margin-left:auto;align-self:flex-start;margin-top:4px;font-size:.6428571429em}.tree-content__body .selected{background-color:#abcde1}.tree-content__body .selected:hover{background-color:#abcde1}.tree-content__body li{position:relative}.tree-content__body .dot-horizontal,.tree-content__body .dot-vertical{position:absolute;z-index:1}.tree-content__body .dot-vertical{width:1px;height:calc(100% - 33px);border-left:1px dotted #616060;bottom:0;top:18px}.tree-content__body .dot-horizontal{border-top:1px dotted #616060;top:10px;width:5px}.node-template{min-height:26px}.node-template-placeholder{width:90%;height:20px;margin:auto;background-color:#f8f8f8}#global-filter{background:0 0;border:none;width:100%}',
            map: void 0,
            media: void 0
        })
    }), {
        name: "structure",
        components: {
            Tree: Gv,
            BIMDataHorizontalList: nb,
            BIMDataIcon: El,
            BIMDataMenuIcon: lb,
            BIMDataShowIcon: ab,
            BIMDataMergeIcon: sb,
            BIMDataExportModelIcon: ob
        },
        props: {
            active: {
                type: Boolean,
                default: !1
            },
            mergeAllowed: {
                type: Boolean,
                default: !1
            },
            exportAllowed: {
                type: Boolean,
                default: !1
            }
        },
        data: () => ({
            initialized: !1,
            headerMenuDisplayed: !1,
            spaceTrees: null,
            systemsTrees: null,
            zoneTrees: null,
            objectTrees: null,
            classificationTrees: null,
            layersTrees: null,
            lastActiveTree: null,
            activeTree: null,
            displayedTrees: [{
                name: "structure.spatial",
                active: !1,
                data: "spaceTrees",
                loading: !1
            }, {
                name: "structure.zones",
                active: !1,
                data: "zoneTrees",
                loading: !1
            }, {
                name: "structure.systems",
                active: !1,
                data: "systemsTrees",
                loading: !1
            }, {
                name: "structure.classifications",
                active: !1,
                data: "classificationTrees",
                loading: !1
            }, {
                name: "structure.objects",
                active: !1,
                data: "objectTrees",
                loading: !1
            }, {
                name: "structure.layers",
                active: !1,
                data: "layersTrees",
                loading: !1
            }]
        }),
        computed: {
            ...cb({
                ifcs: e => e.selectedIfcs,
                structures: e => e.structures,
                objectsWithRepresentation: e => e.objectsWithRepresentation
            })
        },
        directives: {
            clickaway: Pl
        },
        created() {
            this.$hub.on("select-objects", this.selectNodes), this.$hub.on("deselect-objects", this.deselectNodes), this.$hub.on("show-objects", this.checkNodes), this.$hub.on("hide-objects", this.uncheckNodes), this.$watch(() => this.initialized && this.structures, () => {
                if (this.initialized) {
                    const e = new this.$bimdataApiClient.IfcApi;
                    this.setTrees("layersTrees", t => {
                        const i = this.displayedTrees.find(e => "layersTrees" === e.data);
                        return i.loading = !0, e.getLayers(this.$utils.getCloudId(), t.id, this.$utils.getProjectId()).then(e => {
                            let t = null;
                            if (e && e.length) {
                                const i = this.$utils.getAllObjects();
                                t = function(e) {
                                    const t = {
                                        extended: !0,
                                        checked: !0,
                                        selected: !1,
                                        hidden: !0
                                    };
                                    return t.children = e.map(e => ({
                                        label: e.name,
                                        displayLength: !0,
                                        isGroup: !0,
                                        checked: !0,
                                        extended: !1,
                                        selected: !1,
                                        children: e.elements ? e.elements.map(e => ({
                                            label: e.longname || e.name,
                                            id: e.uuid,
                                            displayHorizontalDotlines: !0,
                                            displayVerticalDotlines: !0,
                                            checked: !0,
                                            extended: !1,
                                            selected: !1
                                        })) : [],
                                        displayVerticalDotlines: !0
                                    })), Yv(t)
                                }(e.map(e => {
                                    const t = {};
                                    return t.name = e.name, e.elements && e.elements.length && (t.elements = e.elements.map(e => i.get(e) || {
                                        name: e,
                                        uuid: e
                                    })), t
                                }))
                            }
                            return i.loading = !1, t
                        })
                    }), this.setTrees("systemsTrees", t => {
                        const i = this.displayedTrees.find(e => "systemsTrees" === e.data);
                        return i.loading = !0, e.getSystems(this.$utils.getCloudId(), t.id, this.$utils.getProjectId()).then(e => {
                            let t = null;
                            return e.length && (t = function(e, t) {
                                const i = {
                                    extended: !0,
                                    checked: !0,
                                    selected: !1,
                                    hidden: !0
                                };
                                return i.children = e.map(e => ({
                                    label: e.longname || e.name,
                                    displayLength: !0,
                                    isGroup: !0,
                                    checked: !0,
                                    extended: !1,
                                    selected: !1,
                                    picto: {
                                        name: "BIMDataSystemsIcon",
                                        width: 13,
                                        height: 13,
                                        x: 23,
                                        y: 23
                                    },
                                    displayVerticalDotlines: !0,
                                    children: e.elements.map(e => {
                                        if (name = t(e), "null" !== name && void 0 !== name && null !== name) return {
                                            label: name,
                                            id: e,
                                            displayHorizontalDotlines: !0,
                                            displayVerticalDotlines: !0,
                                            checked: !0,
                                            extended: !1,
                                            selected: !1
                                        }
                                    }).filter(Boolean)
                                })), Yv(i)
                            }(e, this.$utils.getObjectName)), i.loading = !1, t
                        })
                    }), this.setTrees("classificationTrees", t => {
                        const i = this.displayedTrees.find(e => "classificationTrees" === e.data);
                        return i.loading = !0, e.getRawElements(this.$utils.getCloudId(), t.id, this.$utils.getProjectId()).then(e => {
                            let t = null;
                            return e && e.classifications && e.classifications.length && (t = function(e) {
                                const t = e.definitions.findIndex(e => "Name" === e.name);
                                return e.elements.forEach(i => {
                                    i.name = e.property_sets[i.attributes].properties.find(e => e.def_id === t).value, i.classifications.forEach(t => {
                                        e.classifications[t].elements ? e.classifications[t].elements.push(i) : e.classifications[t].elements = [i]
                                    })
                                }), Yv({
                                    extended: !0,
                                    selected: !1,
                                    checked: !0,
                                    hidden: !0,
                                    children: e.classifications.reduce((e, t) => {
                                        const i = e.find(e => e.label === t.type);
                                        return i ? i.children.push({
                                            label: `${t.notation} ${t.description}`,
                                            extended: !1,
                                            selected: !1,
                                            checked: !0,
                                            displayLength: !0,
                                            isGroup: !0,
                                            displayVerticalDotlines: !0,
                                            picto: {
                                                name: "BIMDataClassificationElementIcon",
                                                width: 13,
                                                height: 13,
                                                x: 23,
                                                y: 23
                                            },
                                            children: t.elements ? t.elements.map(e => ({
                                                label: e.longname || e.name,
                                                id: e.uuid,
                                                displayHorizontalDotlines: !0,
                                                extended: !1,
                                                selected: !1,
                                                checked: !0
                                            })) : []
                                        }) : e.push({
                                            label: t.type,
                                            extended: !0,
                                            selected: !1,
                                            checked: !0,
                                            displayLength: !0,
                                            isGroup: !0,
                                            picto: {
                                                name: "BIMDataClassificationCategoryIcon",
                                                width: 13,
                                                height: 13,
                                                x: 23,
                                                y: 23
                                            },
                                            children: [{
                                                label: `${t.notation} ${t.description}`,
                                                extended: !1,
                                                selected: !1,
                                                checked: !0,
                                                displayLength: !0,
                                                displayVerticalDotlines: !0,
                                                isGroup: !0,
                                                picto: {
                                                    name: "BIMDataClassificationElementIcon",
                                                    width: 13,
                                                    height: 13,
                                                    x: 23,
                                                    y: 23
                                                },
                                                children: t.elements ? t.elements.map(e => ({
                                                    label: e.longname || e.name,
                                                    id: e.uuid,
                                                    displayHorizontalDotlines: !0,
                                                    extended: !1,
                                                    selected: !1,
                                                    checked: !0
                                                })) : []
                                            }]
                                        }), e
                                    }, [])
                                })
                            }(e)), i.loading = !1, t
                        })
                    }), this.setTrees("zoneTrees", t => {
                        const i = this.displayedTrees.find(e => "zoneTrees" === e.data);
                        return i.loading = !0, e.getZones(this.$utils.getCloudId(), t.id, this.$utils.getProjectId()).then(e => {
                            let r = null;
                            return e && e.length && (r = function(e, t) {
                                const i = {
                                    extended: !0,
                                    checked: !0,
                                    selected: !1,
                                    hidden: !0
                                };
                                return i.children = e.map(e => ({
                                    label: e.longname || e.name,
                                    id: e.uuid,
                                    displayLength: !0,
                                    isGroup: !0,
                                    checked: !0,
                                    extended: !1,
                                    selected: !1,
                                    picto: {
                                        name: "BIMDataZoneIcon",
                                        width: 13,
                                        height: 13,
                                        x: 23,
                                        y: 23
                                    },
                                    children: e.spaces.map(e => {
                                        const i = t.find(t => t.uuid === e.uuid),
                                            r = i && i.children ? i.children : [];
                                        return {
                                            label: e.longname || e.name,
                                            id: e.uuid,
                                            displayHorizontalDotlines: !0,
                                            displayVerticalDotlines: !0,
                                            displayLength: r.length,
                                            checked: !0,
                                            extended: !1,
                                            selected: !1,
                                            children: Xv(r),
                                            picto: {
                                                name: "BIMDataSpaceIcon",
                                                width: 13,
                                                height: 13,
                                                x: 23,
                                                y: 23
                                            }
                                        }
                                    }),
                                    displayVerticalDotlines: !0
                                })), Yv(i)
                            }(e, this.$utils.getObjectsWithRepresentation().find(e => e.ifcId === t.id))), i.loading = !1, r && r.children && r.children.length && this.addObjectsWithoutRepresentation({
                                objects: r.children.map(e => ({
                                    uuid: e.id,
                                    name: e.label
                                })),
                                ifcId: t.id
                            }), r
                        })
                    })
                }
            }, {
                immediate: !0
            })
        },
        watch: {
            active: {
                handler(e) {
                    e ? (this.initialized || (this.initialized = !0), this.setActiveTree(this.lastActiveTree || this.displayedTrees[0])) : this.setActiveTree(null)
                },
                immediate: !0
            },
            structures: {
                handler(e) {
                    if (e) {
                        const t = this.displayedTrees.find(e => "spaceTrees" === e.data);
                        t.loading = !0, this.spaceTrees = e.map(e => {
                            const t = (this.spaceTrees || []).find(t => t.ifcId === e.ifcId);
                            if (t) return t; {
                                const t = function e(t) {
                                    const i = {
                                        label: t.longname || t.name,
                                        id: t.uuid,
                                        type: t.type,
                                        object_type: t.object_type,
                                        checked: !0,
                                        extended: "storey" !== t.type,
                                        selected: !1,
                                        exclusiveSelect: "site" === t.type || "project" === t.type,
                                        displayLength: !1,
                                        displayHorizontalDotlines: !1,
                                        displayVerticalDotlines: "storey" === t.type,
                                        isGroup: "storey" === t.type || "building" === t.type
                                    };
                                    switch (i.type) {
                                        case "project":
                                            i.picto = {
                                                name: "BIMDataProjectIcon",
                                                width: 13,
                                                height: 13,
                                                x: 11,
                                                y: 11
                                            };
                                            break;
                                        case "site":
                                            i.picto = {
                                                name: "BIMDataSiteIcon",
                                                width: 13,
                                                height: 13,
                                                x: 9,
                                                y: 13
                                            };
                                            break;
                                        case "building":
                                            i.picto = {
                                                name: "BIMDataBuildingIcon",
                                                width: 13,
                                                height: 13,
                                                x: 11,
                                                y: 12
                                            };
                                            break;
                                        case "storey":
                                            i.picto = {
                                                name: "BIMDataStoreyIcon",
                                                width: 13,
                                                height: 13,
                                                x: 11,
                                                y: 12
                                            }
                                    }
                                    const r = new Map,
                                        n = [];
                                    t.children && t.children.forEach(t => {
                                        "project" === t.type || "site" === t.type || "building" === t.type || "storey" === t.type ? n.push(e(t)) : r.has(t.type) ? r.get(t.type).push(t) : r.set(t.type, [t])
                                    });
                                    for (let [e, t] of r) {
                                        const i = new Map;
                                        t.forEach(e => {
                                            i.has(e.object_type) ? i.get(e.object_type).push(e) : i.set(e.object_type, [e])
                                        });
                                        const r = [];
                                        for (let [e, t] of i) {
                                            const i = t.map(e => ({
                                                label: e.longname || e.name,
                                                id: e.uuid,
                                                children: e.children && e.children.map(e => ({
                                                    label: e.longname || e.name,
                                                    children: [],
                                                    id: e.uuid,
                                                    type: e.type,
                                                    object_type: e.object_type,
                                                    checked: !0,
                                                    extended: !1,
                                                    selected: !1,
                                                    displayLength: !0,
                                                    displayHorizontalDotlines: !0,
                                                    displayVerticalDotlines: !0
                                                })),
                                                type: e.type,
                                                object_type: e.object_type,
                                                checked: !0,
                                                extended: !1,
                                                selected: !1,
                                                displayLength: !0,
                                                displayHorizontalDotlines: !0,
                                                displayVerticalDotlines: !0
                                            }));
                                            r.push({
                                                label: e,
                                                children: i,
                                                checked: !0,
                                                extended: !1,
                                                selected: !1,
                                                displayLength: !0,
                                                displayHorizontalDotlines: !0,
                                                displayVerticalDotlines: !0,
                                                isGroup: !0
                                            })
                                        }
                                        n.push({
                                            label: e,
                                            children: r,
                                            checked: !0,
                                            extended: !1,
                                            selected: !1,
                                            displayLength: !0,
                                            displayHorizontalDotlines: !0,
                                            displayVerticalDotlines: !0,
                                            isGroup: !0
                                        })
                                    }
                                    return i.children = n, Yv(i)
                                }(e);
                                return t.ifcId = e.ifcId, t
                            }
                        }), t.loading = !1
                    }
                },
                immediate: !0
            },
            objectsWithRepresentation: {
                handler(e) {
                    if (e) {
                        const t = this.displayedTrees.find(e => "objectTrees" === e.data);
                        t.loading = !0, this.objectTrees = e.map(e => {
                            const t = (this.objectTrees || []).find(t => t.ifcId === e.ifcId);
                            if (t) return t; {
                                const t = function(e) {
                                    const t = {
                                            extended: !0,
                                            checked: !0,
                                            selected: !1,
                                            hidden: !0
                                        },
                                        i = e.reduce((e, t) => {
                                            if (["project", "site", "building", "storey"].includes(t.type)) return e;
                                            const i = e.find(e => e.label === t.type);
                                            if (i) {
                                                const e = i.children.find(e => e.label === t.object_type);
                                                e ? e.children.push({
                                                    label: t.longname || t.name,
                                                    id: t.uuid,
                                                    displayHorizontalDotlines: !0,
                                                    extended: !1,
                                                    checked: !0,
                                                    selected: !1
                                                }) : i.children.push({
                                                    label: t.object_type,
                                                    extended: !1,
                                                    checked: !0,
                                                    selected: !1,
                                                    isGroup: !0,
                                                    displayLength: !0,
                                                    displayVerticalDotlines: !0,
                                                    children: [{
                                                        label: t.longname || t.name,
                                                        checked: !0,
                                                        selected: !1,
                                                        extended: !1,
                                                        id: t.uuid,
                                                        displayHorizontalDotlines: !0
                                                    }]
                                                })
                                            } else e.push({
                                                label: t.type,
                                                checked: !0,
                                                selected: !1,
                                                extended: !1,
                                                isGroup: !0,
                                                displayLength: !0,
                                                children: [{
                                                    label: t.object_type,
                                                    checked: !0,
                                                    selected: !1,
                                                    extended: !1,
                                                    isGroup: !0,
                                                    displayLength: !0,
                                                    displayVerticalDotlines: !0,
                                                    children: [{
                                                        label: t.longname || t.name,
                                                        checked: !0,
                                                        selected: !1,
                                                        extended: !1,
                                                        id: t.uuid,
                                                        displayHorizontalDotlines: !0
                                                    }]
                                                }]
                                            });
                                            return e
                                        }, []);
                                    return t.children = i, Yv(t)
                                }(e);
                                return t.ifcId = e.ifcId, t
                            }
                        }), t.loading = !1
                    }
                },
                immediate: !0
            }
        },
        methods: {
            ...hb({
                addObjectsWithoutRepresentation: "ADD_OBJECTS_WITHOUT_REPRESENTATION"
            }),
            getHorizontalListItems() {
                return this.displayedTrees.map(e => this.$t(e.name))
            },
            onHorizontalListItemClick(e) {
                const t = this.displayedTrees.find(t => this.$t(t.name) === e);
                this.setActiveTree(t)
            },
            async setTrees(e, t) {
                const i = [],
                    r = [];
                for (let n of this.ifcs) {
                    const s = (this[e] || []).find(e => e.ifcId === n.id);
                    if (s) i.push(s);
                    else {
                        const e = t(n);
                        e && r.push(e.then(e => (e && (e.ifcId = n.id), e)))
                    }
                }
                const n = (await Promise.all(r)).filter(e => !!e);
                i.push(...n), this[e] = i
            },
            onShowSelectedClick() {
                this.headerMenuDisplayed = !1, this.$refs.trees.forEach(e => {
                    e.active && e.showSelected()
                })
            },
            mergeSelectedModels() {
                this.$plugins.modalManager.pushModal(tb)
            },
            exportModels() {
                this.$plugins.modalManager.pushModal(rb)
            },
            setActiveTree(e) {
                this.displayedTrees.forEach(t => {
                    t.data !== e && (t.active = !1)
                }), e && (e.active = !0, this.lastActiveTree = e), this.activeTree = e
            },
            selectNodes(e) {
                e.trigger !== this && this.$refs.trees.forEach(t => t.selectNodes(e))
            },
            deselectNodes(e) {
                e.trigger !== this && this.$refs.trees.forEach(t => t.deselectNodes(e))
            },
            checkNodes(e) {
                e.trigger !== this && this.$refs.trees.forEach(t => t.checkNodes(e))
            },
            uncheckNodes(e) {
                e.trigger !== this && this.$refs.trees.forEach(t => t.uncheckNodes(e))
            },
            getStructure(e) {
                return this[e] || {}
            },
            onEvent(e, t) {
                switch (e) {
                    case "set-objects-selected":
                        t.selected ? this.$refs.trees.forEach(e => {
                            e !== t.trigger && e.selectNodes(t)
                        }) : this.$refs.trees.forEach(e => {
                            e !== t.trigger && e.deselectNodes(t)
                        });
                        break;
                    case "set-objects-visible":
                        t.visible ? this.$refs.trees.forEach(e => {
                            e !== t.trigger && e.checkNodes(t)
                        }) : this.$refs.trees.forEach(e => {
                            e !== t.trigger && e.uncheckNodes(t)
                        })
                }
                let i = null;
                "set-objects-visible" === e ? i = t.visible ? "show-objects" : "hide-objects" : "set-objects-selected" === e && (i = t.selected ? "select-objects" : "deselect-objects"), this.$hub.emit(i, {
                    ids: new Set(t.ids),
                    trigger: this
                })
            },
            away() {
                this.headerMenuDisplayed = !1
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const ub = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const pb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                directives: [{
                    name: "clickaway",
                    rawName: "v-clickaway",
                    value: function() {
                        return e.cancelOnClickAway && !e.loading && (e.edit = !1)
                    },
                    expression: "() => cancelOnClickAway && !loading && (edit = false)"
                }],
                staticClass: "editable-label",
                class: {
                    disabled: e.disabled
                },
                on: {
                    click: e.onClick,
                    contextmenu: function(t) {
                        return e.onRightClick(t)
                    }
                }
            }, [e.edit ? i("div", {
                staticClass: "editable-label__input"
            }, [i("BIMDataInput", {
                ref: "input",
                attrs: {
                    loading: e.loading,
                    disabled: e.loading || e.disabled
                },
                model: {
                    value: e.editedText,
                    callback: function(t) {
                        e.editedText = t
                    },
                    expression: "editedText"
                }
            }), e._v(" "), e.loading ? e._e() : i("div", {
                staticClass: "editable-label__input--buttons"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-green",
                attrs: {
                    width: "14",
                    height: "23",
                    x: "23",
                    y: "23"
                },
                nativeOn: {
                    click: function(t) {
                        return t.stopPropagation(), e.onValidate(t)
                    }
                }
            }, [i("BIMDataSuccessIcon")], 1), e._v(" "), i("BIMDataIcon", {
                staticClass: "bimdata-fill-red",
                attrs: {
                    "icon-name": "close",
                    width: "17",
                    height: "23",
                    x: "23",
                    y: "23"
                },
                nativeOn: {
                    click: function(t) {
                        return t.stopPropagation(), e.onCancel(t)
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1)], 1) : e._e(), e._v(" "), i("div", {
                staticClass: "editable-label__text"
            }, [!e.edit && e.editOnClick ? i("BIMDataIcon", {
                attrs: {
                    "icon-name": "pencil",
                    width: "15",
                    height: "15",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataPencilIcon")], 1) : e._e(), e._v(" "), !e.edit && e.isValidUrl(e.text) ? i("a", {
                attrs: {
                    target: "_blank",
                    href: e.text
                }
            }, [e._v(e._s(e.text))]) : e._e(), e._v(" "), e.edit || e.isValidUrl(e.text) ? e._e() : i("span", {
                class: {
                    error: e.error, success: e.success
                }
            }, [e._v(e._s((null != e.text ? e.text : "") + " " + (e.units || "")))])], 1)])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-d875f76e_0", {
            source: ".editable-label{height:auto;min-height:26px;display:flex;flex-direction:column;justify-content:center}.editable-label .bimdata-input{width:calc(100% - 50px);margin:0;height:26px;min-height:26px}.editable-label .bimdata-input input{height:auto;background-color:transparent;font-size:.8571428571em}.editable-label__input{display:flex;justify-content:space-between;align-items:center}.editable-label__input--buttons{height:32px;width:60px;padding:0 8px;background-color:#fff;box-shadow:0 2px 10px rgba(0,0,0,.1);display:flex;justify-content:space-between;align-items:center}.editable-label__input--buttons *{cursor:pointer}.editable-label__input~.editable-label__text{display:none}.editable-label .success{color:#00af50}.editable-label .error{color:#ff3d1e}.editable-label__text{width:100%;transition:color 1s;min-height:1rem;display:inline-flex}.editable-label__text svg{margin-right:5px;cursor:pointer}.editable-label__text span{width:calc(100% - 20px)}",
            map: void 0,
            media: void 0
        })
    }), {
        name: "editableLabel",
        components: {
            BIMDataPencilIcon: ub,
            BIMDataInput: eb,
            BIMDataIcon: El,
            BIMDataSuccessIcon: Kv,
            BIMDataCrossIcon: $l
        },
        data() {
            return {
                loading: !1,
                editedText: this.text,
                edit: !1,
                success: null,
                error: null
            }
        },
        props: {
            disabled: {
                type: Boolean,
                default: !1
            },
            cancelOnClickAway: {
                type: Boolean,
                default: !0
            },
            editOnClick: {
                type: Boolean,
                default: !0
            },
            editOnRightClick: {
                type: Boolean,
                default: !0
            },
            text: {
                type: [String, Number, Boolean]
            },
            units: {
                type: [String, Number, Boolean]
            },
            validateCallback: {
                type: Function,
                default: () => !0
            },
            validateCallbackArgs: {
                default: () => []
            }
        },
        directives: {
            clickaway: Pl
        },
        watch: {
            edit(e) {
                e ? (this.editedText = this.text, this.$nextTick(() => this.$refs.input.focus()), document.addEventListener("keydown", this.onKeyDown), this.$emit("editing-start")) : (document.removeEventListener("keydown", this.onKeyDown), this.$emit("editing-end"))
            }
        },
        methods: {
            onKeyDown(e) {
                27 === e.keyCode ? this.onCancel() : 13 !== e.keyCode || e.altKey || e.metaKey || e.ctrlKey || e.shiftKey || this.onValidate()
            },
            onClick() {
                this.disabled || !this.editOnClick || this.edit || (this.edit = !0)
            },
            onRightClick() {
                const e = this.$plugins.rightClickMenu;
                e && !this.disabled && !this.loading && this.editOnRightClick && e.registerContextCommand({
                    label: this.$t("global.edit"),
                    execute: () => this.edit = !0
                })
            },
            async onValidate() {
                const e = "object" == typeof this.validateCallbackArgs && "function" == typeof this.validateCallbackArgs[Symbol.iterator] ? this.validateCallbackArgs : [this.validateCallbackArgs],
                    t = this.validateCallback(this.editedText, ...e);
                let i = null;
                "function" == typeof t.then ? (this.loading = !0, i = await t, this.loading = !1) : i = t, this.edit = !1, i ? (this.success = !0, setTimeout(() => this.success = null, 500)) : (this.error = !0, setTimeout(() => this.error = null, 500))
            },
            onCancel() {
                this.edit = !1
            },
            isValidUrl: e => "string" == typeof e && e.match("://")
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const fb = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("g", [i("ellipse", {
                    staticClass: "bimdata-fill-border",
                    attrs: {
                        cx: "51.5",
                        cy: "68.7",
                        rx: "14.1",
                        ry: "0.7"
                    }
                }), e._v(" "), i("g", [i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M15.8,40c0,1.8,1.5,3.3,3.3,3.3s3.3-1.5,3.3-3.3c0-1.8-1.5-3.3-3.3-3.3S15.8,38.2,15.8,40z M19.1,38.5\n\t\t\tc0.9,0,1.6,0.7,1.6,1.6s-0.7,1.6-1.6,1.6s-1.6-0.7-1.6-1.6S18.2,38.5,19.1,38.5z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M7.7,41.2c0,1.9,1.5,3.4,3.4,3.4s3.4-1.5,3.4-3.4s-1.5-3.4-3.4-3.4S7.7,39.3,7.7,41.2z M11,39.5\n\t\t\tc0.9,0,1.6,0.7,1.6,1.6s-0.7,1.6-1.6,1.6s-1.6-0.7-1.6-1.6S10.1,39.5,11,39.5z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M0.4,34.7v30.8c0,2.1,1.7,3.9,3.9,3.9c1.9,0,3.4-1.3,3.8-3.1c0.3,0.1,0.6,0.1,0.9,0.1c2,0,3.7-1.6,3.8-3.5\n\t\t\tc0.3,0.1,0.6,0.1,0.9,0.1h0.2c0.3,0,0.6,0,0.9-0.1v1.9c0,2.1,1.7,3.9,3.9,3.9c2.1,0,3.8-1.7,3.9-3.8C22.8,65,23,65,23.3,65\n\t\t\tc2.1,0,3.9-1.7,3.9-3.9V34.7c0-7.4-6-13.4-13.4-13.4S0.4,27.3,0.4,34.7z M5.1,58l0,7.5c0,0.5-0.4,0.9-0.9,0.9S3.4,66,3.4,65.5\n\t\t\tV34.7c0-5.7,4.7-10.4,10.4-10.4c5.7,0,10.4,4.7,10.4,10.4v26.4c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9v-2.5h-3v6.1\n\t\t\tc0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9l0-12.6h-3v7c0,0.5-0.4,0.9-0.9,0.9h-0.2c-0.5,0-0.9-0.4-0.9-0.9v-1.9h-3l0,5.3\n\t\t\tc0,0.5-0.4,0.9-0.9,0.9c-0.5,0-0.9-0.4-0.9-0.9V58H5.1z"
                    }
                })]), e._v(" "), i("circle", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        cx: "32.3",
                        cy: "17.7",
                        r: "3.2"
                    }
                }), e._v(" "), i("circle", {
                    staticClass: "bimdata-fill-secondary",
                    attrs: {
                        cx: "41.7",
                        cy: "23.5",
                        r: "2.2"
                    }
                }), e._v(" "), i("circle", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        cx: "33.1",
                        cy: "30.3",
                        r: "1.5"
                    }
                }), e._v(" "), i("g", [i("rect", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        x: "48.5",
                        y: "35.8",
                        width: "6.7",
                        height: "1.8"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M49.9,53.1h-8.2V38.9h5.1v-5.5H57V40c0.8,0,1.6,0.1,2.4,0.4V31H46.8h-1.5h-0.1l-5.9,5.9V37v2v16.7h12.7\n\t\t\tC51.2,55,50.5,54.1,49.9,53.1z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M55.2,40.2H43.4v1.8h8.2C52.7,41.1,53.9,40.4,55.2,40.2z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M49.6,44.5h-6.2v1.8H49C49.1,45.7,49.4,45.1,49.6,44.5z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M43.4,50.7h5.5c-0.1-0.6-0.2-1.2-0.2-1.8h-5.2V50.7z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M56.9,41.6c-3.7,0-6.7,3.2-6.7,7.1s3,7.1,6.7,7.1c3.7,0,6.7-3.2,6.7-7.1S60.6,41.6,56.9,41.6z M57.4,44.7\n\t\t\tl-0.2,5.5h-0.7l-0.2-5.5H57.4z M56.9,52.5c-0.4,0-0.6-0.3-0.6-0.7c0-0.4,0.3-0.7,0.6-0.7c0.4,0,0.6,0.3,0.6,0.7\n\t\t\tC57.5,52.2,57.3,52.5,56.9,52.5z"
                    }
                })]), e._v(" "), i("g", [i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M13.1,11l0-0.5c-0.1-1.1,0.3-2.4,1.3-3.6c0.9-1.1,1.5-1.9,1.5-2.9c0-1.1-0.7-1.8-2-1.8\n\t\t\tc-0.8,0-1.6,0.3-2.1,0.7l-0.5-1.3c0.7-0.5,1.9-0.8,3-0.8c2.4,0,3.5,1.5,3.5,3.1c0,1.4-0.8,2.5-1.8,3.7c-0.9,1.1-1.3,2-1.2,3.1\n\t\t\tl0,0.5H13.1z M12.6,14c0-0.8,0.5-1.3,1.3-1.3c0.7,0,1.2,0.5,1.2,1.3c0,0.7-0.5,1.3-1.3,1.3C13.1,15.3,12.6,14.7,12.6,14z"
                    }
                })])])
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapGetters: _b
        } = Ma("viewer");
    const mb = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "bimdata-properties"
                }, [i("div", {
                    staticClass: "bimdata-properties__bucket"
                }, [e.editAllowed ? i("div", {
                    staticClass: "bimdata-properties__edit-switch"
                }, [i("BIMDataButton", {
                    staticClass: "bimdata-properties__edit-switch__button",
                    class: {
                        active: e.editing
                    },
                    attrs: {
                        width: "32"
                    },
                    on: {
                        click: function(t) {
                            e.editing = !e.editing
                        }
                    },
                    scopedSlots: e._u([{
                        key: "default",
                        fn: function(t) {
                            var r = t.hover;
                            return [i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "pencil",
                                    width: "20",
                                    height: "20",
                                    x: "24",
                                    y: "24"
                                }
                            }, [i("BIMDataPencilIcon")], 1), e._v(" "), r ? i("BIMDataTooltip", {
                                staticClass: "bimdata-tooltip--grey",
                                attrs: {
                                    message: e.$t("properties.tooltip")
                                }
                            }) : e._e()]
                        }
                    }], null, !1, 1866099508)
                })], 1) : e._e(), e._v(" "), i("BIMDataDropdownList", {
                    ref: "propertiesHeaderList",
                    attrs: {
                        list: e.reversedSelectedObjectIds,
                        disabled: !e.selectedObjectIds.length,
                        perPage: 30
                    },
                    scopedSlots: e._u([{
                        key: "header",
                        fn: function() {
                            return [i("div", {
                                staticClass: "bimdata-properties__body"
                            }, [i("div", {
                                staticClass: "bimdata-info-length"
                            }, [e._v(e._s(e.getNumber()))]), e._v(" "), i("span", {
                                on: {
                                    mouseover: function(t) {
                                        e.isTitleHover = !0
                                    },
                                    mouseleave: function(t) {
                                        e.isTitleHover = !1
                                    }
                                }
                            }, [e._v(e._s(e._f("middleTruncate")(e.getHeader(), 44)))]), e._v(" "), e.isTitleHover ? i("BIMDataTooltip", {
                                staticClass: "bimdata-tooltip--up",
                                attrs: {
                                    message: e.getHeader()
                                }
                            }) : e._e()], 1)]
                        },
                        proxy: !0
                    }, {
                        key: "element",
                        fn: function(t) {
                            var r = t.element,
                                n = t.close;
                            return [i("span", {
                                class: {
                                    selected: r === e.displayedElement.uuid
                                },
                                on: {
                                    click: function(t) {
                                        n(), e.showElementProperties(r)
                                    }
                                }
                            }, [e._v(e._s(e.objectName(r) || e.$t("properties.no_name")))])]
                        }
                    }])
                })], 1), e._v(" "), e.attributeProperties && e.displayedElement.classifications && e.displayedElement.property_sets ? i("div", {
                    staticClass: "submenu-content__body"
                }, [i("div", {
                    staticClass: "bimdata-properties__content"
                }, [i("div", {
                    staticClass: "bimdata-properties__content__title",
                    class: {
                        active: e.attributsDisplayed
                    },
                    on: {
                        click: function(t) {
                            e.attributsDisplayed = !e.attributsDisplayed
                        }
                    }
                }, [i("span", [e._v(e._s(e.$t("properties.attributes")))]), e._v(" "), i("BIMDataIcon", {
                    staticClass: "icon-chevron",
                    attrs: {
                        "icon-name": "chevron-right",
                        width: "10",
                        height: "10",
                        x: "13",
                        y: "23"
                    }
                }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), e.attributsDisplayed ? i("div", {
                    staticClass: "bimdata-properties__content__detail"
                }, e._l(e.attributeProperties, (function(t) {
                    return i("div", {
                        key: t.id,
                        staticClass: "property"
                    }, [i("div", {
                        staticClass: "property__name"
                    }, [i("span", [e._v(e._s(t.definition.name))])]), e._v(" "), i("span", {
                        staticClass: "property__value"
                    }, [i("BIMDataEditableLabel", {
                        attrs: {
                            disabled: e.editLoading,
                            validateCallback: e.onValidate,
                            validateCallbackArgs: [t, e.attributeProperties.id, "attributes"],
                            editOnClick: e.editing && e.isEditable(t.definition.name),
                            editOnRightClick: e.isEditable(t.definition.name),
                            text: t.value,
                            units: t.definition.unit && (t.definition.unit.prefix || "") + (t.definition.unit.name || "")
                        }
                    })], 1)])
                })), 0) : e._e()]), e._v(" "), e.displayedElement && e.displayedElement.classifications && e.displayedElement.classifications.length ? i("div", {
                    staticClass: "bimdata-properties__content"
                }, [i("div", {
                    staticClass: "bimdata-properties__content__title",
                    class: {
                        active: e.classificationDisplayed
                    },
                    on: {
                        click: function(t) {
                            e.classificationDisplayed = !e.classificationDisplayed
                        }
                    }
                }, [i("span", [e._v(e._s(e.$t("properties.classification")))]), e._v(" "), i("BIMDataIcon", {
                    staticClass: "icon-chevron",
                    attrs: {
                        "icon-name": "chevron-right",
                        width: "10",
                        height: "10",
                        x: "13",
                        y: "23"
                    }
                }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), e.classificationDisplayed ? i("div", {
                    staticClass: "bimdata-properties__content__detail"
                }, e._l(e.displayedElement.classifications, (function(t) {
                    return i("div", {
                        key: t.id,
                        staticClass: "property"
                    }, [i("span", {
                        staticClass: "property__name"
                    }, [e._v(e._s(t.name))]), e._v(" "), i("span", {
                        staticClass: "property__value"
                    }, [e._v(e._s(t.notation) + " - " + e._s(t.title))])])
                })), 0) : e._e()]) : e._e(), e._v(" "), e._l(e.displayedElement.property_sets, (function(t) {
                    return i("div", {
                        key: t.id,
                        staticClass: "bimdata-properties__content"
                    }, [i("div", {
                        staticClass: "bimdata-properties__content__title",
                        class: {
                            active: t.propertySetDisplayed
                        },
                        on: {
                            click: function(e) {
                                t.propertySetDisplayed = !t.propertySetDisplayed
                            }
                        }
                    }, [i("span", [e._v(e._s(t.name))]), e._v(" "), i("BIMDataIcon", {
                        staticClass: "icon-chevron",
                        attrs: {
                            "icon-name": "chevron-right",
                            width: "10",
                            height: "10",
                            x: "13",
                            y: "23"
                        }
                    }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), t.propertySetDisplayed ? i("div", {
                        staticClass: "bimdata-properties__content__detail"
                    }, e._l(t.properties, (function(r) {
                        return i("div", {
                            key: r.id,
                            staticClass: "property"
                        }, [i("div", {
                            staticClass: "property__name"
                        }, [i("span", [e._v(e._s(r.definition.name))])]), e._v(" "), i("span", {
                            staticClass: "property__value"
                        }, [i("BIMDataEditableLabel", {
                            attrs: {
                                disabled: e.editLoading,
                                validateCallback: e.onValidate,
                                validateCallbackArgs: [r, t.id],
                                editOnClick: e.editing && e.isPsetEditable(t.name),
                                editOnRightClick: e.isPsetEditable(t.name),
                                text: r.value,
                                units: r.definition.unit && (r.definition.unit.prefix || "") + (r.definition.unit.name || "")
                            }
                        })], 1)])
                    })), 0) : e._e()])
                }))], 2) : e._e(), e._v(" "), e.ifHeaderDisplayed() ? i("div", {
                    staticClass: "overlay"
                }) : e._e(), e._v(" "), e.displayedElement.classifications || e.displayedElement.property_sets ? e._e() : i("BIMDataEmpty", {
                    attrs: {
                        message: e.$t("properties.new_properties")
                    }
                }, [i("h2", [e._v(e._s(e.$t("properties.title")))]), e._v(" "), i("BIMDataIcon", {
                    attrs: {
                        "icon-name": "empty-propertie",
                        width: "0",
                        height: "0",
                        x: "66",
                        y: "70"
                    }
                }, [i("BIMDataEmptyPropertiesIllustration")], 1)], 1), e._v(" "), e.loading ? [i("BIMDataLoading")] : e._e()], 2)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-66d21def_0", {
                source: ".bimdata-properties{height:100%;position:relative;overflow:hidden}.bimdata-properties .submenu-content__body{height:calc(100% - 42px);overflow:auto}.bimdata-properties__bucket{display:flex;align-items:center;height:42px;background-color:#fff;box-shadow:rgba(0,0,0,.1) 0 2px 10px 0}.bimdata-properties__edit-switch{margin-left:4px;display:flex;align-items:center;justify-content:center}.bimdata-properties__edit-switch__button{cursor:pointer;padding:5px;display:flex;align-items:center;justify-content:center;border-radius:5px}.bimdata-properties__edit-switch__button.active{background-color:#abcde1}.bimdata-properties__edit-switch__button.active:hover{background-color:#abcde1}.bimdata-properties__edit-switch__button:hover{background-color:rgba(178,227,228,.3);border-radius:3px}.bimdata-properties__edit-switch__button:hover .bimdata-tooltip{top:40px;left:0;animation:fadeIn ease .2s,scale-up-center .2s cubic-bezier(.39,.575,.565,1);opacity:1;z-index:2}.bimdata-properties__body{display:flex;align-items:center}.bimdata-properties__body .bimdata-info-length{margin-right:12px}.bimdata-properties__body span{display:flex;align-items:center;font-size:.8571428571em}.bimdata-properties__body .bimdata-tooltip{width:100%;top:42px}.bimdata-properties .overlay{width:100%;height:100%;position:absolute;left:0;top:0;background-color:rgba(255,255,255,.8)}.bimdata-properties__content{box-shadow:0 3px 1px -2px rgba(0,0,0,.02),0 2px 2px 0 rgba(0,0,0,.04),0 1px 5px 0 rgba(0,0,0,.02)}.bimdata-properties__content:last-child{margin-bottom:0;box-shadow:none}.bimdata-properties__content__title{padding:17px 12px;display:flex;align-items:center;justify-content:space-between;color:#2f374a;font-weight:600;font-size:.9285714286em;transition:all .2s ease;cursor:pointer}.bimdata-properties__content__title::first-letter{text-transform:capitalize}.bimdata-properties__content__title svg{transform:rotate(90deg)}.bimdata-properties__content__title.active svg{transform:rotate(-90deg)}.bimdata-properties__content__title.active~.properties__content{margin-bottom:12px;box-shadow:0 4px 10px 0 rgba(0,0,0,.1)}.bimdata-properties__content__title:hover{background-color:#f8f8f8;transition:all .2s ease}.bimdata-properties__content__detail .property{padding:8px 12px;display:flex;align-items:center}.bimdata-properties__content__detail .property__name,.bimdata-properties__content__detail .property__value{font-size:.8571428571em;line-height:1.5;word-break:break-word}.bimdata-properties__content__detail .property__name{width:140px;color:#616060;font-weight:700;display:flex;justify-content:space-between}.bimdata-properties__content__detail .property__value{margin-left:1rem;width:calc(100% - 140px);color:#616060}.bimdata-properties__content__detail .property:nth-child(odd){background-color:#f8f8f8}.bimdata-properties .bimdata-dropdown-list{width:100%;margin-left:4px;position:initial}.bimdata-properties .bimdata-dropdown-list__content{min-width:auto;flex-grow:1;position:relative;border:none;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);z-index:1}.bimdata-properties .bimdata-dropdown-list__content:hover .bimdata-tooltip{opacity:1}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list{margin:0 4px;width:calc(100% - 16px);height:100%;max-height:82%;top:41px}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list>ul:first-child{height:calc(100% - 38px)}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list>ul:first-child li .selected{background-color:#abcde1}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list>ul:first-child li .selected:hover{background-color:#abcde1}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list>ul:first-child li:hover{background-color:rgba(178,227,228,.3)}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list li{padding:0}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list li span{padding:calc(12px / 2) 12px;width:100%;height:auto;min-height:30px;display:flex;align-items:center}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list .bimdata-base-pagination{box-shadow:0 2px 10px 0 rgba(0,0,0,.1)}.bimdata-properties .bimdata-dropdown-list .bimdata-paginated-list .bimdata-base-pagination li:hover{background-color:transparent}.bimdata-properties .bimdata-empty{margin:auto;width:100%;max-height:calc(100% - 42px);overflow:overlay;padding:12px 0}.bimdata-properties .bimdata-empty h2{font-size:1.2857142857em}.bimdata-properties .bimdata-empty svg{margin:12px 0;min-height:60px}.bimdata-properties .bimdata-empty p{width:70%}",
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataEditableLabel: pb,
                BIMDataIcon: El,
                BIMDataChevronRightIcon: ql,
                BIMDataPencilIcon: ub,
                BIMDataEmptyPropertiesIllustration: fb,
                BIMDataDropdownList: hc,
                BIMDataLoading: Wv,
                BIMDataEmpty: Cv,
                BIMDataButton: Ml,
                BIMDataTooltip: Al
            },
            mixins: [Cl],
            data: () => ({
                headerMenuDisplayed: !1,
                displayedElement: {},
                attributsDisplayed: !0,
                classificationDisplayed: !0,
                editLoading: !1,
                loading: !1,
                editing: !1,
                isTitleHover: !1
            }),
            props: {
                editAllowed: {
                    type: Boolean,
                    default: !0
                }
            },
            computed: {
                ..._b(["ifcIdOf", "objectName", "selectedObjectIds"]),
                attributeProperties() {
                    const e = this.displayedElement.attributes ? this.displayedElement.attributes.properties : [];
                    return this.displayedElement.uuid && e.push({
                        definition: {
                            name: "UUID"
                        },
                        value: this.displayedElement.uuid
                    }), e.id = this.displayedElement.attributes ? this.displayedElement.attributes.id : null, e
                },
                reversedSelectedObjectIds() {
                    return Array.from(this.selectedObjectIds).reverse()
                }
            },
            watch: {
                selectedObjectIds: {
                    handler(e) {
                        if (e.length) {
                            const e = this.reversedSelectedObjectIds;
                            for (let t of e)
                                if (this.ifcIdOf(t)) {
                                    this.showElementProperties(t);
                                    break
                                }
                        } else this.displayedElement = {}
                    },
                    immediate: !0
                }
            },
            methods: {
                async onValidate(e, t, i, r = "propertySets") {
                    const n = {
                        ...t,
                        value: e
                    };
                    n.value = e, this.editLoading = !0;
                    try {
                        const e = this.$utils.getCloudId(),
                            s = this.$utils.getProjectId(),
                            o = this.$utils.getIfcIdOf(this.displayedElement.uuid),
                            a = await (new this.$bimdataApiClient.IfcApi).updateElementPropertySetProperty(e, this.displayedElement.uuid, t.id, o, s, i, n);
                        return this.$hub.emit("alert", {
                            type: "success",
                            message: this.$t("properties.edit-success")
                        }), (new this.$bimdataApiClient.IfcApi).getPropertySet(e, a.property_set_id, o, s).then(e => {
                            if ("attributes" === r) this.displayedElement && Object.assign(this.displayedElement.attributes, e);
                            else {
                                const t = this.displayedElement.property_sets.find(e => e.id === i);
                                Object.assign(t, e)
                            }
                        }).catch(e => this.$hub.emit("alert", {
                            type: "error",
                            message: this.$t("properties.edit-error")
                        })).finally(() => this.editLoading = !1), !0
                    } catch (e) {
                        return this.$hub.emit("alert", {
                            type: "error",
                            message: this.$t("properties.edit-error")
                        }), this.editLoading = !1, console.error(e), !1
                    }
                },
                isEditable(e) {
                    return this.editAllowed && !["UUID", "type"].includes(e)
                },
                isPsetEditable(e) {
                    return this.editAllowed && !["BaseQuantities", "BIMDataQuantities"].includes(e)
                },
                async showElementProperties(e) {
                    if (e !== this.displayedElement.uuid) {
                        try {
                            this.loading = !0, this.displayedElement = await (new this.$bimdataApiClient.IfcApi).getElement(this.$utils.getCloudId(), this.ifcIdOf(e), this.$utils.getProjectId(), e)
                        } catch (e) {
                            this.$hub.emit("alert", {
                                type: "error",
                                message: e
                            }), this.displayedElement = {}
                        }
                        this.displayedElement.property_sets = this.displayedElement.property_sets ? this.displayedElement.property_sets.map(e => ({
                            ...e,
                            propertySetDisplayed: !0
                        })) : [], this.loading = !1
                    }
                },
                getNumber() {
                    return `${this.selectedObjectIds.length}`
                },
                getHeader() {
                    return this.selectedObjectIds.length ? `${this.objectName(this.displayedElement.uuid)||this.$t("properties.no_name")}` : this.$t("properties.no_element")
                },
                ifHeaderDisplayed() {
                    return this.$refs.propertiesHeaderList && this.$refs.propertiesHeaderList.displayed
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        {
            mapState: gb
        } = Ma("viewer");
    const vb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("BIMDataWindowManager", {
                staticStyle: {
                    width: "400px"
                },
                style: e.structurePinned || e.propertiesPinned ? "height: calc(" + e.viewerHeight + " - (2 * 12px));" : null,
                attrs: {
                    container: e.viewerElement
                }
            }, [i("BIMDataWindow", {
                ref: "structure",
                attrs: {
                    title: e.$t("structure.title"),
                    reducible: e.structurePinned && e.propertiesPinned,
                    reduced: e.structureReduced,
                    minHeight: 150
                },
                on: {
                    "reduced-change": function(t) {
                        e.structureReduced = t
                    },
                    "pinned-change": function(t) {
                        e.structurePinned = t
                    }
                }
            }, [i("BIMDataStructure", {
                attrs: {
                    active: e.active,
                    mergeAllowed: e.merge,
                    exportAllowed: e.exportAllowed
                }
            })], 1), e._v(" "), i("BIMDataWindow", {
                ref: "properties",
                attrs: {
                    title: e.$t("properties.title"),
                    reducible: e.structurePinned && e.propertiesPinned,
                    reduced: e.propertiesReduced
                },
                on: {
                    "reduced-change": function(t) {
                        e.propertiesReduced = t
                    },
                    "pinned-change": function(t) {
                        e.propertiesPinned = t
                    }
                }
            }, [i("BIMDataProperties", {
                attrs: {
                    active: e.active,
                    editAllowed: e.editProperties
                }
            })], 1)], 1)
        },
        staticRenderFns: []
    }, void 0, {
        data: () => ({
            structureReduced: !1,
            propertiesReduced: !1,
            structurePinned: !0,
            propertiesPinned: !0
        }),
        components: {
            BIMDataWindowManager: Dl,
            BIMDataWindow: Rl,
            BIMDataStructure: db,
            BIMDataProperties: mb
        },
        computed: {
            ...gb(["viewerElement", "viewerBoundingClientRect"]),
            viewerHeight() {
                return this.viewerBoundingClientRect ? `${this.viewerBoundingClientRect.height}px` : null
            }
        },
        watch: {
            structureReduced(e) {
                e && this.propertiesReduced && (this.propertiesReduced = !1)
            },
            propertiesReduced(e) {
                e && this.structureReduced && (this.structureReduced = !1)
            },
            propertiesPinned(e) {
                e || (this.propertiesReduced && (this.propertiesReduced = !1), this.structureReduced && (this.structureReduced = !1))
            },
            structurePinned(e) {
                e || (this.structureReduced && (this.structureReduced = !1), this.propertiesReduced && (this.propertiesReduced = !1))
            }
        },
        props: {
            active: {
                type: Boolean,
                default: !1
            },
            editProperties: {
                type: Boolean,
                default: !0
            },
            merge: {
                type: Boolean,
                default: !0
            },
            exportAllowed: {
                type: Boolean,
                default: !0
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const bb = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", {
                attrs: {
                    transform: "translate(-27.000000, -88.000000)"
                }
            }, [t("g", {
                attrs: {
                    transform: "translate(12.000000, 72.000000)"
                }
            }, [t("path", {
                attrs: {
                    d: "M33.8,28.9h-1v-3.4l0,0c0-0.4-0.3-0.7-0.7-0.7h-6.6v-3.4h0.8c0.6,0,1.2-0.5,1.2-1.2v-3\n\t\t\t\tc0-0.7-0.5-1.2-1.2-1.2h-2.9c-0.6,0-1.2,0.5-1.2,1.2v3c0,0.7,0.5,1.2,1.2,1.2h0.8v3.4h-6.6c-0.4,0-0.7,0.3-0.7,0.7l0,0v3.4h-1\n\t\t\t\tc-0.6,0-1.2,0.5-1.2,1.2v3c0,0.7,0.5,1.2,1.2,1.2h2.9c0.6,0,1.2-0.5,1.2-1.2v-3c0-0.7-0.5-1.2-1.2-1.2h-0.6v-2.7h5.9v2.7h-0.8\n\t\t\t\tc-0.6,0-1.2,0.5-1.2,1.2v3c0,0.7,0.5,1.2,1.2,1.2h2.9c0.6,0,1.2-0.5,1.2-1.2v-3c0-0.7-0.5-1.2-1.2-1.2h-0.8v-2.7h5.9v2.7h-0.6\n\t\t\t\tc-0.6,0-1.2,0.5-1.2,1.2v3c0,0.7,0.5,1.2,1.2,1.2h2.9c0.6,0,1.2-0.5,1.2-1.2v-3C35,29.4,34.5,28.9,33.8,28.9"
                }
            })])])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    var yb = {
            properties: {
                title: "Properties",
                tooltip: "Editing",
                new_properties: "Please select an element in the model to display its properties",
                object: "Object",
                objects: "Objects",
                no_element: "No element",
                no_name: "Not specified",
                classification: "Classification",
                attributes: "Attributes",
                "edit-success": "Data Edited! :)",
                "edit-error": "Impossible to edit data :(",
                "get-error": "Error fetching data, you should refresh the page"
            }
        },
        Mb = {
            structure: {
                tooltip: "Tree and properties",
                title: "IFC structure",
                currently_model: "currently in the model",
                no: "no",
                spatial: "Spatial",
                zones: "Zones",
                systems: "Systems",
                classifications: "Classifications",
                objects: "Objects",
                layers: "Layers",
                no_label: "Not specified",
                show_selected: "Show selected"
            },
            merge: {
                "merge-ifc": "Merge models",
                "merge-modal": {
                    title: "Merge loaded models",
                    label: "Name of the merged file",
                    "input-error": "Name is mandatory",
                    verb: "Merge",
                    "not-enough-models": "You must load at least 2 models to merge them."
                },
                "success-modal": {
                    title: "Success",
                    text: "Your merged file will be available in the ifc list of your project shortly.",
                    button: "Ok"
                }
            },
            export: {
                "export-ifc": "Export .ifc model",
                "export-modal": {
                    title: "Export",
                    "model-selection": "1- Model selection",
                    "export-file-name": "2- Name of the exported file",
                    label: "Name of the exported file",
                    "input-error": "Name is mandatory",
                    verb: "Export"
                },
                "success-modal": {
                    title: "Success",
                    text: "Your exported file will be available in the IFC list of your project shortly.",
                    button: "Ok"
                }
            }
        },
        Ab = {
            structure: {
                tooltip: "Arborescence et propriétés",
                title: "Structure IFC",
                currently_model: "actuellement dans la maquette",
                no: "aucun",
                spatial: "Spatiale",
                zones: "Zones",
                systems: "Systèmes",
                classifications: "Classifications",
                objects: "Objets",
                layers: "Layers",
                no_label: "Non spécifié",
                show_selected: "Afficher la selection"
            },
            merge: {
                "merge-ifc": "Fusionner les maquettes",
                "merge-modal": {
                    title: "Fusionner les maquettes ouvertes",
                    label: "Nom du fichier fusionné",
                    "input-error": "Le nom est obligatoire",
                    verb: "Fusionner",
                    "not-enough-models": "Vous devez charger au moins 2 maquettes pour les fusionner."
                },
                "success-modal": {
                    title: "Succès",
                    text: "Votre fusion sera disponnible dans la liste IFC de votre projet dans quelques instant.",
                    button: "Terminé"
                }
            },
            export: {
                "export-ifc": "Exporter en .ifc",
                "export-modal": {
                    title: "Export",
                    "model-selection": "1- Séléction de la maquette",
                    "export-file-name": "2- Nom de l'export",
                    label: "Nom de votre export",
                    "input-error": "Le nom est obligatoire",
                    verb: "Exporter"
                },
                "success-modal": {
                    title: "Succès",
                    text: "Votre export sera disponnible dans la liste IFC de votre projet dans quelques instant.",
                    button: "Terminé"
                }
            }
        },
        xb = ({
            editProperties: e = !0,
            merge: t = !0,
            exportAllowed: i = !0
        } = {}) => ({
            name: "structureAndProperties",
            contexts: ["2D", "3D"],
            display: {
                iconPosition: "left",
                content: "free"
            },
            component: vb,
            componentCfg: {
                editProperties: e,
                merge: t,
                exportAllowed: i
            },
            tooltip: "structure.tooltip",
            keepActive: !0,
            icon: {
                component: bb,
                props: {
                    name: "projection",
                    height: 19,
                    y: 19
                }
            },
            i18n: {
                en: {
                    ...yb,
                    ...Mb
                },
            }
        });
    const Cb = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M10.2,4.5c-1,0.4-1.9,1-2.7,1.7c-1.2,1-2.2,2.3-2.9,3.7c-0.2,0.4-0.4,0.9-0.5,1.4 c-0.4,1.1-0.1,2.1,0.7,3c1.7,1.7,3.8,2.3,6.1,1.7c0.1,0,0.3,0,0.4,0c0.9,0.1,1.9,0.2,2.8,0.1c0.2,0,0.4-0.1,0.6-0.1 c-0.2,0.3-0.4,0.7-0.7,1c-0.7,1-1.7,1.7-2.8,2.2C10,19.7,8.5,19.9,7,19.5c-1.4-0.3-2.6-1-3.6-2c-1.1-1.2-1.7-2.5-1.9-4.1 c-0.1-1-0.1-2,0.3-3C2.2,9.7,2.7,9,3.1,8.4c1-1.3,2.1-2.4,3.3-3.6C6.9,4.4,7.3,4,7.8,3.6C7.9,3.6,8,3.5,8,3.5 C8.9,3.4,9.6,3.6,10.2,4.5"
                }
            }), this._v(" "), t("g", {
                attrs: {
                    transform: "translate(4.255319, 1.415277)"
                }
            }, [t("path", {
                attrs: {
                    d: "M7.9,0.1c0.8-0.1,1.5,0,2.2,0.2c0.9,0.3,1.8,0.7,2.6,1.3c0.8,0.6,1.4,1.3,1.9,2.2 c0.6,1.1,0.9,2.4,0.9,3.7c-0.1,1.3-0.5,2.6-1.2,3.7c-0.7,1-1.5,1.7-2.5,2.3c-0.7,0.4-1.5,0.7-2.3,0.7c-1.4,0-2.7-0.2-4.1-0.5 c-1-0.2-2-0.5-3-0.8c-0.5-0.1-1-0.3-1.4-0.5c-0.3-0.2-0.5-0.5-0.6-0.9c-0.2-0.5-0.1-1.1,0.1-1.6c0.2,0.2,0.5,0.3,0.7,0.5 c1,0.6,2,1.1,3.2,1.4C5.8,12,7.4,12,9,11.8c1-0.2,1.9-0.6,2.3-1.6c0.3-0.7,0.5-1.4,0.5-2.1c0.1-1.8-0.6-3.3-1.9-4.6 C9.7,3.3,9.7,3.1,9.6,2.8C9.2,1.9,8.7,0.9,7.9,0.1"
                }
            })]), this._v(" "), t("path", {
                attrs: {
                    d: "M13.3,12.6c0-0.2,0-0.3,0-0.4c0.2-1.7-0.1-3.2-0.7-4.8c-0.5-1.4-1.3-2.7-2.4-3.8 C9.5,3,8.7,2.9,7.8,3c-2,0.4-3.5,1.5-4.3,3.4C3.3,6.8,3.2,7.3,3.1,7.6C2.9,7.9,2.7,8.1,2.6,8.3C2,9.1,1.5,9.9,1.2,10.8 c0,0,0,0-0.1,0.1c-0.3-0.5-0.5-1-0.7-1.6C0.1,8.5-0.1,7.5,0,6.5c0.1-1.7,0.8-3.2,2-4.4c0.9-0.9,1.9-1.5,3.1-1.8 c1.3-0.4,2.7-0.4,4,0c1.2,0.4,2.3,1,3.1,2c0.3,0.4,0.6,0.9,0.8,1.4c0.4,1,0.9,2,1.2,3.1c0.4,1.4,0.7,2.8,1,4.2 c0.1,0.4-0.2,0.7-0.5,1C14.3,12.4,13.9,12.5,13.3,12.6"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Pb = gl({
        render: function() {
            var e = this.$createElement;
            this._self._c;
            return this._m(0)
        },
        staticRenderFns: [function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("div", {
                staticClass: "placeholder"
            }, [t("div", {
                staticClass: "placeholder--status"
            }, [t("span")]), this._v(" "), t("div", {
                staticClass: "placeholder--priority"
            }, [t("span")]), this._v(" "), t("div", {
                staticClass: "placeholder--assigned"
            }, [t("span")]), this._v(" "), t("div", {
                staticClass: "placeholder--btns"
            }, [t("span"), this._v(" "), t("span")])])
        }]
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const kb = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M11.5,18.2c-3.7,0-6.7-3-6.7-6.7s3-6.7,6.7-6.7s6.7,3,6.7,6.7S15.2,18.2,11.5,18.2z M11.5,5.8\n\t\tc-3.2,0-5.7,2.6-5.7,5.7s2.6,5.7,5.7,5.7s5.7-2.6,5.7-5.7S14.7,5.8,11.5,5.8z"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M10.8,14.9c0-0.4,0.3-0.7,0.7-0.7c0.4,0,0.7,0.3,0.7,0.7c0,0.4-0.3,0.7-0.7,0.7\n\t\t\tC11.1,15.6,10.8,15.3,10.8,14.9z M11.1,13.1l-0.2-5.8h1.2l-0.2,5.8H11.1z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Eb = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M21.5,10.2H6.3l7-7l-1.8-1.8l-10,10l10,10l1.8-1.8l-7-7h15.2V10.2z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ib = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf--bucket"
            }, [i("div", {
                staticClass: "bcf__header"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "23px"
                },
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "back",
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataBackIcon")], 1)], 1), e._v(" "), i("span", [e._v(e._s(e.label))])], 1), e._v(" "), i("div", {
                staticClass: "bcf__content bcf--bucket__content"
            }, [i("BIMDataPaginatedList", {
                staticClass: "bimdata-paginated-list--small",
                attrs: {
                    list: e.elements,
                    perPage: e.perPage
                },
                scopedSlots: e._u([{
                    key: "element",
                    fn: function(t) {
                        var i = t.element;
                        return [e._v(e._s(e.$store.getters["viewer/objectName"](i)))]
                    }
                }])
            })], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataBackIcon: Eb,
            BIMDataPaginatedList: Ql,
            BIMDataButton: Ml
        },
        props: {
            label: {
                type: String,
                required: !0
            },
            elements: {
                type: Array,
                required: !0
            },
            perPage: Number
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Tb = gl({
            render: function() {
                var e = this.$createElement;
                return (this._self._c || e)("div", {
                    staticClass: "bimdata-initials"
                }, [this._t("default")], 2)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-5732ff77_0", {
                source: ".bimdata-initials{width:calc(12px * 3);height:calc(12px * 3);padding:0;display:flex;align-items:center;justify-content:center;background-color:#2f374a;border-radius:50%;color:#fff;font-size:.8571428571em}",
                map: void 0,
                media: void 0
            })
        }), {}, void 0, !1, void 0, !1, bl, void 0, void 0),
        {
            mapState: Db
        } = Ma("viewer"),
        {
            mapState: Sb
        } = Ma("bcf");
    const Bb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf--list__element"
            }, [i("div", {
                staticClass: "bcf--list__element--line",
                on: {
                    click: e.toggleDisplayDetail
                }
            }, [i("div", {
                staticClass: "bcf--list__element--index"
            }, [i("span", [e._v(e._s(e.topic.index))])]), e._v(" "), i("div", {
                staticClass: "bcf--list__element--priority",
                class: e.getPriority()
            }, [i("span", [e._v(e._s(e._f("formatPriority")(e.topic.priority)))])]), e._v(" "), i("div", {
                staticClass: "bcf--list__element--title"
            }, [i("span", {
                on: {
                    mouseover: function(t) {
                        e.isTitleHover = !0
                    },
                    mouseleave: function(t) {
                        e.isTitleHover = !1
                    }
                }
            }, [e._v(e._s(e._f("middleTruncate")(e.topic.title, 20)))]), e._v(" "), e.topic.title.length >= e.textMaxLength && e.isTitleHover ? i("BIMDataTooltip", {
                staticClass: "bimdata-tooltip--left",
                class: {
                    "bimdata-tooltip--up": e.topic.title.length >= e.textMaxLength
                },
                attrs: {
                    message: e.topic.title
                }
            }) : e._e()], 1), e._v(" "), i("div", {
                staticClass: "bcf--list__element--user"
            }, [e.topic.creation_author ? i("BIMDataInitials", [e._v("\n        " + e._s(e.$store.getters["bcf/getTopicUserInitial"](e.topic.guid)) + "\n      ")]) : e._e()], 1), e._v(" "), i("div", {
                staticClass: "bcf--list__element--date"
            }, [i("span", [e._v(e._s(e._f("formatDate")(e.topic.creation_date)))])])]), e._v(" "), e.loading ? i("div", [i("BIMDataBCFListElementPlaceholder")], 1) : e._e(), e._v(" "), e.detailDisplayed && "detail" === e.mode ? i("div", {
                staticClass: "topic-preview"
            }, [e.viewpoint && e.viewpoint.snapshot ? [i("div", {
                staticClass: "topic-preview__snapshot"
            }, [e.topic.topic_status && e.topic.topic_status.length ? i("div", {
                staticClass: "topic-preview__status",
                class: e.getStatus()
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "statut",
                    width: "23",
                    height: "23",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataStatutIcon")], 1), e._v(" "), i("span", [e._v(e._s(e.topic.topic_status))])], 1) : e._e(), e._v(" "), i("img", {
                staticClass: "snapshot",
                attrs: {
                    src: e.viewpoint.snapshot.snapshot_data
                }
            })])] : e._e(), e._v(" "), i("div", {
                staticClass: "topic-preview__content"
            }, [i("div", {
                staticClass: "topic-preview__content__infos"
            }, [e.viewpoint && void 0 === e.viewpoint.snapshot ? i("div", {
                staticClass: "topic-preview__status",
                class: e.getStatus()
            }, [e.topic.topic_status && e.topic.topic_status.length ? i("BIMDataIcon", {
                attrs: {
                    "icon-name": "statut",
                    width: "23",
                    height: "23",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataStatutIcon")], 1) : e._e(), e._v(" "), i("span", [e._v(e._s(e.topic.topic_status || e.$t("bcf.element_empty")))])], 1) : e._e(), e._v(" "), i("div", {
                staticClass: "infos"
            }, [i("div", {
                staticClass: "infos__priority"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_priority")) + " :")]), e._v(" "), i("span", {
                class: e.getPriority()
            }, [e._v(e._s(e.topic.priority || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "infos__assigned"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_assigned")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.assigned_to || e.$t("bcf.element_empty")))])])]), e._v(" "), i("div", {
                staticClass: "see"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--default bimdata-btn__fill--btn-icon bimdata-btn__radius",
                attrs: {
                    disabled: !e.viewpoint || 0 === e.viewpoint.components.selection.length,
                    width: "49%"
                },
                on: {
                    click: e.onElementsClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "model",
                    width: "18",
                    height: "18",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataModelIcon")], 1), e._v("\n            " + e._s(e.viewpoint ? e.viewpoint.components.selection.length : 0) + " " + e._s(e.$t("bcf.btn_elements")) + "\n          ")], 1), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__fill--btn-icon bimdata-btn__radius",
                attrs: {
                    width: "49%"
                },
                on: {
                    click: e.onSeeClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_see")))])], 1)])])], 2) : e.detailDisplayed && "elements" === e.mode ? i("BIMDataBCFElementBucketSimpleList", {
                attrs: {
                    elements: e.viewpoint.components.selection.map((function(e) {
                        return e.ifc_guid
                    })),
                    label: e.viewpoint.components.selection.length + " concerned element" + (e.viewpoint.components.selection.length ? "s" : "")
                },
                on: {
                    close: function(t) {
                        e.mode = "detail"
                    }
                }
            }) : e._e()], 1)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataModelIcon: lc,
            BIMDataStatutIcon: kb,
            BIMDataBCFElementBucketSimpleList: Ib,
            BIMDataTooltip: Al,
            BIMDataBCFListElementPlaceholder: Pb,
            BIMDataButton: Ml,
            BIMDataInitials: Tb
        },
        mixins: [Cl],
        data: () => ({
            mode: "detail",
            loading: !1,
            detailDisplayed: !1,
            isTitleHover: !1
        }),
        props: {
            topic: {
                type: Object,
                required: !0
            }
        },
        computed: {
            ...Sb(["bcfRoot"]),
            ...Db(["selectedObjectIds"]),
            viewpoints() {
                return this.$store.getters["bcf/viewpoints"](this.topic.guid)
            },
            viewpoint() {
                return this.$store.getters["bcf/viewpoint"](this.topic.guid)
            }
        },
        watch: {
            mode: {
                handler(e) {
                    this.detailDisplayed && "elements" === e && (this.$hub.emit("deselect-objects", {
                        ids: this.selectedObjectIds,
                        trigger: this.bcfRoot
                    }), this.$hub.emit("select-objects", {
                        ids: new Set(this.viewpoint.components.selection.map(e => e.ifc_guid)),
                        trigger: this.bcfRoot
                    }))
                },
                immediate: !0
            }
        },
        methods: {
            async toggleDisplayDetail() {
                this.detailDisplayed ? this.detailDisplayed = !1 : (this.viewpoints || (this.loading = !0, await this.$store.dispatch("bcf/loadFullTopic", this.topic.guid), this.loading = !1), this.detailDisplayed = !0)
            },
            onElementsClick() {
                this.mode = "elements"
            },
            onSeeClick() {
                this.$store.commit("bcf/SET_SELECTED_TOPIC", this.topic), this.$store.commit("bcf/SET_VIEW", "BIMDataBCFDetailView")
            },
            getPriority() {
                return {
                    low: "Low" === this.topic.priority,
                    medium: "Medium" === this.topic.priority,
                    high: "High" === this.topic.priority
                }
            },
            getStatus() {
                return {
                    opened: "Opened" === this.topic.topic_status,
                    resolved: "Resolved" === this.topic.topic_status,
                    closed: "Closed" === this.topic.topic_status
                }
            }
        },
        filters: {
            formatDate: e => e.toLocaleDateString ? e.toLocaleDateString() : e,
            formatPriority: e => e ? e[0] : null
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const jb = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M12,4C14.21,4 16,5.79 16,8C16,10.21 14.21,12 12,12C9.79,12 8,10.21 8,8C8,5.79 9.79,4 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Lb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("g", [i("ellipse", {
                staticClass: "bimdata-fill-border",
                attrs: {
                    cx: "14.5",
                    cy: "58.7",
                    rx: "14.1",
                    ry: "0.7"
                }
            }), e._v(" "), i("g", [i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M46.9,26.7c-1.8,0-3.3,1.5-3.3,3.3c0,1.8,1.5,3.3,3.3,3.3s3.3-1.5,3.3-3.3C50.2,28.2,48.7,26.7,46.9,26.7z\n\t\t\t M48.5,30c0,0.9-0.7,1.6-1.6,1.6s-1.6-0.7-1.6-1.6s0.7-1.6,1.6-1.6S48.5,29.2,48.5,30z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M55,27.8c-1.9,0-3.4,1.5-3.4,3.4c0,1.9,1.5,3.4,3.4,3.4s3.4-1.5,3.4-3.4C58.3,29.3,56.8,27.8,55,27.8z\n\t\t\t M56.6,31.2c0,0.9-0.7,1.6-1.6,1.6s-1.6-0.7-1.6-1.6c0-0.9,0.7-1.6,1.6-1.6S56.6,30.3,56.6,31.2z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M52.2,11.3c-7.4,0-13.4,6-13.4,13.4v26.4c0,2.1,1.7,3.9,3.9,3.9c0.3,0,0.6,0,0.9-0.1c0.1,2.1,1.8,3.8,3.9,3.8\n\t\t\tc2.1,0,3.9-1.7,3.9-3.9v-1.9c0.3,0.1,0.6,0.1,0.9,0.1h0.2c0.3,0,0.6,0,0.9-0.1c0.2,2,1.8,3.5,3.8,3.5c0.3,0,0.6,0,0.9-0.1\n\t\t\tc0.4,1.8,1.9,3.1,3.8,3.1c2.1,0,3.9-1.7,3.9-3.9V24.7C65.6,17.3,59.6,11.3,52.2,11.3z M57.9,48v4.6c0,0.5-0.4,0.9-0.9,0.9\n\t\t\tc-0.5,0-0.9-0.4-0.9-0.9l0-5.3h-3v1.9c0,0.5-0.4,0.9-0.9,0.9h-0.2c-0.5,0-0.9-0.4-0.9-0.9v-7h-3l0,12.6c0,0.5-0.4,0.9-0.9,0.9\n\t\t\ts-0.9-0.4-0.9-0.9v-6.1h-3v2.5c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9V24.7c0-5.7,4.7-10.4,10.4-10.4c5.7,0,10.4,4.7,10.4,10.4\n\t\t\tv30.8c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9l0-7.5H57.9z"
                }
            })]), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    cx: "29.8",
                    cy: "3.8",
                    r: "3.2"
                }
            }), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-secondary",
                attrs: {
                    cx: "23.9",
                    cy: "13.9",
                    r: "2.2"
                }
            }), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    cx: "28.9",
                    cy: "20.7",
                    r: "1.5"
                }
            }), e._v(" "), i("g", [i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M14,33.7c1.3,0.6,2.5,1.3,3.6,2.2c1.6,1.4,2.9,3,3.8,4.9c0.3,0.6,0.5,1.2,0.7,1.8c0.5,1.5,0.2,2.8-0.9,3.9\n\t\t\tc-2.3,2.3-5,3-8.1,2.2c-0.2,0-0.4,0-0.5,0c-1.2,0.2-2.5,0.3-3.7,0.1c-0.3,0-0.5-0.1-0.9-0.1c0.3,0.5,0.6,0.9,0.9,1.4\n\t\t\tc0.9,1.3,2.2,2.3,3.6,2.9c1.9,0.8,3.8,1,5.8,0.6c1.8-0.4,3.4-1.3,4.7-2.7c1.4-1.5,2.3-3.3,2.5-5.4c0.1-1.3,0.1-2.7-0.4-3.9\n\t\t\tc-0.4-1-1-1.9-1.7-2.7c-1.3-1.7-2.8-3.2-4.3-4.7c-0.6-0.6-1.2-1.1-1.8-1.6c-0.1-0.1-0.2-0.1-0.3-0.1C15.7,32.3,14.8,32.5,14,33.7z\n\t\t\t"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M11.5,29.8c-1.1-0.1-2,0-2.9,0.3c-1.2,0.3-2.4,0.9-3.4,1.7c-1,0.8-1.8,1.7-2.4,2.9c-0.8,1.5-1.2,3.1-1.1,4.8\n\t\t\tc0.1,1.7,0.6,3.4,1.6,4.8c0.9,1.3,2,2.3,3.3,3c1,0.5,1.9,0.9,3,0.9c1.8,0,3.6-0.2,5.3-0.7c1.3-0.3,2.7-0.7,4-1.1\n\t\t\tc0.6-0.2,1.3-0.3,1.9-0.7c0.4-0.2,0.6-0.7,0.8-1.2c0.2-0.7,0.2-1.4-0.2-2.1c-0.3,0.2-0.6,0.4-0.9,0.6c-1.3,0.8-2.7,1.4-4.2,1.8\n\t\t\tc-2,0.5-4.1,0.5-6.1,0.2c-1.3-0.2-2.4-0.8-3.1-2.1c-0.4-0.9-0.6-1.8-0.6-2.8c-0.1-2.4,0.8-4.4,2.5-6.1C9,34,9.2,33.7,9.3,33.4\n\t\t\tC9.8,32.1,10.4,30.9,11.5,29.8z"
                }
            }), e._v(" "), i("path", {
                staticClass: "bimdata-fill-grey",
                attrs: {
                    d: "M9.9,44.4c0-0.2,0-0.4,0-0.5c-0.2-2.2,0.1-4.3,0.9-6.3c0.7-1.9,1.8-3.5,3.2-4.9c0.9-0.9,2-1.1,3.2-0.9\n\t\t\tc2.6,0.6,4.6,2,5.7,4.5c0.2,0.5,0.3,1.1,0.6,1.6c0.1,0.3,0.4,0.6,0.6,0.9c0.7,1,1.4,2.1,1.8,3.3c0,0,0,0.1,0.1,0.2\n\t\t\tc0.3-0.7,0.7-1.4,1-2c0.5-1.2,0.6-2.5,0.5-3.8c-0.2-2.2-1-4.2-2.6-5.8c-1.1-1.2-2.5-2-4.1-2.4c-1.7-0.5-3.5-0.5-5.2,0.1\n\t\t\tc-1.6,0.5-3,1.3-4.1,2.7c-0.4,0.5-0.8,1.1-1.1,1.8c-0.6,1.3-1.1,2.7-1.5,4c-0.5,1.8-0.9,3.7-1.3,5.5c-0.1,0.6,0.3,1,0.7,1.4\n\t\t\tC8.6,44.1,9.2,44.3,9.9,44.4z"
                }
            })]), e._v(" "), i("circle", {
                staticClass: "bimdata-fill-secondary",
                attrs: {
                    cx: "37.4",
                    cy: "5.5",
                    r: "1.7"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Rb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "h-100p"
            }, [e.topics && e.topics.length ? i("div", {
                staticClass: "bcf--list"
            }, [i("div", {
                staticClass: "bcf--list__elements"
            }, [i("BIMDataPaginatedList", {
                attrs: {
                    list: e.filteredTopics,
                    perPage: 30,
                    elementKey: "guid"
                },
                scopedSlots: e._u([{
                    key: "header",
                    fn: function() {
                        return [i("div", {
                            staticClass: "bcf--list__header"
                        }, [i("div", {
                            staticClass: "bcf--list__header--index",
                            on: {
                                click: function(t) {
                                    return e.onChangeFilterClick("index")
                                }
                            }
                        }, [i("span", [e._v("#")]), e._v(" "), i("BIMDataTooltip", {
                            staticClass: "bimdata-tooltip--up",
                            attrs: {
                                message: e.$t("bcf.element_index")
                            }
                        })], 1), e._v(" "), i("div", {
                            directives: [{
                                name: "clickaway",
                                rawName: "v-clickaway",
                                value: function() {
                                    return e.priorityFilter = !1
                                },
                                expression: "() => (priorityFilter = false)"
                            }],
                            staticClass: "bcf--list__header--priority",
                            on: {
                                click: function(t) {
                                    e.priorityFilter = !e.priorityFilter
                                }
                            }
                        }, [i("span", [e._v(e._s(e._f("truncate")(e.$t("bcf.element_priority"), 4)))]), e._v(" "), e.priorityFilter ? e._e() : i("BIMDataTooltip", {
                            staticClass: "bimdata-tooltip--up",
                            attrs: {
                                message: e.$t("bcf.element_priority")
                            }
                        }), e._v(" "), e.priorityFilter ? i("ul", {
                            staticClass: "bimdata-list"
                        }, e._l(e.priorities, (function(t) {
                            return i("li", {
                                key: t,
                                on: {
                                    click: function(e) {
                                        e.stopPropagation()
                                    }
                                }
                            }, [i("BIMDataCheckbox", {
                                attrs: {
                                    text: t || "Not Specified",
                                    state: e.checkedPriorities.includes(t)
                                },
                                on: {
                                    change: function(i) {
                                        return e.onPriorityCheckboxChange(t, i)
                                    }
                                }
                            })], 1)
                        })), 0) : e._e()], 1), e._v(" "), i("div", {
                            staticClass: "bcf--list__header--title",
                            on: {
                                click: function(t) {
                                    return e.onChangeFilterClick("title")
                                }
                            }
                        }, [i("span", [e._v(e._s(e.$t("bcf.element_title")))])]), e._v(" "), i("div", {
                            directives: [{
                                name: "clickaway",
                                rawName: "v-clickaway",
                                value: function() {
                                    return e.userFilter = !1
                                },
                                expression: "() => (userFilter = false)"
                            }],
                            staticClass: "bcf--list__header--user",
                            on: {
                                click: function(t) {
                                    e.userFilter = !e.userFilter
                                }
                            }
                        }, [i("BIMDataIcon", {
                            attrs: {
                                "icon-name": "user",
                                width: "18",
                                height: "18",
                                x: "24",
                                y: "24"
                            }
                        }, [i("BIMDataUserIcon")], 1), e._v(" "), e.userFilter ? e._e() : i("BIMDataTooltip", {
                            staticClass: "bimdata-tooltip--up",
                            attrs: {
                                message: e.$t("bcf.element_creator")
                            }
                        }), e._v(" "), e.userFilter ? i("ul", {
                            staticClass: "bimdata-list"
                        }, e._l(e.users, (function(t) {
                            return i("li", {
                                key: t,
                                on: {
                                    click: function(e) {
                                        e.stopPropagation()
                                    }
                                }
                            }, [i("BIMDataCheckbox", {
                                attrs: {
                                    text: t ? e.formatAuthorName(t) : "Not Specified",
                                    state: e.checkedUsers.includes(t)
                                },
                                on: {
                                    change: function(i) {
                                        return e.onUserCheckboxChange(t, i)
                                    }
                                }
                            })], 1)
                        })), 0) : e._e()], 1), e._v(" "), i("div", {
                            staticClass: "bcf--list__header--date",
                            on: {
                                click: function(t) {
                                    return e.onChangeFilterClick("creation_date")
                                }
                            }
                        }, [i("span", [e._v(e._s(e.$t("bcf.element_date")))])])])]
                    },
                    proxy: !0
                }, {
                    key: "element",
                    fn: function(e) {
                        var t = e.element;
                        return [i("BIMDataBCFlistElement", {
                            attrs: {
                                topic: t
                            }
                        })]
                    }
                }, {
                    key: "empty",
                    fn: function() {
                        return [i("BIMDataEmpty", {
                            attrs: {
                                message: e.$t("bcf.no_filter")
                            }
                        }, [i("BIMDataIcon", {
                            attrs: {
                                "icon-name": "empty-BCF",
                                width: "0",
                                height: "60",
                                x: "66",
                                y: "60"
                            }
                        }, [i("BIMDataEmptyBCFIllustration")], 1)], 1)]
                    },
                    proxy: !0
                }], null, !1, 114463623)
            })], 1)]) : i("BIMDataEmpty", {
                attrs: {
                    message: e.$t("bcf.no_search")
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "empty-BCF",
                    width: "0",
                    height: "60",
                    x: "66",
                    y: "60"
                }
            }, [i("BIMDataEmptyBCFIllustration")], 1)], 1)], 1)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataBCFlistElement: Bb,
            BIMDataPaginatedList: Ql,
            BIMDataIcon: El,
            BIMDataEmptyBCFIllustration: Lb,
            BIMDataUserIcon: jb,
            BIMDataCheckbox: Jl,
            BIMDataEmpty: Cv,
            BIMDataTooltip: Al
        },
        directives: {
            clickaway: Pl
        },
        data: () => ({
            filter: "index",
            filterOrder: -1,
            priorityFilter: !1,
            userFilter: !1,
            checkedPriorities: [],
            checkedUsers: []
        }),
        computed: {
            filteredTopics() {
                let e = this.topics ? Array.from(this.topics).sort((e, t) => e[this.filter] > t[this.filter] ? this.filterOrder : e[this.filter] < t[this.filter] ? -this.filterOrder : 0) : null;
                return e && (this.checkedPriorities.length && (e = e.filter(e => this.checkedPriorities.includes(e.priority))), this.checkedUsers.length && (e = e.filter(e => this.checkedUsers.includes(this.$store.getters["bcf/getTopicUserFullName"](e.guid))))), e
            },
            priorities() {
                return Array.from(new Set(this.topics.map(e => e.priority)))
            },
            users() {
                return Array.from(new Set(this.topics.map(e => this.$store.getters["bcf/getTopicUserFullName"](e.guid))))
            }
        },
        props: {
            topics: {
                type: Array
            }
        },
        methods: {
            isFirst() {
                return this.topic.index === this.$store.getters["bcf/minIndex"]
            },
            onReportAProblemClick() {
                this.$store.commit("bcf/SET_SELECTED_TOPIC", null), this.$store.commit("bcf/SET_VIEW", "BIMDataBCFEditView")
            },
            onChangeFilterClick(e) {
                this.filter === e ? this.filterOrder = -this.filterOrder : this.filter = e
            },
            onPriorityCheckboxChange(e, t) {
                t ? this.checkedPriorities.push(e) : this.checkedPriorities = this.checkedPriorities.filter(t => t !== e)
            },
            onUserCheckboxChange(e, t) {
                t ? this.checkedUsers.push(e) : this.checkedUsers = this.checkedUsers.filter(t => t !== e)
            },
            formatAuthorName(e = "") {
                const [t = "", i] = e.split(" ");
                return `${t.charAt(0)}. ${i}`
            }
        },
        mixins: [Cl]
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ob = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-search-bar"
            }, [i("span", {
                staticClass: "bimdata-search-icon"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "search",
                    width: "18",
                    height: "18",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataSearchIcon")], 1)], 1), e._v(" "), i("input", {
                attrs: {
                    placeholder: "Search"
                },
                domProps: {
                    value: e.value
                },
                on: {
                    input: function(t) {
                        return e.$emit("input", t.target.value)
                    }
                }
            })])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-630b97fa_0", {
            source: ".bimdata-search-bar{display:flex;align-items:center}.bimdata-search-bar .bimdata-search-icon{height:18px;cursor:pointer}.bimdata-search-bar input{width:100%;margin-left:calc(12px / 2);padding:calc(12px / 2) 0;background-color:transparent;border:none;border-bottom:1px solid #d8d8d8;font-size:.8571428571em}.bimdata-search-bar input:focus{outline:0}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataSearchIcon: Mv
        },
        props: {
            value: {
                type: String,
                required: !0
            }
        },
        watch: {
            text(e) {
                this.$emit("change", e)
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    const Fb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf--view"
            }, [e.topics && e.topics.length ? i("div", {
                staticClass: "bcf--view__report"
            }, [e.topics && e.topics.length ? i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__fill--btn-icon",
                attrs: {
                    width: "32px"
                },
                on: {
                    click: e.onReportAProblemClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "plus",
                    width: "16",
                    height: "16",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataPlusIcon")], 1)], 1) : e._e(), e._v(" "), i("BIMDataSearchBar", {
                model: {
                    value: e.filter,
                    callback: function(t) {
                        e.filter = t
                    },
                    expression: "filter"
                }
            })], 1) : e._e(), e._v(" "), i("div", {
                staticClass: "bcf--view__topics"
            }, [e.topics && e.topics.length ? i("BIMDataBCFList", {
                attrs: {
                    topics: e.filteredTopics
                }
            }) : i("BIMDataEmpty", {
                attrs: {
                    message: e.$t("bcf.new_issue")
                },
                scopedSlots: e._u([{
                    key: "footer",
                    fn: function() {
                        return [i("div", {
                            staticClass: "bimdata-empty__button"
                        }, [i("BIMDataButton", {
                            staticClass: "bimdata-btn__fill bimdata-btn__fill--default bimdata-btn__fill--icon bimdata-btn__radius",
                            attrs: {
                                width: "40px",
                                height: "40px"
                            },
                            on: {
                                click: e.onReportAProblemClick
                            }
                        }, [i("BIMDataIcon", {
                            attrs: {
                                "icon-name": "add-issue",
                                width: "20",
                                height: "20",
                                x: "23",
                                y: "23"
                            }
                        }, [i("BIMDataPlusIcon")], 1)], 1)], 1)]
                    },
                    proxy: !0
                }])
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "empty-BCF",
                    width: "0",
                    height: "60",
                    x: "66",
                    y: "60"
                }
            }, [i("BIMDataEmptyBCFIllustration")], 1)], 1)], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataBCFList: Rb,
            BIMDataIcon: El,
            BIMDataPlusIcon: jl,
            BIMDataEmptyBCFIllustration: Lb,
            BIMDataEmpty: Cv,
            BIMDataButton: Ml,
            BIMDataSearchBar: Ob
        },
        data: () => ({
            annotationsDisplayed: !1,
            filter: ""
        }),
        computed: {
            ...va({
                topics: e => e.bcf.topics,
                projectId: e => e.bcf.projectId,
                accessToken: e => e.bcf.accessToken,
                apiUrl: e => e.bcf.apiUrl
            }),
            filteredTopics() {
                return this.filter ? this.topics.filter(e => e.title.includes(this.filter)) : this.topics
            }
        },
        methods: {
            onReportAProblemClick() {
                this.$store.commit("bcf/SET_SELECTED_TOPIC", null), this.$store.commit("bcf/SET_VIEW", "BIMDataBCFEditView")
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Nb = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19C6,20.1 6.9,21 8,21H16C17.1,21 18,20.1 18,19V7H6V19Z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Ub = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M22.8,20.4L12.1,1.9c-0.1-0.2-0.4-0.4-0.6-0.4c-0.3,0-0.5,0.1-0.6,0.4L0.2,20.4c-0.1,0.2-0.1,0.5,0,0.7\n\t\tc0.1,0.2,0.4,0.4,0.6,0.4h21.4c0.3,0,0.5-0.1,0.6-0.4C23,20.9,23,20.6,22.8,20.4z M2.1,20l9.4-16.3L20.9,20H2.1z"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "11,15.1 12,15.1 12.2,8.2 10.8,8.2 \t"
                }
            }), this._v(" "), t("path", {
                attrs: {
                    d: "M11.5,16.3c-0.5,0-0.8,0.4-0.8,0.9c0,0.5,0.3,0.9,0.8,0.9c0.5,0,0.9-0.4,0.9-0.9C12.4,16.6,12,16.3,11.5,16.3z\n\t\t"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Hb = gl({
        render: function() {
            var e = this.$createElement;
            return (this._self._c || e)("path", {
                attrs: {
                    d: "M3.9,4.8V2.1h1.8v2.7h2.7v1.8H5.7v2.7H3.9V6.6H1.3V4.8H3.9z M6.6,10.2V7.5h2.7V4.8h6.2l1.6,1.8H20\n\t\tc1,0,1.8,0.8,1.8,1.8v10.7c0,1-0.8,1.8-1.8,1.8H5.7c-1,0-1.8-0.8-1.8-1.8v-8.9H6.6z M12.8,18.2c2.5,0,4.5-2,4.5-4.5s-2-4.5-4.5-4.5\n\t\ts-4.5,2-4.5,4.5S10.4,18.2,12.8,18.2z M10,13.7c0,1.6,1.3,2.9,2.9,2.9s2.9-1.3,2.9-2.9s-1.3-2.9-2.9-2.9S10,12.2,10,13.7z"
                }
            })
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Vb = gl({
            render: function() {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("g", [t("path", {
                    attrs: {
                        d: "M0.6,3.7l1.9,1.9C2.2,6,2,6.5,2,7v2v10c0,1.1,0.9,2,2,2h13.9l2.3,2.3l1-1L1.6,2.7L0.6,3.7z M12,18c-2.8,0-5-2.2-5-5\n\t\tc0-0.8,0.2-1.6,0.6-2.3l1.4,1.4c-0.1,0.3-0.1,0.6-0.1,0.9c0,1.8,1.4,3.2,3.2,3.2c0.3,0,0.6-0.1,0.9-0.1l1.4,1.4\n\t\tC13.6,17.8,12.8,18,12,18z"
                    }
                }), this._v(" "), t("path", {
                    attrs: {
                        d: "M20,5h-3.2L15,3h-1.2H9.6H9L7.2,5H5.8l3.7,3.7C10.2,8.3,11.1,8,12,8c2.8,0,5,2.2,5,5c0,0.9-0.3,1.8-0.7,2.5l5,5\n\t\tc0.4-0.4,0.7-0.9,0.7-1.5V9V7C22,5.9,21.1,5,20,5z"
                    }
                }), this._v(" "), t("path", {
                    attrs: {
                        d: "M12,9.8c-0.4,0-0.8,0.1-1.2,0.2l4.2,4.2c0.1-0.4,0.2-0.8,0.2-1.2C15.2,11.2,13.8,9.8,12,9.8z"
                    }
                })])
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: zb
        } = Ma("bcf");
    const $b = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf__add-comment"
            }, [e.replyMode ? i("div", [i("BIMDataInitials", [e._v(e._s(e.$store.getters["bcf/getTopicUserInitial"](e.$store.state.bcf.selectedTopic.guid)))])], 1) : e._e(), e._v(" "), i("div", {
                staticClass: "bcf__add-comment__line"
            }, [i("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: e.text,
                    expression: "text"
                }],
                staticClass: "bcf__add-comment__text",
                class: {
                    "bcf__add-comment__text__snapshot": e.imageEncoded, "bcf__add-comment__text__error": e.displayMandatoryTextError
                },
                attrs: {
                    name: "bcf__add-comment__text",
                    placeholder: e.replyMode ? e.$t("bcf.add_andswer") : e.$t("bcf.write_comment")
                },
                domProps: {
                    value: e.text
                },
                on: {
                    click: function(t) {
                        e.active = !0
                    },
                    input: function(t) {
                        t.target.composing || (e.text = t.target.value)
                    }
                }
            }), e._v(" "), e.imageEncoded ? i("div", {
                staticClass: "bcf__add-comment__snapshot"
            }, [i("img", {
                staticClass: "snapshot",
                attrs: {
                    src: e.imageEncoded
                }
            }), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost--grey",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: e.onPictureClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "camera",
                    width: "18",
                    height: "17",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataCameraIcon")], 1)], 1)], 1) : e._e()]), e._v(" "), e.displayMandatoryTextError ? i("small", [e._v(e._s(e.$t("error.field")))]) : e._e(), e._v(" "), e.active || e.answer ? i("div", {
                staticClass: "bcf__add-comment__buttons"
            }, [e.imageEncoded ? e._e() : i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "22px"
                },
                on: {
                    click: e.onPictureClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "camera",
                    width: "18",
                    height: "17",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataCameraIcon")], 1)], 1), e._v(" "), e.imageEncoded ? i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "22px"
                },
                on: {
                    click: function(t) {
                        e.viewpoint = null
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "cancel-camera",
                    width: "18",
                    height: "17",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataCancelCameraIcon")], 1)], 1) : e._e(), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost--grey",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: e.onCancelClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_cancel")))]), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__fill--icon bimdata-btn__radius",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: e.onPublishClick
                }
            }, [e._v(e._s(e.replyMode ? e.$t("bcf.btn_reply") : e.$t("bcf.btn_comment")))])], 1) : e._e()])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataCameraIcon: Hb,
            BIMDataCancelCameraIcon: Vb,
            BIMDataButton: Ml,
            BIMDataInitials: Tb
        },
        data: () => ({
            text: null,
            viewpoint: null,
            displayMandatoryTextError: !1,
            newCommentState: !0,
            active: !1
        }),
        props: {
            replyToCommentGuid: String,
            answer: {
                type: Boolean,
                default: !1
            }
        },
        watch: {
            text(e) {
                e || this.newCommentState ? (this.displayMandatoryTextError = !1, this.newCommentState = !1) : this.displayMandatoryTextError = !0
            }
        },
        computed: {
            ...zb(["bcfRoot"]),
            imageEncoded() {
                return this.viewpoint && this.viewpoint.snapshot ? this.viewpoint.snapshot.snapshot_data : null
            },
            replyMode() {
                return !!this.replyToCommentGuid
            }
        },
        directives: {
            focus: {
                inserted: function(e) {
                    e.focus()
                }
            }
        },
        methods: {
            initState() {
                this.text = null, this.viewpoint = null, this.displayMandatoryTextError = !1, this.newCommentState = !0
            },
            async onPublishClick() {
                if (this.text) {
                    const e = {
                        text: this.text,
                        replyToCommentGuid: this.replyToCommentGuid
                    };
                    await this.$store.dispatch("bcf/createComment", {
                        comment: e,
                        viewpoint: this.viewpoint
                    }), this.initState(), this.replyMode && this.$emit("reply")
                } else this.displayMandatoryTextError = !0
            },
            onPictureClick() {
                this.viewpoint = this.$plugins.viewer3D.getViewpoint()
            },
            onCancelClick() {
                this.active = !1, this.$emit("cancel"), this.text = null, this.viewpoint = null, this.newCommentState = !0
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Wb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf__comment"
            }, [i("BIMDataInitials", [e._v(e._s(e.authorInitial))]), e._v(" "), i("div", {
                staticClass: "bcf__comment__container"
            }, [i("div", {
                staticClass: "bcf__comment__container__header"
            }, [i("div", {
                staticClass: "m-r-6 name"
            }, [e._v(e._s(e.authorFirstName))]), e._v(" "), i("div", {
                staticClass: "m-r-6 bull"
            }, [e._v("•")]), e._v(" "), i("div", {
                staticClass: "m-r-6"
            }, [e._v(e._s(e._f("toLocalDateTimeString")(e.comment.date)))]), e._v(" "), e.canUpdate ? i("div", {
                staticClass: "m-r-6",
                on: {
                    click: e.onEditClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "pencil",
                    width: "15",
                    height: "15",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataPencilIcon")], 1)], 1) : e._e(), e._v(" "), e.canDelete ? i("div", {
                on: {
                    click: e.onDeleteClick
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "delete",
                    width: "15",
                    height: "15",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataDeleteIcon")], 1)], 1) : e._e()]), e._v(" "), "read" === e.mode ? i("div", {
                staticClass: "bcf__comment__container__content"
            }, [e._v(e._s(e.comment.comment))]) : i("textarea", {
                directives: [{
                    name: "focus",
                    rawName: "v-focus"
                }, {
                    name: "model",
                    rawName: "v-model",
                    value: e.text,
                    expression: "text"
                }],
                staticClass: "bcf__comment__container__text",
                attrs: {
                    name: "comment-text"
                },
                domProps: {
                    value: e.text
                },
                on: {
                    input: function(t) {
                        t.target.composing || (e.text = t.target.value)
                    }
                }
            }), e._v(" "), e.imageEncoded ? i("img", {
                attrs: {
                    src: e.imageEncoded
                }
            }) : e._e(), e._v(" "), i("div", {
                staticClass: "bcf__comment__container__buttons",
                class: {
                    replies: e.replies && e.replies.length
                }
            }, [e.replies && e.replies.length ? i("div", {
                staticClass: "replies",
                on: {
                    click: function(t) {
                        e.repliesDisplayed = !e.repliesDisplayed
                    }
                }
            }, [i("span", [e._v(e._s(e.replies.length) + " " + e._s(e.$t("bcf.comment_responses")))]), e._v(" "), i("BIMDataIcon", {
                staticClass: "m-l-6 icon-chevron",
                style: {
                    transform: e.repliesDisplayed ? "rotate(90deg)" : ""
                },
                attrs: {
                    "icon-name": "chevron-right",
                    width: "10",
                    height: "10",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1) : e._e(), e._v(" "), "edit" === e.mode ? i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost--grey",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: function(t) {
                        e.mode = "read"
                    }
                }
            }, [e._v(e._s(e.$t("bcf.btn_cancel")))]) : e._e(), e._v(" "), "edit" === e.mode ? i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: e.onValidateClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_validate")))]) : e._e(), e._v(" "), "read" !== e.mode || e.replyComment ? e._e() : i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost bimdata-btn__ghost--grey",
                attrs: {
                    width: "70px"
                },
                on: {
                    click: e.onReplyClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_reply")))])], 1), e._v(" "), e.replyDisplayed ? i("div", {
                staticClass: "reply"
            }, [i("BIMDataBCFAddComment", {
                attrs: {
                    replyToCommentGuid: e.comment.guid,
                    answer: !0
                },
                on: {
                    cancel: function(t) {
                        e.replyDisplayed = !1
                    },
                    reply: function(t) {
                        e.replyDisplayed = !1
                    }
                }
            })], 1) : e._e(), e._v(" "), e.replies && e.replies.length ? i("div", {
                staticClass: "bcf__comment__container__list"
            }, [e.repliesDisplayed ? e._l(e.replies, (function(e) {
                return i("BIMDataBCFComment", {
                    key: e.guid,
                    attrs: {
                        comment: e,
                        replyComment: !0
                    }
                })
            })) : e._e()], 2) : e._e()])], 1)
        },
        staticRenderFns: []
    }, void 0, {
        name: "BIMDataBCFComment",
        components: {
            BIMDataBCFAddComment: $b,
            BIMDataIcon: El,
            BIMDataChevronRightIcon: ql,
            BIMDataPencilIcon: ub,
            BIMDataDeleteIcon: Nb,
            BIMDataButton: Ml,
            BIMDataInitials: Tb
        },
        data: () => ({
            mode: "read",
            replyDisplayed: !1,
            repliesDisplayed: !1,
            text: null
        }),
        props: {
            comment: {
                type: Object,
                required: !0
            },
            replyComment: {
                type: Boolean,
                default: !1
            }
        },
        directives: {
            focus: {
                inserted: function(e) {
                    e.focus()
                }
            }
        },
        methods: {
            canUpdate() {
                return this.isConnectedUserMatchingCommentAuthor()
            },
            canDelete() {
                return this.isConnectedUserMatchingCommentAuthor()
            },
            onDeleteClick() {
                this.$store.dispatch("bcf/deleteComment", {
                    comment: this.comment,
                    topicGuid: this.$store.state.bcf.selectedTopic.guid
                })
            },
            onEditClick() {
                this.mode = "edit", this.text = this.comment.comment
            },
            isConnectedUserMatchingCommentAuthor() {
                return this.$store.state.oidcStore.user.email === this.$store.getters["bcf/getTopicUserEmail"]
            },
            onValidateClick() {
                this.$store.dispatch("bcf/updateComment", {
                    commentId: this.comment.guid,
                    commentText: this.text
                }), this.mode = "read"
            },
            onReplyClick() {
                this.replyDisplayed = !0
            }
        },
        computed: {
            authorInitial() {
                const [e = "X", t = "X", ...i] = (this.comment.author || "X X").split(" ");
                return e[0] + t[0]
            },
            authorFirstName() {
                const [e = "X", ...t] = (this.comment.author || "X X").split(" ");
                return e
            },
            replies() {
                return this.$store.getters["bcf/commentReplies"](this.$store.state.bcf.selectedTopic.guid, this.comment.guid)
            },
            viewpoint() {
                return this.comment.viewpoint_guid ? this.$store.getters["bcf/viewpoints"](this.$store.state.bcf.selectedTopic.guid).find(e => e.guid === this.comment.viewpoint_guid) : null
            },
            imageEncoded() {
                return this.viewpoint && this.viewpoint.snapshot ? this.viewpoint.snapshot.snapshot_data : null
            }
        },
        filters: {
            toLocalDateTimeString: e => `${e.toLocaleDateString()} ${e.toLocaleTimeString().slice(0,5)}`
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const qb = gl({
            render: function() {
                var e = this.$createElement;
                this._self._c;
                return this._m(0)
            },
            staticRenderFns: [function() {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("div", {
                    staticClass: "placeholder"
                }, [t("div", {
                    staticClass: "placeholder--index-date"
                }, [t("span")]), this._v(" "), t("div", {
                    staticClass: "placeholder--snapshot"
                }, [t("span")]), this._v(" "), t("div", {
                    staticClass: "placeholder--element"
                }, [t("span")]), this._v(" "), t("div", {
                    staticClass: "placeholder--recap"
                }, [t("span")])])
            }]
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: Gb,
            mapActions: Yb,
            mapMutations: Zb,
            mapGetters: Xb
        } = Ma("bcf"),
        {
            mapState: Kb
        } = Ma("viewer");
    const Qb = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf bcf--detail"
            }, ["main-content" === e.mode ? i("div", [i("div", {
                staticClass: "bcf__header"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "28px"
                },
                on: {
                    click: function(t) {
                        return e.setView("BIMDataBCFListView")
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "back",
                    width: "15",
                    height: "15",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataBackIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bcf__header__navigation"
            }, [i("span", {
                staticClass: "left",
                on: {
                    click: function(t) {
                        return e.selectNextTopic(e.topic.index)
                    }
                }
            }, [i("BIMDataIcon", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.isLast,
                    expression: "!isLast"
                }],
                staticClass: "icon-chevron",
                attrs: {
                    "icon-name": "chevron-right",
                    width: "12",
                    height: "12",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "title"
            }, [i("span", {
                on: {
                    mouseover: function(t) {
                        e.isTitleHover = !0
                    },
                    mouseleave: function(t) {
                        e.isTitleHover = !1
                    }
                }
            }, [e._v(e._s(e._f("middleTruncate")(e.topic.title, 25)))]), e._v(" "), e.topic.title.length >= e.textMaxLength && e.isTitleHover ? i("BIMDataTooltip", {
                staticClass: "bimdata-tooltip--left",
                class: {
                    "bimdata-tooltip--up": e.topic.title.length >= e.textMaxLength
                },
                attrs: {
                    message: e.topic.title
                }
            }) : e._e()], 1), e._v(" "), i("span", {
                staticClass: "right",
                on: {
                    click: function(t) {
                        return e.selectPreviousTopic(e.topic.index)
                    }
                }
            }, [i("BIMDataIcon", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.isFirst,
                    expression: "!isFirst"
                }],
                staticClass: "icon-chevron",
                attrs: {
                    "icon-name": "chevron",
                    width: "12",
                    height: "12",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "bcf__header__actions"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "32px"
                },
                on: {
                    click: function(t) {
                        return e.setView("BIMDataBCFEditView")
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "pencil",
                    width: "17",
                    height: "17",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataPencilIcon")], 1)], 1), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "32px"
                },
                on: {
                    click: function(t) {
                        e.modalDelete = !0
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "delete",
                    width: "17",
                    height: "17",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataDeleteIcon")], 1)], 1)], 1)], 1), e._v(" "), e.loading ? i("div", {
                staticClass: "m-l-12 m-r-12"
            }, [i("BIMDataBCFDetailPlaceholder")], 1) : i("div", {
                staticClass: "bcf__content"
            }, [i("div", {
                staticClass: "bcf__content__header"
            }, [i("div", {
                staticClass: "bcf__content__header__index-date"
            }, [i("div", {
                staticClass: "index",
                class: e.getPriority()
            }, [i("span", [e._v(e._s(e.topic.index))])]), e._v(" "), i("div", {
                staticClass: "date"
            }, [i("span", [e._v(e._s(e._f("formatDate")(e.topic.creation_date)))])])]), e._v(" "), e.topic.topic_status && e.topic.topic_status.length ? i("div", {
                staticClass: "bcf__content__header__status",
                class: e.getStatus()
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "statut",
                    width: "23",
                    height: "23",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataStatutIcon")], 1), e._v(" "), i("span", {
                staticClass: "status"
            }, [e._v(e._s(e.topic.topic_status))])], 1) : e._e()]), e._v(" "), e.viewpoint && e.viewpoint.snapshot ? [i("img", {
                staticClass: "bcf__content__snapshot",
                attrs: {
                    src: e.viewpoint.snapshot.snapshot_data
                }
            })] : e._e(), e._v(" "), i("div", {
                staticClass: "bcf__content__element"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--default bimdata-btn__fill--btn-icon",
                attrs: {
                    disabled: !e.viewpoint || !e.viewpoint.components.selection.length,
                    width: "100%"
                },
                on: {
                    click: function(t) {
                        e.mode = "elements"
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "model",
                    width: "18",
                    height: "18",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataModelIcon")], 1), e._v("\n          " + e._s(e.getElementMessage()) + "\n        ")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bcf__content__recap"
            }, [i("div", {
                staticClass: "bcf__content__recap__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_type")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.topic_type || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__recap__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_description")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.description || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__recap__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_assigned")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.assigned_to || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__recap__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_due_date")) + " :")]), e._v(" "), i("span", [e._v(e._s(e._f("formatDate")(e.topic.due_date || e.$t("bcf.element_empty"))))])])]), e._v(" "), i("div", {
                staticClass: "bcf__content__infos"
            }, [i("div", {
                staticClass: "bcf__content__infos__header"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "BCF",
                    width: "15",
                    height: "14",
                    x: "20",
                    y: "20"
                }
            }, [i("BIMDataBCFIcon")], 1), e._v(" "), i("strong", [e._v(e._s(e.$t("bcf.element_informations")))])], 1), e._v(" "), i("div", {
                staticClass: "bcf__content__infos__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_status")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.topic_status || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__infos__line"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_phase")) + " :")]), e._v(" "), i("span", [e._v(e._s(e.topic.stage || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__infos__line infos__priority"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_priority")) + " :")]), e._v(" "), i("span", {
                class: e.getPriority()
            }, [e._v(e._s(e.topic.priority || e.$t("bcf.element_empty")))])]), e._v(" "), i("div", {
                staticClass: "bcf__content__infos__line infos__tags"
            }, [i("strong", [e._v(e._s(e.$t("bcf.element_tags")) + " :")]), e._v(" "), e.topic.labels ? e._l(e.topic.labels, (function(t) {
                return i("span", {
                    key: t,
                    staticClass: "tag"
                }, [e._v(e._s(t))])
            })) : e._e(), e._v(" "), e.topic.labels && e.topic.labels.length ? e._e() : i("span", [e._v(e._s(e.$t("bcf.element_empty")))])], 2), e._v(" "), e.topic.creation_author ? i("BIMDataInitials", [e._v("\n          " + e._s(e.$store.getters["bcf/getTopicUserInitial"](e.topic.guid)) + "\n        ")]) : e._e()], 1), e._v(" "), i("BIMDataBCFAddComment"), e._v(" "), e._l(e.comments, (function(e) {
                return i("BIMDataBCFComment", {
                    key: e.guid,
                    attrs: {
                        comment: e
                    }
                })
            }))], 2)]) : i("BIMDataBCFElementBucketSimpleList", {
                attrs: {
                    elements: e.viewpoint.components.selection.map((function(e) {
                        return e.ifc_guid
                    })),
                    label: "Panier de sélection",
                    perPage: 30
                },
                on: {
                    close: function(t) {
                        e.mode = "main-content"
                    }
                }
            }), e._v(" "), e.modalDelete ? i("div", {
                staticClass: "bcf--modal"
            }, [i("div", {
                staticClass: "bcf--modal__content"
            }, [i("div", {
                staticClass: "bcf--modal__content__title"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "BCFSafeZone",
                    width: "23",
                    height: "23",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataBCFSafeZoneIcon")], 1), e._v(" "), i("span", [e._v(e._s(e.$t("bcf.element_delete")) + " " + e._s(e.topic.title))])], 1), e._v(" "), i("div", {
                staticClass: "bcf--modal__content__actions"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--red bimdata-btn__radius",
                attrs: {
                    width: "40%"
                },
                on: {
                    click: function(t) {
                        return e.deleteTopic(e.topic.guid)
                    }
                }
            }, [e._v(e._s(e.$t("bcf.btn_delete_issue")))]), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__outline bimdata-btn__outline--grey bimdata-btn__radius",
                attrs: {
                    width: "40%"
                },
                on: {
                    click: function(t) {
                        e.modalDelete = !1
                    }
                }
            }, [e._v(e._s(e.$t("bcf.btn_cancel_issue")))])], 1)]), e._v(" "), i("div", {
                staticClass: "bcf--modal__overlay"
            })]) : e._e()], 1)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataBackIcon: Eb,
            BIMDataChevronRightIcon: ql,
            BIMDataPencilIcon: ub,
            BIMDataDeleteIcon: Nb,
            BIMDataBCFIcon: Cb,
            BIMDataModelIcon: lc,
            BIMDataStatutIcon: kb,
            BIMDataBCFSafeZoneIcon: Ub,
            BIMDataBCFAddComment: $b,
            BIMDataBCFComment: Wb,
            BIMDataBCFElementBucketSimpleList: Ib,
            BIMDataTooltip: Al,
            BIMDataBCFDetailPlaceholder: qb,
            BIMDataButton: Ml,
            BIMDataInitials: Tb
        },
        mixins: [Cl],
        data: () => ({
            mode: "main-content",
            modalDelete: !1,
            loading: !1,
            isTitleHover: !1
        }),
        methods: {
            ...Zb({
                setView: "SET_VIEW",
                selectPreviousTopic: "SELECT_PREVIOUS_TOPIC",
                selectNextTopic: "SELECT_NEXT_TOPIC",
                setTopicViewpoints: "SET_TOPIC_VIEWPOINTS"
            }),
            ...Yb(["deleteTopic", "loadFullTopic"]),
            getElementMessage() {
                return this.viewpoint && this.viewpoint.components.selection.length > 0 ? this.viewpoint.components.selection.length + " concerned element" + (this.viewpoint.components.selection.length ? "s" : "") : this.$t("bcf.no_element")
            },
            getPriority() {
                return this.topic.priority ? this.topic.priority.toLowerCase() : null
            },
            getStatus() {
                return {
                    opened: "Opened" === this.topic.topic_status,
                    resolved: "Resolved" === this.topic.topic_status,
                    closed: "Closed" === this.topic.topic_status
                }
            }
        },
        watch: {
            viewpoint: {
                handler(e, t) {
                    t && this.bcfRoot.$emit("clear-annotations"), e && e.components.selection.length && this.bcfRoot.$emit("create-annotations", {
                        ids: e.components.selection.map(e => e.ifc_guid),
                        index: this.topic.index,
                        priority: this.getPriority()
                    })
                },
                immediate: !0
            },
            topic: {
                async handler() {
                    this.viewpoints && this.comments || (this.loading = !0, await this.loadFullTopic(this.topic.guid), this.loading = !1), this.viewpoint && this.bcfRoot.$emit("set-viewpoint", this.viewpoint)
                },
                immediate: !0
            },
            mode: {
                handler(e) {
                    "elements" === e && (this.bcfRoot.$emit("deselect-objects", {
                        ids: this.selectedObjectIds,
                        trigger: this.bcfRoot
                    }), this.bcfRoot.$emit("select-objects", {
                        ids: new Set(this.viewpoint.components.selection.map(e => e.ifc_guid)),
                        trigger: this.bcfRoot
                    }))
                },
                immediate: !0
            }
        },
        beforeDestroy() {
            this.bcfRoot.$emit("clear-annotations")
        },
        computed: {
            ...Xb(["maxIndex", "minIndex"]),
            ...Gb(["selectedTopic", "bcfRoot"]),
            ...Kb(["selectedObjectIds"]),
            topic() {
                return this.selectedTopic
            },
            viewpoints() {
                return this.$store.getters["bcf/viewpoints"](this.topic.guid)
            },
            viewpoint() {
                return this.$store.getters["bcf/viewpoint"](this.topic.guid)
            },
            comments() {
                return this.$store.getters["bcf/topicComments"](this.topic.guid)
            },
            isLast() {
                return this.topic.index === this.maxIndex
            },
            isFirst() {
                return this.topic.index === this.minIndex
            }
        },
        filters: {
            formatDate: e => e.toLocaleDateString ? e.toLocaleDateString() : e
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    var Jb, ey = q_((function(e, t) {
            window,
            e.exports = function(e) {
                var t = {};

                function i(r) {
                    if (t[r]) return t[r].exports;
                    var n = t[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return e[r].call(n.exports, n, n.exports, i), n.l = !0, n.exports
                }
                return i.m = e, i.c = t, i.d = function(e, t, r) {
                    i.o(e, t) || Object.defineProperty(e, t, {
                        enumerable: !0,
                        get: r
                    })
                }, i.r = function(e) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }, i.t = function(e, t) {
                    if (1 & t && (e = i(e)), 8 & t) return e;
                    if (4 & t && "object" == typeof e && e && e.__esModule) return e;
                    var r = Object.create(null);
                    if (i.r(r), Object.defineProperty(r, "default", {
                            enumerable: !0,
                            value: e
                        }), 2 & t && "string" != typeof e)
                        for (var n in e) i.d(r, n, function(t) {
                            return e[t]
                        }.bind(null, n));
                    return r
                }, i.n = function(e) {
                    var t = e && e.__esModule ? function() {
                        return e.default
                    } : function() {
                        return e
                    };
                    return i.d(t, "a", t), t
                }, i.o = function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }, i.p = "/dist/", i(i.s = 6)
            }([function(e, t, i) {
                var r = i(8);
                "string" == typeof r && (r = [
                    [e.i, r, ""]
                ]), r.locals && (e.exports = r.locals), (0, i(4).default)("7ec05f6c", r, !1, {})
            }, function(e, t, i) {
                var r = i(10);
                "string" == typeof r && (r = [
                    [e.i, r, ""]
                ]), r.locals && (e.exports = r.locals), (0, i(4).default)("3453d19d", r, !1, {})
            }, function(e, t, i) {
                e.exports = function(e) {
                    var t = [];
                    return t.toString = function() {
                        return this.map((function(t) {
                            var i = function(e, t) {
                                var i, r = e[1] || "",
                                    n = e[3];
                                if (!n) return r;
                                if (t && "function" == typeof btoa) {
                                    var s = (i = n, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i)))) + " */"),
                                        o = n.sources.map((function(e) {
                                            return "/*# sourceURL=" + n.sourceRoot + e + " */"
                                        }));
                                    return [r].concat(o).concat([s]).join("\n")
                                }
                                return [r].join("\n")
                            }(t, e);
                            return t[2] ? "@media " + t[2] + "{" + i + "}" : i
                        })).join("")
                    }, t.i = function(e, i) {
                        "string" == typeof e && (e = [
                            [null, e, ""]
                        ]);
                        for (var r = {}, n = 0; n < this.length; n++) {
                            var s = this[n][0];
                            null != s && (r[s] = !0)
                        }
                        for (n = 0; n < e.length; n++) {
                            var o = e[n];
                            null != o[0] && r[o[0]] || (i && !o[2] ? o[2] = i : i && (o[2] = "(" + o[2] + ") and (" + i + ")"), t.push(o))
                        }
                    }, t
                }
            }, function(e, t) {
                e.exports = "data:application/vnd.ms-fontobject;base64,aAUAAMQEAAABAAIAAAAAAAAAAAAAAAAAAAABAJABAAAAAExQAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAUdPJHwAAAAAAAAAAAAAAAAAAAAAAAA4AaQBjAG8AbQBvAG8AbgAAAA4AUgBlAGcAdQBsAGEAcgAAABYAVgBlAHIAcwBpAG8AbgAgADEALgAwAAAADgBpAGMAbwBtAG8AbwBuAAAAAAAAAQAAAAsAgAADADBPUy8yDxIFrAAAALwAAABgY21hcBdW0okAAAEcAAAAVGdhc3AAAAAQAAABcAAAAAhnbHlmpZ+jMAAAAXgAAAD8aGVhZA/FmAgAAAJ0AAAANmhoZWEHgAPIAAACrAAAACRobXR4EgABvgAAAtAAAAAcbG9jYQCSAOIAAALsAAAAEG1heHAACQAfAAAC/AAAACBuYW1lmUoJ+wAAAxwAAAGGcG9zdAADAAAAAASkAAAAIAADA4ABkAAFAAACmQLMAAAAjwKZAswAAAHrADMBCQAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAAAAAAAAEAAAOkCA8D/wABAA8AAQAAAAAEAAAAAAAAAAAAAACAAAAAAAAMAAAADAAAAHAABAAMAAAAcAAMAAQAAABwABAA4AAAACgAIAAIAAgABACDpAv/9//8AAAAAACDpAP/9//8AAf/jFwQAAwABAAAAAAAAAAAAAAABAAH//wAPAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAVgEBA74CgQAcAAABMhceARcWFwcmJy4BJyYjIgYHFyERFzY3PgE3NgIWSkNDbykpF2QQIB9VMzQ5P3AtnP6AmB0iIkspKAJVFxhSODlCIDMrKz4REislmgGAmhkVFBwICAABANYAgQMqAtUACwAAAQcXBycHJzcnNxc3Ayru7jzu7jzu7jzu7gKZ7u487u487u487u4AAQCSAIEDgAK9AAUAACUBFwEnNwGAAcQ8/gDuPPkBxDz+AO48AAAAAAEAAAAAAAAfydNRXw889QALBAAAAAAA1nUqGwAAAADWdSobAAAAAAO+AtUAAAAIAAIAAAAAAAAAAQAAA8D/wAAABAAAAAAAA74AAQAAAAAAAAAAAAAAAAAAAAcEAAAAAAAAAAAAAAACAAAABAAAVgQAANYEAACSAAAAAAAKABQAHgBQAGoAfgABAAAABwAdAAEAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEABwAAAAEAAAAAAAIABwBgAAEAAAAAAAMABwA2AAEAAAAAAAQABwB1AAEAAAAAAAUACwAVAAEAAAAAAAYABwBLAAEAAAAAAAoAGgCKAAMAAQQJAAEADgAHAAMAAQQJAAIADgBnAAMAAQQJAAMADgA9AAMAAQQJAAQADgB8AAMAAQQJAAUAFgAgAAMAAQQJAAYADgBSAAMAAQQJAAoANACkaWNvbW9vbgBpAGMAbwBtAG8AbwBuVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwaWNvbW9vbgBpAGMAbwBtAG8AbwBuaWNvbW9vbgBpAGMAbwBtAG8AbwBuUmVndWxhcgBSAGUAZwB1AGwAYQByaWNvbW9vbgBpAGMAbwBtAG8AbwBuRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="
            }, function(e, t, i) {
                function r(e, t) {
                    for (var i = [], r = {}, n = 0; n < t.length; n++) {
                        var s = t[n],
                            o = s[0],
                            a = {
                                id: e + ":" + n,
                                css: s[1],
                                media: s[2],
                                sourceMap: s[3]
                            };
                        r[o] ? r[o].parts.push(a) : i.push(r[o] = {
                            id: o,
                            parts: [a]
                        })
                    }
                    return i
                }
                i.r(t), i.d(t, "default", (function() {
                    return f
                }));
                var n = "undefined" != typeof document;
                if ("undefined" != typeof DEBUG && DEBUG && !n) throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
                var s = {},
                    o = n && (document.head || document.getElementsByTagName("head")[0]),
                    a = null,
                    l = 0,
                    c = !1,
                    h = function() {},
                    d = null,
                    u = "data-vue-ssr-id",
                    p = "undefined" != typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());

                function f(e, t, i, n) {
                    c = i, d = n || {};
                    var o = r(e, t);
                    return _(o),
                        function(t) {
                            for (var i = [], n = 0; n < o.length; n++) {
                                var a = o[n];
                                (l = s[a.id]).refs--, i.push(l)
                            }
                            for (t ? _(o = r(e, t)) : o = [], n = 0; n < i.length; n++) {
                                var l;
                                if (0 === (l = i[n]).refs) {
                                    for (var c = 0; c < l.parts.length; c++) l.parts[c]();
                                    delete s[l.id]
                                }
                            }
                        }
                }

                function _(e) {
                    for (var t = 0; t < e.length; t++) {
                        var i = e[t],
                            r = s[i.id];
                        if (r) {
                            r.refs++;
                            for (var n = 0; n < r.parts.length; n++) r.parts[n](i.parts[n]);
                            for (; n < i.parts.length; n++) r.parts.push(g(i.parts[n]));
                            r.parts.length > i.parts.length && (r.parts.length = i.parts.length)
                        } else {
                            var o = [];
                            for (n = 0; n < i.parts.length; n++) o.push(g(i.parts[n]));
                            s[i.id] = {
                                id: i.id,
                                refs: 1,
                                parts: o
                            }
                        }
                    }
                }

                function m() {
                    var e = document.createElement("style");
                    return e.type = "text/css", o.appendChild(e), e
                }

                function g(e) {
                    var t, i, r = document.querySelector("style[" + u + '~="' + e.id + '"]');
                    if (r) {
                        if (c) return h;
                        r.parentNode.removeChild(r)
                    }
                    if (p) {
                        var n = l++;
                        r = a || (a = m()), t = y.bind(null, r, n, !1), i = y.bind(null, r, n, !0)
                    } else r = m(), t = function(e, t) {
                        var i = t.css,
                            r = t.media,
                            n = t.sourceMap;
                        if (r && e.setAttribute("media", r), d.ssrId && e.setAttribute(u, t.id), n && (i += "\n/*# sourceURL=" + n.sources[0] + " */", i += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n)))) + " */"), e.styleSheet) e.styleSheet.cssText = i;
                        else {
                            for (; e.firstChild;) e.removeChild(e.firstChild);
                            e.appendChild(document.createTextNode(i))
                        }
                    }.bind(null, r), i = function() {
                        r.parentNode.removeChild(r)
                    };
                    return t(e),
                        function(r) {
                            if (r) {
                                if (r.css === e.css && r.media === e.media && r.sourceMap === e.sourceMap) return;
                                t(e = r)
                            } else i()
                        }
                }
                var v, b = (v = [], function(e, t) {
                    return v[e] = t, v.filter(Boolean).join("\n")
                });

                function y(e, t, i, r) {
                    var n = i ? "" : r.css;
                    if (e.styleSheet) e.styleSheet.cssText = b(t, n);
                    else {
                        var s = document.createTextNode(n),
                            o = e.childNodes;
                        o[t] && e.removeChild(o[t]), o.length ? e.insertBefore(s, o[t]) : e.appendChild(s)
                    }
                }
            }, function(e, t, i) {
                var r = Array.isArray,
                    n = Object.keys,
                    s = Object.prototype.hasOwnProperty;
                e.exports = function e(t, i) {
                    if (t === i) return !0;
                    if (t && i && "object" == typeof t && "object" == typeof i) {
                        var o, a, l, c = r(t),
                            h = r(i);
                        if (c && h) {
                            if ((a = t.length) != i.length) return !1;
                            for (o = a; 0 != o--;)
                                if (!e(t[o], i[o])) return !1;
                            return !0
                        }
                        if (c != h) return !1;
                        var d = t instanceof Date,
                            u = i instanceof Date;
                        if (d != u) return !1;
                        if (d && u) return t.getTime() == i.getTime();
                        var p = t instanceof RegExp,
                            f = i instanceof RegExp;
                        if (p != f) return !1;
                        if (p && f) return t.toString() == i.toString();
                        var _ = n(t);
                        if ((a = _.length) !== n(i).length) return !1;
                        for (o = a; 0 != o--;)
                            if (!s.call(i, _[o])) return !1;
                        for (o = a; 0 != o--;)
                            if (!e(t[l = _[o]], i[l])) return !1;
                        return !0
                    }
                    return t != t && i != i
                }
            }, function(e, t, i) {
                e.exports = i(14)
            }, function(e, t, i) {
                var r = i(0);
                i.n(r).a
            }, function(e, t, i) {
                (e.exports = i(2)(!0)).push([e.i, ".ti-tag-input[data-v-108f4f13] {\n  background-color: transparent;\n  color: inherit;\n  border: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  top: 0px;\n  position: absolute;\n  width: 100%;\n  line-height: inherit;\n}\n.ti-tag-input[data-v-108f4f13]::-ms-clear {\n  display: none;\n}\ninput[data-v-108f4f13]:focus {\n  outline: none;\n}\ninput[disabled][data-v-108f4f13] {\n  background-color: transparent;\n}\n", "", {
                    version: 3,
                    sources: ["C:/Users/johan/dev/vue-tags-input/vue-tags-input/C:/Users/johan/dev/vue-tags-input/vue-tags-input/tag-input.vue"],
                    names: [],
                    mappings: "AAAA;EACE,8BAA8B;EAC9B,eAAe;EACf,aAAa;EACb,aAAa;EACb,YAAY;EACZ,cAAc;EACd,SAAS;EACT,mBAAmB;EACnB,YAAY;EACZ,qBAAqB;CAAE;AAEzB;EACE,cAAc;CAAE;AAElB;EACE,cAAc;CAAE;AAElB;EACE,8BAA8B;CAAE",
                    file: "tag-input.vue?vue&type=style&index=0&id=108f4f13&lang=css&scoped=true&",
                    sourcesContent: [".ti-tag-input {\n  background-color: transparent;\n  color: inherit;\n  border: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  top: 0px;\n  position: absolute;\n  width: 100%;\n  line-height: inherit; }\n\n.ti-tag-input::-ms-clear {\n  display: none; }\n\ninput:focus {\n  outline: none; }\n\ninput[disabled] {\n  background-color: transparent; }\n"],
                    sourceRoot: ""
                }])
            }, function(e, t, i) {
                var r = i(1);
                i.n(r).a
            }, function(e, t, i) {
                t = e.exports = i(2)(!0);
                var r = i(11),
                    n = r(i(3)),
                    s = r(i(3) + "#iefix"),
                    o = r(i(12)),
                    a = r(i(13));
                t.push([e.i, "@font-face {\n  font-family: 'icomoon';\n  src: url(" + n + ");\n  src: url(" + s + ') format("embedded-opentype"), url(' + o + ') format("truetype"), url(' + a + ') format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n[class^="ti-icon-"][data-v-61d92e31], [class*=" ti-icon-"][data-v-61d92e31] {\n  font-family: \'icomoon\' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.ti-icon-check[data-v-61d92e31]:before {\n  content: "\\e902";\n}\n.ti-icon-close[data-v-61d92e31]:before {\n  content: "\\e901";\n}\n.ti-icon-undo[data-v-61d92e31]:before {\n  content: "\\e900";\n}\nul[data-v-61d92e31] {\n  margin: 0px;\n  padding: 0px;\n  list-style-type: none;\n}\n*[data-v-61d92e31], *[data-v-61d92e31]:before, *[data-v-61d92e31]:after {\n  box-sizing: border-box;\n}\ninput[data-v-61d92e31]:focus {\n  outline: none;\n}\ninput[disabled][data-v-61d92e31] {\n  background-color: transparent;\n}\n.vue-tags-input[data-v-61d92e31] {\n  max-width: 450px;\n  position: relative;\n  background-color: #fff;\n}\ndiv.vue-tags-input.disabled[data-v-61d92e31] {\n  opacity: 0.5;\n}\ndiv.vue-tags-input.disabled *[data-v-61d92e31] {\n    cursor: default;\n}\n.ti-input[data-v-61d92e31] {\n  border: 1px solid #ccc;\n  display: flex;\n  padding: 4px;\n  flex-wrap: wrap;\n}\n.ti-tags[data-v-61d92e31] {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  line-height: 1em;\n}\n.ti-tag[data-v-61d92e31] {\n  background-color: #5C6BC0;\n  color: #fff;\n  border-radius: 2px;\n  display: flex;\n  padding: 3px 5px;\n  margin: 2px;\n  font-size: .85em;\n}\n.ti-tag[data-v-61d92e31]:focus {\n    outline: none;\n}\n.ti-tag .ti-content[data-v-61d92e31] {\n    display: flex;\n    align-items: center;\n}\n.ti-tag .ti-tag-center[data-v-61d92e31] {\n    position: relative;\n}\n.ti-tag span[data-v-61d92e31] {\n    line-height: .85em;\n}\n.ti-tag span.ti-hidden[data-v-61d92e31] {\n    padding-left: 14px;\n    visibility: hidden;\n    height: 0px;\n    white-space: pre;\n}\n.ti-tag .ti-actions[data-v-61d92e31] {\n    margin-left: 2px;\n    display: flex;\n    align-items: center;\n    font-size: 1.15em;\n}\n.ti-tag .ti-actions i[data-v-61d92e31] {\n      cursor: pointer;\n}\n.ti-tag[data-v-61d92e31]:last-child {\n    margin-right: 4px;\n}\n.ti-tag.ti-invalid[data-v-61d92e31], .ti-tag.ti-tag.ti-deletion-mark[data-v-61d92e31] {\n    background-color: #e54d42;\n}\n.ti-new-tag-input-wrapper[data-v-61d92e31] {\n  display: flex;\n  flex: 1 0 auto;\n  padding: 3px 5px;\n  margin: 2px;\n  font-size: .85em;\n}\n.ti-new-tag-input-wrapper input[data-v-61d92e31] {\n    flex: 1 0 auto;\n    min-width: 100px;\n    border: none;\n    padding: 0px;\n    margin: 0px;\n}\n.ti-new-tag-input[data-v-61d92e31] {\n  line-height: initial;\n}\n.ti-autocomplete[data-v-61d92e31] {\n  border: 1px solid #ccc;\n  border-top: none;\n  position: absolute;\n  width: 100%;\n  background-color: #fff;\n  z-index: 20;\n}\n.ti-item > div[data-v-61d92e31] {\n  cursor: pointer;\n  padding: 3px 6px;\n  width: 100%;\n}\n.ti-selected-item[data-v-61d92e31] {\n  background-color: #5C6BC0;\n  color: #fff;\n}\n', "", {
                    version: 3,
                    sources: ["C:/Users/johan/dev/vue-tags-input/vue-tags-input/C:/Users/johan/dev/vue-tags-input/vue-tags-input/vue-tags-input.scss"],
                    names: [],
                    mappings: "AAAA;EACE,uBAAuB;EACvB,mCAA8C;EAC9C,+JAAuM;EACvM,oBAAoB;EACpB,mBAAmB;CAAE;AAEvB;EACE,kCAAkC;EAClC,YAAY;EACZ,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,qBAAqB;EACrB,eAAe;EACf,oCAAoC;EACpC,mCAAmC;CAAE;AAEvC;EACE,iBAAiB;CAAE;AAErB;EACE,iBAAiB;CAAE;AAErB;EACE,iBAAiB;CAAE;AAErB;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;CAAE;AAE1B;EACE,uBAAuB;CAAE;AAE3B;EACE,cAAc;CAAE;AAElB;EACE,8BAA8B;CAAE;AAElC;EACE,iBAAiB;EACjB,mBAAmB;EACnB,uBAAuB;CAAE;AAE3B;EACE,aAAa;CAAE;AACf;IACE,gBAAgB;CAAE;AAEtB;EACE,uBAAuB;EACvB,cAAc;EACd,aAAa;EACb,gBAAgB;CAAE;AAEpB;EACE,cAAc;EACd,gBAAgB;EAChB,YAAY;EACZ,iBAAiB;CAAE;AAErB;EACE,0BAA0B;EAC1B,YAAY;EACZ,mBAAmB;EACnB,cAAc;EACd,iBAAiB;EACjB,YAAY;EACZ,iBAAiB;CAAE;AACnB;IACE,cAAc;CAAE;AAClB;IACE,cAAc;IACd,oBAAoB;CAAE;AACxB;IACE,mBAAmB;CAAE;AACvB;IACE,mBAAmB;CAAE;AACvB;IACE,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;CAAE;AACrB;IACE,iBAAiB;IACjB,cAAc;IACd,oBAAoB;IACpB,kBAAkB;CAAE;AACpB;MACE,gBAAgB;CAAE;AACtB;IACE,kBAAkB;CAAE;AACtB;IACE,0BAA0B;CAAE;AAEhC;EACE,cAAc;EACd,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,iBAAiB;CAAE;AACnB;IACE,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,YAAY;CAAE;AAElB;EACE,qBAAqB;CAAE;AAEzB;EACE,uBAAuB;EACvB,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,uBAAuB;EACvB,YAAY;CAAE;AAEhB;EACE,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;CAAE;AAEhB;EACE,0BAA0B;EAC1B,YAAY;CAAE",
                    file: "vue-tags-input.scss?vue&type=style&index=0&id=61d92e31&lang=scss&scoped=true&",
                    sourcesContent: ['@font-face {\n  font-family: \'icomoon\';\n  src: url("./assets/fonts/icomoon.eot?7grlse");\n  src: url("./assets/fonts/icomoon.eot?7grlse#iefix") format("embedded-opentype"), url("./assets/fonts/icomoon.ttf?7grlse") format("truetype"), url("./assets/fonts/icomoon.woff?7grlse") format("woff");\n  font-weight: normal;\n  font-style: normal; }\n\n[class^="ti-icon-"], [class*=" ti-icon-"] {\n  font-family: \'icomoon\' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n.ti-icon-check:before {\n  content: "\\e902"; }\n\n.ti-icon-close:before {\n  content: "\\e901"; }\n\n.ti-icon-undo:before {\n  content: "\\e900"; }\n\nul {\n  margin: 0px;\n  padding: 0px;\n  list-style-type: none; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\ninput:focus {\n  outline: none; }\n\ninput[disabled] {\n  background-color: transparent; }\n\n.vue-tags-input {\n  max-width: 450px;\n  position: relative;\n  background-color: #fff; }\n\ndiv.vue-tags-input.disabled {\n  opacity: 0.5; }\n  div.vue-tags-input.disabled * {\n    cursor: default; }\n\n.ti-input {\n  border: 1px solid #ccc;\n  display: flex;\n  padding: 4px;\n  flex-wrap: wrap; }\n\n.ti-tags {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  line-height: 1em; }\n\n.ti-tag {\n  background-color: #5C6BC0;\n  color: #fff;\n  border-radius: 2px;\n  display: flex;\n  padding: 3px 5px;\n  margin: 2px;\n  font-size: .85em; }\n  .ti-tag:focus {\n    outline: none; }\n  .ti-tag .ti-content {\n    display: flex;\n    align-items: center; }\n  .ti-tag .ti-tag-center {\n    position: relative; }\n  .ti-tag span {\n    line-height: .85em; }\n  .ti-tag span.ti-hidden {\n    padding-left: 14px;\n    visibility: hidden;\n    height: 0px;\n    white-space: pre; }\n  .ti-tag .ti-actions {\n    margin-left: 2px;\n    display: flex;\n    align-items: center;\n    font-size: 1.15em; }\n    .ti-tag .ti-actions i {\n      cursor: pointer; }\n  .ti-tag:last-child {\n    margin-right: 4px; }\n  .ti-tag.ti-invalid, .ti-tag.ti-tag.ti-deletion-mark {\n    background-color: #e54d42; }\n\n.ti-new-tag-input-wrapper {\n  display: flex;\n  flex: 1 0 auto;\n  padding: 3px 5px;\n  margin: 2px;\n  font-size: .85em; }\n  .ti-new-tag-input-wrapper input {\n    flex: 1 0 auto;\n    min-width: 100px;\n    border: none;\n    padding: 0px;\n    margin: 0px; }\n\n.ti-new-tag-input {\n  line-height: initial; }\n\n.ti-autocomplete {\n  border: 1px solid #ccc;\n  border-top: none;\n  position: absolute;\n  width: 100%;\n  background-color: #fff;\n  z-index: 20; }\n\n.ti-item > div {\n  cursor: pointer;\n  padding: 3px 6px;\n  width: 100%; }\n\n.ti-selected-item {\n  background-color: #5C6BC0;\n  color: #fff; }\n'],
                    sourceRoot: ""
                }])
            }, function(e, t, i) {
                e.exports = function(e) {
                    return "string" != typeof e ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), /["'() \t\n]/.test(e) ? '"' + e.replace(/"/g, '\\"').replace(/\n/g, "\\n") + '"' : e)
                }
            }, function(e, t) {
                e.exports = "data:font/ttf;base64,AAEAAAALAIAAAwAwT1MvMg8SBawAAAC8AAAAYGNtYXAXVtKJAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5ZqWfozAAAAF4AAAA/GhlYWQPxZgIAAACdAAAADZoaGVhB4ADyAAAAqwAAAAkaG10eBIAAb4AAALQAAAAHGxvY2EAkgDiAAAC7AAAABBtYXhwAAkAHwAAAvwAAAAgbmFtZZlKCfsAAAMcAAABhnBvc3QAAwAAAAAEpAAAACAAAwOAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpAgPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6QL//f//AAAAAAAg6QD//f//AAH/4xcEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAFYBAQO+AoEAHAAAATIXHgEXFhcHJicuAScmIyIGBxchERc2Nz4BNzYCFkpDQ28pKRdkECAfVTM0OT9wLZz+gJgdIiJLKSgCVRcYUjg5QiAzKys+ERIrJZoBgJoZFRQcCAgAAQDWAIEDKgLVAAsAAAEHFwcnByc3JzcXNwMq7u487u487u487u4Cme7uPO7uPO7uPO7uAAEAkgCBA4ACvQAFAAAlARcBJzcBgAHEPP4A7jz5AcQ8/gDuPAAAAAABAAAAAAAAH8nTUV8PPPUACwQAAAAAANZ1KhsAAAAA1nUqGwAAAAADvgLVAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAO+AAEAAAAAAAAAAAAAAAAAAAAHBAAAAAAAAAAAAAAAAgAAAAQAAFYEAADWBAAAkgAAAAAACgAUAB4AUABqAH4AAQAAAAcAHQABAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA4ArgABAAAAAAABAAcAAAABAAAAAAACAAcAYAABAAAAAAADAAcANgABAAAAAAAEAAcAdQABAAAAAAAFAAsAFQABAAAAAAAGAAcASwABAAAAAAAKABoAigADAAEECQABAA4ABwADAAEECQACAA4AZwADAAEECQADAA4APQADAAEECQAEAA4AfAADAAEECQAFABYAIAADAAEECQAGAA4AUgADAAEECQAKADQApGljb21vb24AaQBjAG8AbQBvAG8AblZlcnNpb24gMS4wAFYAZQByAHMAaQBvAG4AIAAxAC4AMGljb21vb24AaQBjAG8AbQBvAG8Abmljb21vb24AaQBjAG8AbQBvAG8AblJlZ3VsYXIAUgBlAGcAdQBsAGEAcmljb21vb24AaQBjAG8AbQBvAG8AbkZvbnQgZ2VuZXJhdGVkIGJ5IEljb01vb24uAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4ALgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
            }, function(e, t) {
                e.exports = "data:font/woff;base64,d09GRgABAAAAAAUQAAsAAAAABMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIFrGNtYXAAAAFoAAAAVAAAAFQXVtKJZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAAAPwAAAD8pZ+jMGhlYWQAAALAAAAANgAAADYPxZgIaGhlYQAAAvgAAAAkAAAAJAeAA8hobXR4AAADHAAAABwAAAAcEgABvmxvY2EAAAM4AAAAEAAAABAAkgDibWF4cAAAA0gAAAAgAAAAIAAJAB9uYW1lAAADaAAAAYYAAAGGmUoJ+3Bvc3QAAATwAAAAIAAAACAAAwAAAAMDgAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA6QIDwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIOkC//3//wAAAAAAIOkA//3//wAB/+MXBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQBWAQEDvgKBABwAAAEyFx4BFxYXByYnLgEnJiMiBgcXIREXNjc+ATc2AhZKQ0NvKSkXZBAgH1UzNDk/cC2c/oCYHSIiSykoAlUXGFI4OUIgMysrPhESKyWaAYCaGRUUHAgIAAEA1gCBAyoC1QALAAABBxcHJwcnNyc3FzcDKu7uPO7uPO7uPO7uApnu7jzu7jzu7jzu7gABAJIAgQOAAr0ABQAAJQEXASc3AYABxDz+AO48+QHEPP4A7jwAAAAAAQAAAAAAAB/J01FfDzz1AAsEAAAAAADWdSobAAAAANZ1KhsAAAAAA74C1QAAAAgAAgAAAAAAAAABAAADwP/AAAAEAAAAAAADvgABAAAAAAAAAAAAAAAAAAAABwQAAAAAAAAAAAAAAAIAAAAEAABWBAAA1gQAAJIAAAAAAAoAFAAeAFAAagB+AAEAAAAHAB0AAQAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAOAK4AAQAAAAAAAQAHAAAAAQAAAAAAAgAHAGAAAQAAAAAAAwAHADYAAQAAAAAABAAHAHUAAQAAAAAABQALABUAAQAAAAAABgAHAEsAAQAAAAAACgAaAIoAAwABBAkAAQAOAAcAAwABBAkAAgAOAGcAAwABBAkAAwAOAD0AAwABBAkABAAOAHwAAwABBAkABQAWACAAAwABBAkABgAOAFIAAwABBAkACgA0AKRpY29tb29uAGkAYwBvAG0AbwBvAG5WZXJzaW9uIDEuMABWAGUAcgBzAGkAbwBuACAAMQAuADBpY29tb29uAGkAYwBvAG0AbwBvAG5pY29tb29uAGkAYwBvAG0AbwBvAG5SZWd1bGFyAFIAZQBnAHUAbABhAHJpY29tb29uAGkAYwBvAG0AbwBvAG5Gb250IGdlbmVyYXRlZCBieSBJY29Nb29uLgBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABJAGMAbwBNAG8AbwBuAC4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
            }, function(e, t, i) {
                i.r(t);
                var r = function() {
                    var e = this,
                        t = e.$createElement,
                        i = e._self._c || t;
                    return i("div", {
                        staticClass: "vue-tags-input",
                        class: [{
                            "ti-disabled": e.disabled
                        }, {
                            "ti-focus": e.focused
                        }]
                    }, [i("div", {
                        staticClass: "ti-input"
                    }, [e.tagsCopy ? i("ul", {
                        staticClass: "ti-tags"
                    }, [e._l(e.tagsCopy, (function(t, r) {
                        return i("li", {
                            key: r,
                            staticClass: "ti-tag",
                            class: [{
                                "ti-editing": e.tagsEditStatus[r]
                            }, t.tiClasses, t.classes, {
                                "ti-deletion-mark": e.isMarked(r)
                            }],
                            style: t.style,
                            attrs: {
                                tabindex: "0"
                            },
                            on: {
                                click: function(i) {
                                    return e.$emit("tag-clicked", {
                                        tag: t,
                                        index: r
                                    })
                                }
                            }
                        }, [i("div", {
                            staticClass: "ti-content"
                        }, [e.$scopedSlots["tag-left"] ? i("div", {
                            staticClass: "ti-tag-left"
                        }, [e._t("tag-left", null, {
                            tag: t,
                            index: r,
                            edit: e.tagsEditStatus[r],
                            performSaveEdit: e.performSaveTag,
                            performDelete: e.performDeleteTag,
                            performCancelEdit: e.cancelEdit,
                            performOpenEdit: e.performEditTag,
                            deletionMark: e.isMarked(r)
                        })], 2) : e._e(), e._v(" "), i("div", {
                            ref: "tagCenter",
                            refInFor: !0,
                            staticClass: "ti-tag-center"
                        }, [e.$scopedSlots["tag-center"] ? e._e() : i("span", {
                            class: {
                                "ti-hidden": e.tagsEditStatus[r]
                            },
                            on: {
                                click: function(t) {
                                    return e.performEditTag(r)
                                }
                            }
                        }, [e._v(e._s(t.text))]), e._v(" "), e.$scopedSlots["tag-center"] ? e._e() : i("tag-input", {
                            attrs: {
                                scope: {
                                    edit: e.tagsEditStatus[r],
                                    maxlength: e.maxlength,
                                    tag: t,
                                    index: r,
                                    validateTag: e.createChangedTag,
                                    performCancelEdit: e.cancelEdit,
                                    performSaveEdit: e.performSaveTag
                                }
                            }
                        }), e._v(" "), e._t("tag-center", null, {
                            tag: t,
                            index: r,
                            maxlength: e.maxlength,
                            edit: e.tagsEditStatus[r],
                            performSaveEdit: e.performSaveTag,
                            performDelete: e.performDeleteTag,
                            performCancelEdit: e.cancelEdit,
                            validateTag: e.createChangedTag,
                            performOpenEdit: e.performEditTag,
                            deletionMark: e.isMarked(r)
                        })], 2), e._v(" "), e.$scopedSlots["tag-right"] ? i("div", {
                            staticClass: "ti-tag-right"
                        }, [e._t("tag-right", null, {
                            tag: t,
                            index: r,
                            edit: e.tagsEditStatus[r],
                            performSaveEdit: e.performSaveTag,
                            performDelete: e.performDeleteTag,
                            performCancelEdit: e.cancelEdit,
                            performOpenEdit: e.performEditTag,
                            deletionMark: e.isMarked(r)
                        })], 2) : e._e()]), e._v(" "), i("div", {
                            staticClass: "ti-actions"
                        }, [e.$scopedSlots["tag-actions"] ? e._e() : i("i", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e.tagsEditStatus[r],
                                expression: "tagsEditStatus[index]"
                            }],
                            staticClass: "ti-icon-undo",
                            on: {
                                click: function(t) {
                                    return e.cancelEdit(r)
                                }
                            }
                        }), e._v(" "), e.$scopedSlots["tag-actions"] ? e._e() : i("i", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: !e.tagsEditStatus[r],
                                expression: "!tagsEditStatus[index]"
                            }],
                            staticClass: "ti-icon-close",
                            on: {
                                click: function(t) {
                                    return e.performDeleteTag(r)
                                }
                            }
                        }), e._v(" "), e.$scopedSlots["tag-actions"] ? e._t("tag-actions", null, {
                            tag: t,
                            index: r,
                            edit: e.tagsEditStatus[r],
                            performSaveEdit: e.performSaveTag,
                            performDelete: e.performDeleteTag,
                            performCancelEdit: e.cancelEdit,
                            performOpenEdit: e.performEditTag,
                            deletionMark: e.isMarked(r)
                        }) : e._e()], 2)])
                    })), e._v(" "), i("li", {
                        staticClass: "ti-new-tag-input-wrapper"
                    }, [i("input", e._b({
                        ref: "newTagInput",
                        staticClass: "ti-new-tag-input",
                        class: [e.createClasses(e.newTag, e.tags, e.validation, e.isDuplicate)],
                        attrs: {
                            placeholder: e.placeholder,
                            maxlength: e.maxlength,
                            disabled: e.disabled,
                            type: "text",
                            size: "1"
                        },
                        domProps: {
                            value: e.newTag
                        },
                        on: {
                            keydown: [function(t) {
                                return e.performAddTags(e.filteredAutocompleteItems[e.selectedItem] || e.newTag, t)
                            }, function(t) {
                                return t.type.indexOf("key") || 8 === t.keyCode ? e.invokeDelete(t) : null
                            }, function(t) {
                                return t.type.indexOf("key") || 9 === t.keyCode ? e.performBlur(t) : null
                            }, function(t) {
                                return t.type.indexOf("key") || 38 === t.keyCode ? e.selectItem(t, "before") : null
                            }, function(t) {
                                return t.type.indexOf("key") || 40 === t.keyCode ? e.selectItem(t, "after") : null
                            }],
                            paste: e.addTagsFromPaste,
                            input: e.updateNewTag,
                            blur: function(t) {
                                return e.$emit("blur", t)
                            },
                            focus: function(t) {
                                e.focused = !0, e.$emit("focus", t)
                            },
                            click: function(t) {
                                !e.addOnlyFromAutocomplete && (e.selectedItem = null)
                            }
                        }
                    }, "input", e.$attrs, !1))])], 2) : e._e()]), e._v(" "), e._t("between-elements"), e._v(" "), e.autocompleteOpen ? i("div", {
                        staticClass: "ti-autocomplete",
                        on: {
                            mouseout: function(t) {
                                e.selectedItem = null
                            }
                        }
                    }, [e._t("autocomplete-header"), e._v(" "), i("ul", e._l(e.filteredAutocompleteItems, (function(t, r) {
                        return i("li", {
                            key: r,
                            staticClass: "ti-item",
                            class: [t.tiClasses, t.classes, {
                                "ti-selected-item": e.isSelected(r)
                            }],
                            style: t.style,
                            on: {
                                mouseover: function(t) {
                                    !e.disabled && (e.selectedItem = r)
                                }
                            }
                        }, [e.$scopedSlots["autocomplete-item"] ? e._t("autocomplete-item", null, {
                            item: t,
                            index: r,
                            performAdd: function(t) {
                                return e.performAddTags(t, void 0, "autocomplete")
                            },
                            selected: e.isSelected(r)
                        }) : i("div", {
                            on: {
                                click: function(i) {
                                    return e.performAddTags(t, void 0, "autocomplete")
                                }
                            }
                        }, [e._v("\n          " + e._s(t.text) + "\n        ")])], 2)
                    })), 0), e._v(" "), e._t("autocomplete-footer")], 2) : e._e()], 2)
                };
                r._withStripped = !0;
                var n = i(5),
                    s = i.n(n),
                    o = function(e) {
                        return JSON.parse(JSON.stringify(e))
                    },
                    a = function(e, t) {
                        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                            r = arguments.length > 3 ? arguments[3] : void 0;
                        void 0 === e.text && (e = {
                            text: e
                        });
                        var n = function(e, t) {
                                return t.filter((function(t) {
                                    var i = e.text;
                                    return "string" == typeof t.rule ? !new RegExp(t.rule).test(i) : t.rule instanceof RegExp ? !t.rule.test(i) : "[object Function]" === {}.toString.call(t.rule) ? t.rule(e) : void 0
                                })).map((function(e) {
                                    return e.classes
                                }))
                            }(e, i),
                            s = function(e, t) {
                                for (var i = 0; i < e.length;) {
                                    if (t(e[i])) return i;
                                    i++
                                }
                                return -1
                            }(t, (function(t) {
                                return t === e
                            })),
                            a = o(t),
                            l = -1 !== s ? a.splice(s, 1)[0] : o(e);
                        return (r ? r(a, l) : -1 !== a.map((function(e) {
                            return e.text
                        })).indexOf(l.text)) && n.push("ti-duplicate"), 0 === n.length ? n.push("ti-valid") : n.push("ti-invalid"), n
                    },
                    l = function(e) {
                        void 0 === e.text && (e = {
                            text: e
                        });
                        for (var t = o(e), i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), n = 1; n < i; n++) r[n - 1] = arguments[n];
                        return t.tiClasses = a.apply(void 0, [e].concat(r)), t
                    },
                    c = function(e) {
                        for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) i[r - 1] = arguments[r];
                        return e.map((function(t) {
                            return l.apply(void 0, [t, e].concat(i))
                        }))
                    },
                    h = function() {
                        var e = this,
                            t = e.$createElement,
                            i = e._self._c || t;
                        return e.scope.edit ? i("input", {
                            directives: [{
                                name: "model",
                                rawName: "v-model",
                                value: e.scope.tag.text,
                                expression: "scope.tag.text"
                            }],
                            staticClass: "ti-tag-input",
                            attrs: {
                                maxlength: e.scope.maxlength,
                                type: "text",
                                size: "1"
                            },
                            domProps: {
                                value: e.scope.tag.text
                            },
                            on: {
                                input: [function(t) {
                                    t.target.composing || e.$set(e.scope.tag, "text", t.target.value)
                                }, function(t) {
                                    return e.scope.validateTag(e.scope.index, t)
                                }],
                                blur: function(t) {
                                    return e.scope.performCancelEdit(e.scope.index)
                                },
                                keydown: function(t) {
                                    return e.scope.performSaveEdit(e.scope.index, t)
                                }
                            }
                        }) : e._e()
                    };
                h._withStripped = !0;
                var d = {
                    name: "TagInput",
                    props: {
                        scope: {
                            type: Object
                        }
                    }
                };

                function u(e, t, i, r, n, s, o, a) {
                    var l, c = "function" == typeof e ? e.options : e;
                    if (t && (c.render = t, c.staticRenderFns = i, c._compiled = !0), r && (c.functional = !0), s && (c._scopeId = "data-v-" + s), o ? (l = function(e) {
                            (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), n && n.call(this, e), e && e._registeredComponents && e._registeredComponents.add(o)
                        }, c._ssrRegister = l) : n && (l = a ? function() {
                            n.call(this, this.$root.$options.shadowRoot)
                        } : n), l)
                        if (c.functional) {
                            c._injectStyles = l;
                            var h = c.render;
                            c.render = function(e, t) {
                                return l.call(t), h(e, t)
                            }
                        } else {
                            var d = c.beforeCreate;
                            c.beforeCreate = d ? [].concat(d, l) : [l]
                        } return {
                        exports: e,
                        options: c
                    }
                }
                i(7);
                var p = u(d, h, [], !1, null, "108f4f13", null);
                p.options.__file = "vue-tags-input/tag-input.vue";
                var f = p.exports,
                    _ = function(e) {
                        return !e.some((function(e) {
                            var t = !e.text;
                            t && console.warn('Missing property "text"', e);
                            var i = !1;
                            return e.classes && (i = "string" != typeof e.classes), i && console.warn('Property "classes" must be type of string', e), t || i
                        }))
                    },
                    m = function(e) {
                        return !e.some((function(e) {
                            if ("number" == typeof e) {
                                var t = isFinite(e) && Math.floor(e) === e;
                                return t || console.warn("Only numerics are allowed for this prop. Found:", e), !t
                            }
                            if ("string" == typeof e) {
                                var i = /\W|[a-z]|!\d/i.test(e);
                                return i || console.warn("Only alpha strings are allowed for this prop. Found:", e), !i
                            }
                            return console.warn("Only numeric and string values are allowed. Found:", e), !1
                        }))
                    },
                    g = {
                        value: {
                            type: String,
                            default: "",
                            required: !0
                        },
                        tags: {
                            type: Array,
                            default: function() {
                                return []
                            },
                            validator: _
                        },
                        autocompleteItems: {
                            type: Array,
                            default: function() {
                                return []
                            },
                            validator: _
                        },
                        allowEditTags: {
                            type: Boolean,
                            default: !1
                        },
                        autocompleteFilterDuplicates: {
                            default: !0,
                            type: Boolean
                        },
                        addOnlyFromAutocomplete: {
                            type: Boolean,
                            default: !1
                        },
                        autocompleteMinLength: {
                            type: Number,
                            default: 1
                        },
                        autocompleteAlwaysOpen: {
                            type: Boolean,
                            default: !1
                        },
                        disabled: {
                            type: Boolean,
                            default: !1
                        },
                        placeholder: {
                            type: String,
                            default: "Add Tag"
                        },
                        addOnKey: {
                            type: Array,
                            default: function() {
                                return [13]
                            },
                            validator: m
                        },
                        saveOnKey: {
                            type: Array,
                            default: function() {
                                return [13]
                            },
                            validator: m
                        },
                        maxTags: {
                            type: Number
                        },
                        maxlength: {
                            type: Number
                        },
                        validation: {
                            type: Array,
                            default: function() {
                                return []
                            },
                            validator: function(e) {
                                return !e.some((function(e) {
                                    var t = !e.rule;
                                    t && console.warn('Property "rule" is missing', e);
                                    var i = e.rule && ("string" == typeof e.rule || e.rule instanceof RegExp || "[object Function]" === {}.toString.call(e.rule));
                                    i || console.warn("A rule must be type of string, RegExp or function. Found:", JSON.stringify(e.rule));
                                    var r = !e.classes;
                                    r && console.warn('Property "classes" is missing', e);
                                    var n = e.type && "string" != typeof e.type;
                                    return n && console.warn('Property "type" must be type of string. Found:', e), !i || t || r || n
                                }))
                            }
                        },
                        separators: {
                            type: Array,
                            default: function() {
                                return [";"]
                            },
                            validator: function(e) {
                                return !e.some((function(e) {
                                    var t = "string" != typeof e;
                                    return t && console.warn("Separators must be type of string. Found:", e), t
                                }))
                            }
                        },
                        avoidAddingDuplicates: {
                            type: Boolean,
                            default: !0
                        },
                        addOnBlur: {
                            type: Boolean,
                            default: !0
                        },
                        isDuplicate: {
                            type: Function,
                            default: null
                        },
                        addFromPaste: {
                            type: Boolean,
                            default: !0
                        },
                        deleteOnBackspace: {
                            default: !0,
                            type: Boolean
                        }
                    };

                function v(e) {
                    return (v = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                    })(e)
                }
                var b = {
                        name: "VueTagsInput",
                        components: {
                            TagInput: f
                        },
                        props: g,
                        data: function() {
                            return {
                                newTag: null,
                                tagsCopy: null,
                                tagsEditStatus: null,
                                deletionMark: null,
                                deletionMarkTime: null,
                                selectedItem: null,
                                focused: null
                            }
                        },
                        computed: {
                            autocompleteOpen: function() {
                                return !!this.autocompleteAlwaysOpen || null !== this.newTag && this.newTag.length >= this.autocompleteMinLength && this.filteredAutocompleteItems.length > 0 && this.focused
                            },
                            filteredAutocompleteItems: function() {
                                var e = this,
                                    t = this.autocompleteItems.map((function(t) {
                                        return l(t, e.tags, e.validation, e.isDuplicate)
                                    }));
                                return this.autocompleteFilterDuplicates ? t.filter(this.duplicateFilter) : t
                            }
                        },
                        methods: {
                            createClasses: a,
                            getSelectedIndex: function(e) {
                                var t = this.filteredAutocompleteItems,
                                    i = this.selectedItem,
                                    r = t.length - 1;
                                if (0 !== t.length) return null === i ? 0 : "before" === e && 0 === i ? r : "after" === e && i === r ? 0 : "after" === e ? i + 1 : i - 1
                            },
                            selectDefaultItem: function() {
                                this.addOnlyFromAutocomplete && this.filteredAutocompleteItems.length > 0 ? this.selectedItem = 0 : this.selectedItem = null
                            },
                            selectItem: function(e, t) {
                                e.preventDefault(), this.selectedItem = this.getSelectedIndex(t)
                            },
                            isSelected: function(e) {
                                return this.selectedItem === e
                            },
                            isMarked: function(e) {
                                return this.deletionMark === e
                            },
                            invokeDelete: function() {
                                var e = this;
                                if (this.deleteOnBackspace && !(this.newTag.length > 0)) {
                                    var t = this.tagsCopy.length - 1;
                                    null === this.deletionMark ? (this.deletionMarkTime = setTimeout((function() {
                                        return e.deletionMark = null
                                    }), 1e3), this.deletionMark = t) : this.performDeleteTag(t)
                                }
                            },
                            addTagsFromPaste: function() {
                                var e = this;
                                this.addFromPaste && setTimeout((function() {
                                    return e.performAddTags(e.newTag)
                                }), 10)
                            },
                            performEditTag: function(e) {
                                var t = this;
                                this.allowEditTags && (this._events["before-editing-tag"] || this.editTag(e), this.$emit("before-editing-tag", {
                                    index: e,
                                    tag: this.tagsCopy[e],
                                    editTag: function() {
                                        return t.editTag(e)
                                    }
                                }))
                            },
                            editTag: function(e) {
                                this.allowEditTags && (this.toggleEditMode(e), this.focus(e))
                            },
                            toggleEditMode: function(e) {
                                this.allowEditTags && !this.disabled && this.$set(this.tagsEditStatus, e, !this.tagsEditStatus[e])
                            },
                            createChangedTag: function(e, t) {
                                var i = this.tagsCopy[e];
                                i.text = t ? t.target.value : this.tagsCopy[e].text, this.$set(this.tagsCopy, e, l(i, this.tagsCopy, this.validation, this.isDuplicate))
                            },
                            focus: function(e) {
                                var t = this;
                                this.$nextTick((function() {
                                    var i = t.$refs.tagCenter[e].querySelector("input.ti-tag-input");
                                    i && i.focus()
                                }))
                            },
                            quote: function(e) {
                                return e.replace(/([()[{*+.$^\\|?])/g, "\\$1")
                            },
                            cancelEdit: function(e) {
                                this.tags[e] && (this.tagsCopy[e] = o(l(this.tags[e], this.tags, this.validation, this.isDuplicate)), this.$set(this.tagsEditStatus, e, !1))
                            },
                            hasForbiddingAddRule: function(e) {
                                var t = this;
                                return e.some((function(e) {
                                    var i = t.validation.find((function(t) {
                                        return e === t.classes
                                    }));
                                    return !!i && i.disableAdd
                                }))
                            },
                            createTagTexts: function(e) {
                                var t = this,
                                    i = new RegExp(this.separators.map((function(e) {
                                        return t.quote(e)
                                    })).join("|"));
                                return e.split(i).map((function(e) {
                                    return {
                                        text: e
                                    }
                                }))
                            },
                            performDeleteTag: function(e) {
                                var t = this;
                                this._events["before-deleting-tag"] || this.deleteTag(e), this.$emit("before-deleting-tag", {
                                    index: e,
                                    tag: this.tagsCopy[e],
                                    deleteTag: function() {
                                        return t.deleteTag(e)
                                    }
                                })
                            },
                            deleteTag: function(e) {
                                this.disabled || (this.deletionMark = null, clearTimeout(this.deletionMarkTime), this.tagsCopy.splice(e, 1), this._events["update:tags"] && this.$emit("update:tags", this.tagsCopy), this.$emit("tags-changed", this.tagsCopy))
                            },
                            noTriggerKey: function(e, t) {
                                var i = -1 !== this[t].indexOf(e.keyCode) || -1 !== this[t].indexOf(e.key);
                                return i && e.preventDefault(), !i
                            },
                            performAddTags: function(e, t, i) {
                                var r = this;
                                if (!(this.disabled || t && this.noTriggerKey(t, "addOnKey"))) {
                                    var n = [];
                                    "object" === v(e) && (n = [e]), "string" == typeof e && (n = this.createTagTexts(e)), (n = n.filter((function(e) {
                                        return e.text.trim().length > 0
                                    }))).forEach((function(e) {
                                        e = l(e, r.tags, r.validation, r.isDuplicate), r._events["before-adding-tag"] || r.addTag(e, i), r.$emit("before-adding-tag", {
                                            tag: e,
                                            addTag: function() {
                                                return r.addTag(e, i)
                                            }
                                        })
                                    }))
                                }
                            },
                            duplicateFilter: function(e) {
                                return this.isDuplicate ? !this.isDuplicate(this.tagsCopy, e) : !this.tagsCopy.find((function(t) {
                                    return t.text === e.text
                                }))
                            },
                            addTag: function(e) {
                                var t = this,
                                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "new-tag-input",
                                    r = this.filteredAutocompleteItems.map((function(e) {
                                        return e.text
                                    }));
                                this.addOnlyFromAutocomplete && -1 === r.indexOf(e.text) || this.$nextTick((function() {
                                    return t.maxTags && t.maxTags <= t.tagsCopy.length ? t.$emit("max-tags-reached", e) : t.avoidAddingDuplicates && !t.duplicateFilter(e) ? t.$emit("adding-duplicate", e) : void(t.hasForbiddingAddRule(e.tiClasses) || (t.$emit("input", ""), t.tagsCopy.push(e), t._events["update:tags"] && t.$emit("update:tags", t.tagsCopy), "autocomplete" === i && t.$refs.newTagInput.focus(), t.$emit("tags-changed", t.tagsCopy)))
                                }))
                            },
                            performSaveTag: function(e, t) {
                                var i = this,
                                    r = this.tagsCopy[e];
                                this.disabled || t && this.noTriggerKey(t, "addOnKey") || 0 !== r.text.trim().length && (this._events["before-saving-tag"] || this.saveTag(e, r), this.$emit("before-saving-tag", {
                                    index: e,
                                    tag: r,
                                    saveTag: function() {
                                        return i.saveTag(e, r)
                                    }
                                }))
                            },
                            saveTag: function(e, t) {
                                if (this.avoidAddingDuplicates) {
                                    var i = o(this.tagsCopy),
                                        r = i.splice(e, 1)[0];
                                    if (this.isDuplicate ? this.isDuplicate(i, r) : -1 !== i.map((function(e) {
                                            return e.text
                                        })).indexOf(r.text)) return this.$emit("saving-duplicate", t)
                                }
                                this.hasForbiddingAddRule(t.tiClasses) || (this.$set(this.tagsCopy, e, t), this.toggleEditMode(e), this._events["update:tags"] && this.$emit("update:tags", this.tagsCopy), this.$emit("tags-changed", this.tagsCopy))
                            },
                            tagsEqual: function() {
                                var e = this;
                                return !this.tagsCopy.some((function(t, i) {
                                    return !s()(t, e.tags[i])
                                }))
                            },
                            updateNewTag: function(e) {
                                var t = e.target.value;
                                this.newTag = t, this.$emit("input", t)
                            },
                            initTags: function() {
                                this.tagsCopy = c(this.tags, this.validation, this.isDuplicate), this.tagsEditStatus = o(this.tags).map((function() {
                                    return !1
                                })), this._events["update:tags"] && !this.tagsEqual() && this.$emit("update:tags", this.tagsCopy)
                            },
                            blurredOnClick: function(e) {
                                this.$el.contains(e.target) || this.$el.contains(document.activeElement) || this.performBlur(e)
                            },
                            performBlur: function() {
                                this.addOnBlur && this.focused && this.performAddTags(this.newTag), this.focused = !1
                            }
                        },
                        watch: {
                            value: function(e) {
                                this.addOnlyFromAutocomplete || (this.selectedItem = null), this.newTag = e
                            },
                            tags: {
                                handler: function() {
                                    this.initTags()
                                },
                                deep: !0
                            },
                            autocompleteOpen: "selectDefaultItem"
                        },
                        created: function() {
                            this.newTag = this.value, this.initTags()
                        },
                        mounted: function() {
                            this.selectDefaultItem(), document.addEventListener("click", this.blurredOnClick)
                        },
                        destroyed: function() {
                            document.removeEventListener("click", this.blurredOnClick)
                        }
                    },
                    y = (i(9), u(b, r, [], !1, null, "61d92e31", null));
                y.options.__file = "vue-tags-input/vue-tags-input.vue";
                var w = y.exports;
                i.d(t, "VueTagsInput", (function() {
                    return w
                })), i.d(t, "createClasses", (function() {
                    return a
                })), i.d(t, "createTag", (function() {
                    return l
                })), i.d(t, "createTags", (function() {
                    return c
                })), i.d(t, "TagInput", (function() {
                    return f
                })), w.install = function(e) {
                    return e.component(w.name, w)
                }, "undefined" != typeof window && window.Vue && window.Vue.use(w), t.default = w
            }])
        })),
        ty = (Jb = ey) && Jb.__esModule && Object.prototype.hasOwnProperty.call(Jb, "default") ? Jb.default : Jb;
    ey.vueTagsInput;
    const iy = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf__content__snapshot",
                on: {
                    click: function(t) {
                        return t.preventDefault(), e.getSnapshot(t)
                    }
                }
            }, [!1 !== e.imageEncoded && null !== e.imageEncoded ? [i("img", {
                staticClass: "snapshot",
                attrs: {
                    src: e.imageEncoded
                }
            }), e._v(" "), i("div", {
                staticClass: "snapshot--hover"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "camera",
                    width: "50",
                    height: "46",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataCameraIcon")], 1)], 1)] : [i("div", {
                staticClass: "snapshot--icon"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "camera",
                    width: "50",
                    height: "46",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataCameraIcon")], 1)], 1)]], 2)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataCameraIcon: Hb
        },
        props: {
            imageEncoded: {
                type: String
            }
        },
        methods: {
            getSnapshot() {
                this.$emit("capture-snapshot")
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ry = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("g", [i("circle", {
                    staticClass: "bimdata-fill-secondary",
                    attrs: {
                        cx: "9.6",
                        cy: "46",
                        r: "2.2"
                    }
                }), e._v(" "), i("g", [i("polygon", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        points: "29.8,25.6 21.3,18.6 12.8,11.6 12.9,22.6 12.9,33.6 19.3,25.3 \t\t"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M13.3,7.2c0.3,0,0.5-0.2,0.5-0.5V1.2c0-0.3-0.2-0.5-0.5-0.5s-0.5,0.2-0.5,0.5v5.4C12.8,6.9,13,7.2,13.3,7.2z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M17.5,8.6l3.8-3.8c0.2-0.2,0.2-0.5,0-0.7c-0.2-0.2-0.5-0.2-0.7,0l-3.8,3.8c-0.2,0.2-0.2,0.5,0,0.7\n\t\t\tC17,8.8,17.3,8.8,17.5,8.6z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M9.1,15.5l-3.8,3.8c-0.2,0.2-0.2,0.5,0,0.7s0.5,0.2,0.7,0l3.8-3.8c0.2-0.2,0.2-0.5,0-0.7\n\t\t\tC9.6,15.3,9.3,15.3,9.1,15.5z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M18.2,12.1c0,0.3,0.2,0.5,0.5,0.5h5.4c0.3,0,0.5-0.2,0.5-0.5c0-0.3-0.2-0.5-0.5-0.5h-5.4\n\t\t\tC18.4,11.5,18.2,11.8,18.2,12.1z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M8.4,12.1c0-0.3-0.2-0.5-0.5-0.5H2.5c-0.3,0-0.5,0.2-0.5,0.5c0,0.3,0.2,0.5,0.5,0.5h5.4\n\t\t\tC8.2,12.6,8.4,12.3,8.4,12.1z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M6,4C5.8,3.8,5.5,3.8,5.3,4s-0.2,0.5,0,0.7l3.8,3.8c0.2,0.2,0.5,0.2,0.7,0c0.2-0.2,0.2-0.5,0-0.7L6,4z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M37.6,42.8c-1.8,0-3.3,1.5-3.3,3.3c0,1.8,1.5,3.3,3.3,3.3s3.3-1.5,3.3-3.3C40.9,44.3,39.4,42.8,37.6,42.8z\n\t\t\t M37.6,47.7c-0.9,0-1.6-0.7-1.6-1.6s0.7-1.6,1.6-1.6s1.6,0.7,1.6,1.6S38.5,47.7,37.6,47.7z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M45.7,43.9c-1.9,0-3.4,1.5-3.4,3.4s1.5,3.4,3.4,3.4s3.4-1.5,3.4-3.4S47.5,43.9,45.7,43.9z M45.7,48.9\n\t\t\tc-0.9,0-1.6-0.7-1.6-1.6s0.7-1.6,1.6-1.6s1.6,0.7,1.6,1.6S46.6,48.9,45.7,48.9z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M42.9,27.4c-7.4,0-13.4,6-13.4,13.4v26.4c0,2.1,1.7,3.9,3.9,3.9c0.3,0,0.6,0,0.9-0.1c0.1,2.1,1.8,3.8,3.9,3.8\n\t\t\tc2.1,0,3.9-1.7,3.9-3.9V69c0.3,0.1,0.6,0.1,0.9,0.1H43c0.3,0,0.6,0,0.9-0.1c0.2,2,1.8,3.5,3.8,3.5c0.3,0,0.6,0,0.9-0.1\n\t\t\tc0.4,1.8,1.9,3.1,3.8,3.1c2.1,0,3.9-1.7,3.9-3.9V40.8C56.3,33.4,50.3,27.4,42.9,27.4z M53.3,71.6c0,0.5-0.4,0.9-0.9,0.9\n\t\t\ts-0.9-0.4-0.9-0.9l0-7.5h-3v4.6c0,0.5-0.4,0.9-0.9,0.9c-0.5,0-0.9-0.4-0.9-0.9l0-5.3h-3v1.9c0,0.5-0.4,0.9-0.9,0.9h-0.2\n\t\t\tc-0.5,0-0.9-0.4-0.9-0.9v-7h-3l0,12.6c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9v-6.1h-3v2.5c0,0.5-0.4,0.9-0.9,0.9\n\t\t\ts-0.9-0.4-0.9-0.9V40.8c0-5.7,4.7-10.4,10.4-10.4c5.7,0,10.4,4.7,10.4,10.4V71.6z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M19.1,37c-1.8,0-3.2,1.4-3.2,3.2c0,1.8,1.4,3.2,3.2,3.2c1.8,0,3.2-1.4,3.2-3.2C22.3,38.5,20.8,37,19.1,37z"
                    }
                }), e._v(" "), i("path", {
                    staticClass: "bimdata-fill-grey",
                    attrs: {
                        d: "M18.6,51.4c-0.8-0.2-1.6,0.3-1.8,1c-0.2,0.8,0.3,1.6,1,1.8c0.8,0.2,1.6-0.3,1.8-1\n\t\t\tC19.8,52.4,19.4,51.6,18.6,51.4z"
                    }
                })])])
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: ny
        } = Ma("bcf"),
        {
            mapState: sy
        } = Ma("viewer");
    const oy = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf__content bcf--bucket"
            }, [i("div", {
                staticClass: "bcf--bucket__content"
            }, [e.innerElements && e.innerElements.length > 0 ? i("span", [e._v(e._s(e.$t("bcf.bucket_title")) + ":")]) : e._e(), e._v(" "), i("BIMDataPaginatedList", {
                staticClass: "bimdata-paginated-list--small",
                class: {
                    "bimdata-paginated-list--empty": 0 === e.innerElements.length
                },
                attrs: {
                    list: e.innerElements,
                    perPage: 30,
                    elementKey: "id"
                },
                scopedSlots: e._u([{
                    key: "element",
                    fn: function(t) {
                        var r = t.element;
                        return [i("span", [e._v(e._s(e.$store.getters["viewer/objectName"](r.id)))]), e._v(" "), i("BIMDataButton", {
                            staticClass: "bimdata-btn__ghost",
                            attrs: {
                                width: "16px",
                                height: "16px"
                            },
                            on: {
                                click: function(t) {
                                    return e.onDeselectElement(r)
                                }
                            }
                        }, [i("BIMDataIcon", {
                            staticClass: "icon-close",
                            attrs: {
                                "icon-name": "close",
                                width: "16",
                                height: "16",
                                x: "24",
                                y: "24"
                            }
                        }, [i("BIMDataCrossIcon")], 1)], 1)]
                    }
                }, {
                    key: "empty",
                    fn: function() {
                        return [i("div", {
                            staticClass: "bcf--bucket__empty"
                        }, [i("BIMDataIcon", {
                            staticClass: "icon-empty-bucket",
                            attrs: {
                                "icon-name": "empty-bucket",
                                width: "0",
                                height: "76",
                                x: "58",
                                y: "76"
                            }
                        }, [i("BIMDataEmptyBucketIllustration")], 1), e._v(" "), i("p", [e._v(e._s(e.$t("bcf.bucket_empty")))]), e._v(" "), i("div", {
                            staticClass: "bcf--bucket__empty--tip"
                        }, [i("div", {
                            staticClass: "bcf--bucket__empty--tip__icon"
                        }, [i("span", {
                            staticClass: "alt"
                        }, [e._v("ctrl")]), e._v(" "), i("span", {
                            staticClass: "more"
                        }, [e._v("+ left click")]), e._v(" "), i("div", {
                            staticClass: "icon"
                        }, [i("BIMDataIcon", {
                            staticClass: "icon-click",
                            attrs: {
                                "icon-name": "icon-click",
                                width: "0",
                                height: "30",
                                x: "23",
                                y: "30"
                            }
                        }, [i("BIMDataClickIllustration")], 1)], 1)]), e._v(" "), i("p", [e._v(e._s(e.$t("bcf.bucket_tip")))])])], 1)]
                    },
                    proxy: !0
                }])
            }), e._v(" "), e.innerElements.length ? i("BIMDataButton", {
                staticClass: "bimdata-btn__radius bimdata-btn__fill bimdata-btn__fill--primary",
                attrs: {
                    disabled: !e.innerElements || !e.innerElements.length
                },
                on: {
                    click: e.validate
                }
            }, [e._v(e._s(e.$t("bcf.bucket_btn")))]) : e._e()], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataIcon: El,
            BIMDataEmptyBucketIllustration: ry,
            BIMDataClickIllustration: yc,
            BIMDataCrossIcon: $l,
            BIMDataPaginatedList: Ql,
            BIMDataButton: Ml
        },
        data: () => ({
            innerElements: null
        }),
        props: {
            elements: Array
        },
        computed: {
            ...ny(["bcfRoot"]),
            ...sy(["selectedObjectIds"])
        },
        created() {
            this.innerElements = this.elements ? Array.from(this.elements) : [], this.bcfRoot.registerOnElementChangeSelect(this);
            const e = new Set(this.innerElements.map(e => e.id));
            this.$hub.emit("deselect-objects", {
                ids: Set.difference(this.selectedObjectIds, e),
                trigger: this.bcfRoot
            }), this.$hub.emit("select-objects", {
                ids: Set.difference(e, this.selectedObjectIds),
                trigger: this.bcfRoot
            })
        },
        destroyed() {
            this.bcfRoot.unregisterOnElementChangeSelect(this)
        },
        methods: {
            selectElements({
                ids: e
            }) {
                e.forEach(e => {
                    this.innerElements.find(t => t.id === e) || this.innerElements.push({
                        id: e
                    })
                })
            },
            deselectElements({
                ids: e
            }) {
                e.forEach(e => this.innerElements = this.innerElements.filter(t => t.id !== e))
            },
            validate() {
                this.$emit("validate", this.innerElements)
            },
            onDeselectElement({
                id: e
            }) {
                this.deselectElements({
                    ids: [e]
                }), this.bcfRoot.$emit("deselect-objects", {
                    ids: new Set([e]),
                    trigger: this.bcfRoot
                })
            }
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ay = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-select",
                class: {
                    "not-empty": null != e.value
                }
            }, [i("div", {
                staticClass: "bimdata-select__content"
            }, [i("div", {
                staticClass: "select",
                class: {
                    active: e.displayOptions
                },
                on: {
                    click: function(t) {
                        e.displayOptions = !e.displayOptions
                    }
                }
            }, [i("span", [e._v(e._s(e.value))]), e._v(" "), i("BIMDataIcon", {
                staticClass: "icon-chevron",
                attrs: {
                    "icon-name": "chevron-right",
                    width: "10",
                    height: "10",
                    x: "13",
                    y: "23"
                }
            }, [i("BIMDataChevronRightIcon")], 1)], 1), e._v(" "), i("label", [e._v(e._s(e.label))]), e._v(" "), i("span", {
                staticClass: "bar"
            })]), e._v(" "), i("transition", {
                attrs: {
                    name: "slide-fade-down"
                }
            }, [i("ul", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.displayOptions,
                    expression: "displayOptions"
                }, {
                    name: "clickaway",
                    rawName: "v-clickaway",
                    value: e.away,
                    expression: "away"
                }]
            }, e._l(e.options, (function(t, r) {
                return i("li", {
                    key: r,
                    class: {
                        selected: t === e.value
                    },
                    on: {
                        click: function(i) {
                            return e.onOptionClick(t)
                        }
                    }
                }, [e._v(e._s(t))])
            })), 0)])], 1)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-891066f0_0", {
            source: 'select:-webkit-autofill{box-shadow:0 0 0 1000px #fff inset}.bimdata-select__content{width:100%;height:32px;position:relative}.bimdata-select__content .select{height:32px;display:flex;justify-content:space-between;align-items:center;position:absolute;top:0;width:100%;z-index:10}.bimdata-select__content .select:hover{cursor:pointer}.bimdata-select__content .select.active~label{position:absolute;top:-22px;color:#2f374a;font-size:.7142857143em;transform:translateY(12px);transition:.2s ease all}.bimdata-select__content .select.active~.bar:after{width:100%;transition:transform .2s cubic-bezier(.55,0,.55,.2);transform:scaleX(1)}.bimdata-select__content .select.active svg{transform:rotate(90deg)}.bimdata-select__content~ul{padding:calc(12px / 2) 0;width:100%;position:absolute;top:-3px;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);z-index:11}.bimdata-select__content~ul li{padding:0 12px;height:29px;display:flex;align-items:center;cursor:pointer}.bimdata-select__content~ul li.selected{background-color:#d8d8d8}.bimdata-select__content~ul li.selected:hover{background-color:#cbcbcb}.bimdata-select__content~ul li:hover{background-color:#f8f8f8;transition:all ease .2s}.bimdata-select.not-empty label{top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-select label{position:absolute;top:0;left:0;font-size:.8571428571em;transform:translateY(12px);transition:.2s ease all;color:#616060}.bimdata-select .bar{width:100%;height:1px;position:absolute;display:block;background:#d8d8d8;bottom:0}.bimdata-select .bar::after{width:0;height:2px;content:"";display:block;position:absolute;bottom:0;left:0;right:0;background-color:#2f374a;transform:scaleX(0)}',
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataChevronRightIcon: ql
        },
        data: () => ({
            displayOptions: !1
        }),
        directives: {
            clickaway: Pl
        },
        props: {
            options: {
                type: Array,
                default: () => []
            },
            value: {
                type: String,
                default: null
            },
            label: {
                type: String,
                default: null
            }
        },
        methods: {
            onOptionClick(e) {
                this.$emit("option-click", e), this.displayOptions = !this.displayOptions
            },
            away() {
                this.displayOptions = !1
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);

    function ly(e) {
        return (ly = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(e)
    }

    function cy(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
        }
    }

    function hy(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = i, e
    }

    function dy(e) {
        for (var t = 1; t < arguments.length; t++) {
            var i = null != arguments[t] ? arguments[t] : {},
                r = Object.keys(i);
            "function" == typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(i).filter((function(e) {
                return Object.getOwnPropertyDescriptor(i, e).enumerable
            })))), r.forEach((function(t) {
                hy(e, t, i[t])
            }))
        }
        return e
    }
    var uy = new(function() {
            function e(t, i, r, n) {
                ! function(e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.language = t, this.months = i, this.monthsAbbr = r, this.days = n, this.rtl = !1, this.ymd = !1, this.yearSuffix = ""
            }
            var t, i, r;
            return t = e, (i = [{
                key: "language",
                get: function() {
                    return this._language
                },
                set: function(e) {
                    if ("string" != typeof e) throw new TypeError("Language must be a string");
                    this._language = e
                }
            }, {
                key: "months",
                get: function() {
                    return this._months
                },
                set: function(e) {
                    if (12 !== e.length) throw new RangeError("There must be 12 months for ".concat(this.language, " language"));
                    this._months = e
                }
            }, {
                key: "monthsAbbr",
                get: function() {
                    return this._monthsAbbr
                },
                set: function(e) {
                    if (12 !== e.length) throw new RangeError("There must be 12 abbreviated months for ".concat(this.language, " language"));
                    this._monthsAbbr = e
                }
            }, {
                key: "days",
                get: function() {
                    return this._days
                },
                set: function(e) {
                    if (7 !== e.length) throw new RangeError("There must be 7 days for ".concat(this.language, " language"));
                    this._days = e
                }
            }]) && cy(t.prototype, i), r && cy(t, r), e
        }())("English", ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]),
        py = {
            useUtc: !1,
            getFullYear: function(e) {
                return this.useUtc ? e.getUTCFullYear() : e.getFullYear()
            },
            getMonth: function(e) {
                return this.useUtc ? e.getUTCMonth() : e.getMonth()
            },
            getDate: function(e) {
                return this.useUtc ? e.getUTCDate() : e.getDate()
            },
            getDay: function(e) {
                return this.useUtc ? e.getUTCDay() : e.getDay()
            },
            getHours: function(e) {
                return this.useUtc ? e.getUTCHours() : e.getHours()
            },
            getMinutes: function(e) {
                return this.useUtc ? e.getUTCMinutes() : e.getMinutes()
            },
            setFullYear: function(e, t, i) {
                return this.useUtc ? e.setUTCFullYear(t) : e.setFullYear(t)
            },
            setMonth: function(e, t, i) {
                return this.useUtc ? e.setUTCMonth(t) : e.setMonth(t)
            },
            setDate: function(e, t, i) {
                return this.useUtc ? e.setUTCDate(t) : e.setDate(t)
            },
            compareDates: function(e, t) {
                var i = new Date(e.getTime()),
                    r = new Date(t.getTime());
                return this.useUtc ? (i.setUTCHours(0, 0, 0, 0), r.setUTCHours(0, 0, 0, 0)) : (i.setHours(0, 0, 0, 0), r.setHours(0, 0, 0, 0)), i.getTime() === r.getTime()
            },
            isValidDate: function(e) {
                return "[object Date]" === Object.prototype.toString.call(e) && !isNaN(e.getTime())
            },
            getDayNameAbbr: function(e, t) {
                if ("object" !== ly(e)) throw TypeError("Invalid Type");
                return t[this.getDay(e)]
            },
            getMonthName: function(e, t) {
                if (!t) throw Error("missing 2nd parameter Months array");
                if ("object" === ly(e)) return t[this.getMonth(e)];
                if ("number" == typeof e) return t[e];
                throw TypeError("Invalid type")
            },
            getMonthNameAbbr: function(e, t) {
                if (!t) throw Error("missing 2nd paramter Months array");
                if ("object" === ly(e)) return t[this.getMonth(e)];
                if ("number" == typeof e) return t[e];
                throw TypeError("Invalid type")
            },
            daysInMonth: function(e, t) {
                return /8|3|5|10/.test(t) ? 30 : 1 === t ? (e % 4 || !(e % 100)) && e % 400 ? 28 : 29 : 31
            },
            getNthSuffix: function(e) {
                switch (e) {
                    case 1:
                    case 21:
                    case 31:
                        return "st";
                    case 2:
                    case 22:
                        return "nd";
                    case 3:
                    case 23:
                        return "rd";
                    default:
                        return "th"
                }
            },
            formatDate: function(e, t, i) {
                i = i || uy;
                var r = this.getFullYear(e),
                    n = this.getMonth(e) + 1,
                    s = this.getDate(e);
                return t.replace(/dd/, ("0" + s).slice(-2)).replace(/d/, s).replace(/yyyy/, r).replace(/yy/, String(r).slice(2)).replace(/MMMM/, this.getMonthName(this.getMonth(e), i.months)).replace(/MMM/, this.getMonthNameAbbr(this.getMonth(e), i.monthsAbbr)).replace(/MM/, ("0" + n).slice(-2)).replace(/M(?!a|ä|e)/, n).replace(/su/, this.getNthSuffix(this.getDate(e))).replace(/D(?!e|é|i)/, this.getDayNameAbbr(e, i.days))
            },
            createDateArray: function(e, t) {
                for (var i = []; e <= t;) i.push(new Date(e)), e = this.setDate(new Date(e), this.getDate(new Date(e)) + 1);
                return i
            },
            validateDateInput: function(e) {
                return null === e || e instanceof Date || "string" == typeof e || "number" == typeof e
            }
        },
        fy = function(e) {
            return dy({}, py, {
                useUtc: e
            })
        },
        _y = dy({}, py);
    var my = function(e, t, i, r, n, s, o, a, l, c) {
        "boolean" != typeof o && (l = a, a = o, o = !1);
        var h, d = "function" == typeof i ? i.options : i;
        if (e && e.render && (d.render = e.render, d.staticRenderFns = e.staticRenderFns, d._compiled = !0, n && (d.functional = !0)), r && (d._scopeId = r), s ? (h = function(e) {
                (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), t && t.call(this, l(e)), e && e._registeredComponents && e._registeredComponents.add(s)
            }, d._ssrRegister = h) : t && (h = o ? function() {
                t.call(this, c(this.$root.$options.shadowRoot))
            } : function(e) {
                t.call(this, a(e))
            }), h)
            if (d.functional) {
                var u = d.render;
                d.render = function(e, t) {
                    return h.call(t), u(e, t)
                }
            } else {
                var p = d.beforeCreate;
                d.beforeCreate = p ? [].concat(p, h) : [h]
            } return i
    };
    const gy = {
        props: {
            selectedDate: Date,
            resetTypedDate: [Date],
            format: [String, Function],
            translation: Object,
            inline: Boolean,
            id: String,
            name: String,
            refName: String,
            openDate: Date,
            placeholder: String,
            inputClass: [String, Object, Array],
            clearButton: Boolean,
            clearButtonIcon: String,
            calendarButton: Boolean,
            calendarButtonIcon: String,
            calendarButtonIconContent: String,
            disabled: Boolean,
            required: Boolean,
            typeable: Boolean,
            bootstrapStyling: Boolean,
            useUtc: Boolean
        },
        data: function() {
            return {
                input: null,
                typedDate: !1,
                utils: fy(this.useUtc)
            }
        },
        computed: {
            formattedValue: function() {
                return this.selectedDate ? this.typedDate ? this.typedDate : "function" == typeof this.format ? this.format(this.selectedDate) : this.utils.formatDate(new Date(this.selectedDate), this.format, this.translation) : null
            },
            computedInputClass: function() {
                return this.bootstrapStyling ? "string" == typeof this.inputClass ? [this.inputClass, "form-control"].join(" ") : dy({
                    "form-control": !0
                }, this.inputClass) : this.inputClass
            }
        },
        watch: {
            resetTypedDate: function() {
                this.typedDate = !1
            }
        },
        methods: {
            showCalendar: function() {
                this.$emit("showCalendar")
            },
            parseTypedDate: function(e) {
                if ([27, 13].includes(e.keyCode) && this.input.blur(), this.typeable) {
                    var t = Date.parse(this.input.value);
                    isNaN(t) || (this.typedDate = this.input.value, this.$emit("typedDate", new Date(this.typedDate)))
                }
            },
            inputBlurred: function() {
                this.typeable && isNaN(Date.parse(this.input.value)) && (this.clearDate(), this.input.value = null, this.typedDate = null), this.$emit("closeCalendar")
            },
            clearDate: function() {
                this.$emit("clearDate")
            }
        },
        mounted: function() {
            this.input = this.$el.querySelector("input")
        }
    };
    var vy = function() {
        var e = this,
            t = e.$createElement,
            i = e._self._c || t;
        return i("div", {
            class: {
                "input-group": e.bootstrapStyling
            }
        }, [e.calendarButton ? i("span", {
            staticClass: "vdp-datepicker__calendar-button",
            class: {
                "input-group-prepend": e.bootstrapStyling
            },
            style: {
                "cursor:not-allowed;": e.disabled
            },
            on: {
                click: e.showCalendar
            }
        }, [i("span", {
            class: {
                "input-group-text": e.bootstrapStyling
            }
        }, [i("i", {
            class: e.calendarButtonIcon
        }, [e._v("\n        " + e._s(e.calendarButtonIconContent) + "\n        "), e.calendarButtonIcon ? e._e() : i("span", [e._v("…")])])])]) : e._e(), e._v(" "), i("input", {
            ref: e.refName,
            class: e.computedInputClass,
            attrs: {
                type: e.inline ? "hidden" : "text",
                name: e.name,
                id: e.id,
                "open-date": e.openDate,
                placeholder: e.placeholder,
                "clear-button": e.clearButton,
                disabled: e.disabled,
                required: e.required,
                readonly: !e.typeable,
                autocomplete: "off"
            },
            domProps: {
                value: e.formattedValue
            },
            on: {
                click: e.showCalendar,
                keyup: e.parseTypedDate,
                blur: e.inputBlurred
            }
        }), e._v(" "), e.clearButton && e.selectedDate ? i("span", {
            staticClass: "vdp-datepicker__clear-button",
            class: {
                "input-group-append": e.bootstrapStyling
            },
            on: {
                click: function(t) {
                    return e.clearDate()
                }
            }
        }, [i("span", {
            class: {
                "input-group-text": e.bootstrapStyling
            }
        }, [i("i", {
            class: e.clearButtonIcon
        }, [e.clearButtonIcon ? e._e() : i("span", [e._v("×")])])])]) : e._e(), e._v(" "), e._t("afterDateInput")], 2)
    };
    vy._withStripped = !0;
    var by = my({
        render: vy,
        staticRenderFns: []
    }, void 0, gy, void 0, !1, void 0, void 0, void 0);
    const yy = {
        props: {
            showDayView: Boolean,
            selectedDate: Date,
            pageDate: Date,
            pageTimestamp: Number,
            fullMonthName: Boolean,
            allowedToShowView: Function,
            dayCellContent: {
                type: Function,
                default: function(e) {
                    return e.date
                }
            },
            disabledDates: Object,
            highlighted: Object,
            calendarClass: [String, Object, Array],
            calendarStyle: Object,
            translation: Object,
            isRtl: Boolean,
            mondayFirst: Boolean,
            useUtc: Boolean
        },
        data: function() {
            return {
                utils: fy(this.useUtc)
            }
        },
        computed: {
            daysOfWeek: function() {
                if (this.mondayFirst) {
                    var e = this.translation.days.slice();
                    return e.push(e.shift()), e
                }
                return this.translation.days
            },
            blankDays: function() {
                var e = this.pageDate,
                    t = this.useUtc ? new Date(Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), 1)) : new Date(e.getFullYear(), e.getMonth(), 1, e.getHours(), e.getMinutes());
                return this.mondayFirst ? this.utils.getDay(t) > 0 ? this.utils.getDay(t) - 1 : 6 : this.utils.getDay(t)
            },
            days: function() {
                for (var e = this.pageDate, t = [], i = this.useUtc ? new Date(Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), 1)) : new Date(e.getFullYear(), e.getMonth(), 1, e.getHours(), e.getMinutes()), r = this.utils.daysInMonth(this.utils.getFullYear(i), this.utils.getMonth(i)), n = 0; n < r; n++) t.push({
                    date: this.utils.getDate(i),
                    timestamp: i.getTime(),
                    isSelected: this.isSelectedDate(i),
                    isDisabled: this.isDisabledDate(i),
                    isHighlighted: this.isHighlightedDate(i),
                    isHighlightStart: this.isHighlightStart(i),
                    isHighlightEnd: this.isHighlightEnd(i),
                    isToday: this.utils.compareDates(i, new Date),
                    isWeekend: 0 === this.utils.getDay(i) || 6 === this.utils.getDay(i),
                    isSaturday: 6 === this.utils.getDay(i),
                    isSunday: 0 === this.utils.getDay(i)
                }), this.utils.setDate(i, this.utils.getDate(i) + 1);
                return t
            },
            currMonthName: function() {
                var e = this.fullMonthName ? this.translation.months : this.translation.monthsAbbr;
                return this.utils.getMonthNameAbbr(this.utils.getMonth(this.pageDate), e)
            },
            currYearName: function() {
                var e = this.translation.yearSuffix;
                return "".concat(this.utils.getFullYear(this.pageDate)).concat(e)
            },
            isYmd: function() {
                return this.translation.ymd && !0 === this.translation.ymd
            },
            isLeftNavDisabled: function() {
                return this.isRtl ? this.isNextMonthDisabled(this.pageTimestamp) : this.isPreviousMonthDisabled(this.pageTimestamp)
            },
            isRightNavDisabled: function() {
                return this.isRtl ? this.isPreviousMonthDisabled(this.pageTimestamp) : this.isNextMonthDisabled(this.pageTimestamp)
            }
        },
        methods: {
            selectDate: function(e) {
                if (e.isDisabled) return this.$emit("selectedDisabled", e), !1;
                this.$emit("selectDate", e)
            },
            getPageMonth: function() {
                return this.utils.getMonth(this.pageDate)
            },
            showMonthCalendar: function() {
                this.$emit("showMonthCalendar")
            },
            changeMonth: function(e) {
                var t = this.pageDate;
                this.utils.setMonth(t, this.utils.getMonth(t) + e), this.$emit("changedMonth", t)
            },
            previousMonth: function() {
                this.isPreviousMonthDisabled() || this.changeMonth(-1)
            },
            isPreviousMonthDisabled: function() {
                if (!this.disabledDates || !this.disabledDates.to) return !1;
                var e = this.pageDate;
                return this.utils.getMonth(this.disabledDates.to) >= this.utils.getMonth(e) && this.utils.getFullYear(this.disabledDates.to) >= this.utils.getFullYear(e)
            },
            nextMonth: function() {
                this.isNextMonthDisabled() || this.changeMonth(1)
            },
            isNextMonthDisabled: function() {
                if (!this.disabledDates || !this.disabledDates.from) return !1;
                var e = this.pageDate;
                return this.utils.getMonth(this.disabledDates.from) <= this.utils.getMonth(e) && this.utils.getFullYear(this.disabledDates.from) <= this.utils.getFullYear(e)
            },
            isSelectedDate: function(e) {
                return this.selectedDate && this.utils.compareDates(this.selectedDate, e)
            },
            isDisabledDate: function(e) {
                var t = this,
                    i = !1;
                return void 0 !== this.disabledDates && (void 0 !== this.disabledDates.dates && this.disabledDates.dates.forEach((function(r) {
                    if (t.utils.compareDates(e, r)) return i = !0, !0
                })), void 0 !== this.disabledDates.to && this.disabledDates.to && e < this.disabledDates.to && (i = !0), void 0 !== this.disabledDates.from && this.disabledDates.from && e > this.disabledDates.from && (i = !0), void 0 !== this.disabledDates.ranges && this.disabledDates.ranges.forEach((function(t) {
                    if (void 0 !== t.from && t.from && void 0 !== t.to && t.to && e < t.to && e > t.from) return i = !0, !0
                })), void 0 !== this.disabledDates.days && -1 !== this.disabledDates.days.indexOf(this.utils.getDay(e)) && (i = !0), void 0 !== this.disabledDates.daysOfMonth && -1 !== this.disabledDates.daysOfMonth.indexOf(this.utils.getDate(e)) && (i = !0), "function" == typeof this.disabledDates.customPredictor && this.disabledDates.customPredictor(e) && (i = !0), i)
            },
            isHighlightedDate: function(e) {
                var t = this;
                if ((!this.highlighted || !this.highlighted.includeDisabled) && this.isDisabledDate(e)) return !1;
                var i = !1;
                return void 0 !== this.highlighted && (void 0 !== this.highlighted.dates && this.highlighted.dates.forEach((function(r) {
                    if (t.utils.compareDates(e, r)) return i = !0, !0
                })), this.isDefined(this.highlighted.from) && this.isDefined(this.highlighted.to) && (i = e >= this.highlighted.from && e <= this.highlighted.to), void 0 !== this.highlighted.days && -1 !== this.highlighted.days.indexOf(this.utils.getDay(e)) && (i = !0), void 0 !== this.highlighted.daysOfMonth && -1 !== this.highlighted.daysOfMonth.indexOf(this.utils.getDate(e)) && (i = !0), "function" == typeof this.highlighted.customPredictor && this.highlighted.customPredictor(e) && (i = !0), i)
            },
            dayClasses: function(e) {
                return {
                    selected: e.isSelected,
                    disabled: e.isDisabled,
                    highlighted: e.isHighlighted,
                    today: e.isToday,
                    weekend: e.isWeekend,
                    sat: e.isSaturday,
                    sun: e.isSunday,
                    "highlight-start": e.isHighlightStart,
                    "highlight-end": e.isHighlightEnd
                }
            },
            isHighlightStart: function(e) {
                return this.isHighlightedDate(e) && this.highlighted.from instanceof Date && this.utils.getFullYear(this.highlighted.from) === this.utils.getFullYear(e) && this.utils.getMonth(this.highlighted.from) === this.utils.getMonth(e) && this.utils.getDate(this.highlighted.from) === this.utils.getDate(e)
            },
            isHighlightEnd: function(e) {
                return this.isHighlightedDate(e) && this.highlighted.to instanceof Date && this.utils.getFullYear(this.highlighted.to) === this.utils.getFullYear(e) && this.utils.getMonth(this.highlighted.to) === this.utils.getMonth(e) && this.utils.getDate(this.highlighted.to) === this.utils.getDate(e)
            },
            isDefined: function(e) {
                return void 0 !== e && e
            }
        }
    };
    var wy = function() {
        var e = this,
            t = e.$createElement,
            i = e._self._c || t;
        return i("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.showDayView,
                expression: "showDayView"
            }],
            class: [e.calendarClass, "vdp-datepicker__calendar"],
            style: e.calendarStyle,
            on: {
                mousedown: function(e) {
                    e.preventDefault()
                }
            }
        }, [e._t("beforeCalendarHeader"), e._v(" "), i("header", [i("span", {
            staticClass: "prev",
            class: {
                disabled: e.isLeftNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.nextMonth() : e.previousMonth()
                }
            }
        }, [e._v("<")]), e._v(" "), i("span", {
            staticClass: "day__month_btn",
            class: e.allowedToShowView("month") ? "up" : "",
            on: {
                click: e.showMonthCalendar
            }
        }, [e._v(e._s(e.isYmd ? e.currYearName : e.currMonthName) + " " + e._s(e.isYmd ? e.currMonthName : e.currYearName))]), e._v(" "), i("span", {
            staticClass: "next",
            class: {
                disabled: e.isRightNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.previousMonth() : e.nextMonth()
                }
            }
        }, [e._v(">")])]), e._v(" "), i("div", {
            class: e.isRtl ? "flex-rtl" : ""
        }, [e._l(e.daysOfWeek, (function(t) {
            return i("span", {
                key: t.timestamp,
                staticClass: "cell day-header"
            }, [e._v(e._s(t))])
        })), e._v(" "), e.blankDays > 0 ? e._l(e.blankDays, (function(e) {
            return i("span", {
                key: e.timestamp,
                staticClass: "cell day blank"
            })
        })) : e._e(), e._l(e.days, (function(t) {
            return i("span", {
                key: t.timestamp,
                staticClass: "cell day",
                class: e.dayClasses(t),
                domProps: {
                    innerHTML: e._s(e.dayCellContent(t))
                },
                on: {
                    click: function(i) {
                        return e.selectDate(t)
                    }
                }
            })
        }))], 2)], 2)
    };
    wy._withStripped = !0;
    var My = my({
        render: wy,
        staticRenderFns: []
    }, void 0, yy, void 0, !1, void 0, void 0, void 0);
    const Ay = {
        props: {
            showMonthView: Boolean,
            selectedDate: Date,
            pageDate: Date,
            pageTimestamp: Number,
            disabledDates: Object,
            calendarClass: [String, Object, Array],
            calendarStyle: Object,
            translation: Object,
            isRtl: Boolean,
            allowedToShowView: Function,
            useUtc: Boolean
        },
        data: function() {
            return {
                utils: fy(this.useUtc)
            }
        },
        computed: {
            months: function() {
                for (var e = this.pageDate, t = [], i = this.useUtc ? new Date(Date.UTC(e.getUTCFullYear(), 0, e.getUTCDate())) : new Date(e.getFullYear(), 0, e.getDate(), e.getHours(), e.getMinutes()), r = 0; r < 12; r++) t.push({
                    month: this.utils.getMonthName(r, this.translation.months),
                    timestamp: i.getTime(),
                    isSelected: this.isSelectedMonth(i),
                    isDisabled: this.isDisabledMonth(i)
                }), this.utils.setMonth(i, this.utils.getMonth(i) + 1);
                return t
            },
            pageYearName: function() {
                var e = this.translation.yearSuffix;
                return "".concat(this.utils.getFullYear(this.pageDate)).concat(e)
            },
            isLeftNavDisabled: function() {
                return this.isRtl ? this.isNextYearDisabled(this.pageTimestamp) : this.isPreviousYearDisabled(this.pageTimestamp)
            },
            isRightNavDisabled: function() {
                return this.isRtl ? this.isPreviousYearDisabled(this.pageTimestamp) : this.isNextYearDisabled(this.pageTimestamp)
            }
        },
        methods: {
            selectMonth: function(e) {
                if (e.isDisabled) return !1;
                this.$emit("selectMonth", e)
            },
            changeYear: function(e) {
                var t = this.pageDate;
                this.utils.setFullYear(t, this.utils.getFullYear(t) + e), this.$emit("changedYear", t)
            },
            previousYear: function() {
                this.isPreviousYearDisabled() || this.changeYear(-1)
            },
            isPreviousYearDisabled: function() {
                return !(!this.disabledDates || !this.disabledDates.to) && this.utils.getFullYear(this.disabledDates.to) >= this.utils.getFullYear(this.pageDate)
            },
            nextYear: function() {
                this.isNextYearDisabled() || this.changeYear(1)
            },
            isNextYearDisabled: function() {
                return !(!this.disabledDates || !this.disabledDates.from) && this.utils.getFullYear(this.disabledDates.from) <= this.utils.getFullYear(this.pageDate)
            },
            showYearCalendar: function() {
                this.$emit("showYearCalendar")
            },
            isSelectedMonth: function(e) {
                return this.selectedDate && this.utils.getFullYear(this.selectedDate) === this.utils.getFullYear(e) && this.utils.getMonth(this.selectedDate) === this.utils.getMonth(e)
            },
            isDisabledMonth: function(e) {
                var t = !1;
                return void 0 !== this.disabledDates && (void 0 !== this.disabledDates.to && this.disabledDates.to && (this.utils.getMonth(e) < this.utils.getMonth(this.disabledDates.to) && this.utils.getFullYear(e) <= this.utils.getFullYear(this.disabledDates.to) || this.utils.getFullYear(e) < this.utils.getFullYear(this.disabledDates.to)) && (t = !0), void 0 !== this.disabledDates.from && this.disabledDates.from && (this.utils.getMonth(e) > this.utils.getMonth(this.disabledDates.from) && this.utils.getFullYear(e) >= this.utils.getFullYear(this.disabledDates.from) || this.utils.getFullYear(e) > this.utils.getFullYear(this.disabledDates.from)) && (t = !0), "function" == typeof this.disabledDates.customPredictor && this.disabledDates.customPredictor(e) && (t = !0), t)
            }
        }
    };
    var xy = function() {
        var e = this,
            t = e.$createElement,
            i = e._self._c || t;
        return i("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.showMonthView,
                expression: "showMonthView"
            }],
            class: [e.calendarClass, "vdp-datepicker__calendar"],
            style: e.calendarStyle,
            on: {
                mousedown: function(e) {
                    e.preventDefault()
                }
            }
        }, [e._t("beforeCalendarHeader"), e._v(" "), i("header", [i("span", {
            staticClass: "prev",
            class: {
                disabled: e.isLeftNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.nextYear() : e.previousYear()
                }
            }
        }, [e._v("<")]), e._v(" "), i("span", {
            staticClass: "month__year_btn",
            class: e.allowedToShowView("year") ? "up" : "",
            on: {
                click: e.showYearCalendar
            }
        }, [e._v(e._s(e.pageYearName))]), e._v(" "), i("span", {
            staticClass: "next",
            class: {
                disabled: e.isRightNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.previousYear() : e.nextYear()
                }
            }
        }, [e._v(">")])]), e._v(" "), e._l(e.months, (function(t) {
            return i("span", {
                key: t.timestamp,
                staticClass: "cell month",
                class: {
                    selected: t.isSelected, disabled: t.isDisabled
                },
                on: {
                    click: function(i) {
                        return i.stopPropagation(), e.selectMonth(t)
                    }
                }
            }, [e._v(e._s(t.month))])
        }))], 2)
    };
    xy._withStripped = !0;
    var Cy = my({
        render: xy,
        staticRenderFns: []
    }, void 0, Ay, void 0, !1, void 0, void 0, void 0);
    const Py = {
        props: {
            showYearView: Boolean,
            selectedDate: Date,
            pageDate: Date,
            pageTimestamp: Number,
            disabledDates: Object,
            highlighted: Object,
            calendarClass: [String, Object, Array],
            calendarStyle: Object,
            translation: Object,
            isRtl: Boolean,
            allowedToShowView: Function,
            useUtc: Boolean
        },
        computed: {
            years: function() {
                for (var e = this.pageDate, t = [], i = this.useUtc ? new Date(Date.UTC(10 * Math.floor(e.getUTCFullYear() / 10), e.getUTCMonth(), e.getUTCDate())) : new Date(10 * Math.floor(e.getFullYear() / 10), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes()), r = 0; r < 10; r++) t.push({
                    year: this.utils.getFullYear(i),
                    timestamp: i.getTime(),
                    isSelected: this.isSelectedYear(i),
                    isDisabled: this.isDisabledYear(i)
                }), this.utils.setFullYear(i, this.utils.getFullYear(i) + 1);
                return t
            },
            getPageDecade: function() {
                var e = 10 * Math.floor(this.utils.getFullYear(this.pageDate) / 10),
                    t = e + 9,
                    i = this.translation.yearSuffix;
                return "".concat(e, " - ").concat(t).concat(i)
            },
            isLeftNavDisabled: function() {
                return this.isRtl ? this.isNextDecadeDisabled(this.pageTimestamp) : this.isPreviousDecadeDisabled(this.pageTimestamp)
            },
            isRightNavDisabled: function() {
                return this.isRtl ? this.isPreviousDecadeDisabled(this.pageTimestamp) : this.isNextDecadeDisabled(this.pageTimestamp)
            }
        },
        data: function() {
            return {
                utils: fy(this.useUtc)
            }
        },
        methods: {
            selectYear: function(e) {
                if (e.isDisabled) return !1;
                this.$emit("selectYear", e)
            },
            changeYear: function(e) {
                var t = this.pageDate;
                this.utils.setFullYear(t, this.utils.getFullYear(t) + e), this.$emit("changedDecade", t)
            },
            previousDecade: function() {
                if (this.isPreviousDecadeDisabled()) return !1;
                this.changeYear(-10)
            },
            isPreviousDecadeDisabled: function() {
                return !(!this.disabledDates || !this.disabledDates.to) && this.utils.getFullYear(this.disabledDates.to) > 10 * Math.floor(this.utils.getFullYear(this.pageDate) / 10) - 1
            },
            nextDecade: function() {
                if (this.isNextDecadeDisabled()) return !1;
                this.changeYear(10)
            },
            isNextDecadeDisabled: function() {
                return !(!this.disabledDates || !this.disabledDates.from) && this.utils.getFullYear(this.disabledDates.from) < 10 * Math.ceil(this.utils.getFullYear(this.pageDate) / 10)
            },
            isSelectedYear: function(e) {
                return this.selectedDate && this.utils.getFullYear(this.selectedDate) === this.utils.getFullYear(e)
            },
            isDisabledYear: function(e) {
                var t = !1;
                return !(void 0 === this.disabledDates || !this.disabledDates) && (void 0 !== this.disabledDates.to && this.disabledDates.to && this.utils.getFullYear(e) < this.utils.getFullYear(this.disabledDates.to) && (t = !0), void 0 !== this.disabledDates.from && this.disabledDates.from && this.utils.getFullYear(e) > this.utils.getFullYear(this.disabledDates.from) && (t = !0), "function" == typeof this.disabledDates.customPredictor && this.disabledDates.customPredictor(e) && (t = !0), t)
            }
        }
    };
    var ky = function() {
        var e = this,
            t = e.$createElement,
            i = e._self._c || t;
        return i("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.showYearView,
                expression: "showYearView"
            }],
            class: [e.calendarClass, "vdp-datepicker__calendar"],
            style: e.calendarStyle,
            on: {
                mousedown: function(e) {
                    e.preventDefault()
                }
            }
        }, [e._t("beforeCalendarHeader"), e._v(" "), i("header", [i("span", {
            staticClass: "prev",
            class: {
                disabled: e.isLeftNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.nextDecade() : e.previousDecade()
                }
            }
        }, [e._v("<")]), e._v(" "), i("span", [e._v(e._s(e.getPageDecade))]), e._v(" "), i("span", {
            staticClass: "next",
            class: {
                disabled: e.isRightNavDisabled
            },
            on: {
                click: function(t) {
                    e.isRtl ? e.previousDecade() : e.nextDecade()
                }
            }
        }, [e._v(">")])]), e._v(" "), e._l(e.years, (function(t) {
            return i("span", {
                key: t.timestamp,
                staticClass: "cell year",
                class: {
                    selected: t.isSelected, disabled: t.isDisabled
                },
                on: {
                    click: function(i) {
                        return i.stopPropagation(), e.selectYear(t)
                    }
                }
            }, [e._v(e._s(t.year))])
        }))], 2)
    };
    ky._withStripped = !0;
    var Ey = {
            components: {
                DateInput: by,
                PickerDay: My,
                PickerMonth: Cy,
                PickerYear: my({
                    render: ky,
                    staticRenderFns: []
                }, void 0, Py, void 0, !1, void 0, void 0, void 0)
            },
            props: {
                value: {
                    validator: function(e) {
                        return _y.validateDateInput(e)
                    }
                },
                name: String,
                refName: String,
                id: String,
                format: {
                    type: [String, Function],
                    default: "dd MMM yyyy"
                },
                language: {
                    type: Object,
                    default: function() {
                        return uy
                    }
                },
                openDate: {
                    validator: function(e) {
                        return _y.validateDateInput(e)
                    }
                },
                dayCellContent: Function,
                fullMonthName: Boolean,
                disabledDates: Object,
                highlighted: Object,
                placeholder: String,
                inline: Boolean,
                calendarClass: [String, Object, Array],
                inputClass: [String, Object, Array],
                wrapperClass: [String, Object, Array],
                mondayFirst: Boolean,
                clearButton: Boolean,
                clearButtonIcon: String,
                calendarButton: Boolean,
                calendarButtonIcon: String,
                calendarButtonIconContent: String,
                bootstrapStyling: Boolean,
                initialView: String,
                disabled: Boolean,
                required: Boolean,
                typeable: Boolean,
                useUtc: Boolean,
                minimumView: {
                    type: String,
                    default: "day"
                },
                maximumView: {
                    type: String,
                    default: "year"
                }
            },
            data: function() {
                var e = this.openDate ? new Date(this.openDate) : new Date,
                    t = fy(this.useUtc);
                return {
                    pageTimestamp: t.setDate(e, 1),
                    selectedDate: null,
                    showDayView: !1,
                    showMonthView: !1,
                    showYearView: !1,
                    calendarHeight: 0,
                    resetTypedDate: new Date,
                    utils: t
                }
            },
            watch: {
                value: function(e) {
                    this.setValue(e)
                },
                openDate: function() {
                    this.setPageDate()
                },
                initialView: function() {
                    this.setInitialView()
                }
            },
            computed: {
                computedInitialView: function() {
                    return this.initialView ? this.initialView : this.minimumView
                },
                pageDate: function() {
                    return new Date(this.pageTimestamp)
                },
                translation: function() {
                    return this.language
                },
                calendarStyle: function() {
                    return {
                        position: this.isInline ? "static" : void 0
                    }
                },
                isOpen: function() {
                    return this.showDayView || this.showMonthView || this.showYearView
                },
                isInline: function() {
                    return !!this.inline
                },
                isRtl: function() {
                    return !0 === this.translation.rtl
                }
            },
            methods: {
                resetDefaultPageDate: function() {
                    null !== this.selectedDate ? this.setPageDate(this.selectedDate) : this.setPageDate()
                },
                showCalendar: function() {
                    return !this.disabled && !this.isInline && (this.isOpen ? this.close(!0) : void this.setInitialView())
                },
                setInitialView: function() {
                    var e = this.computedInitialView;
                    if (!this.allowedToShowView(e)) throw new Error("initialView '".concat(this.initialView, "' cannot be rendered based on minimum '").concat(this.minimumView, "' and maximum '").concat(this.maximumView, "'"));
                    switch (e) {
                        case "year":
                            this.showYearCalendar();
                            break;
                        case "month":
                            this.showMonthCalendar();
                            break;
                        default:
                            this.showDayCalendar()
                    }
                },
                allowedToShowView: function(e) {
                    var t = ["day", "month", "year"],
                        i = t.indexOf(this.minimumView),
                        r = t.indexOf(this.maximumView),
                        n = t.indexOf(e);
                    return n >= i && n <= r
                },
                showDayCalendar: function() {
                    return !!this.allowedToShowView("day") && (this.close(), this.showDayView = !0, !0)
                },
                showMonthCalendar: function() {
                    return !!this.allowedToShowView("month") && (this.close(), this.showMonthView = !0, !0)
                },
                showYearCalendar: function() {
                    return !!this.allowedToShowView("year") && (this.close(), this.showYearView = !0, !0)
                },
                setDate: function(e) {
                    var t = new Date(e);
                    this.selectedDate = t, this.setPageDate(t), this.$emit("selected", t), this.$emit("input", t)
                },
                clearDate: function() {
                    this.selectedDate = null, this.setPageDate(), this.$emit("selected", null), this.$emit("input", null), this.$emit("cleared")
                },
                selectDate: function(e) {
                    this.setDate(e.timestamp), this.isInline || this.close(!0), this.resetTypedDate = new Date
                },
                selectDisabledDate: function(e) {
                    this.$emit("selectedDisabled", e)
                },
                selectMonth: function(e) {
                    var t = new Date(e.timestamp);
                    this.allowedToShowView("day") ? (this.setPageDate(t), this.$emit("changedMonth", e), this.showDayCalendar()) : this.selectDate(e)
                },
                selectYear: function(e) {
                    var t = new Date(e.timestamp);
                    this.allowedToShowView("month") ? (this.setPageDate(t), this.$emit("changedYear", e), this.showMonthCalendar()) : this.selectDate(e)
                },
                setValue: function(e) {
                    if ("string" == typeof e || "number" == typeof e) {
                        var t = new Date(e);
                        e = isNaN(t.valueOf()) ? null : t
                    }
                    if (!e) return this.setPageDate(), void(this.selectedDate = null);
                    this.selectedDate = e, this.setPageDate(e)
                },
                setPageDate: function(e) {
                    e || (e = this.openDate ? new Date(this.openDate) : new Date), this.pageTimestamp = this.utils.setDate(new Date(e), 1)
                },
                handleChangedMonthFromDayPicker: function(e) {
                    this.setPageDate(e), this.$emit("changedMonth", e)
                },
                setTypedDate: function(e) {
                    this.setDate(e.getTime())
                },
                close: function(e) {
                    this.showDayView = this.showMonthView = this.showYearView = !1, this.isInline || (e && this.$emit("closed"), document.removeEventListener("click", this.clickOutside, !1))
                },
                init: function() {
                    this.value && this.setValue(this.value), this.isInline && this.setInitialView()
                }
            },
            mounted: function() {
                this.init()
            }
        },
        Iy = "undefined" != typeof navigator && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
    var Ty = document.head || document.getElementsByTagName("head")[0],
        Dy = {};
    var Sy = function(e) {
        return function(e, t) {
            return function(e, t) {
                var i = Iy ? t.media || "default" : e,
                    r = Dy[i] || (Dy[i] = {
                        ids: new Set,
                        styles: []
                    });
                if (!r.ids.has(e)) {
                    r.ids.add(e);
                    var n = t.source;
                    if (t.map && (n += "\n/*# sourceURL=" + t.map.sources[0] + " */", n += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(t.map)))) + " */"), r.element || (r.element = document.createElement("style"), r.element.type = "text/css", t.media && r.element.setAttribute("media", t.media), Ty.appendChild(r.element)), "styleSheet" in r.element) r.styles.push(n), r.element.styleSheet.cssText = r.styles.filter(Boolean).join("\n");
                    else {
                        var s = r.ids.size - 1,
                            o = document.createTextNode(n),
                            a = r.element.childNodes;
                        a[s] && r.element.removeChild(a[s]), a.length ? r.element.insertBefore(o, a[s]) : r.element.appendChild(o)
                    }
                }
            }(e, t)
        }
    };
    const By = Ey;
    var jy = function() {
        var e = this,
            t = e.$createElement,
            i = e._self._c || t;
        return i("div", {
            staticClass: "vdp-datepicker",
            class: [e.wrapperClass, e.isRtl ? "rtl" : ""]
        }, [i("date-input", {
            attrs: {
                selectedDate: e.selectedDate,
                resetTypedDate: e.resetTypedDate,
                format: e.format,
                translation: e.translation,
                inline: e.inline,
                id: e.id,
                name: e.name,
                refName: e.refName,
                openDate: e.openDate,
                placeholder: e.placeholder,
                inputClass: e.inputClass,
                typeable: e.typeable,
                clearButton: e.clearButton,
                clearButtonIcon: e.clearButtonIcon,
                calendarButton: e.calendarButton,
                calendarButtonIcon: e.calendarButtonIcon,
                calendarButtonIconContent: e.calendarButtonIconContent,
                disabled: e.disabled,
                required: e.required,
                bootstrapStyling: e.bootstrapStyling,
                "use-utc": e.useUtc
            },
            on: {
                showCalendar: e.showCalendar,
                closeCalendar: e.close,
                typedDate: e.setTypedDate,
                clearDate: e.clearDate
            }
        }, [e._t("afterDateInput", null, {
            slot: "afterDateInput"
        })], 2), e._v(" "), e.allowedToShowView("day") ? i("picker-day", {
            attrs: {
                pageDate: e.pageDate,
                selectedDate: e.selectedDate,
                showDayView: e.showDayView,
                fullMonthName: e.fullMonthName,
                allowedToShowView: e.allowedToShowView,
                disabledDates: e.disabledDates,
                highlighted: e.highlighted,
                calendarClass: e.calendarClass,
                calendarStyle: e.calendarStyle,
                translation: e.translation,
                pageTimestamp: e.pageTimestamp,
                isRtl: e.isRtl,
                mondayFirst: e.mondayFirst,
                dayCellContent: e.dayCellContent,
                "use-utc": e.useUtc
            },
            on: {
                changedMonth: e.handleChangedMonthFromDayPicker,
                selectDate: e.selectDate,
                showMonthCalendar: e.showMonthCalendar,
                selectedDisabled: e.selectDisabledDate
            }
        }, [e._t("beforeCalendarHeader", null, {
            slot: "beforeCalendarHeader"
        })], 2) : e._e(), e._v(" "), e.allowedToShowView("month") ? i("picker-month", {
            attrs: {
                pageDate: e.pageDate,
                selectedDate: e.selectedDate,
                showMonthView: e.showMonthView,
                allowedToShowView: e.allowedToShowView,
                disabledDates: e.disabledDates,
                calendarClass: e.calendarClass,
                calendarStyle: e.calendarStyle,
                translation: e.translation,
                isRtl: e.isRtl,
                "use-utc": e.useUtc
            },
            on: {
                selectMonth: e.selectMonth,
                showYearCalendar: e.showYearCalendar,
                changedYear: e.setPageDate
            }
        }, [e._t("beforeCalendarHeader", null, {
            slot: "beforeCalendarHeader"
        })], 2) : e._e(), e._v(" "), e.allowedToShowView("year") ? i("picker-year", {
            attrs: {
                pageDate: e.pageDate,
                selectedDate: e.selectedDate,
                showYearView: e.showYearView,
                allowedToShowView: e.allowedToShowView,
                disabledDates: e.disabledDates,
                calendarClass: e.calendarClass,
                calendarStyle: e.calendarStyle,
                translation: e.translation,
                isRtl: e.isRtl,
                "use-utc": e.useUtc
            },
            on: {
                selectYear: e.selectYear,
                changedDecade: e.setPageDate
            }
        }, [e._t("beforeCalendarHeader", null, {
            slot: "beforeCalendarHeader"
        })], 2) : e._e()], 1)
    };
    jy._withStripped = !0;
    var Ly = my({
        render: jy,
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-64ca2bb5_0", {
            source: ".rtl {\n  direction: rtl;\n}\n.vdp-datepicker {\n  position: relative;\n  text-align: left;\n}\n.vdp-datepicker * {\n  box-sizing: border-box;\n}\n.vdp-datepicker__calendar {\n  position: absolute;\n  z-index: 100;\n  background: #fff;\n  width: 300px;\n  border: 1px solid #ccc;\n}\n.vdp-datepicker__calendar header {\n  display: block;\n  line-height: 40px;\n}\n.vdp-datepicker__calendar header span {\n  display: inline-block;\n  text-align: center;\n  width: 71.42857142857143%;\n  float: left;\n}\n.vdp-datepicker__calendar header .prev,\n.vdp-datepicker__calendar header .next {\n  width: 14.285714285714286%;\n  float: left;\n  text-indent: -10000px;\n  position: relative;\n}\n.vdp-datepicker__calendar header .prev:after,\n.vdp-datepicker__calendar header .next:after {\n  content: '';\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  border: 6px solid transparent;\n}\n.vdp-datepicker__calendar header .prev:after {\n  border-right: 10px solid #000;\n  margin-left: -5px;\n}\n.vdp-datepicker__calendar header .prev.disabled:after {\n  border-right: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .next:after {\n  border-left: 10px solid #000;\n  margin-left: 5px;\n}\n.vdp-datepicker__calendar header .next.disabled:after {\n  border-left: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled),\n.vdp-datepicker__calendar header .next:not(.disabled),\n.vdp-datepicker__calendar header .up:not(.disabled) {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled):hover,\n.vdp-datepicker__calendar header .next:not(.disabled):hover,\n.vdp-datepicker__calendar header .up:not(.disabled):hover {\n  background: #eee;\n}\n.vdp-datepicker__calendar .disabled {\n  color: #ddd;\n  cursor: default;\n}\n.vdp-datepicker__calendar .flex-rtl {\n  display: flex;\n  width: inherit;\n  flex-wrap: wrap;\n}\n.vdp-datepicker__calendar .cell {\n  display: inline-block;\n  padding: 0 5px;\n  width: 14.285714285714286%;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  vertical-align: middle;\n  border: 1px solid transparent;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover {\n  border: 1px solid #4bd;\n}\n.vdp-datepicker__calendar .cell.selected {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected:hover {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected.highlighted {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.highlighted {\n  background: #cae5ed;\n}\n.vdp-datepicker__calendar .cell.highlighted.disabled {\n  color: #a3a3a3;\n}\n.vdp-datepicker__calendar .cell.grey {\n  color: #888;\n}\n.vdp-datepicker__calendar .cell.grey:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header {\n  font-size: 75%;\n  white-space: nowrap;\n  cursor: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .month,\n.vdp-datepicker__calendar .year {\n  width: 33.333%;\n}\n.vdp-datepicker__clear-button,\n.vdp-datepicker__calendar-button {\n  cursor: pointer;\n  font-style: normal;\n}\n.vdp-datepicker__clear-button.disabled,\n.vdp-datepicker__calendar-button.disabled {\n  color: #999;\n  cursor: default;\n}\n",
            map: {
                version: 3,
                sources: ["Datepicker.vue"],
                names: [],
                mappings: "AAAA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,sBAAsB;AACxB;AACA;EACE,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;AACb;AACA;;EAEE,0BAA0B;EAC1B,WAAW;EACX,qBAAqB;EACrB,kBAAkB;AACpB;AACA;;EAEE,WAAW;EACX,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,4CAA4C;EAC5C,6BAA6B;AAC/B;AACA;EACE,6BAA6B;EAC7B,iBAAiB;AACnB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,4BAA4B;EAC5B,gBAAgB;AAClB;AACA;EACE,4BAA4B;AAC9B;AACA;;;EAGE,eAAe;AACjB;AACA;;;EAGE,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,aAAa;EACb,cAAc;EACd,eAAe;AACjB;AACA;EACE,qBAAqB;EACrB,cAAc;EACd,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,sBAAsB;EACtB,6BAA6B;AAC/B;AACA;;;EAGE,eAAe;AACjB;AACA;;;EAGE,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,cAAc;AAChB;AACA;;EAEE,eAAe;EACf,kBAAkB;AACpB;AACA;;EAEE,WAAW;EACX,eAAe;AACjB",
                file: "Datepicker.vue",
                sourcesContent: [".rtl {\n  direction: rtl;\n}\n.vdp-datepicker {\n  position: relative;\n  text-align: left;\n}\n.vdp-datepicker * {\n  box-sizing: border-box;\n}\n.vdp-datepicker__calendar {\n  position: absolute;\n  z-index: 100;\n  background: #fff;\n  width: 300px;\n  border: 1px solid #ccc;\n}\n.vdp-datepicker__calendar header {\n  display: block;\n  line-height: 40px;\n}\n.vdp-datepicker__calendar header span {\n  display: inline-block;\n  text-align: center;\n  width: 71.42857142857143%;\n  float: left;\n}\n.vdp-datepicker__calendar header .prev,\n.vdp-datepicker__calendar header .next {\n  width: 14.285714285714286%;\n  float: left;\n  text-indent: -10000px;\n  position: relative;\n}\n.vdp-datepicker__calendar header .prev:after,\n.vdp-datepicker__calendar header .next:after {\n  content: '';\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  border: 6px solid transparent;\n}\n.vdp-datepicker__calendar header .prev:after {\n  border-right: 10px solid #000;\n  margin-left: -5px;\n}\n.vdp-datepicker__calendar header .prev.disabled:after {\n  border-right: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .next:after {\n  border-left: 10px solid #000;\n  margin-left: 5px;\n}\n.vdp-datepicker__calendar header .next.disabled:after {\n  border-left: 10px solid #ddd;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled),\n.vdp-datepicker__calendar header .next:not(.disabled),\n.vdp-datepicker__calendar header .up:not(.disabled) {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar header .prev:not(.disabled):hover,\n.vdp-datepicker__calendar header .next:not(.disabled):hover,\n.vdp-datepicker__calendar header .up:not(.disabled):hover {\n  background: #eee;\n}\n.vdp-datepicker__calendar .disabled {\n  color: #ddd;\n  cursor: default;\n}\n.vdp-datepicker__calendar .flex-rtl {\n  display: flex;\n  width: inherit;\n  flex-wrap: wrap;\n}\n.vdp-datepicker__calendar .cell {\n  display: inline-block;\n  padding: 0 5px;\n  width: 14.285714285714286%;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  vertical-align: middle;\n  border: 1px solid transparent;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year {\n  cursor: pointer;\n}\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover {\n  border: 1px solid #4bd;\n}\n.vdp-datepicker__calendar .cell.selected {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected:hover {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.selected.highlighted {\n  background: #4bd;\n}\n.vdp-datepicker__calendar .cell.highlighted {\n  background: #cae5ed;\n}\n.vdp-datepicker__calendar .cell.highlighted.disabled {\n  color: #a3a3a3;\n}\n.vdp-datepicker__calendar .cell.grey {\n  color: #888;\n}\n.vdp-datepicker__calendar .cell.grey:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header {\n  font-size: 75%;\n  white-space: nowrap;\n  cursor: inherit;\n}\n.vdp-datepicker__calendar .cell.day-header:hover {\n  background: inherit;\n}\n.vdp-datepicker__calendar .month,\n.vdp-datepicker__calendar .year {\n  width: 33.333%;\n}\n.vdp-datepicker__clear-button,\n.vdp-datepicker__calendar-button {\n  cursor: pointer;\n  font-style: normal;\n}\n.vdp-datepicker__clear-button.disabled,\n.vdp-datepicker__calendar-button.disabled {\n  color: #999;\n  cursor: default;\n}\n"]
            },
            media: void 0
        })
    }), By, void 0, !1, void 0, Sy, void 0);
    const {
        mapState: Ry,
        mapActions: Oy,
        mapMutations: Fy,
        mapGetters: Ny
    } = Ma("bcf");
    const Uy = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bcf bcf--edit"
            }, [i("div", {
                staticClass: "bcf__header"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__ghost",
                attrs: {
                    width: "22px"
                },
                on: {
                    click: function(t) {
                        return e.onGoBackClick()
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "back",
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataBackIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bcf__header__title"
            }, [e._v(e._s("form" === e.mode ? e.editExisting ? e.$t("bcf.edit_existing") : e.$t("bcf.btn_report") : e.$t("bcf.bucket_selection")))])], 1), e._v(" "), "form" === e.mode ? [i("div", {
                staticClass: "bcf__content"
            }, [i("div", {
                staticClass: "bcf__content__index-date"
            }, [i("div", {
                staticClass: "index"
            }, [e._v(e._s(e.editExisting ? e.selectedTopic.index : e.nextIndex))]), e._v(" "), i("div", {
                staticClass: "date"
            }, [e._v(e._s(e._f("formatDate")(e.editExisting ? e.selectedTopic.creation_date : new Date)))])]), e._v(" "), i("BIMDataBCFSnapshot", {
                attrs: {
                    imageEncoded: e.viewpoint && e.viewpoint.snapshot ? e.viewpoint.snapshot.snapshot_data : null
                },
                on: {
                    "capture-snapshot": e.captureSnapshot
                }
            }), e._v(" "), i("div", {
                staticClass: "bcf__content__elements"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--default bimdata-btn__fill--btn-icon bimdata-btn__radius",
                attrs: {
                    width: "100%"
                },
                on: {
                    click: function(t) {
                        e.mode = "bucket"
                    }
                }
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "model",
                    width: "18",
                    height: "18",
                    x: "24",
                    y: "24"
                }
            }, [i("BIMDataModelIcon")], 1), e._v("\n          " + e._s(e.selectedElements.length ? e.selectedElements.length + " " + e.$t("bcf.btn_elements") : e.$t("bcf.btn_add_elements")) + "\n        ")], 1)], 1), e._v(" "), i("div", {
                staticClass: "bcf__content__form"
            }, [i("BIMDataInput", {
                attrs: {
                    placeholder: e.$t("bcf.element_title"),
                    error: e.missingTitle,
                    errorMessage: e.$t("error.title")
                },
                model: {
                    value: e.title,
                    callback: function(t) {
                        e.title = t
                    },
                    expression: "title"
                }
            }), e._v(" "), i("BIMDataSelect", {
                staticClass: "bcf__content__form__line",
                attrs: {
                    value: e.type,
                    options: e.extensions.topic_type,
                    label: e.$t("bcf.element_type")
                },
                on: {
                    "option-click": function(t) {
                        e.type = t
                    }
                }
            }), e._v(" "), i("BIMDataSelect", {
                staticClass: "bcf__content__form__line",
                attrs: {
                    value: e.priority,
                    options: e.extensions.priority,
                    label: e.$t("bcf.element_priority")
                },
                on: {
                    "option-click": function(t) {
                        e.priority = t
                    }
                }
            }), e._v(" "), i("BIMDataSelect", {
                staticClass: "bcf__content__form__line",
                attrs: {
                    value: e.status,
                    options: e.extensions.topic_status,
                    label: e.$t("bcf.element_status")
                },
                on: {
                    "option-click": function(t) {
                        e.status = t
                    }
                }
            }), e._v(" "), i("BIMDataSelect", {
                staticClass: "bcf__content__form__line",
                attrs: {
                    value: e.stage,
                    options: e.extensions.stage,
                    label: e.$t("bcf.element_phase")
                },
                on: {
                    "option-click": function(t) {
                        e.stage = t
                    }
                }
            }), e._v(" "), i("BIMDataSelect", {
                staticClass: "bcf__content__form__line",
                attrs: {
                    value: e.assignedTo,
                    options: e.extensions.user_id_type,
                    label: e.$t("bcf.element_assigned")
                },
                on: {
                    "option-click": function(t) {
                        e.assignedTo = t
                    }
                }
            }), e._v(" "), i("div", {
                staticClass: "bcf__content__form__line bimdata-input-date",
                class: {
                    "not-empty": null !== this.dueDate && !!this.dueDate
                }
            }, [i("datepicker", {
                scopedSlots: e._u([{
                    key: "afterDateInput",
                    fn: function() {
                        return [i("label", {
                            staticStyle: {
                                "pointer-events": "none"
                            }
                        }, [e._v(e._s(e.$t("bcf.element_due_date")))]), e._v(" "), i("span", {
                            staticClass: "bar"
                        })]
                    },
                    proxy: !0
                }], null, !1, 2886870895),
                model: {
                    value: e.dueDate,
                    callback: function(t) {
                        e.dueDate = t
                    },
                    expression: "dueDate"
                }
            })], 1), e._v(" "), i("div", {
                staticClass: "bcf__content__form__line bimdata-textarea",
                class: {
                    "not-empty": !!this.description
                }
            }, [i("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: e.description,
                    expression: "description"
                }],
                attrs: {
                    id: "description",
                    rows: "1"
                },
                domProps: {
                    value: e.description
                },
                on: {
                    input: function(t) {
                        t.target.composing || (e.description = t.target.value)
                    }
                }
            }), e._v(" "), i("label", {
                attrs: {
                    for: "description"
                }
            }, [e._v(e._s(e.$t("bcf.element_description")))]), e._v(" "), i("span", {
                staticClass: "bar"
            })]), e._v(" "), i("div", {
                staticClass: "bcf__content__form__line"
            }, [i("vue-tags-input", {
                attrs: {
                    tags: e.tags
                },
                on: {
                    "tags-changed": function(t) {
                        return e.tags = t
                    }
                },
                model: {
                    value: e.tag,
                    callback: function(t) {
                        e.tag = t
                    },
                    expression: "tag"
                }
            })], 1)], 1), e._v(" "), i("div", {
                staticClass: "bcf__content__form__button"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    width: "80px"
                },
                on: {
                    click: e.onValidateClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_validate")))])], 1)], 1), e._v(" "), e.modalGoBack ? i("div", {
                staticClass: "bcf--modal"
            }, [i("div", {
                staticClass: "bcf--modal__content"
            }, [i("div", {
                staticClass: "bcf--modal__content__title"
            }, [i("BIMDataIcon", {
                attrs: {
                    "icon-name": "BCFSafeZone",
                    width: "23",
                    height: "23",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataBCFSafeZoneIcon")], 1), e._v(" "), i("span", [e._v(e._s(e.$t("bcf.title_modal_leave-page")))])], 1), e._v(" "), i("div", {
                staticClass: "bcf--modal__content__actions"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--red bimdata-btn__radius",
                attrs: {
                    width: "40%"
                },
                on: {
                    click: e.onBackClick
                }
            }, [e._v(e._s(e.$t("bcf.btn_modal_go-back")))]), e._v(" "), i("BIMDataButton", {
                staticClass: "bimdata-btn__outline bimdata-btn__outline--grey bimdata-btn__radius",
                attrs: {
                    width: "40%"
                },
                on: {
                    click: function(t) {
                        e.modalGoBack = !1
                    }
                }
            }, [e._v(e._s(e.$t("bcf.btn_modal_keep-view")))])], 1)]), e._v(" "), i("div", {
                staticClass: "bcf--modal__overlay"
            })]) : e._e()] : [i("BIMDataBCFElementBucket", {
                attrs: {
                    elements: e.selectedElements
                },
                on: {
                    validate: function(t) {
                        return e.onBucketValidate(t)
                    }
                }
            })]], 2)
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            VueTagsInput: ty,
            BIMDataBCFSnapshot: iy,
            BIMDataBCFElementBucket: oy,
            BIMDataIcon: El,
            BIMDataBCFSafeZoneIcon: Ub,
            BIMDataBackIcon: Eb,
            BIMDataModelIcon: lc,
            Datepicker: Ly,
            BIMDataSelect: ay,
            BIMDataButton: Ml,
            BIMDataInput: eb
        },
        data: () => ({
            mode: "form",
            title: null,
            type: null,
            priority: null,
            status: null,
            stage: null,
            assignedTo: null,
            dueDate: null,
            description: null,
            tag: "",
            tags: [],
            missingTitle: !1,
            viewpoint: null,
            selectedElements: [],
            displayType: !1,
            empty: !0,
            displayDatepicker: !1,
            modalGoBack: !1
        }),
        computed: {
            ...Ry(["selectedTopic", "extensions", "ifcIds", "bcfRoot"]),
            ...Ny({
                nextIndex: "nextIndex",
                topicViewpoint: "viewpoint"
            }),
            editExisting() {
                return !!this.selectedTopic
            }
        },
        created() {
            this.selectedTopic && (this.title = this.selectedTopic.title, this.type = this.selectedTopic.topic_type, this.priority = this.selectedTopic.priority, this.status = this.selectedTopic.topic_status, this.stage = this.selectedTopic.stage, this.assignedTo = this.selectedTopic.assigned_to, this.dueDate = this.selectedTopic.due_date, this.description = this.selectedTopic.description, this.tags = (this.selectedTopic.labels || []).map(e => ({
                text: e,
                tiClasses: ["ti-valid"]
            })), this.viewpoint = this.topicViewpoint(this.selectedTopic.guid), this.selectedElements = this.viewpoint ? this.viewpoint.components.selection.map(e => ({
                id: e.ifc_guid
            })) : [])
        },
        watch: {
            title(e) {
                this.missingTitle = !e
            }
        },
        methods: {
            ...Fy({
                setView: "SET_VIEW",
                setLoading: "SET_LOADING",
                setTopicViewpoints: "SET_TOPIC_VIEWPOINTS"
            }),
            ...Oy(["updateTopic", "createTopic", "loadProjectTopics"]),
            onGoBackClick() {
                "form" === this.mode ? this.modalGoBack = !0 : this.onBackClick()
            },
            onBackClick() {
                "form" === this.mode ? this.editExisting ? this.setView("BIMDataBCFDetailView") : this.setView("BIMDataBCFListView") : this.mode = "form"
            },
            async onValidateClick() {
                if (this.title) {
                    const e = {
                        guid: this.selectedTopic ? this.selectedTopic.guid : null,
                        title: this.title,
                        topicType: this.type,
                        priority: this.priority,
                        topicStatus: this.status,
                        stage: this.stage,
                        assignedTo: this.assignedTo,
                        dueDate: this.dueDate,
                        description: this.description,
                        labels: this.tags.map(e => e.text),
                        ifcs: this.ifcIds,
                        viewpointTopic: this.viewpoint,
                        elementsSelected: this.selectedElements
                    };
                    this.setLoading(!0), this.editExisting ? await this.updateTopic(e) : await this.createTopic(e), await this.loadProjectTopics(), this.setLoading(!1), this.editExisting ? this.setView("BIMDataBCFDetailView") : this.setView("BIMDataBCFListView")
                } else this.missingTitle = !0
            },
            captureSnapshot() {
                this.viewpoint = this.$plugins.viewer3D.getViewpoint()
            },
            onBucketValidate(e) {
                this.selectedElements = e, this.mode = "form"
            }
        },
        filters: {
            formatDate: e => e.toLocaleDateString ? e.toLocaleDateString() : e
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    var Hy = {
        init({
            dispatch: e
        }) {
            e("loadUser"), e("loadProjectTopics"), e("loadProjectExtensions")
        },
        async loadUser({
            commit: e,
            state: t
        }) {
            e("SET_USER", await (new t.apiClient.BcfApi).getUser())
        },
        async loadProjectTopics({
            commit: e,
            state: t
        }) {
            e("SET_LOADING", !0), e("SET_TOPICS", await (new t.apiClient.BcfApi).getTopics(t.projectId, {
                format: "standard"
            })), e("SET_LOADING", !1)
        },
        async loadProjectExtensions({
            commit: e,
            state: t
        }) {
            e("SET_EXTENSIONS", await (new t.apiClient.BcfApi).getExtensions(t.projectId))
        },
        async loadFullTopic({
            commit: e,
            state: t
        }, i) {
            const r = await (new t.apiClient.BcfApi).getFullTopic(i, t.projectId);
            r.viewpoints.forEach(Vy), e("SET_TOPIC_COMMENTS", {
                topicGuid: i,
                comments: r.comments
            }), e("SET_TOPIC_VIEWPOINTS", {
                topicGuid: i,
                viewpoints: r.viewpoints
            })
        },
        createTopic: async ({
            state: e,
            rootState: t
        }, i) => await (new e.apiClient.BcfApi).createFullTopic(e.projectId, zy(i, e)).then(e => (t.viewer.viewerComponent.$hub.emit("alert", {
            type: "success",
            message: "bcf.topic_created"
        }), e)),
        async updateTopic({
            commit: e,
            state: t,
            rootState: i
        }, r) {
            const n = await (new t.apiClient.BcfApi).updateFullTopic(r.guid, t.projectId, zy(r, t));
            n.viewpoints.length && e("SET_TOPIC_VIEWPOINTS", {
                topicGuid: n.guid,
                viewpoints: [...n.viewpoints]
            }), i.viewer.viewerComponent.$hub.emit("alert", {
                type: "success",
                message: "bcf.topic_updated"
            })
        },
        async deleteTopic({
            commit: e,
            state: t,
            rootState: i
        }, r) {
            e("SET_LOADING", !0), await (new t.apiClient.BcfApi).deleteTopic(r, t.projectId), i.viewer.viewerComponent.$hub.emit("alert", {
                type: "success",
                message: "bcf.topic_deleted"
            }), e("SET_LOADING", !1), e("SET_TOPICS", t.topics.filter(e => e.guid !== r)), e("SET_VIEW", "BIMDataBCFListView")
        },
        createViewpoint: async ({
            state: e
        }, t) => await (new e.apiClient.BcfApi).createViewpoint(e.projectId, e.selectedTopic.guid, t),
        async getViewpoints({
            commit: e,
            state: t
        }, i) {
            const r = await (new t.apiClient.BcfApi).getViewpoints(t.projectId, i);
            r.forEach(Vy), e("SET_TOPIC_VIEWPOINTS", {
                topicGuid: i,
                viewpoints: r
            })
        },
        async createComment({
            commit: e,
            state: t,
            getters: i,
            dispatch: r
        }, {
            comment: {
                text: n,
                replyToCommentGuid: s
            },
            viewpoint: o
        }) {
            const a = new t.apiClient.Comment;
            if (a.comment = n, a.reply_to_comment_guid = s, o) {
                const n = await r("createViewpoint", o);
                e("SET_TOPIC_VIEWPOINTS", {
                    topicGuid: t.selectedTopic.guid,
                    viewpoints: [...i.viewpoints(t.selectedTopic.guid), n]
                }), a.viewpoint_guid = n.guid
            }
            const l = await (new t.apiClient.BcfApi).createComment(t.projectId, t.selectedTopic.guid, a);
            return e("SET_TOPIC_COMMENTS", {
                topicGuid: t.selectedTopic.guid,
                comments: [...i.comments(t.selectedTopic.guid), l]
            }), l
        },
        async updateComment({
            commit: e,
            state: t,
            getters: i
        }, {
            commentId: r,
            commentText: n
        }) {
            if (!(i.comments(t.selectedTopic.guid) || []).find(e => e.guid === r)) throw new Error(`Impossible to update. Comment with id ${r} not found`);
            const s = new t.apiClient.Comment;
            s.comment = n;
            const o = await (new t.apiClient.BcfApi).updateComment(r, t.projectId, t.selectedTopic.guid, s),
                a = i.comments(t.selectedTopic.guid) || [];
            e("SET_TOPIC_COMMENTS", {
                topicGuid: t.selectedTopic.guid,
                comments: [...a.filter(e => e.guid !== o.guid), o]
            })
        },
        async deleteComment({
            commit: e,
            state: t,
            getters: i
        }, {
            comment: r,
            topicGuid: n
        }) {
            await (new t.apiClient.BcfApi).deleteComment(r.guid, t.projectId, n);
            const s = i.comments(n) || [],
                o = i.viewpoints(n) || [],
                a = [r.guid, ...s.filter(e => e.replyToCommentGuid === r.guid)],
                l = a.map(e => e.viewpointGuid).filter(e => !!e);
            e("SET_TOPIC_COMMENTS", {
                topicGuid: n,
                comments: s.filter(e => !a.includes(e.guid))
            }), e("SET_TOPIC_VIEWPOINTS", {
                topicGuid: n,
                viewpoints: o.filter(e => !l.includes(e.guid))
            })
        }
    };

    function Vy(e) {
        e.components || (e.components = {}), e.components.selection || (e.components.selection = []), e.components.visibility || (e.components.visibility = {
            default_visibility: !0,
            exceptions: [],
            view_setup_hints: {
                spaces_visible: !1,
                space_boundaries_visible: !1,
                openings_visible: !1
            }
        })
    }

    function zy(e, t) {
        const i = new t.apiClient.FullTopic;
        return i.title = e.title, i.description = e.description, i.ifcs = e.ifcs, i.labels = e.labels ? e.labels : [], i.topic_type = e.topicType, i.topic_status = e.topicStatus, i.stage = e.stage, i.assigned_to = e.assignedTo, i.due_date = e.dueDate, i.priority = e.priority, i.format = "standard", e.elementsSelected.length && (e.viewpointTopic = e.viewpointTopic || {}, e.viewpointTopic.components = e.viewpointTopic.components || {}, e.viewpointTopic.components.selection = e.elementsSelected.map(e => ({
            authoring_tool_id: "BIMDataViewer/v1.0",
            ifc_guid: e.id,
            originating_system: "BIMData.io"
        }))), i.viewpoints = e.viewpointTopic ? [e.viewpointTopic] : void 0, i
    }
    var $y = {
            SET_BCF_ROOT(e, t) {
                e.bcfRoot = t
            },
            SET_INITIAL_CONFIG(e, {
                accessToken: t,
                cloudId: i,
                projectId: r,
                apiUrl: n
            }) {
                e.accessToken = t, e.cloudId = i, e.projectId = r, e.apiUrl = n
            },
            SET_IFCIDS(e, t) {
                e.ifcIds = t
            },
            SET_API_CLIENT(e, t) {
                e.apiClient = t
            },
            SET_USER(e, t) {
                e.user = t
            },
            SET_TOPICS(e, t) {
                e.topics = t.sort((e, t) => e.index > t.index ? 1 : e.index < t.index ? -1 : 0)
            },
            SET_EXTENSIONS(e, t) {
                e.extensions = t
            },
            SET_VIEW(e, t) {
                e.view = t
            },
            SET_LOADING(e, t = !0) {
                e.loading = t
            },
            SET_SELECTED_TOPIC(e, t) {
                e.selectedTopic = t
            },
            SELECT_PREVIOUS_TOPIC(e, t) {
                const i = e.topics.find(e => e.index === t);
                if (!i) throw Error(`Topic with index ${t} does not exist`);
                const r = e.topics.indexOf(i);
                if (0 === r) throw Error(`Topic with index ${t} is the first topic`);
                e.selectedTopic = e.topics[r - 1]
            },
            SELECT_NEXT_TOPIC(e, t) {
                const i = e.topics.find(e => e.index === t);
                if (!i) throw Error(`Topic with index ${t} does not exist`);
                const r = e.topics.indexOf(i);
                if (r + 1 === e.topics.length) throw Error(`Topic with index ${t} is the last topic`);
                e.selectedTopic = e.topics[r + 1]
            },
            SET_TOPIC_VIEWPOINTS(e, {
                topicGuid: t,
                viewpoints: i = []
            }) {
                const r = e.viewpoints;
                r.set(t, i), e.viewpoints = new Map(r)
            },
            SET_TOPIC_COMMENTS(e, {
                topicGuid: t,
                comments: i = []
            }) {
                const r = e.comments;
                r.set(t, i), e.comments = new Map(r)
            }
        },
        Wy = {
            nextIndex: e => e.topics && e.topics.length ? e.topics.reduce((e, t) => t.index > e ? t.index : e, 0) + 1 : 1,
            minIndex: e => e.topics && e.topics.length && e.topics.reduce((e, t) => e.index > t.index ? t : e).index || 0,
            maxIndex: e => e.topics && e.topics.length && e.topics.reduce((e, t) => e.index > t.index ? e : t).index || 0,
            viewpoints: e => t => e.viewpoints.get(t),
            viewpoint: e => t => {
                const i = e.viewpoints.get(t) || [],
                    r = (e.comments.get(t) || []).map(e => e.viewpoint_guid).filter(e => !!e);
                return i.find(e => !r.includes(e.guid))
            },
            comments: e => t => e.comments.get(t),
            topicComments: e => t => (e.comments.get(t) || []).filter(e => !e.reply_to_comment_guid),
            commentReplies: e => (t, i) => (e.comments.get(t) || []).filter(e => e.reply_to_comment_guid === i),
            getTopicUserInitial: e => t => {
                const i = e.topics.find(e => e.guid === t);
                if (!i) throw Error(`Topic with guid ${t} does not exist`);
                const r = (i.creation_author || "X X").split(" "),
                    n = r[0],
                    s = r[1];
                return n[0] + s[0]
            },
            getTopicUserName: e => (t, i) => {
                const r = e.topics.find(e => e.guid === i);
                if (!r) throw Error(`Topic with guid ${i} does not exist`);
                return (r.creation_author || "X X").split(" ")[t]
            },
            getTopicUserFirstName: (e, t) => e => t.getTopicUserName(0, e),
            getTopicUserLastName: (e, t) => e => t.getTopicUserName(1, e),
            getTopicUserFullName: (e, t) => e => `${t.getTopicUserFirstName(e)} ${t.getTopicUserLastName(e)}`,
            getTopicUserEmail: e => t => {
                const i = e.topics.find(e => e.guid === t);
                if (!i) throw Error(`Topic with guid ${t} does not exist`);
                return i.creation_author.match(/^.+ .+ \((.+)\)$/)[1]
            }
        };
    const qy = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("path", {
                attrs: {
                    d: "M22.3,15.3l-4.1-2.8h-2.1l3.6,2.6h-4l-1.1,2.5h-3.1h-0.2H8.3l-1.1-2.5h-4l3.6-2.6H4.8l-4.1,2.8\n\t\tc0,0-0.2,4,1.4,5h9.3h0.2h9.3C22.6,19.3,22.3,15.3,22.3,15.3z"
                }
            }), this._v(" "), t("polygon", {
                attrs: {
                    points: "16.8,7.6 14.1,5.2 11.4,2.7 8.7,5.2 5.9,7.6 9.2,7.6 9.2,13.1 13.5,13.1 13.5,7.6"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const Gy = gl({
            render: function() {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("g", [t("path", {
                    attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M11.7501 13.0808L6.53828 7.96156L9.7958 7.96156L9.7958 2.29999L13.7043 2.29999V7.96156L16.9618 7.96156L11.7501 13.0808ZM0.915409 15.259L5.71479 12.0119L7.66906 12.3045L3.30073 15.259H6.31833C6.74941 15.259 7.38167 15.6978 7.66906 16.8679C7.89897 17.804 8.83778 18.1745 9.27844 18.2428H11.75L11.75 18.2428H14.2215C14.6622 18.1745 15.601 17.804 15.8309 16.8679C16.1183 15.6978 16.7506 15.259 17.1817 15.259H20.1993L15.8309 12.3045L17.7852 12.0119L22.5846 15.259C22.9582 15.454 23.5732 16.3238 23.0444 18.2428C22.3834 20.6415 21.1476 20.7 20.7453 20.7H11.75L11.75 20.7H2.75469C2.35235 20.7 1.11658 20.6415 0.455583 18.2428C-0.0732144 16.3238 0.541801 15.454 0.915409 15.259Z"
                    }
                })])
            },
            staticRenderFns: []
        }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
        {
            mapState: Yy,
            mapActions: Zy,
            mapMutations: Xy
        } = Ma("bcf"),
        {
            mapState: Ky
        } = Ma("viewer");
    var Qy = {
        name: "bcf",
        display: {
            iconPosition: "left",
            content: "windowed"
        },
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return e.active ? i("div", {
                    staticClass: "bcf"
                }, ["BIMDataBCFListView" === e.view ? i("div", {
                    staticClass: "submenu__header"
                }, [i("div", {
                    directives: [{
                        name: "clickaway",
                        rawName: "v-clickaway",
                        value: function() {
                            return e.MenuActive = !1
                        },
                        expression: "() => (MenuActive = false)"
                    }],
                    staticClass: "submenu__header--left"
                }, [i("div", {
                    staticClass: "submenu__header__menu",
                    on: {
                        click: function(t) {
                            e.MenuActive = !e.MenuActive
                        }
                    }
                }, [i("BIMDataIcon", {
                    attrs: {
                        "icon-name": "menu",
                        width: "20",
                        height: "20",
                        x: "23",
                        y: "23"
                    }
                }, [i("BIMDataMenuIcon")], 1)], 1), e._v(" "), i("transition", {
                    attrs: {
                        name: "slide-fade-down"
                    }
                }, [i("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.MenuActive,
                        expression: "MenuActive"
                    }],
                    staticClass: "submenu__header__submenu"
                }, [i("ul", {
                    staticClass: "bimdata-list"
                }, [i("li", {
                    on: {
                        click: e.onReportAProblemClick
                    }
                }, [i("BIMDataIcon", {
                    attrs: {
                        "icon-name": "BCF",
                        width: "12",
                        height: "12",
                        x: "20",
                        y: "20"
                    }
                }, [i("BIMDataBCFIcon")], 1), e._v("\n              " + e._s(e.$t("bcf.btn_report")) + "\n            ")], 1), e._v(" "), i("li", {
                    staticClass: "bcf__import",
                    on: {
                        click: e.onImportBCFClick
                    }
                }, [i("input", {
                    ref: "file",
                    attrs: {
                        type: "file",
                        id: "file",
                        accept: ".bcf"
                    },
                    on: {
                        change: e.handleFileUpload
                    }
                }), e._v(" "), i("span", [i("BIMDataIcon", {
                    attrs: {
                        "icon-name": "import",
                        width: "12",
                        height: "12",
                        x: "23",
                        y: "23"
                    }
                }, [i("BIMDataImportIcon")], 1), e._v("\n                " + e._s(e.$t("bcf.btn_import")) + "\n              ")], 1)]), e._v(" "), e.listTopics && e.listTopics.length ? i("li", {
                    on: {
                        click: e.onExportBCFClick
                    }
                }, [i("BIMDataIcon", {
                    attrs: {
                        "icon-name": "export",
                        width: "12",
                        height: "12",
                        x: "23",
                        y: "23"
                    }
                }, [i("BIMDataExportIcon")], 1), e._v("\n              " + e._s(e.$t("bcf.btn_export")) + "\n            ")], 1) : e._e()])])])], 1)]) : e._e(), e._v(" "), e.loading ? i("div", [i("BIMDataLoading")], 1) : e._e(), e._v(" "), i(e.view, {
                    tag: "component"
                })], 1) : e._e()
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-0f421196_0", {
                source: '@keyframes placeholder{0%{background:#f8f8f8;transform:scale(1)}25%{background:#f0f0f0;transform:scale(1.015)}50%{background:#f8f8f8;transform:scale(1)}}textarea:-webkit-autofill{box-shadow:0 0 0 1000px #fff inset}.bimdata-textarea{height:auto}.bimdata-textarea textarea{padding:calc(12px / 2) 0;width:370px;min-width:100%;max-width:100%;display:block;margin:0;border:none;resize:none;font-size:1em}.bimdata-textarea textarea:focus{outline:0}.bimdata-textarea textarea:focus~label{font-size:.7142857143em;top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-textarea textarea:focus~.bar:after{width:100%;transition:transform .2s cubic-bezier(.55,0,.55,.2);transform:scaleX(1)}.bimdata-textarea.not-empty label{top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-textarea label{position:absolute;top:0;left:0;font-size:.8571428571em;transform:translateY(12px);transition:.2s ease all;color:#616060;cursor:pointer}.bimdata-textarea .bar{width:100%;height:1px;position:absolute;display:block;background:#d8d8d8;bottom:0}.bimdata-textarea .bar::after{width:0;height:2px;content:"";display:block;position:absolute;bottom:0;left:0;right:0;background-color:#2f374a;transform:scaleX(0)}.bimdata-input-date{height:32px}.bimdata-input-date input{padding:0;width:100%;height:32px;border:none;cursor:pointer;font-size:1em}.bimdata-input-date input:focus{outline:0}.bimdata-input-date input:focus~label{font-size:.7142857143em;top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-input-date input:focus~.bar:after{width:100%;transition:transform .2s cubic-bezier(.55,0,.55,.2);transform:scaleX(1)}.bimdata-input-date .vdp-datepicker__calendar{margin-bottom:12px;width:100%;top:calc(12px / 2)}.bimdata-input-date .vdp-datepicker__calendar .cell.selected{background-color:#2f374a;color:#fff}.bimdata-input-date .vdp-datepicker__calendar .cell.selected:hover{background-color:#252b3a}.bimdata-input-date .vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,.bimdata-input-date .vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,.bimdata-input-date .vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover{border-color:#2f374a}.bimdata-input-date .vdp-datepicker__calendar .prev::after{background-image:url(../../img/bimdata_carret-right.svg)}.bimdata-input-date.not-empty label{top:-22px;color:#2f374a;font-size:.7142857143em}.bimdata-input-date label{position:absolute;top:0;left:0;font-size:.8571428571em;transform:translateY(12px);transition:.2s ease all;color:#616060}.bimdata-input-date .bar{width:100%;height:1px;position:absolute;display:block;background:#d8d8d8;bottom:0}.bimdata-input-date .bar::after{width:0;height:2px;content:"";display:block;position:absolute;bottom:0;left:0;right:0;background-color:#2f374a;transform:scaleX(0)}.vue-tags-input{height:auto;max-width:inherit}.vue-tags-input .ti-input{padding:0;border:none}.vue-tags-input .ti-input .ti-tags{height:auto}.vue-tags-input .ti-input .ti-tags .ti-tag{height:25px;background-color:#f8f8f8;color:#616060;font-size:.8571428571em}.vue-tags-input .ti-input .ti-tags .ti-tag .ti-actions{margin-left:calc(12px / 2)}.vue-tags-input .ti-input .ti-tags .ti-new-tag-input-wrapper{padding:0;width:100%;display:block;border-bottom:1px solid #d8d8d8}.vue-tags-input .ti-input .ti-tags .ti-new-tag-input-wrapper input{width:100%;height:28px;font-size:.8571428571em}.bcf{height:100%}.bcf__import{position:relative;height:24px}.bcf__import input{width:0;opacity:0;cursor:pointer;position:absolute;left:0;top:0}.bcf__import span{display:flex;position:absolute}.bcf__header{margin-bottom:12px;padding:0 12px;height:32px;display:flex;justify-content:space-between;align-items:center;box-shadow:0 2px 4px 0 rgba(0,0,0,.1)}.bcf__header--left{position:relative}.bcf__header--right{display:flex;align-items:center}.bcf__header__title{width:calc(100% - calc(12px * 3));text-align:center}.bcf__content{padding:0 12px}.bcf__content__index-date{margin-bottom:12px;display:flex;justify-content:space-between;height:27px;align-items:center}.bcf__content__index-date .date,.bcf__content__index-date .index{height:100%;display:flex;align-items:center;justify-content:center;background-color:#f8f8f8;color:#2f374a;font-size:.8571428571em}.bcf__content__index-date .index{width:50px}.bcf__content__index-date .date{padding:0 calc(12px / 2)}.bcf__content__snapshot{width:100%}.bcf__content__snapshot img{width:100%}.bimdata-window-unpined .bcf .bimdata-pagination{bottom:8px}.bcf--bucket{height:calc(100% - 37px - 12px)}.bcf--bucket__content{padding:0;height:100%}.bcf--bucket__content .bcf__header{justify-content:end}.bcf--bucket__content .bcf__header span{margin:0;width:calc(100% - calc(12px * 3));text-align:center}.bcf--bucket__content>span{margin-bottom:6px;display:block;font-size:.8571428571em}.bcf--bucket__content .bimdata-btn__fill{margin:12px auto 0;display:block}.bcf--bucket__content .bimdata-paginated-list--small .bimdata-paginated-list__elements{height:calc(100% - 38px);overflow:auto}.bcf--bucket__empty{margin:auto;width:72%;height:300px;display:flex;align-items:center;justify-content:center;flex-direction:column;text-align:center}.bcf--bucket__empty p{margin-top:36px;font-size:.8571428571em;line-height:1.5;color:#616060}.bcf--bucket__empty--tip{margin-top:calc(12px * 2)}.bcf--bucket__empty--tip__icon{display:flex;align-items:center;justify-content:center}.bcf--bucket__empty--tip__icon .alt{margin-right:calc(12px / 2);width:34px;height:25px;display:flex;align-items:center;justify-content:center;border-radius:5px;background-color:#d8d8d8}.bcf--bucket__empty--tip__icon .more{margin-right:calc(12px / 2);color:#2f374a;font-weight:700}.bcf--bucket__empty--tip__icon .icon-click{margin-right:calc(12px / 2)}.bcf--bucket__empty--tip p{margin-top:12px}.bcf__add-comment textarea,.bcf__comment textarea{font-size:1em;resize:none}.bcf__add-comment textarea:focus,.bcf__comment textarea:focus{outline:0}.bcf__add-comment__buttons .bimdata-btn__ghost,.bcf__add-comment__container__buttons .bimdata-btn__ghost,.bcf__comment__buttons .bimdata-btn__ghost,.bcf__comment__container__buttons .bimdata-btn__ghost{justify-content:center}.bcf__add-comment{cursor:initial}.bcf__add-comment__line{margin-bottom:calc(12px / 2);display:flex;justify-content:space-between}.bcf__add-comment__text{padding:calc(12px - 2px);width:100%;min-height:65px;background-color:#f8f8f8;border:none;border-bottom:2px solid #2f374a}.bcf__add-comment__text__snapshot{width:65%}.bcf__add-comment__text__error{border-color:#ff3d1e}.bcf__add-comment__text__error::placeholder{color:#ff3d1e}.bcf__add-comment__buttons{display:flex;justify-content:flex-end}.bcf__add-comment__snapshot{position:relative}.bcf__add-comment__snapshot .snapshot{height:65px;width:auto;background-color:#f8f8f8}.bcf__add-comment small{padding:calc(12px / 2) calc(12px - 2px);color:#ff3d1e;display:block}.bcf__comment{margin-top:12px;display:flex;justify-content:flex-start}.bcf__comment .bimdata-initials{margin-right:12px}.bcf__comment__container{width:calc(100% - 36px - 12px)}.bcf__comment__container__header{height:24px;display:flex;align-items:center;font-size:.8571428571em}.bcf__comment__container__header .name{color:#616060;font-weight:700}.bcf__comment__container__header .bull{color:#616060}.bcf__comment__container__header svg{cursor:pointer}.bcf__comment__container__text{padding:0;width:100%;min-height:22px;background-color:transparent;border:none;border-bottom:1px solid #7b7b7b}.bcf__comment__container img{width:100%;height:auto;display:block;background-color:#f8f8f8}.bcf__comment__container__content{margin:calc(12px / 2) 0}.bcf__comment__container__buttons{display:flex;justify-content:flex-end;font-size:1em}.bcf__comment__container__buttons.replies{justify-content:space-between}.bcf__comment__container__list .bcf__comment{min-height:50px}.bcf__comment__container .reply{margin-bottom:12px}.bcf__comment__container .reply .bcf__add-comment>div:first-child{display:inline-flex;float:left}.bcf__comment__container .reply .bcf__add-comment>div:first-child .bimdata-initials{margin-right:12px}.bcf__comment__container .reply .bcf__add-comment .bcf__add-comment__line{margin:0;width:calc(100% - 48px);display:inline-block}.bcf__comment__container .reply .bcf__add-comment .bcf__add-comment__line .bcf__add-comment__text{padding:0;height:22px;min-height:22px;background-color:transparent;border-bottom:1px solid #7b7b7b;width:100%;float:left}.bcf__comment__container .reply .bcf__add-comment .bcf__add-comment__line .bcf__add-comment__text__snapshot{width:50%}.bcf__comment__container .reply .bcf__add-comment .bcf__add-comment__line .bcf__add-comment__snapshot{float:right}.bcf__comment__container .reply .bcf__add-comment .bcf__add-comment__buttons{height:40px;align-items:center}.bcf__comment__container .replies{display:flex;align-items:center;cursor:pointer;font-size:.8571428571em}.bcf--modal{width:100%;height:100%;position:absolute;top:0;left:0}.bcf--modal__content{width:376px;position:absolute;left:12px;top:52px;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);border-radius:3px;display:flex;flex-direction:column;align-items:center;justify-content:center;z-index:1}.bcf--modal__content__title{padding:12px;width:100%;height:auto;min-height:94px;display:flex;align-items:center;flex-direction:column;justify-content:center;color:#ff3d1e;font-size:1em}.bcf--modal__content__title svg{margin-bottom:calc(12px / 2)}.bcf--modal__content__title span{width:90%;line-height:1.3rem;text-align:center;word-break:break-word}.bcf--modal__content__actions{width:100%;height:64px;display:flex;align-items:center;justify-content:center;background-color:#f8f8f8;border-top:1px solid #d8d8d8}.bcf--modal__content__actions .bimdata-btn:first-child{margin-right:calc(12px * 2)}.bcf--modal__overlay{width:100%;height:100%;background-color:rgba(47,55,74,.5)}.bcf--detail{height:100%}.bcf--detail>div:first-child{height:100%}.bcf--detail .bcf__header__back{width:46px;text-align:left}.bcf--detail .bcf__header__navigation{width:calc(100% - calc(46px * 2));display:flex;align-items:center;justify-content:center}.bcf--detail .bcf__header__navigation .left,.bcf--detail .bcf__header__navigation .right{width:30px;display:flex;justify-content:center;cursor:pointer}.bcf--detail .bcf__header__navigation .left svg{transform:rotate(180deg)}.bcf--detail .bcf__header__navigation .title{min-width:130px;position:relative;text-align:center}.bcf--detail .bcf__header__navigation .title span:first-child:hover~.bimdata-tooltip{opacity:1}.bcf--detail .bcf__header__actions{display:flex}.bcf--detail .bcf__header__actions .bimdata-btn{justify-content:center}.bcf--detail .bcf__content{padding:0 12px 12px;height:calc(100% - 32px - 12px);overflow:auto}.bcf--detail .bcf__content__header{margin-bottom:12px;display:flex;justify-content:space-between;height:27px;align-items:center}.bcf--detail .bcf__content__header__index-date{display:flex;height:100%;background-color:#f8f8f8;color:#2f374a}.bcf--detail .bcf__content__header__index-date .date,.bcf--detail .bcf__content__header__index-date .index{height:100%;display:flex;align-items:center;justify-content:center;font-size:.8571428571em}.bcf--detail .bcf__content__header__index-date .index{width:40px}.bcf--detail .bcf__content__header__index-date .date{padding:0 6px}.bcf--detail .bcf__content__header__status{padding:0 calc(12px / 2);height:27px;width:max-content;display:flex;align-items:center;justify-content:center;border-radius:3px;color:#fff}.bcf--detail .bcf__content__header__status span{color:#616060}.bcf--detail .bcf__content__header__status svg{fill:#616060}.bcf--detail .bcf__content__header__status.closed span,.bcf--detail .bcf__content__header__status.opened span,.bcf--detail .bcf__content__header__status.resolved span{color:#fff}.bcf--detail .bcf__content__header__status.closed svg,.bcf--detail .bcf__content__header__status.opened svg,.bcf--detail .bcf__content__header__status.resolved svg{fill:#fff}.bcf--detail .bcf__content__header__status.opened{background-color:#00af50}.bcf--detail .bcf__content__header__status.closed{background-color:#ff3d1e}.bcf--detail .bcf__content__header__status.resolved{background-color:#7b7b7b}.bcf--detail .bcf__content__snapshot{margin-bottom:12px;background-color:#f8f8f8}.bcf--detail .bcf__content__infos,.bcf--detail .bcf__content__recap{margin:12px 0;padding:12px;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);color:#616060;line-height:1.5;font-size:.8571428571em}.bcf--detail .bcf__content__infos strong,.bcf--detail .bcf__content__recap strong{margin-right:calc(12px / 2);color:#2f374a}.bcf--detail .bcf__content__infos{position:relative}.bcf--detail .bcf__content__infos__header{margin-bottom:12px;display:flex;align-items:center;color:#2f374a;font-size:.8571428571em}.bcf--detail .bcf__content__infos__header strong{color:#2f374a}.bcf--detail .bcf__content__infos__header svg{margin-right:calc(12px / 2)}.bcf--detail .bcf__content__infos__line.infos__tags{margin-top:12px}.bcf--detail .bcf__content__infos__line.infos__tags .tag{padding:0 6px;margin-right:calc(12px / 2);max-width:150px;min-width:52px;height:auto;min-height:26px;border-radius:calc(12px / 2);background-color:#f8f8f8;display:inline-flex;align-items:center;justify-content:center;word-break:break-word}.bcf--detail .bcf__content__infos__line.infos__tags .tag:last-child{margin-right:0}.bcf--detail .bcf__content__infos .bimdata-initials{height:45px;width:45px;position:absolute;right:calc(12px / 2);top:calc(12px / 2)}.bcf--detail .bcf__content__element{display:flex;justify-content:center}.bcf--edit{height:100%}.bcf--edit .bcf__header{justify-content:end}.bcf--edit .bcf__content{padding-bottom:12px;height:calc(100% - 32px - 12px);overflow:auto}.bcf--edit .bcf__content__snapshot{margin-top:calc(12px / 2);height:188px;position:relative;display:flex;align-items:center;justify-content:center;background-color:#f8f8f8;border:1px solid #d8d8d8;cursor:pointer;overflow:hidden;transition:all ease .25s}.bcf--edit .bcf__content__snapshot .snapshot{height:auto;width:100%}.bcf--edit .bcf__content__snapshot .snapshot~.snapshot--icon{display:none}.bcf--edit .bcf__content__snapshot .snapshot--hover{width:100%;height:100%;position:absolute;top:0;left:0;display:flex;align-items:center;justify-content:center;transition:all ease .25s}.bcf--edit .bcf__content__snapshot .snapshot--hover svg{opacity:0}.bcf--edit .bcf__content__snapshot .snapshot--hover svg .st2{fill:#2f374a}.bcf--edit .bcf__content__snapshot .snapshot--hover:hover{background-color:rgba(216,216,216,.2);transition:all ease .25s}.bcf--edit .bcf__content__snapshot .snapshot--hover:hover svg{opacity:1;transition:all ease .25s}.bcf--edit .bcf__content__snapshot .snapshot--icon{position:absolute}.bcf--edit .bcf__content__snapshot:hover{background-color:rgba(216,216,216,.2);transition:all ease .25s}.bcf--edit .bcf__content__elements{margin:12px 0}.bcf--edit .bcf__content__form__line{min-height:32px;margin:calc(12px * 2) 0;position:relative}.bcf--edit .bcf__content__form__line .error{top:2px;position:relative;color:#ff3d1e;font-size:.7857142857em}.bcf--edit .bcf__content__form__line.error label{color:#ff3d1e}.bcf--edit .bcf__content__form__line.error .bar{background-color:#ff3d1e}.bcf--edit .bcf__content__form__line.error .bar::after,.bcf--edit .bcf__content__form__line.error .bar::before{background-color:#ff3d1e}.bcf--edit .bcf__content__form__button{display:flex;justify-content:center}.bcf--edit .bcf--bucket__content .bimdata-paginated-list--small{height:calc(100% - 19px - 32px - 12px)}.bcf--edit .bcf--bucket__content .bimdata-paginated-list--empty{height:auto}.bcf--list{height:100%}.bcf--list__elements{height:100%}.bcf--list__elements>.bimdata-paginated-list{padding:0 12px;height:100%;overflow:auto}.bcf--list__elements>.bimdata-paginated-list .bimdata-paginated-list__elements{height:calc(100% - 42px)}.bcf--list__elements>.bimdata-paginated-list .bimdata-pagination{position:absolute;left:0;bottom:0}.bcf--list__elements .bimdata-paginated-list--small .bimdata-paginated-list__elements{height:calc(100% - 37px - 4px)}.bcf--list__longer{margin-bottom:0;height:calc(100% - 60px)}.bcf--list__header{height:calc(12px * 2.5);display:flex;align-items:center}.bcf--list__header--date,.bcf--list__header--index,.bcf--list__header--priority,.bcf--list__header--title,.bcf--list__header--user{display:flex;height:100%;align-items:center;justify-content:center;color:#7b7b7b;position:relative;cursor:pointer}.bcf--list__header--date span,.bcf--list__header--index span,.bcf--list__header--priority span,.bcf--list__header--title span,.bcf--list__header--user span{font-size:.8571428571em}.bcf--list__header--index,.bcf--list__header--priority,.bcf--list__header--user{flex:1}.bcf--list__header--index span:hover~.bimdata-tooltip,.bcf--list__header--index svg:hover~.bimdata-tooltip,.bcf--list__header--priority span:hover~.bimdata-tooltip,.bcf--list__header--priority svg:hover~.bimdata-tooltip,.bcf--list__header--user span:hover~.bimdata-tooltip,.bcf--list__header--user svg:hover~.bimdata-tooltip{opacity:1}.bcf--list__header--index .bimdata-tooltip,.bcf--list__header--priority .bimdata-tooltip,.bcf--list__header--user .bimdata-tooltip{width:auto;left:-10px;top:44px}.bcf--list__header--date{flex:2}.bcf--list__header--title{flex:4}.bcf--list__header--priority,.bcf--list__header--user{position:relative}.bcf--list__header--priority ul,.bcf--list__header--user ul{padding:calc(12px / 2) 0;height:auto;position:absolute;top:30px;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.12);border-radius:3px;z-index:1}.bcf--list__header--priority ul li,.bcf--list__header--user ul li{padding:calc(12px / 2) 12px;color:#2f374a}.bcf--list__header--priority ul li:hover,.bcf--list__header--user ul li:hover{background-color:#f8f8f8}.bcf--list__header--priority ul label,.bcf--list__header--user ul label{padding:calc(12px / 2) 12px;height:auto;min-height:calc(12px * 2);display:flex;align-items:flex-start;color:#616060}.bcf--list__header--priority ul label:hover,.bcf--list__header--user ul label:hover{background-color:#f8f8f8}.bcf--list__header--priority ul{width:120px;left:0}.bcf--list__header--user ul{width:160px;right:0}.bcf--list__header--user ul li .checkbox__text{line-height:1.3;text-transform:uppercase;font-size:.7857142857em}.bcf--list li:nth-child(odd) .bcf--list__element{background-color:#f8f8f8}.bcf--list__element:last-child{border:none}.bcf--list__element--line{height:35px;display:flex;align-items:center;color:#616060;cursor:pointer}.bcf--list__element--date,.bcf--list__element--index,.bcf--list__element--priority,.bcf--list__element--title,.bcf--list__element--user{display:flex;height:100%;align-items:center;justify-content:center;font-size:.8571428571em}.bcf--list__element--index,.bcf--list__element--priority,.bcf--list__element--user{flex:1}.bcf--list__element--date{flex:2}.bcf--list__element--title{justify-content:start;flex:4;position:relative}.bcf--list__element--title span{margin:0 12px}.bcf--list__element--title span:first-child:hover~.bimdata-tooltip{top:31px;opacity:1;z-index:1}.bcf--list__element--user .bimdata-initials{width:calc(12px * 2);height:calc(12px * 2);color:#fff;font-size:.7142857143em}.bcf--list__element .topic-preview{margin-top:4px;display:flex;flex-wrap:wrap}.bcf--list__element .topic-preview__snapshot{height:190px;display:flex;align-items:center;justify-content:center;position:relative;overflow:hidden}.bcf--list__element .topic-preview__snapshot .snapshot{max-width:100%;background-color:#f8f8f8}.bcf--list__element .topic-preview__snapshot .topic-preview__status{position:absolute;left:12px;top:12px}.bcf--list__element .topic-preview__status{padding:0 calc(12px / 2);height:27px;width:max-content;display:flex;align-items:center;justify-content:center;border-radius:3px;color:#fff;background-color:#ebebeb}.bcf--list__element .topic-preview__status svg{fill:#616060}.bcf--list__element .topic-preview__status.closed,.bcf--list__element .topic-preview__status.opened,.bcf--list__element .topic-preview__status.resolved{color:#fff}.bcf--list__element .topic-preview__status.closed span,.bcf--list__element .topic-preview__status.opened span,.bcf--list__element .topic-preview__status.resolved span{color:#fff}.bcf--list__element .topic-preview__status.closed svg,.bcf--list__element .topic-preview__status.opened svg,.bcf--list__element .topic-preview__status.resolved svg{fill:#fff}.bcf--list__element .topic-preview__status.opened{background-color:#00af50}.bcf--list__element .topic-preview__status.closed{background-color:#ff3d1e}.bcf--list__element .topic-preview__status.resolved{background-color:#7b7b7b}.bcf--list__element .topic-preview__status span{color:#616060}.bcf--list__element .topic-preview__content{width:100%;min-height:62px;display:flex;align-items:center;justify-content:space-between;background:#fff;color:#616060;box-shadow:0 4px 10px 0 rgba(0,0,0,.1);font-size:.8571428571em}.bcf--list__element .topic-preview__content__infos{padding:8px 12px;width:100%;display:flex;justify-content:space-between;flex-direction:column}.bcf--list__element .topic-preview__content__infos .topic-preview__status{margin-bottom:calc(12px / 2)}.bcf--list__element .topic-preview__content__infos .infos{width:100%;line-height:1.5}.bcf--list__element .topic-preview__content__infos .infos strong{color:#2f374a}.bcf--list__element .topic-preview__content__infos .infos__assigned,.bcf--list__element .topic-preview__content__infos .infos__priority{width:100%;display:flex}.bcf--list__element .topic-preview__content__infos .infos__assigned strong,.bcf--list__element .topic-preview__content__infos .infos__priority strong{display:inline-flex}.bcf--list__element .topic-preview__content__infos .infos__assigned span,.bcf--list__element .topic-preview__content__infos .infos__priority span{padding:0 6px;display:inline-flex;flex-basis:58%}.bcf--list__element .topic-preview__content__infos .see{margin-top:12px;width:100%;display:flex;align-items:center;justify-content:space-between}.placeholder{background-color:#fff}.placeholder--assigned,.placeholder--btns,.placeholder--element,.placeholder--index-date,.placeholder--priority,.placeholder--recap,.placeholder--snapshot,.placeholder--status{margin:calc(12px / 2) 0}.placeholder--assigned span,.placeholder--btns span,.placeholder--element span,.placeholder--index-date span,.placeholder--priority span,.placeholder--recap span,.placeholder--snapshot span,.placeholder--status span{margin-right:calc(12px / 2);width:30%;height:12px;display:inline-block;background-color:#f8f8f8;border-radius:3px;animation:placeholder 1s ease infinite}.placeholder--status span{height:27px;width:71px;animation-delay:50ms}.placeholder--priority span{width:50%}.placeholder--priority span:nth-child(1){animation-delay:.1s}.placeholder--assigned span{width:50%}.placeholder--assigned span:nth-child(1){animation-delay:.15s}.placeholder--btns span{height:calc(12px * 3);width:48%}.placeholder--btns span:nth-child(1){animation-delay:.2s}.placeholder--btns span:nth-child(2){animation-delay:.25s;margin-right:0}.placeholder--index-date span{width:116px;height:27px;animation-delay:50ms}.placeholder--snapshot span{width:376px;height:217px;animation-delay:.1s}.placeholder--element span{width:376px;height:32px;animation-delay:.15s}.placeholder--recap span{width:376px;height:96px;animation-delay:.2s}.bcf--view{margin-top:12px;height:calc(100% - 32px - 12px)}.bcf--view__report{padding:0 12px;margin-bottom:12px;display:flex;align-items:center;justify-content:space-between}.bcf--view__report .bimdata-search-bar{width:calc(100% - 32px - 12px)}.bcf--view__topics{height:calc(100% - 32px - 12px - 38px)}.bcf--view__topics .bimdata-empty{padding-top:82px;height:auto}.bcf--view__topics .bimdata-empty p{margin:26px 0;color:#2f374a;font-size:1.1428571429em}',
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataBCFListView: Fb,
                BIMDataBCFDetailView: Qb,
                BIMDataBCFEditView: Uy,
                BIMDataLoading: Wv,
                BIMDataIcon: El,
                BIMDataBCFIcon: Cb,
                BIMDataExportIcon: qy,
                BIMDataImportIcon: Gy,
                BIMDataMenuIcon: lb
            },
            data: () => ({
                topics: null,
                elementSelectionListeners: [],
                MenuActive: !1
            }),
            props: {
                active: {
                    type: Boolean,
                    default: !1
                }
            },
            directives: {
                clickaway: Pl
            },
            computed: {
                ...Yy({
                    view: e => e.view,
                    loading: e => e.loading,
                    listTopics: e => e.topics
                }),
                ...Ky({
                    accessToken: e => e.accessToken,
                    apiClient: e => e.apiClient,
                    ifcs: e => e.ifcs
                })
            },
            watch: {
                apiClient: {
                    handler(e) {
                        this.setApiClient(e)
                    },
                    immediate: !0
                },
                ifcs: {
                    handler(e) {
                        e && this.setIfcIds(e.map(e => e.id))
                    },
                    immediate: !0
                }
            },
            beforeCreate() {
                this.$store.registerModule("bcf", {
                    namespaced: !0,
                    state: {
                        selectedTopic: null,
                        bcfRoot: null,
                        loading: !1,
                        accessToken: null,
                        cloudId: null,
                        projectId: null,
                        ifcIds: null,
                        apiUrl: null,
                        view: "BIMDataBCFListView",
                        apiClient: null,
                        user: null,
                        topics: null,
                        viewpoints: new Map,
                        comments: new Map,
                        extensions: null
                    },
                    getters: Wy,
                    actions: Hy,
                    mutations: $y
                })
            },
            created() {
                if (!this.$plugins.viewer3D) throw new Error("BCF cannot work without viewer3D plugin.");
                this.$emit = (e, t) => this.$hub.emit(e, t), this.$hub.on("select-objects", this.selectElements), this.$hub.on("deselect-objects", this.deselectElements), this.setBcfRoot(this);
                const e = this.$watch(() => this.active, () => {
                    this.active && (this.setInitialConfig({
                        accessToken: this.accessToken,
                        apiUrl: this.$utils.getApiUrl(),
                        cloudId: this.$utils.getCloudId(),
                        projectId: this.$utils.getProjectId()
                    }), this.init(), e())
                })
            },
            methods: {
                ...Xy({
                    setApiClient: "SET_API_CLIENT",
                    setIfcIds: "SET_IFCIDS",
                    setInitialConfig: "SET_INITIAL_CONFIG",
                    setBcfRoot: "SET_BCF_ROOT",
                    setLoading: "SET_LOADING"
                }),
                ...Zy(["init", "loadProjectTopics", "importBcf"]),
                selectElements(e = {}) {
                    const {
                        trigger: t,
                        ids: i
                    } = e;
                    t !== this && this.elementSelectionListeners.forEach(e => {
                        e.selectElements({
                            ids: i
                        })
                    })
                },
                deselectElements(e = {}) {
                    const {
                        trigger: t,
                        ids: i
                    } = e;
                    t !== this && this.elementSelectionListeners.forEach(e => {
                        e.deselectElements({
                            ids: i
                        })
                    })
                },
                registerOnElementChangeSelect(e) {
                    this.elementSelectionListeners.push(e)
                },
                unregisterOnElementChangeSelect(e) {
                    this.elementSelectionListeners = this.elementSelectionListeners.filter(t => t !== e)
                },
                async saveAs(e, t) {
                    const i = await e.arrayBuffer(),
                        r = new Blob([i], {
                            type: "application/octet-stream"
                        }),
                        n = window.URL,
                        s = document.createElement("a");
                    s.download = t, s.rel = "noopener", s.href = n.createObjectURL(r), setTimeout((function() {
                        n.revokeObjectURL(s.href)
                    }), 4e4), setTimeout((function() {
                        s.click()
                    }), 0)
                },
                async onExportBCFClick() {
                    this.setLoading(!0);
                    const e = await fetch(`${this.$utils.getApiUrl()}/bcf/2.1/projects/${this.$utils.getProjectId()}/export?access_token=${this.accessToken}`),
                        t = decodeURI(e.headers.get("Content-Disposition")).match("[^']*$");
                    t && t[0], e.ok ? (this.setLoading(!1), await this.saveAs(e, t), this.$hub.emit("alert", {
                        type: "success",
                        message: this.$t("bcf.success_export_bcf")
                    }), this.MenuActive = !1) : (this.$hub.emit("alert", {
                        type: "error",
                        message: this.$t("bcf.error_export_bcf")
                    }), this.setLoading(!1))
                },
                async handleFileUpload() {
                    this.setLoading(!0);
                    const e = new FormData;
                    e.append("file", this.$refs.file.files[0]);
                    const t = await fetch(`${this.$utils.getApiUrl()}/bcf/2.1/projects/${this.$utils.getProjectId()}/import`, {
                        headers: {
                            authorization: "Bearer " + this.accessToken
                        },
                        method: "POST",
                        body: e
                    });
                    if (t.ok) this.$hub.emit("alert", {
                        type: "success",
                        message: this.$t("bcf.success_import_bcf")
                    }), this.loadProjectTopics(), this.setLoading(!1);
                    else {
                        const e = await t.json();
                        this.$hub.emit("alert", {
                            type: "error",
                            message: e[0]
                        }), this.setLoading(!1)
                    }
                },
                onImportBCFClick() {
                    this.$refs.file.dispatchEvent(new MouseEvent("click")), this.MenuActive = !1
                },
                onReportAProblemClick() {
                    this.$store.commit("bcf/SET_SELECTED_TOPIC", null), this.$store.commit("bcf/SET_VIEW", "BIMDataBCFEditView")
                }
            },
            destroyed() {
                this.$store.unregisterModule("bcf")
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        tooltip: "bcf.tooltip",
        keepActive: !0,
        icon: {
            component: Cb,
            props: {
                name: "BIMDataBCF"
            }
        },
        i18n: {
            en: {
                bcf: {
                    tooltip: "BCF",
                    btn_report: "Report an issue",
                    btn_export: "Export BCF format",
                    element_index: "Index",
                    btn_import: "Import BCF",
                    element_priority: "Priority",
                    element_title: "Title",
                    element_creator: "Creator",
                    element_date: "Date",
                    element_assigned: "Assigned to",
                    element_type: "Type",
                    element_description: "Description",
                    element_due_date: "Due date",
                    element_informations: "Informations",
                    element_status: "Status",
                    element_phase: "Phase",
                    element_tags: "Tags",
                    element_empty: "Not specified",
                    btn_see: "See",
                    btn_elements: "Elements",
                    btn_validate: "Validate",
                    new_error: " New error",
                    new_issue: "Create a new issue",
                    btn_comment: "Publish",
                    btn_reply: "Reply",
                    btn_cancel: "Cancel",
                    element_delete: "Delete",
                    btn_delete_issue: "Yes, delete issue",
                    btn_cancel_issue: " Cancel, keep issue",
                    no_search: "No topic to display, modify your search",
                    no_filter: "No topic to display, modify your filters",
                    bucket_title: "Bucket",
                    bucket_btn: "Validate the selection",
                    bucket_empty: "Please select one or more elements in the model to add them to the selection.",
                    bucket_tip: "Tip: For a multiple selection, hold down the Ctrl key",
                    bucket_selection: "Bucket selection",
                    btn_add_elements: "add elements",
                    comment_responses: "responses",
                    edit_existing: "Edit existing",
                    add_andswer: "add an answer",
                    write_comment: "write a comment",
                    no_element: "No relevant element",
                    topic_created: "Created issue",
                    topic_updated: "Updated issue",
                    topic_deleted: "Deleted issue",
                    "title_modal_leave-page": "Are you sure you want to leave this page? There may be information not validated.",
                    "btn_modal_go-back": "Yes, go back",
                    "btn_modal_keep-view": "No, stay here",
                    success_import_bcf: "Import successful",
                    success_export_bcf: "Export successful",
                    error_export_bcf: "Export failure"
                }
            },
          }
    };
    var Jy = {
        name: "alerts",
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("transition-group", {
                    staticClass: "bimdata-list bimdata-alert",
                    attrs: {
                        name: "list",
                        tag: "ul"
                    }
                }, e._l(e.alerts, (function(t) {
                    return i("li", {
                        key: t.id,
                        staticClass: "bimdata-alert__content"
                    }, [i("div", {
                        staticClass: "m-l-6 bimdata-alert__content__type",
                        class: ["bimdata-alert__content__type-" + t.type]
                    }, [e._v(e._s(e.$t("alerts." + t.type)))]), e._v(" "), i("div", {
                        staticClass: "bimdata-alert__content__message"
                    }, [e._v(e._s(t.message))]), e._v(" "), i("div", {
                        staticClass: "bimdata-alert__content__close",
                        on: {
                            click: function(i) {
                                return e.closeAlert(t)
                            }
                        }
                    }, [i("BIMDataIcon", {
                        staticClass: "icon-close",
                        attrs: {
                            "icon-name": "close",
                            width: "16",
                            height: "16",
                            x: "24",
                            y: "24"
                        }
                    }, [i("BIMDataCrossIcon")], 1)], 1)])
                })), 0)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-d71c9c66_0", {
                source: '.bimdata-alert{width:412px;display:flex;flex-direction:column-reverse}.bimdata-alert__content{height:35px;display:flex;justify-content:space-between;align-items:center;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);overflow:hidden}.bimdata-alert__content__type{min-width:60px}.bimdata-alert__content__type::before{width:2px;height:100%;content:"";display:block;position:absolute;top:0;left:0}.bimdata-alert__content__type-infos{color:#205dbd}.bimdata-alert__content__type-infos::before{background-color:#205dbd}.bimdata-alert__content__type-success{color:#00af50}.bimdata-alert__content__type-success::before{background-color:#00af50}.bimdata-alert__content__type-warning{color:#ff9100}.bimdata-alert__content__type-warning::before{background-color:#ff9100}.bimdata-alert__content__type-error{color:#ff3d1e}.bimdata-alert__content__type-error::before{background-color:#ff3d1e}.bimdata-alert__content__message{min-width:310px;text-align:center}.bimdata-alert__content__close{cursor:pointer;display:flex;align-items:center;margin-right:7px}.bimdata-alert .list-enter-active,.bimdata-alert .list-leave-active{transition:all .3s}.bimdata-alert .list-enter,.bimdata-alert .list-leave-to{opacity:0;transform:translateY(12px)}',
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataIcon: El,
                BIMDataCrossIcon: $l
            },
            types: ["infos", "error", "success", "warning"],
            data: () => ({
                alerts: [],
                timeoutIds: new WeakMap
            }),
            props: {
                delay: {
                    type: Number,
                    default: 3e3
                },
                maxAlert: {
                    type: Number,
                    default: 4
                }
            },
            created() {
                this.$hub.on("alert", this.pushAlert)
            },
            methods: {
                pushAlert(e) {
                    if ("object" != typeof e) throw new Error("Alert must be an object");
                    const {
                        type: t = "infos",
                        message: i = this.$t("alert.noMessage"),
                        delay: r = this.delay
                    } = e;
                    if (e.id = e.type + Date.now(), !this.$options.types.includes(t)) throw new Error(`Unknown alert type : ${t}`);
                    if (this.alerts.length >= this.maxAlert) console.log(`Alert of type : '${e.type}' and message :'${e.message} not shown'`);
                    else {
                        this.alerts.push(e);
                        const t = setTimeout(() => {
                            this.alerts = this.alerts.filter(t => t !== e)
                        }, r);
                        this.timeoutIds.set(e, t)
                    }
                },
                closeAlert(e) {
                    clearTimeout(this.timeoutIds.get(e)), this.alerts = this.alerts.filter(t => t !== e)
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        display: {
            content: "footer"
        },
        i18n: {
            en: {
                alerts: {
                    warning: "Warning",
                    infos: "Infos",
                    success: "Success",
                    error: "Error",
                    noMessage: "No message provided"
                }
            },
        }
    };
    const {
        mapState: ew
    } = Ma("viewer");
    var tw = {
            name: "fullscreen",
            component: gl({}, void 0, {
                render: () => null,
                props: {
                    active: Boolean
                },
                computed: {
                    ...ew(["viewerElement"])
                },
                created() {
                    document.addEventListener("fullscreenchange", this.handleFullscreenChange)
                },
                destroyed() {},
                watch: {
                    active(e) {
                        e ? this.viewerElement.requestFullscreen() : document.fullscreenElement && document.exitFullscreen()
                    }
                },
                methods: {
                    handleFullscreenChange(e) {
                        !document.fullscreenElement && this.active && this.$emit("set-inactive")
                    }
                }
            }, void 0, void 0, void 0, !1, void 0, void 0, void 0),
            tooltip: "fullscreen.tooltip",
            display: {
                iconPosition: "right",
                content: "free"
            },
            keepActive: !0,
            icon: {
                component: gl({
                    render: function() {
                        var e = this.$createElement;
                        return (this._self._c || e)("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M0 0H4.8995e-05H2.19545H8.05005V2.15625H2.19545V7.90625H0V0ZM20.8045 2.15628L14.95 2.15628V3.05176e-05H23V2.15628V7.90628H20.8045V2.15628ZM4.8995e-05 23H0V15.0938H2.19545V20.8437H8.05005V23H2.19545H4.8995e-05ZM14.95 23L23 23V20.8438V15.0938H20.8045V20.8438H14.95V23Z",
                                fill: "#000"
                            }
                        })
                    },
                    staticRenderFns: []
                }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
                props: {
                    name: "enterfullscreenicon",
                    width: 23,
                    height: 23,
                    x: 23,
                    y: 23
                }
            },
            iconActive: {
                component: gl({
                    render: function() {
                        var e = this.$createElement;
                        return (this._self._c || e)("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M8.05003 7.90625H8.04998H5.85458L-1.71661e-05 7.90625L-1.69776e-05 5.75L5.85458 5.75L5.85458 0H8.05003L8.05003 7.90625ZM17.1454 5.75003L22.9999 5.75003V7.90628L14.9499 7.90628V5.75003L14.9499 2.79065e-05L17.1454 2.80984e-05V5.75003ZM8.04994 15.0938H8.04999L8.04999 23H5.85453L5.85453 17.25H-6.10352e-05V15.0937L5.85453 15.0938H8.04994ZM22.9999 15.0938L14.9499 15.0938V17.25V23H17.1454V17.25L22.9999 17.25L22.9999 15.0938Z",
                                fill: "#293043"
                            }
                        })
                    },
                    staticRenderFns: []
                }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0),
                props: {
                    name: "exitfullscreenicon",
                    width: 23,
                    height: 23,
                    x: 23,
                    y: 23
                }
            },
            i18n: {
                en: {
                    fullscreen: {
                        tooltip: "Fullscreen"
                    }
                },
            }
        },
        iw = {
            component: tc,
            name: "warning",
            display: {
                content: "header",
                position: -1
            },
            i18n: {
                en: {
                    warningList: {
                        title: "Errors / Warnings",
                        error: "error",
                        errors: "errors",
                        warning: "warning",
                        warnings: "warnings",
                        ok: "Ok",
                        showWarningsAuto: "Show warnings automatically."
                    }
                },
            }
        },
        rw = {
            split: {
                splitIfc: "Split IFC",
                "export-modal": {
                    title: "Export selection",
                    label: "Selection export name",
                    "input-error": "Name is mandatory",
                    checkbox: "Keep spatiale tree",
                    export: "Export"
                },
                "success-modal": {
                    title: "Success",
                    text: "Your export will be available in the ifc list of your project in a few moments.",
                    button: "Ok"
                }
            }
        },
        nw = {
            split: {
                splitIfc: "Diviser l'IFC",
                "export-modal": {
                    title: "Exporter la sélection",
                    label: "Nom de votre export de sélection",
                    "input-error": "Le nom est obligatoire",
                    checkbox: "Conserver l'arborescence spatiale",
                    export: "Exporter"
                },
                "success-modal": {
                    title: "Succès",
                    text: "Votre export sera disponnible dans la liste IFC de votre projet dans quelques instant.",
                    button: "Terminé"
                }
            }
        };
    const sw = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "split-modal-success"
            }, [i("div", {
                staticClass: "split-modal-success__close"
            }, [i("BIMDataPieSpinner", {
                attrs: {
                    delay: 5
                },
                on: {
                    stop: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataIcon", {
                staticClass: "icon-close",
                attrs: {
                    "icon-name": "close",
                    width: "16",
                    height: "16",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1)], 1), e._v(" "), i("div", {
                staticClass: "split-modal-success__title"
            }, [i("h2", [e._v(e._s(e.$t("split.success-modal.title")))]), e._v(" "), i("span", {
                staticClass: "split-modal-success__title--icon"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-green",
                attrs: {
                    width: "14",
                    height: "14",
                    x: "23",
                    y: "23"
                }
            }, [i("BIMDataSuccessIcon")], 1)], 1)]), e._v(" "), i("div", {
                staticClass: "split-modal-success__text"
            }, [e._v(e._s(e.$t("split.success-modal.text")))]), e._v(" "), i("div", {
                staticClass: "split-modal-success__button"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                on: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [e._v(e._s(e.$t("split.success-modal.button")))])], 1)])
        },
        staticRenderFns: []
    }, void 0, {
        components: {
            BIMDataButton: Ml,
            BIMDataIcon: El,
            BIMDataSuccessIcon: Kv,
            BIMDataCrossIcon: $l,
            BIMDataPieSpinner: Qv
        }
    }, void 0, !1, void 0, !1, void 0, void 0, void 0);
    const ow = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "split-export-modal"
            }, [i("div", {
                staticClass: "split-export-modal__close"
            }, [i("BIMDataIcon", {
                staticClass: "bimdata-fill-default",
                attrs: {
                    "icon-name": "close",
                    width: "20",
                    height: "20",
                    x: "24",
                    y: "24"
                },
                nativeOn: {
                    click: function(t) {
                        return e.$emit("close")
                    }
                }
            }, [i("BIMDataCrossIcon")], 1)], 1), e._v(" "), i("div", {
                staticClass: "split-export-modal__content"
            }, [i("h2", {
                staticClass: "split-export-modal__content__title"
            }, [e._v(e._s(e.$t("split.export-modal.title")))]), e._v(" "), e.errorDisplayed ? i("div", {
                staticClass: "split-export-modal__content__error"
            }, [e._v(e._s(e.errorMessage))]) : e._e(), e._v(" "), i("div", {
                staticClass: "split-export-modal__content__input"
            }, [i("BIMDataInput", {
                attrs: {
                    placeholder: e.$t("split.export-modal.label"),
                    error: !e.fileName,
                    errorMessage: e.$t("split.export-modal.input-error"),
                    loading: e.loading
                },
                model: {
                    value: e.fileName,
                    callback: function(t) {
                        e.fileName = t
                    },
                    expression: "fileName"
                }
            })], 1), e._v(" "), i("div", {
                staticClass: "split-export-modal__content__checkbox"
            }, [i("BIMDataCheckbox", {
                class: {
                    disabled: e.loading
                },
                attrs: {
                    text: e.$t("split.export-modal.checkbox")
                },
                model: {
                    value: e.exportStructure,
                    callback: function(t) {
                        e.exportStructure = t
                    },
                    expression: "exportStructure"
                }
            })], 1), e._v(" "), i("div", {
                staticClass: "split-export-modal__export"
            }, [i("BIMDataButton", {
                staticClass: "bimdata-btn__fill bimdata-btn__fill--primary bimdata-btn__radius",
                attrs: {
                    disabled: !e.fileName || e.loading
                },
                on: {
                    click: e.onExportClick
                }
            }, [e._v("\n        " + e._s(e.$t("split.export-modal.export")) + "\n      ")])], 1)])])
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-fd20f76a_0", {
            source: ".split-export-modal,.split-modal-success{margin:12px;align-items:center;display:flex;flex-direction:column;justify-content:space-between;min-width:500px;position:relative}.split-export-modal__error,.split-modal-success__error{color:#ff3d1e}.split-export-modal__close,.split-modal-success__close{width:100%;display:flex;flex-direction:row-reverse}.split-export-modal__close *,.split-modal-success__close *{cursor:pointer}.split-export-modal__content,.split-modal-success__content{width:100%;padding:20px 36px;display:flex;flex-direction:column;align-items:center}.split-export-modal__content__title,.split-modal-success__content__title{margin-top:0;font-size:1.4285714286em}.split-export-modal__content__export,.split-modal-success__content__export{margin:20px 0}.split-export-modal__content__checkbox,.split-export-modal__content__input,.split-export-modal__content__warning,.split-modal-success__content__checkbox,.split-modal-success__content__input,.split-modal-success__content__warning{width:100%}.split-export-modal__content__input input,.split-modal-success__content__input input{color:#2f374a}.split-export-modal__content__warning,.split-modal-success__content__warning{margin-top:9px;color:#ff9100;font-size:.8571428571em}.split-export-modal__export,.split-modal-success__export{margin-top:calc(12px * 3)}.split-modal-success{width:500px}.split-modal-success__close{position:absolute;right:0;top:0}.split-modal-success__close .bimdata-pie-spinner{height:23px;width:23px}.split-modal-success__title{margin:calc(12px * 3) 0 calc(12px * 2);display:inline-flex;align-items:center}.split-modal-success__title h2{margin:0;font-size:1.4285714286em}.split-modal-success__title--icon{margin-left:calc(12px / 2)}.split-modal-success__text{margin:0;width:300px;text-align:center;line-height:1.5;color:#7b7b7b;font-size:.8571428571em}.split-modal-success__button{margin:calc(12px * 2) 0}",
            map: void 0,
            media: void 0
        })
    }), {
        components: {
            BIMDataIcon: El,
            BIMDataCrossIcon: $l,
            BIMDataCheckbox: Jl,
            BIMDataButton: Ml,
            BIMDataInput: eb
        },
        data: () => ({
            fileName: "",
            exportStructure: !0,
            selectedObjectIds: null,
            ifcToSplit: null,
            errorDisplayed: !1,
            errorMessage: "",
            loading: !1
        }),
        created() {
            if (this.selectedObjectIds = this.$utils.getSelectedObjectIds(), !this.selectedObjectIds.length) throw "Cannot split ifc without selected elements.";
            if (this.ifcToSplit = this.$utils.getSelectedIfcs()[0], !this.ifcToSplit) throw "No ifc selected, impossible to split.";
            const e = this.ifcToSplit.document.file_name.split(".");
            e.pop();
            const t = e.join(".");
            this.fileName = t + "-split-" + (new Date).toLocaleDateString(this.$i18n.locale).replace(/\//g, "-")
        },
        methods: {
            onExportClick() {
                this.fileName ? this.split() : this.errorDisplayed = !0
            },
            async split() {
                this.loading = !0;
                try {
                    await (new this.$bimdataApiClient.IfcApi).exportIfc(this.$utils.getCloudId(), this.ifcToSplit.id, this.$utils.getProjectId(), {
                        structure: this.exportStructure ? "UPDATED" : "NONE",
                        file_name: this.fileName + ".ifc",
                        uuids: this.selectedObjectIds
                    }), this.$plugins.modalManager.pushModal(sw), this.$emit("close")
                } catch (e) {
                    this.errorDisplayed = !0, this.errorMessage = e.message
                } finally {
                    this.loading = !1
                }
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);
    var aw = {
        name: "split",
        component: {
            render() {},
            created() {
                const e = this.$plugins.rightClickMenu;
                if (!e) throw "Split plugin need right click menu to work properly";
                e.registerCommand({
                    label: "split.splitIfc",
                    group: 3,
                    position: 1,
                    execute: this.onSplitClick,
                    predicate: () => this.$utils.getSelectedObjectIds().length && 1 === this.$utils.getSelectedIfcs().length
                })
            },
            methods: {
                onSplitClick() {
                    this.$plugins.modalManager.pushModal(ow)
                }
            }
        },
        i18n: {
            fr: nw,
            en: rw
        }
    };
    var lw = {
            name: "contextSwitch",
            component: gl({}, void 0, {
                render: () => null,
                props: ["active"],
                watch: {
                    active(e) {
                        e ? this.enableContext("2D") : this.enableContext("3D")
                    }
                },
                methods: {
                    enableContext(e) {
                        this.$utils.getViewerComponent().plugins.forEach(t => {
                            t.context || t.contexts && t.contexts.length || (t.context = "3D");
                            const i = this.getPluginContexts(t);
                            t.enabled = i.includes(e)
                        })
                    },	
                    getPluginContexts(e) {
                        const t = [];
                        if (e.context && t.push(e.context), e.contexts) {
                            if ("function" === (e.contexts[Symbol.iterator], !1)) throw `Plugin contexts must be an iterable like an Array or a Set instead of ${typeof e.contexts}.`;
                            t.push(...e.contexts)
                        }
                        return t
                    }
                }
            }, void 0, void 0, void 0, !1, void 0, void 0, void 0),
            display: {
                iconPosition: "right"
            },
            keepActive: !0,
            contexts: ["2D", "3D"],
			tooltip: "Switch 2D-3D",
            icon: {
                svg: {
                    path: '\n       <rect x="4" y="46" width="42" height="22" rx="11" transform="rotate(-90 4 46)" fill="#D8D8D8"/>\n      <rect x="5.375" y="25" width="19.25" height="19.25" rx="9.625" fill="#2F374A"/>\n      <path d="M36.249 18H31.5908V17.3506L34.0518 14.6162C34.4163 14.2028 34.667 13.8675 34.8037 13.6104C34.9437 13.3499 35.0137 13.0814 35.0137 12.8047C35.0137 12.4336 34.9014 12.1292 34.6768 11.8916C34.4521 11.654 34.1527 11.5352 33.7783 11.5352C33.3291 11.5352 32.9792 11.6637 32.7285 11.9209C32.4811 12.1748 32.3574 12.5296 32.3574 12.9854H31.4541C31.4541 12.3311 31.6641 11.8021 32.084 11.3984C32.5072 10.9948 33.0719 10.793 33.7783 10.793C34.4391 10.793 34.9616 10.9671 35.3457 11.3154C35.7298 11.6605 35.9219 12.1211 35.9219 12.6973C35.9219 13.3971 35.4759 14.2305 34.584 15.1973L32.6797 17.2627H36.249V18ZM37.4404 18V10.8906H39.4473C40.0658 10.8906 40.6126 11.0273 41.0879 11.3008C41.5632 11.5742 41.9294 11.9632 42.1865 12.4678C42.4469 12.9723 42.5788 13.5518 42.582 14.2061V14.6602C42.582 15.3307 42.4518 15.9183 42.1914 16.4229C41.9342 16.9274 41.5648 17.3148 41.083 17.585C40.6045 17.8551 40.0462 17.9935 39.4082 18H37.4404ZM38.3779 11.6621V17.2334H39.3643C40.0869 17.2334 40.6484 17.0088 41.0488 16.5596C41.4525 16.1104 41.6543 15.4707 41.6543 14.6406V14.2256C41.6543 13.4183 41.4639 12.7917 41.083 12.3457C40.7054 11.8965 40.1683 11.6686 39.4717 11.6621H38.3779Z" fill="#606060"/>\n      <path d="M33.2852 36.084H34.1523C34.5898 36.0801 34.9355 35.9668 35.1895 35.7441C35.4473 35.5215 35.5762 35.1992 35.5762 34.7773C35.5762 34.3711 35.4688 34.0566 35.2539 33.834C35.043 33.6074 34.7188 33.4941 34.2812 33.4941C33.8984 33.4941 33.584 33.6055 33.3379 33.8281C33.0918 34.0469 32.9688 34.334 32.9688 34.6895H31.5449C31.5449 34.252 31.6602 33.8535 31.8906 33.4941C32.125 33.1348 32.4492 32.8555 32.8633 32.6562C33.2812 32.4531 33.748 32.3516 34.2637 32.3516C35.1152 32.3516 35.7832 32.5664 36.2676 32.9961C36.7559 33.4219 37 34.0156 37 34.7773C37 35.1602 36.877 35.5215 36.6309 35.8613C36.3887 36.1973 36.0742 36.4512 35.6875 36.623C36.1562 36.7832 36.5117 37.0352 36.7539 37.3789C37 37.7227 37.123 38.1328 37.123 38.6094C37.123 39.375 36.8594 39.9844 36.332 40.4375C35.8086 40.8906 35.1191 41.1172 34.2637 41.1172C33.4434 41.1172 32.7715 40.8984 32.248 40.4609C31.7246 40.0234 31.4629 39.4414 31.4629 38.7148H32.8867C32.8867 39.0898 33.0117 39.3945 33.2617 39.6289C33.5156 39.8633 33.8555 39.9805 34.2812 39.9805C34.7227 39.9805 35.0703 39.8633 35.3242 39.6289C35.5781 39.3945 35.7051 39.0547 35.7051 38.6094C35.7051 38.1602 35.5723 37.8145 35.3066 37.5723C35.041 37.3301 34.6465 37.209 34.123 37.209H33.2852V36.084ZM38.6875 41V32.4688H41.207C41.9609 32.4688 42.6289 32.6367 43.2109 32.9727C43.7969 33.3086 44.25 33.7852 44.5703 34.4023C44.8906 35.0195 45.0508 35.7266 45.0508 36.5234V36.9512C45.0508 37.7598 44.8887 38.4707 44.5645 39.084C44.2441 39.6973 43.7852 40.1699 43.1875 40.502C42.5938 40.834 41.9121 41 41.1426 41H38.6875ZM40.1699 33.6641V39.8164H41.1367C41.9141 39.8164 42.5098 39.5742 42.9238 39.0898C43.3418 38.6016 43.5547 37.9023 43.5625 36.9922V36.5176C43.5625 35.5918 43.3613 34.8848 42.959 34.3965C42.5566 33.9082 41.9727 33.6641 41.207 33.6641H40.1699Z" fill="#2F374A"/>', 
                    options: {
                        width: 35,
                        height: 35,
                        x: 50,
                        y: 50
                    }
                }
            },
            iconActive: {
                svg: {
                    path: '\n        <rect x="4" y="46" width="42" height="22" rx="11" transform="rotate(-90 4 46)" fill="white"/>\n        <rect x="5.375" y="5.75" width="19.25" height="19.25" rx="9.625" fill="#2F374A"/>\n        <path d="M37.4277 20H31.5801V18.8398L34.3398 15.8984C34.7188 15.4844 34.998 15.123 35.1777 14.8145C35.3613 14.5059 35.4531 14.2129 35.4531 13.9355C35.4531 13.5566 35.3574 13.2598 35.166 13.0449C34.9746 12.8262 34.7012 12.7168 34.3457 12.7168C33.9629 12.7168 33.6602 12.8496 33.4375 13.1152C33.2188 13.377 33.1094 13.7227 33.1094 14.1523H31.4102C31.4102 13.6328 31.5332 13.1582 31.7793 12.7285C32.0293 12.2988 32.3809 11.9629 32.834 11.7207C33.2871 11.4746 33.8008 11.3516 34.375 11.3516C35.2539 11.3516 35.9355 11.5625 36.4199 11.9844C36.9082 12.4062 37.1523 13.002 37.1523 13.7715C37.1523 14.1934 37.043 14.623 36.8242 15.0605C36.6055 15.498 36.2305 16.0078 35.6992 16.5898L33.7598 18.6348H37.4277V20ZM38.6523 20V11.4688H41.2773C42.0273 11.4688 42.6973 11.6387 43.2871 11.9785C43.8809 12.3145 44.3438 12.7949 44.6758 13.4199C45.0078 14.041 45.1738 14.748 45.1738 15.541V15.9336C45.1738 16.7266 45.0098 17.4316 44.6816 18.0488C44.3574 18.666 43.8984 19.1445 43.3047 19.4844C42.7109 19.8242 42.041 19.9961 41.2949 20H38.6523ZM40.4102 12.8926V18.5879H41.2598C41.9473 18.5879 42.4727 18.3633 42.8359 17.9141C43.1992 17.4648 43.3848 16.8223 43.3926 15.9863V15.5352C43.3926 14.668 43.2129 14.0117 42.8535 13.5664C42.4941 13.1172 41.9688 12.8926 41.2773 12.8926H40.4102Z" fill="#2F374A"/>\n        <path d="M32.9043 35.0059H33.583C34.0094 34.9993 34.3447 34.887 34.5889 34.6689C34.833 34.4508 34.9551 34.1562 34.9551 33.7852C34.9551 32.9518 34.54 32.5352 33.71 32.5352C33.3193 32.5352 33.0068 32.6475 32.7725 32.8721C32.5413 33.0934 32.4258 33.388 32.4258 33.7559H31.5225C31.5225 33.1927 31.7275 32.7256 32.1377 32.3545C32.5511 31.9801 33.0752 31.793 33.71 31.793C34.3805 31.793 34.9062 31.9704 35.2871 32.3252C35.668 32.68 35.8584 33.1732 35.8584 33.8047C35.8584 34.1139 35.7575 34.4134 35.5557 34.7031C35.3571 34.9928 35.0853 35.2093 34.7402 35.3525C35.1309 35.4762 35.432 35.6813 35.6436 35.9678C35.8584 36.2542 35.9658 36.6042 35.9658 37.0176C35.9658 37.6556 35.7575 38.1618 35.3408 38.5361C34.9242 38.9105 34.3822 39.0977 33.7148 39.0977C33.0475 39.0977 32.5039 38.917 32.084 38.5557C31.6673 38.1943 31.459 37.7174 31.459 37.125H32.3672C32.3672 37.4993 32.4893 37.7988 32.7334 38.0234C32.9775 38.248 33.3047 38.3604 33.7148 38.3604C34.151 38.3604 34.4847 38.2464 34.7158 38.0186C34.9469 37.7907 35.0625 37.4635 35.0625 37.0371C35.0625 36.6237 34.9355 36.3063 34.6816 36.085C34.4277 35.8636 34.0615 35.7497 33.583 35.7432H32.9043V35.0059ZM37.4404 39V31.8906H39.4473C40.0658 31.8906 40.6126 32.0273 41.0879 32.3008C41.5632 32.5742 41.9294 32.9632 42.1865 33.4678C42.4469 33.9723 42.5788 34.5518 42.582 35.2061V35.6602C42.582 36.3307 42.4518 36.9183 42.1914 37.4229C41.9342 37.9274 41.5648 38.3148 41.083 38.585C40.6045 38.8551 40.0462 38.9935 39.4082 39H37.4404ZM38.3779 32.6621V38.2334H39.3643C40.0869 38.2334 40.6484 38.0088 41.0488 37.5596C41.4525 37.1104 41.6543 36.4707 41.6543 35.6406V35.2256C41.6543 34.4183 41.4639 33.7917 41.083 33.3457C40.7054 32.8965 40.1683 32.6686 39.4717 32.6621H38.3779Z" fill="white"/>',
                    options: {
                        width: 35,
                        height: 35,
                        x: 50,
                        y: 50
                    }
                }
            }
        },
        cw = ({
            Matrix: e = DOMMatrixReadOnly,
            Quad: t = DOMQuad,
            viewport: i = {
                width: 0,
                height: 0
            },
            initTransform: r = new e,
            maxScale: n = 1 / 0,
            minScale: s = 0,
            fitViewRatio: o = 1
        }) => {
            const a = {
                maxScale: n,
                minScale: s,
                fitViewRatio: o,
                viewport: i,
                transform: r,
                translate(t = 0, i = 0) {
                    if ("number" != typeof t || "number" != typeof i) throw "dx and dy should be numbers.";
                    this.transform = (new e).translate(t, i).multiply(this.transform)
                },
                rotate(t = 0, i = {
                    x: 0,
                    y: 0
                }) {
                    if ("number" != typeof t) throw "Angle must be a number (degree)";
                    this.transform = this.transform.multiply((new e).translate(i.x, i.y).rotate(t).translate(-i.x, -i.y))
                },
                scale(e = 1, t = {
                    x: 0,
                    y: 0
                }) {
                    if (e < 0) throw "Scale factor should be > 0.";
                    let i = e;
                    const r = this.getScale();
                    r * i >= n && (i = n / r), r * i <= s && (i = s / r), this.transform = this.transform.scale(i, i, 1, t.x, t.y)
                },
                getTranslate(e = this.transform) {
                    return {
                        dx: e.e,
                        dy: e.f
                    }
                },
                getRotate(e = this.transform) {
                    return 180 * Math.atan2(e.b / this.getScale(), e.a / this.getScale()) / Math.PI
                },
                getScale(e = this.transform) {
                    return Math.sqrt(Math.pow(e.a, 2) + Math.pow(e.b, 2))
                },
                resetTranslate() {
                    this.setState({
                        translate: {
                            dx: 0,
                            dy: 0
                        }
                    })
                },
                resetRotate() {
                    this.setState({
                        rotate: 0
                    })
                },
                resetScale() {
                    this.setState({
                        scale: 1
                    })
                },
                setState({
                    rotate: t = this.getRotate(),
                    translate: i = this.getTranslate(),
                    scale: r = this.getScale()
                } = {}) {
                    if ("object" != typeof i) throw `'translate' argument should be an object, received '${typeof i}'.`;
                    if ("number" != typeof t) throw `'rotate' argument should be a number, received '${typeof t}'.`;
                    if ("number" != typeof r) throw `'scale' argument should be a number, received '${typeof r}'.`;
                    const {
                        dx: n = 0,
                        dy: s = 0
                    } = i;
                    this.transform = (new e).translate(n, s).rotate(t).scale(r)
                },
                fitView(t = {}, i = this.fitViewRatio) {
                    this.transform = (new e).rotate(this.getRotate());
                    const {
                        x: r,
                        y: n,
                        width: s,
                        height: o
                    } = this.getViewRectFromQuad(t), a = r + s / 2, l = n + o / 2, c = {
                        x: this.viewport.width / 2,
                        y: this.viewport.height / 2
                    }, h = Math.min(this.viewport.width / s, this.viewport.height / o), d = {
                        x: c.x - a,
                        y: c.y - l
                    };
                    this.translate(d.x, d.y), this.scale(h * i, this.getTransformedPoint(c))
                },
                getTransformedPoint(e) {
                    return this.transform.inverse().transformPoint(e)
                },
                getViewPoint(e) {
                    return this.transform.transformPoint(e)
                },
                getViewRectFromQuad(e = {}) {
                    return new t(...Object.values(e).map(this.getViewPoint.bind(this))).getBounds()
                }
            };
            return {
                translate: (e, t) => a.translate(e, t),
                rotate: (e, t) => a.rotate(e, a.getTransformedPoint(t)),
                scale: (e, t) => a.scale(e, a.getTransformedPoint(t)),
                fitView: (e, t) => a.fitView(e, t),
                getTransform: () => a.transform
            }
        };

    function hw() {
        const e = function*() {
            let e = 1;
            for (; e < Number.MAX_SAFE_INTEGER;) yield e++;
            throw "Cannot generate more ids"
        }();
        return () => e.next().value
    }

    function dw(e = 0) {
        if (e < 0 || 50 * e > 838860799) throw `Impossible to generate unique color from id ${e}.`;
        const t = [];
        return t.push(50 * e & 255), t.push((50 * e & 65280) >> 8), t.push((50 * e & 16711680) >> 16), `rgb(${t.join(",")})`
    }

    function uw(e, t = 1) {
        return `rgba(${e[0]},${e[1]},${e[2]},${t})`
    }

    function pw() {
        const e = hw(),
            t = new Map,
            i = new Map;
        return {
            on(r, n) {
                if ("function" != typeof n) throw `callback must be a function, get ${typeof n}`;
                const s = e();
                return t.set(s, {
                    eventName: r,
                    callback: n
                }), i.has(r) ? i.get(r).push(n) : i.set(r, [n]), s
            },
            once(e, t) {
                if ("function" != typeof t) throw `callback must be a function, get ${typeof t}`;
                const i = this.on(e, (...e) => {
                    this.off(i), t(...e)
                });
                return i
            },
            off(e) {
                const r = t.get(e);
                if (r) {
                    const {
                        eventName: n,
                        callback: s
                    } = r, o = i.get(n).filter(e => e !== s);
                    o.length ? i.set(n, o) : i.delete(n), t.delete(e)
                }
            },
            emit(e, t) {
                (i.get(e) || []).forEach(e => e(t))
            },
            clear() {
                t.clear(), i.clear()
            }
        }
    }

    function fw(e = {}) {
        return {
            ctrl: e.ctrlKey,
            alt: e.altKey,
            shift: e.shiftKey,
            meta: e.metaKey
        }
    }

    function _w(e = {}) {
        return {
            x: e.offsetX * window.devicePixelRatio,
            y: e.offsetY * window.devicePixelRatio
        }
    }

    function mw(e = {}) {
        const t = e.getContext("2d");
        if (!t) throw "Impossible to make renderer. Can not get canvas 2d context.";
        const i = pw(),
            r = new Map;

        function n() {
            const r = parseInt(e.clientWidth * window.devicePixelRatio),
                n = parseInt(e.clientHeight * window.devicePixelRatio);
            if (e.width !== r || e.height !== n) {
                const l = r - e.width,
                    c = n - e.height;
                o = r, a = n, [t, ...s().map(e => e.context)].forEach(e => {
                    e.canvas.width = o, e.canvas.height = a
                }), i.emit("resize", {
                    dx: l,
                    dy: c
                })
            }
            var o, a
        }

        function s() {
            return Array.from(r.values())
        }

        function o(e) {
            return t.drawImage(e.context.canvas, 0, 0), e
        }
        return n(), {
            transform: t.getTransform(),
            transformChanged: !0,
            setTransform(e) {
                this.transform !== e && (this.transform = e, this.transformChanged = !0)
            },
            getViewport: () => ({
                get width() {
                    return e.width
                },
                get height() {
                    return e.height
                }
            }),
            addLayer(t, i, n = !0, s = !0) {
                const o = function(t, i, r) {
                    return {
                        _objects: t,
                        get objects() {
                            return this._objects
                        },
                        set objects(e) {
                            this.rendered = !1, this.batchPath && this.materialsBatchPath.clear(), this._objects = e
                        },
                        visible: i,
                        context: gw(e.width, e.height),
                        rendered: !1,
                        setTransform(e) {
                            this.rendered = !1, this.context.setTransform(e)
                        },
                        batchPath: r,
                        materialsBatchPath: r ? new Map : void 0
                    }
                }(i, n, s);
                return r.set(t, o), o
            },
            setLayerObjects(e, t) {
                if (!r.has(e)) throw `Layer "${e}" does not exist.`;
                r.get(e).objects = t
            },
            render() {
                n(), this.transformChanged && (s().forEach(e => e.setTransform(this.transform)), this.transformChanged = !1);
                const e = s().filter(e => !e.rendered);
                e.length > 0 && (e.map(vw).forEach(yw), bw(t), s().filter(e => e.visible && e.objects.length).forEach(o))
            },
            ...i
        }
    }

    function gw(e, t) {
        const i = document.createElement("canvas");
        return i.width = e, i.height = t, i.getContext("2d")
    }

    function vw(e) {
        return bw(e.context), e
    }

    function bw(e) {
        return e.save(), e.resetTransform(), e.clearRect(0, 0, e.canvas.width, e.canvas.height), e.restore(), e
    }

    function yw(e) {
        if (e.batchPath) {
            const t = new Map;
            e.objects.forEach(e => {
                t.has(e.material) ? t.get(e.material).push(e) : t.set(e.material, [e])
            }), t.forEach((t, i) => {
                let r = null;
                e.materialsBatchPath.has(i) ? r = e.materialsBatchPath.get(i) : (r = function(e) {
                    const t = new Path2D;
                    return e.forEach(e => t.addPath(e.path)), t
                }(t), e.materialsBatchPath.set(i, r)), ww(e.context, r, i)
            })
        } else e.objects.forEach(t => ww(e.context, t.path, t.material));
        return e.rendered = !0, e
    }

    function ww(e, t, i) {
        ! function(e, t) {
            e.lineWidth = t.strokeStyle && t.strokeStyle.lineWidth, e.strokeStyle = t.strokeStyle && t.strokeStyle.color, e.fillStyle = t.fillStyle && t.fillStyle.color
        }(e, i), i.strokeStyle && e.stroke(t), i.fillStyle && e.fill(t)
    }
    const Mw = {
        default: {
            strokeStyle: {
                lineWidth: 1,
                color: new Uint8ClampedArray([0, 0, 0]),
                opacity: 1
            },
			fillStyle: {
                color: new Uint8ClampedArray([92, 92, 92]),
                opacity: .1
            }
        },
        highlighted: {
            strokeStyle: {
                lineWidth: 2,
                color: new Uint8ClampedArray([0, 0, 255]),
                opacity: 1
            },
            fillStyle: {
                color: new Uint8ClampedArray([5, 5, 150]),
                opacity: .1
            }
        },
        selected: {
            strokeStyle: {
                lineWidth: 3,
                color: new Uint8ClampedArray([5, 255, 5]),
                opacity: 1
            },
            fillStyle: {
                color: new Uint8ClampedArray([5, 150, 5]),
                opacity: .4
            }
        }
    };

    function Aw(e, t) {
        const i = {
                ...Mw
            },
            r = new Map;

        function n(e = {}) {
            if (r.has(e)) return r.get(e); {
                const t = {};
                return e.strokeStyle && (t.strokeStyle = {
                    lineWidth: e.strokeStyle.lineWidth,
                    color: uw(e.strokeStyle.color, e.strokeStyle.opacity)
                }), e.fillStyle && (t.fillStyle = {
                    color: uw(e.fillStyle.color, e.fillStyle.opacity)
                }), r.set(e, t), t
            }
        }

        function s(e) {
            const {
                name: i,
                objects: r = [],
                visible: n,
                batchPath: s,
                materialCallback: o
            } = e, a = t.addLayer(i, r, n, s);
            return new Proxy({
                rendererLayer: a,
                objects: {},
                removeObjects(e) {
                    let t = !1;
                    e.forEach(e => {
                        void 0 !== this.objects[e.id] && (delete this.objects[e.id], t = !0)
                    }), t && this.updateRenderer()
                },
                addObjects(e) {
                    e.forEach(e => {
                        this.objects[e.id] = {
                            rank: -e.area,
                            path: e.path,
                            material: o(e)
                        }
                    }), this.updateRenderer()
                },
                updateRenderer() {
                    t.setLayerObjects(i, Object.values(this.objects).sort((e, t) => e.rank > t.rank ? 1 : e.rank < t.rank ? -1 : 0))
                }
            }, {
                get: (e, t) => "function" == typeof e[t] ? e[t].bind(e) : e[t]
            })
        }
        const o = s({
                name: "main",
                materialCallback: e => {
                    return n((t = e.type, Object.values(i).filter(e => e.types).find(e => e.types.includes(t)) || i.default));
                    var t
                }
            }),
            a = s({
                name: "picking",
                visible: !1,
                batchPath: !1,
                materialCallback: e => ({
                    fillStyle: {
                        color: dw(e.id)
                    }
                })
            }),
            l = s({
                name: "select",
                materialCallback: () => n(i.selected)
            }),
            c = s({
                name: "highlight",
                materialCallback: () => n(i.highlighted)
            });

        function h(e) {
            [o, a, l, c].forEach(t => t.removeObjects(e))
        }
        return e.on("objects-added", (function(e) {
            const t = e.filter(e => e.visible);
            o.addObjects(t), a.addObjects(t.filter(e => e.pickable)), l.addObjects(t.filter(e => e.selected)), c.addObjects(t.filter(e => e.highlighted))
        })), e.on("objects-removed", (function(e) {
            h(e)
        })), e.on("objects-selected", e => l.addObjects(e.filter(e => e.visible))), e.on("objects-unselected", l.removeObjects), e.on("objects-highlighted", e => c.addObjects(e.filter(e => e.visible))), e.on("objects-unhighlighted", c.removeObjects), e.on("objects-pickable", e => a.addObjects(e.filter(e => e.visible))), e.on("objects-unpickable", a.removeObjects), e.on("objects-visible", e => {
            o.addObjects(e), a.addObjects(e.filter(e => e.pickable)), l.addObjects(e.filter(e => e.selected)), c.addObjects(e.filter(e => e.highlighted))
        }), e.on("objects-unvisible", e => {
            h(e)
        }), {
            materials: i,
            getObjectAtPosition(t) {
                const i = a.rendererLayer.context,
                    {
                        data: r
                    } = i.getImageData(t.x, t.y, 1, 1),
                    n = function(e) {
                        if (!e || e.length < 3) throw "color must be an array with at least 3 values.";
                        return e[0] / 50 + 256 * e[1] / 50 + 256 * e[2] * 256 / 50
                    }(r);
                return e.getObject(n)
            }
        }
    }
    var xw = (e = {}) => {
            const {
                canvas: t,
                rotateKey: i = "shift",
                scaleSpeed: r = .002,
                rotateSpeed: n = .1,
                maxScale: s = 1e3,
                minScale: o = 1,
                fitViewRatio: a = 1,
                arrowMove: l = 5,
                Matrix: c = DOMMatrixReadOnly
            } = e;
            if (!(t instanceof HTMLCanvasElement)) throw "Canvas must be a HTMLCanvasElement";
            if ("string" != typeof i) throw `"rotateKey" argument must be a string, get "${typeof i}"`;
            [r, n, s, o, a].forEach(e => {
                if ("number" != typeof e) throw `"${e}" argument must be a number, get "${typeof e}"`
            });
            const h = (() => {
                    const e = pw(),
                        t = new Map,
                        i = new Map,
                        r = hw(),
                        n = hw();
                    return {
                        loadModel: function(s) {
                            if (!s || "object" != typeof s || !s.objects || "object" != typeof s.objects || !s.objects.length) throw 'model should be an object with an non empty array of "objects".';
                            s.id = r(), t.set(s.id, s);
                            const o = [];
                            s.objects.forEach(e => {
                                ! function(e) {
                                    e.visible = void 0 === e.visible || e.visible, e.pickable = void 0 === e.pickable || e.pickable, e.selected = void 0 !== e.selected && e.selected, e.highlighted = void 0 !== e.highlighted && e.highlighted
                                }(e), e.model = s, e.id = n(), i.set(e.id, e), o.push(e)
                            }), e.emit("objects-added", o), e.emit("model-loaded", s)
                        },
                        unloadModel: function(r) {
                            const n = t.get(r);
                            return !!n && (n.objects.forEach(e => i.delete(e.id)), e.emit("objects-removed", n.objects), t.delete(r), e.emit("model-unloaded", n), !0)
                        },
                        getModels: function() {
                            return Array.from(t.values())
                        },
                        getObject: function(e) {
                            const t = Array.from(i.values()).find(t => t.id === e);
                            return t ? Object.freeze({
                                ...t
                            }) : void 0
                        },
                        getObjects: function() {
                            return Array.from(i.values()).map(e => Object.freeze({
                                ...e
                            }))
                        },
                        ... function(t = []) {
                            return t.reduce((t, r) => (t[`setObjects${function(e=""){return e[0].toUpperCase()+e.slice(1)}(r)}`] = (t => (r = [], n) => {
                                if (!Array.isArray(r)) throw "Ids must be an Array";
                                const s = [];
                                r.map(e => i.get(e)).filter(Boolean).forEach(e => {
                                    e[t] !== n && (e[t] = n, s.push(e))
                                }), s.length && e.emit(`objects-${n?"":"un"}${t}`, s)
                            })(r), t), {})
                        }(["visible", "selected", "highlighted", "pickable"]),
                        ...e
                    }
                })(),
                d = mw(t),
                u = Aw(h, d),
                p = pw();
            h.on("model-loaded", e => p.emit("model-loaded", e));
            const f = cw({
                viewport: d.getViewport(),
                maxScale: s,
                minScale: o,
                Matrix: c
            });
            d.on("resize", ({
                dx: e,
                dy: t
            }) => f.translate(e / 2, t / 2));
            const _ = (e => {
                if (!(e instanceof HTMLElement)) throw "el must be a HTMLElement";
                const t = pw(),
                    i = {
                        dragging: !1,
                        rightClick: !1
                    };

                function r(e) {
                    0 === e.movementX && 0 === e.movementY || (i.dragging = !0, document.body.style.cursor = "move", t.emit("drag", {
                        dx: e.movementX * window.devicePixelRatio,
                        dy: e.movementY * window.devicePixelRatio,
                        keys: fw(e)
                    }))
                }

                function n(e) {
                    document.removeEventListener("mousemove", r), document.removeEventListener("mouseup", n), document.body.style.cursor = null, i.dragging || t.emit(i.rightClick ? "right-click" : "click", {
                        position: _w(e),
                        keys: fw(e)
                    }), i.dragging = !1, i.rightClick = !1
                }
                return e.addEventListener("mousedown", () => {
                    document.addEventListener("mousemove", r), document.addEventListener("mouseup", n)
                }), e.addEventListener("wheel", e => {
                    e.preventDefault(), t.emit("wheel", {
                        position: _w(e),
                        dx: e.deltaX,
                        dy: e.deltaY,
                        keys: fw(e)
                    })
                }), e.addEventListener("contextmenu", e => {
                    e.preventDefault(), i.rightClick = !0
                }), e.addEventListener("mousemove", e => {
                    i.dragging || t.emit("move", {
                        position: _w(e),
                        keys: fw(e)
                    })
                }), window.addEventListener("keydown", e => {
                    if ("INPUT" !== e.target.tagName && "TEXTAREA" !== e.target.tagName) switch (e.preventDefault(), event.key) {
                        case "ArrowDown":
                            t.emit("arrow-down", {
                                keys: fw(e)
                            });
                            break;
                        case "ArrowUp":
                            t.emit("arrow-up", {
                                keys: fw(e)
                            });
                            break;
                        case "ArrowLeft":
                            t.emit("arrow-left", {
                                keys: fw(e)
                            });
                            break;
                        case "ArrowRight":
                            t.emit("arrow-right", {
                                keys: fw(e)
                            })
                    }
                }), {
                    ...t
                }
            })(t);
            _.on("drag", ({
                dx: e,
                dy: t
            }) => f.translate(e, t)), _.on("wheel", ({
                dy: e,
                position: t,
                keys: s
            }) => {
                if (s[i]) {
                    const i = e * n;
                    f.rotate(i, t)
                } else {
                    const i = Math.max(1 - e * r, 0);
                    f.scale(i, t)
                }
            }), _.on("click", ({
                position: e,
                keys: t
            }) => {
                const i = u.getObjectAtPosition(e);
                i ? p.emit("pick", {
                    object: i,
                    position: e,
                    keys: t
                }) : p.emit("pick-nothing", {
                    position: e,
                    keys: t
                })
            }), _.on("right-click", ({
                position: e,
                keys: t
            }) => {
                const i = u.getObjectAtPosition(e);
                i ? p.emit("pick", {
                    object: i,
                    position: e,
                    rightClick: !0,
                    keys: t
                }) : p.emit("pick-nothing", {
                    position: e,
                    rightClick: !0,
                    keys: t
                })
            });
            let m = null;
            _.on("move", ({
                position: e
            }) => {
                const t = u.getObjectAtPosition(e);
                t ? m ? t.id === m.id ? p.emit("hover-surface", {
                    object: t,
                    position: e
                }) : (p.emit("hover", {
                    object: t,
                    position: e
                }), p.emit("hover-out", {
                    object: m,
                    position: e
                }), m = t) : (p.emit("hover", {
                    object: t,
                    position: e
                }), m = t) : (m && (p.emit("hover-out", {
                    object: m,
                    position: e
                }), m = null), p.emit("hover-off", {
                    position: e
                }))
            }), _.on("arrow-up", () => f.translate(0, -l)), _.on("arrow-right", () => f.translate(l)), _.on("arrow-down", () => f.translate(0, l)), _.on("arrow-left", () => f.translate(-l));
            const g = function(e = window.requestAnimationFrame, t = performance.now.bind(performance)) {
                if ("function" != typeof e) throw `"nextTick" must be a function, get "${typeof e}".`;
                if ("function" != typeof t) throw `"now" must be a function, get "${typeof t}".`;
                const i = pw();
                let r = !1,
                    n = null,
                    s = null;

                function o() {
                    const e = t(),
                        r = e - n;
                    s && (s(r), s = null), i.emit("tick", r), n = e
                }
                return {
                    start() {
                        r = !0, n = t(), o();
                        let i = null;
                        e(i = () => {
                            r && (o(), e(i))
                        })
                    },
                    stop() {
                        r = !1
                    },
                    nextTick(e) {
                        if ("function" != typeof e) throw `nextTick argument must be a function, get ${typeof e}.`;
                        s = e
                    },
                    ...i
                }
            }();
            return g.on("tick", e => {
                d.setTransform(f.getTransform()), d.render(), p.emit("tick", e)
            }), g.start(), {
                get materials() {
                    return u.materials
                },
                loadModel: h.loadModel,
                unloadModel: h.unloadModel,
                scene: {
                    get models() {
                        return h.getModels()
                    },
                    get objects() {
                        return h.getObjects()
                    },
                    setObjectsVisible: h.setObjectsVisible,
                    setObjectsSelected: h.setObjectsSelected,
                    setObjectsHighlighted: h.setObjectsHighlighted,
                    setObjectsPickable: h.setObjectsPickable
                },
                camera: {
                    fitView(e) {
                        f.fitView(function(e = []) {
                            if (!e || 4 !== e.length) throw "bbox have to be an array with x1, y1, x2, y2 values";
                            const [t, i, r, n] = e;
                            return {
                                p1: {
                                    x: t,
                                    y: i
                                },
                                p2: {
                                    x: r,
                                    y: i
                                },
                                p3: {
                                    x: r,
                                    y: n
                                },
                                p4: {
                                    x: t,
                                    y: n
                                }
                            }
                        }(e))
                    }
                },
                destroy: function() {
                    g.stop()
                },
                ...p
            }
        },
        Cw = {
            walls: {
                types: ["IfcWall", "IfcWallElementedCase", "IfcWallStandardCase"],
                strokeStyle: {
                    color: new Uint8ClampedArray([0, 0, 0]),
                    opacity: 1,
                    lineWidth: .04
                }
            }
        };
    const {
        mapMutations: Pw
    } = Ma("viewer");
    var kw = {
        name: "viewer2D",
        component: gl({
            render: function() {
                var e = this.$createElement,
                    t = this._self._c || e;
                return t("div", {
                    staticClass: "bimdata-viewer2d"
                }, [t("canvas", {
                    ref: "viewer2d",
                    staticClass: "bimdata-viewer2d__viewer"
                })])
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-01f810c2_0", {
                source: ".bimdata-viewer2d{width:100%;height:100%;position:relative}.bimdata-viewer2d__viewer{width:100%;height:100%;display:block}",
                map: void 0,
                media: void 0
            })
        }), {
            data: () => ({
                ifc: null,
                viewer2d: null,
                storeys: []
            }),
            async mounted() {
                const e = xw({
                    canvas: this.$refs.viewer2d
                });
                e.materials.default.strokeStyle.lineWidth = .01, e.materials.selected.strokeStyle.lineWidth = .02, e.materials.highlighted.strokeStyle.lineWidth = .02, Object.assign(e.materials, Cw), e.on("pick", ({
                    object: t,
                    rightClick: i
                }) => {
                    i ? e.camera.fitView(t.bbox) : this.$hub.emit(t.selected ? "deselect-objects" : "select-objects", {
                        ids: [t.uuid],
                        trigger: this
                    })
                }), e.on("hover", ({
                    object: t
                }) => e.scene.setObjectsHighlighted([t.id], !0)), e.on("hover-out", ({
                    object: t
                }) => e.scene.setObjectsHighlighted([t.id], !1)), this.$hub.on("select-objects", ({
                    ids: t
                }) => e.scene.setObjectsSelected(this.getObjectsByUUIDs(t).map(e => e.id), !0)), this.$hub.on("deselect-objects", ({
                    ids: t
                }) => e.scene.setObjectsSelected(this.getObjectsByUUIDs(t).map(e => e.id), !1)), this.viewer2d = e
            },
            destroyed() {
                this.viewer2d && this.viewer2d.destroy()
            },
            methods: {
                getObjectsByUUIDs(e) {
                    return this.viewer2d.scene.objects.filter(t => Array.from(e).includes(t.uuid))
                },
                getObjects() {
                    return this.viewer2d.scene.objects
                },
                async loadIfc(e) {
                    if (!e.map_file) throw "Viewer2D Plugin - Impossible to load ifc without a map_file.";
                    this.incrementSpinnerProcesses();
                    const t = await async function(e) {
                        const t = await fetch(e),
                            i = await t.text(),
                            r = (new DOMParser).parseFromString(i, "image/svg+xml");
                        try {
                            return {
                                objects: Array.from(r.firstChild.getElementsByTagName("g")).map(e => ({
                                    uuid: e.id,
                                    area: e.getAttribute("area"),
                                    type: e.getAttribute("ifc-type"),
                                    bbox: JSON.parse(e.getAttribute("bounds")).flat(),
                                    path: new Path2D(e.firstElementChild.getAttribute("d"))
                                }))
                            }
                        } catch (e) {
                            throw `Impossible to process svg. The format is not compatible with this loader. Error : ${e}`
                        }
                    }(e.map_file);
                    t.ifcId = e.id, this.viewer2d.loadModel(t);
                    const i = this.getModelBBox(t);
                    this.viewer2d.camera.fitView(i), this.decrementSpinnerProcesses(), this.handleElevations(e.id)
                },
                unloadIfc(e) {
                    this.storeys = this.storeys.filter(t => t.ifcId !== e.id);
                    const t = this.viewer2d.scene.models.find(t => t.ifcId === e.id);
                    return !!t && (this.viewer2d.unloadModel(t.id), !0)
                },
                getModelBBox(e) {
                    const t = [],
                        i = [],
                        r = [],
                        n = [];
                    return e.objects.forEach(e => {
                        const [s, o, a, l] = e.bbox;
                        t.push(s), i.push(o), r.push(a), n.push(l)
                    }), [Math.min(...t), Math.min(...i), Math.max(...r), Math.max(...n)]
                },
                setObjectsVisible(...e) {
                    return this.viewer2d.scene.setObjectsVisible(...e)
                },
                ...Pw({
                    incrementSpinnerProcesses: "INCREMENT_SPINNER_PROCESSES",
                    decrementSpinnerProcesses: "DECREMENT_SPINNER_PROCESSES"
                }),
                handleElevations(e) {
                    const t = new Map,
                        i = this.$utils.getObjectsWithRepresentation().find(t => t.ifcId === e);
                    i && (i.forEach(e => {
                        if ("storey" === e.type) t.has(e) || t.set(e, new Set);
                        else {
                            const i = this.getStoreyOf(e);
                            i && (t.has(i) ? t.get(i).add(e.uuid) : t.set(i, new Set(e.uuid)))
                        }
                    }), this.storeys.push(...Array.from(t.entries()).map(([t, i]) => ({
                        name: t.name,
                        uuids: i,
                        ifcId: e
                    }))))
                },
                getStoreyOf(e) {
                    let t = e.parent;
                    for (; t && "storey" !== t.type;) t = t.parent;
                    return t
                },
                getStoreys() {
                    return this.storeys
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        context: "2D",
        enabled: !1,
        i18n: {
            en: {
                viewer2D: {}
            },
        }
    };
    const Ew = gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "list-selection",
                    attrs: {
                        direction: e.direction
                    }
                }, [i("div", {
                    staticClass: "list-selection__button"
                }, [e._t("button")], 2), e._v(" "), i("div", {
                    staticClass: "list-selection__content"
                }, [i("ul", {
                    staticClass: "bimdata-list"
                }, e._l(e.elements, (function(t, r) {
                    return i("li", {
                        key: e.elementKey ? t[e.elementKey] : t + "-" + r
                    }, [e._t("content", null, {
                        element: t
                    })], 2)
                })), 0)])])
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-35e94693_0", {
                source: ".list-selection[data-v-35e94693]{position:absolute;bottom:0}.list-selection__content[data-v-35e94693]{position:absolute;bottom:52px;max-height:440px;overflow:auto}.list-selection__content ul[data-v-35e94693]{min-width:100px;margin:0 6px;display:flex;flex-direction:column}.list-selection__content ul li[data-v-35e94693]{margin:4px 0}.list-selection[direction*=right][data-v-35e94693]{right:0}.list-selection[direction*=right] .list-selection__content[data-v-35e94693]{right:12px}.list-selection[direction*=right] .list-selection__content ul[data-v-35e94693]{align-items:flex-end}.list-selection[direction*=left][data-v-35e94693]{left:0}.list-selection[direction*=left] .list-selection__content[data-v-35e94693]{left:12px}.list-selection[direction*=left] .list-selection__content ul[data-v-35e94693]{align-items:flex-start}.list-selection[direction*=left] .list-selection__content ul .bimdata-btn svg[data-v-35e94693]{margin-right:10px}.list-selection[direction*=left] .list-selection__content ul .bimdata-btn__fill--secondary[data-v-35e94693]{margin-left:8px}",
                map: void 0,
                media: void 0
            })
        }), {
            props: {
                direction: {
                    type: String,
                    default: "right",
                    validator: e => ["right", "left"].includes(e)
                },
                elements: {
                    type: Array,
                    default: () => [],
                    required: !0
                },
                elementKey: {
                    type: String
                }
            }
        }, "data-v-35e94693", !1, void 0, !1, bl, void 0, void 0),
        {
            mapState: Iw,
            mapActions: Tw
        } = Ma("viewer");
    var Dw = {
        name: "storeys",
        component: gl({
            render: function() {
                var e = this,
                    t = e.$createElement,
                    i = e._self._c || t;
                return i("div", {
                    staticClass: "list-selection"
                }, [i("BIMDataListSelection", {
                    attrs: {
                        direction: "right",
                        elements: e.storeys,
                        elementKey: "name"
                    },
                    scopedSlots: e._u([{
                        key: "button",
                        fn: function() {
                            return [i("BIMDataDropdownList", {
                                attrs: {
                                    directionClass: "up",
                                    transitionName: "down",
                                    list: e.ifcsWith2DModel,
                                    elementKey: "id"
                                },
                                scopedSlots: e._u([{
                                    key: "contentAfterBtn",
                                    fn: function() {
                                        return [i("BIMDataIcon", {
                                            attrs: {
                                                "icon-name": "model",
                                                width: "18",
                                                height: "18",
                                                x: "20",
                                                y: "21"
                                            }
                                        }, [i("BIMDataModelIcon")], 1), e._v(" "), i("span", [e._v(e._s(e._f("middleTruncate")(e.selectedIfc.name, 36)))])]
                                    },
                                    proxy: !0
                                }, {
                                    key: "element",
                                    fn: function(t) {
                                        var r = t.element,
                                            n = t.close;
                                        return [i("BIMDataRadio", {
                                            attrs: {
                                                text: r.name,
                                                id: r.id,
                                                value: r
                                            },
                                            on: {
                                                input: function(e) {
                                                    return n()
                                                }
                                            },
                                            model: {
                                                value: e.selectedIfc,
                                                callback: function(t) {
                                                    e.selectedIfc = t
                                                },
                                                expression: "selectedIfc"
                                            }
                                        })]
                                    }
                                }])
                            })]
                        },
                        proxy: !0
                    }, {
                        key: "content",
                        fn: function(t) {
                            var r = t.element;
                            return [i("BIMDataButton", {
                                staticClass: "bimdata-btn bimdata-btn__fill bimdata-btn__fill--default bimdata-btn__radius",
                                class: {
                                    "bimdata-btn__fill--secondary": r === e.selectedStorey
                                },
                                attrs: {
                                    width: "auto"
                                },
                                on: {
                                    click: function(t) {
                                        return e.selectStorey(r)
                                    }
                                }
                            }, [i("span", [e._v(e._s(r.name))]), e._v(" "), i("BIMDataIcon", {
                                attrs: {
                                    "icon-name": "minus",
                                    width: "11",
                                    height: "12",
                                    x: "11",
                                    y: "12"
                                }
                            }, [i("BIMDataStoreyIcon")], 1)], 1)]
                        }
                    }])
                })], 1)
            },
            staticRenderFns: []
        }, (function(e) {
            e && e("data-v-bc5af510_0", {
                source: ".list-selection .bimdata-dropdown-list{width:280px}.list-selection .bimdata-dropdown-list .bimdata-dropdown-list__content{width:100%;font-size:.7857142857em}.list-selection .submenu .bimdata-list{font-size:.7857142857em}.list-selection__content ul li .bimdata-btn{padding:0 12px}.list-selection__content ul li .bimdata-btn span,.list-selection__content ul li .bimdata-btn svg{opacity:.6}.list-selection__content ul li .bimdata-btn svg{margin-left:10px}.list-selection__content ul li .bimdata-btn__fill--secondary{margin-right:8px}.list-selection__content ul li .bimdata-btn__fill--secondary span,.list-selection__content ul li .bimdata-btn__fill--secondary svg{opacity:1}",
                map: void 0,
                media: void 0
            })
        }), {
            components: {
                BIMDataButton: Ml,
                BIMDataIcon: El,
                BIMDataPlusIcon: jl,
                BIMDataMinusIcon: Ll,
                BIMDataStoreyIcon: Ov,
                BIMDataModelIcon: lc,
                BIMDataListSelection: Ew,
                BIMDataDropdownList: hc,
                BIMDataRadio: _v
            },
            mixins: [Cl],
            data: () => ({
                selectedIfc: null,
                storeysDisplayed: !1,
                storeys: [],
                selectedStorey: null
            }),
            computed: {
                ...Iw({
                    selectedIfcs: e => e.selectedIfcs
                }),
                ifcsWith2DModel() {
                    return this.selectedIfcs.filter(e => !!e.map_file)
                }
            },
            watch: {
                selectedStorey(e) {
                    if (e) {
                        const t = [],
                            i = [];
                        this.$plugins.viewer2D.getObjects().forEach(r => {
                            e.uuids.has(r.uuid) ? i.push(r.id) : t.push(r.id)
                        }), this.$plugins.viewer2D.setObjectsVisible(i, !0), this.$plugins.viewer2D.setObjectsVisible(t, !1)
                    }
                },
                selectedIfc(e, t) {
                    t && this.$plugins.viewer2D.unloadIfc(t), e && this.$plugins.viewer2D.loadIfc(e)
                }
            },
            created() {
                if (!this.$plugins.viewer2D) throw "Unable to get storeys, viewer2D plugin is not available";
                this.ifcsWith2DModel.length && (this.selectedIfc = this.ifcsWith2DModel[0]), this.$watch(() => this.$plugins.viewer2D.storeys, () => {
                    this.storeys = this.$plugins.viewer2D.getStoreys(), this.selectedStorey = this.storeys && this.storeys.length ? this.storeys[0] : null
                })
            },
            methods: {
                ...Tw(["setSelectedIfcs"]),
                selectStorey(e) {
                    this.selectedStorey = e
                }
            }
        }, void 0, !1, void 0, !1, bl, void 0, void 0),
        context: "2D",
        enabled: !1
    };
    const Sw = gl({
        render: function() {
            var e = this.$createElement,
                t = this._self._c || e;
            return t("g", [t("polygon", {
                staticClass: "bimdata-fill-secondary",
                attrs: {
                    points: "58.46,22.74 58.46,27.02 72.22,18.24 72.22,93.36 44.57,93.36 44.57,87.16 40.96,87.16 40.96,96.97 \n\t75.83,96.97 75.83,11.66 "
                }
            }), this._v(" "), t("polygon", {
                staticClass: "bimdata-fill-secondary",
                attrs: {
                    points: "30.06,21.16 30.06,40.86 33.67,38.55 33.67,38.55 33.67,23.64 33.67,23.13 54.85,9.61 54.85,23.64 \n      54.85,25.04 54.85,25.04 58.46,22.74 58.46,3.03 "
                }
            }), this._v(" "), t("path", {
                staticClass: "bimdata-fill-primary",
                attrs: {
                    d: "M24.17,44.61v42.55h34.29V22.74L24.17,44.61z M54.85,83.55H27.78V46.59l27.07-17.27V83.55z"
                }
            })])
        },
        staticRenderFns: []
    }, void 0, {}, void 0, !1, void 0, !1, void 0, void 0, void 0);
    var Bw = {
            async init({
                commit: e,
                dispatch: t,
                state: i
            }, {
                cloudId: r,
                projectId: n,
                ifcIds: s = []
            }) {
                const o = await Promise.all(s.map(e => (new i.apiClient.IfcApi).getIfc(r, e, n)));
                o.length && (e("SET_IFCS", o), t("setSelectedIfcs", o))
            },
            async setSelectedIfcs({
                commit: e,
                dispatch: t,
                state: i
            }, r = []) {
                const n = r,
                    s = i.selectedIfcs,
                    o = n.filter(e => !s.includes(e)),
                    a = s.filter(e => !n.includes(e));
                let l = Array.from(i.structures || []);
                if (o.length) {
                    t("setStructures", null);
                    const e = o.filter(e => e.structure_file).map(e => fetch(e.structure_file).then(e => e.json()).then(t => {
                            const i = t[0];
                            return i.ifcId = e.id, i
                        })),
                        i = await Promise.all(e);
                    l.push(...i || [])
                }
                if (a.length) {
                    const t = a.map(e => e.id);
                    e("SET_OBJECTS_WITHOUT_REPRESENTATION", i.objectsWithoutRepresentation.filter(e => !t.includes(e.ifcId))), l = l.filter(e => {
                        const r = !t.includes(e.ifcId);
                        if (!r) {
                            const t = i.objectsWithRepresentation.find(t => t.ifcId === e.ifcId);
                            i.viewerComponent.$hub.emit("deselect-objects", {
                                ids: new Set(t.map(e => e.uuid))
                            })
                        }
                        return r
                    })
                }
                t("setStructures", l), e("SET_SELECTED_IFCS", r)
            },
            setStructures({
                commit: e,
                state: t
            }, i) {
                if (i && i.forEach(e => {
                        void 0 === e.parent && Yv(e)
                    }), e("SET_STRUCTURES", i && i.map(e => Object.freeze(e)) || []), i) {
                    const r = [];
                    i.forEach(e => {
                        const i = (t.objectsWithRepresentation || []).find(t => t.ifcId === e.ifcId);
                        if (i) r.push(i);
                        else {
                            const t = ((e, t = !1) => {
                                let i = [e, ...Zv(e.children)];
                                if (t) {
                                    const e = [];
                                    i = i.reduce((t, i) => e.find(e => i.uuid === e) ? t : (e.push(i.uuid), t.concat(i)), [])
                                }
                                return i
                            })(e);
                            t.ifcId = e.ifcId, r.push(t)
                        }
                    }), e("SET_OBJECTS_WITH_REPRESENTATION", r.map(e => Object.freeze(e)))
                }
            },
            setObjectsSelected({
                state: e,
                commit: t
            }, {
                ids: i,
                selected: r = !0
            }) {
                const n = new Set(e.selectedObjectIds);
                r ? i.forEach(e => n.add(e)) : i.forEach(e => n.delete(e)), t("SET_SELECTED_OBJECT_IDS", n)
            },
            loadIfcs({
                dispatch: e,
                state: t
            }, i) {
                const r = i.reduce((e, i) => (t.selectedIfcs.find(e => e.id === i.id) ? console.warn(`IFC with the id "${i.id}" is already loaded.`) : e.push(i), e), []);
                e("setSelectedIfcs", [...t.selectedIfcs, ...r])
            },
            unloadIfcs({
                dispatch: e,
                state: t
            }, i) {
                const r = i.reduce((e, i) => (t.selectedIfcs.find(e => e.id === i.id) ? e.push(i) : console.warn(`Unable to unload ifc with id "${i.id}": IFC not loaded.`), e), []);
                e("setSelectedIfcs", t.selectedIfcs.filter(e => !r.map(e => e.id).includes(e.id)))
            }
        },
        jw = q_((function(e) {
            function t(e) {
                if (e) return function(e) {
                    for (var i in t.prototype) e[i] = t.prototype[i];
                    return e
                }(e)
            }
            e.exports = t, t.prototype.on = t.prototype.addEventListener = function(e, t) {
                return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this
            }, t.prototype.once = function(e, t) {
                function i() {
                    this.off(e, i), t.apply(this, arguments)
                }
                return i.fn = t, this.on(e, i), this
            }, t.prototype.off = t.prototype.removeListener = t.prototype.removeAllListeners = t.prototype.removeEventListener = function(e, t) {
                if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
                var i, r = this._callbacks["$" + e];
                if (!r) return this;
                if (1 == arguments.length) return delete this._callbacks["$" + e], this;
                for (var n = 0; n < r.length; n++)
                    if ((i = r[n]) === t || i.fn === t) {
                        r.splice(n, 1);
                        break
                    } return 0 === r.length && delete this._callbacks["$" + e], this
            }, t.prototype.emit = function(e) {
                this._callbacks = this._callbacks || {};
                for (var t = new Array(arguments.length - 1), i = this._callbacks["$" + e], r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
                if (i) {
                    r = 0;
                    for (var n = (i = i.slice(0)).length; r < n; ++r) i[r].apply(this, t)
                }
                return this
            }, t.prototype.listeners = function(e) {
                return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || []
            }, t.prototype.hasListeners = function(e) {
                return !!this.listeners(e).length
            }
        }));
    var Lw = function(e) {
            return null !== e && "object" == typeof e
        },
        Rw = Ow;

    function Ow(e) {
        if (e) return function(e) {
            for (var t in Ow.prototype) e[t] = Ow.prototype[t];
            return e
        }(e)
    }
    Ow.prototype.clearTimeout = function() {
        return clearTimeout(this._timer), clearTimeout(this._responseTimeoutTimer), delete this._timer, delete this._responseTimeoutTimer, this
    }, Ow.prototype.parse = function(e) {
        return this._parser = e, this
    }, Ow.prototype.responseType = function(e) {
        return this._responseType = e, this
    }, Ow.prototype.serialize = function(e) {
        return this._serializer = e, this
    }, Ow.prototype.timeout = function(e) {
        if (!e || "object" != typeof e) return this._timeout = e, this._responseTimeout = 0, this;
        for (var t in e) switch (t) {
            case "deadline":
                this._timeout = e.deadline;
                break;
            case "response":
                this._responseTimeout = e.response;
                break;
            default:
                console.warn("Unknown timeout option", t)
        }
        return this
    }, Ow.prototype.retry = function(e) {
        return 0 !== arguments.length && !0 !== e || (e = 1), e <= 0 && (e = 0), this._maxRetries = e, this._retries = 0, this
    }, Ow.prototype._retry = function() {
        return this.clearTimeout(), this.req && (this.req = null, this.req = this.request()), this._aborted = !1, this.timedout = !1, this._end()
    }, Ow.prototype.then = function(e, t) {
        if (!this._fullfilledPromise) {
            var i = this;
            this._endCalled && console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"), this._fullfilledPromise = new Promise((function(e, t) {
                i.end((function(i, r) {
                    i ? t(i) : e(r)
                }))
            }))
        }
        return this._fullfilledPromise.then(e, t)
    }, Ow.prototype.catch = function(e) {
        return this.then(void 0, e)
    }, Ow.prototype.use = function(e) {
        return e(this), this
    }, Ow.prototype.ok = function(e) {
        if ("function" != typeof e) throw Error("Callback required");
        return this._okCallback = e, this
    }, Ow.prototype._isResponseOK = function(e) {
        return !!e && (this._okCallback ? this._okCallback(e) : e.status >= 200 && e.status < 300)
    }, Ow.prototype.get = function(e) {
        return this._header[e.toLowerCase()]
    }, Ow.prototype.getHeader = Ow.prototype.get, Ow.prototype.set = function(e, t) {
        if (Lw(e)) {
            for (var i in e) this.set(i, e[i]);
            return this
        }
        return this._header[e.toLowerCase()] = t, this.header[e] = t, this
    }, Ow.prototype.unset = function(e) {
        return delete this._header[e.toLowerCase()], delete this.header[e], this
    }, Ow.prototype.field = function(e, t) {
        if (null == e) throw new Error(".field(name, val) name can not be empty");
        if (this._data && console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"), Lw(e)) {
            for (var i in e) this.field(i, e[i]);
            return this
        }
        if (Array.isArray(t)) {
            for (var r in t) this.field(e, t[r]);
            return this
        }
        if (null == t) throw new Error(".field(name, val) val can not be empty");
        return "boolean" == typeof t && (t = "" + t), this._getFormData().append(e, t), this
    }, Ow.prototype.abort = function() {
        return this._aborted ? this : (this._aborted = !0, this.xhr && this.xhr.abort(), this.req && this.req.abort(), this.clearTimeout(), this.emit("abort"), this)
    }, Ow.prototype.withCredentials = function(e) {
        return null == e && (e = !0), this._withCredentials = e, this
    }, Ow.prototype.redirects = function(e) {
        return this._maxRedirects = e, this
    }, Ow.prototype.maxResponseSize = function(e) {
        if ("number" != typeof e) throw TypeError("Invalid argument");
        return this._maxResponseSize = e, this
    }, Ow.prototype.toJSON = function() {
        return {
            method: this.method,
            url: this.url,
            data: this._data,
            headers: this._header
        }
    }, Ow.prototype.send = function(e) {
        var t = Lw(e),
            i = this._header["content-type"];
        if (this._formData && console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"), t && !this._data) Array.isArray(e) ? this._data = [] : this._isHost(e) || (this._data = {});
        else if (e && this._data && this._isHost(this._data)) throw Error("Can't merge these send calls");
        if (t && Lw(this._data))
            for (var r in e) this._data[r] = e[r];
        else "string" == typeof e ? (i || this.type("form"), i = this._header["content-type"], this._data = "application/x-www-form-urlencoded" == i ? this._data ? this._data + "&" + e : e : (this._data || "") + e) : this._data = e;
        return !t || this._isHost(e) ? this : (i || this.type("json"), this)
    }, Ow.prototype.sortQuery = function(e) {
        return this._sort = void 0 === e || e, this
    }, Ow.prototype._finalizeQueryString = function() {
        var e = this._query.join("&");
        if (e && (this.url += (this.url.indexOf("?") >= 0 ? "&" : "?") + e), this._query.length = 0, this._sort) {
            var t = this.url.indexOf("?");
            if (t >= 0) {
                var i = this.url.substring(t + 1).split("&");
                "function" == typeof this._sort ? i.sort(this._sort) : i.sort(), this.url = this.url.substring(0, t) + "?" + i.join("&")
            }
        }
    }, Ow.prototype._appendQueryString = function() {
        console.trace("Unsupported")
    }, Ow.prototype._timeoutError = function(e, t, i) {
        if (!this._aborted) {
            var r = new Error(e + t + "ms exceeded");
            r.timeout = t, r.code = "ECONNABORTED", r.errno = i, this.timedout = !0, this.abort(), this.callback(r)
        }
    }, Ow.prototype._setTimeouts = function() {
        var e = this;
        this._timeout && !this._timer && (this._timer = setTimeout((function() {
            e._timeoutError("Timeout of ", e._timeout, "ETIME")
        }), this._timeout)), this._responseTimeout && !this._responseTimeoutTimer && (this._responseTimeoutTimer = setTimeout((function() {
            e._timeoutError("Response timeout of ", e._responseTimeout, "ETIMEDOUT")
        }), this._responseTimeout))
    };
    var Fw = function(e) {
            return e.split(/ *; */).shift()
        },
        Nw = function(e) {
            return e.split(/ *; */).reduce((function(e, t) {
                var i = t.split(/ *= */),
                    r = i.shift(),
                    n = i.shift();
                return r && n && (e[r] = n), e
            }), {})
        },
        Uw = function(e) {
            return e.split(/ *, */).reduce((function(e, t) {
                var i = t.split(/ *; */),
                    r = i[0].slice(1, -1);
                return e[i[1].split(/ *= */)[1].slice(1, -1)] = r, e
            }), {})
        },
        Hw = Vw;

    function Vw(e) {
        if (e) return function(e) {
            for (var t in Vw.prototype) e[t] = Vw.prototype[t];
            return e
        }(e)
    }
    Vw.prototype.get = function(e) {
        return this.header[e.toLowerCase()]
    }, Vw.prototype._setHeaderProperties = function(e) {
        var t = e["content-type"] || "";
        this.type = Fw(t);
        var i = Nw(t);
        for (var r in i) this[r] = i[r];
        this.links = {};
        try {
            e.link && (this.links = Uw(e.link))
        } catch (e) {}
    }, Vw.prototype._setStatusProperties = function(e) {
        var t = e / 100 | 0;
        this.status = this.statusCode = e, this.statusType = t, this.info = 1 == t, this.ok = 2 == t, this.redirect = 3 == t, this.clientError = 4 == t, this.serverError = 5 == t, this.error = (4 == t || 5 == t) && this.toError(), this.accepted = 202 == e, this.noContent = 204 == e, this.badRequest = 400 == e, this.unauthorized = 401 == e, this.notAcceptable = 406 == e, this.forbidden = 403 == e, this.notFound = 404 == e
    };
    var zw = ["ECONNRESET", "ETIMEDOUT", "EADDRINFO", "ESOCKETTIMEDOUT"],
        $w = q_((function(e, t) {
            var i;

            function r() {}
            "undefined" != typeof window ? i = window : "undefined" != typeof self ? i = self : (console.warn("Using browser-only version of superagent in non-browser environment"), i = $_);
            var n = t = e.exports = function(e, i) {
                return "function" == typeof i ? new t.Request("GET", e).end(i) : 1 == arguments.length ? new t.Request("GET", e) : new t.Request(e, i)
            };
            t.Request = d, n.getXHR = function() {
                if (!(!i.XMLHttpRequest || i.location && "file:" == i.location.protocol && i.ActiveXObject)) return new XMLHttpRequest;
                try {
                    return new ActiveXObject("Microsoft.XMLHTTP")
                } catch (e) {}
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP.6.0")
                } catch (e) {}
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP.3.0")
                } catch (e) {}
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP")
                } catch (e) {}
                throw Error("Browser-only version of superagent could not find XHR")
            };
            var s = "".trim ? function(e) {
                return e.trim()
            } : function(e) {
                return e.replace(/(^\s*|\s*$)/g, "")
            };

            function o(e) {
                if (!Lw(e)) return e;
                var t = [];
                for (var i in e) a(t, i, e[i]);
                return t.join("&")
            }

            function a(e, t, i) {
                if (null != i)
                    if (Array.isArray(i)) i.forEach((function(i) {
                        a(e, t, i)
                    }));
                    else if (Lw(i))
                    for (var r in i) a(e, t + "[" + r + "]", i[r]);
                else e.push(encodeURIComponent(t) + "=" + encodeURIComponent(i));
                else null === i && e.push(encodeURIComponent(t))
            }

            function l(e) {
                for (var t, i, r = {}, n = e.split("&"), s = 0, o = n.length; s < o; ++s) - 1 == (i = (t = n[s]).indexOf("=")) ? r[decodeURIComponent(t)] = "" : r[decodeURIComponent(t.slice(0, i))] = decodeURIComponent(t.slice(i + 1));
                return r
            }

            function c(e) {
                return /[\/+]json\b/.test(e)
            }

            function h(e) {
                this.req = e, this.xhr = this.req.xhr, this.text = "HEAD" != this.req.method && ("" === this.xhr.responseType || "text" === this.xhr.responseType) || void 0 === this.xhr.responseType ? this.xhr.responseText : null, this.statusText = this.req.xhr.statusText;
                var t = this.xhr.status;
                1223 === t && (t = 204), this._setStatusProperties(t), this.header = this.headers = function(e) {
                    for (var t, i, r, n, o = e.split(/\r?\n/), a = {}, l = 0, c = o.length; l < c; ++l) - 1 !== (t = (i = o[l]).indexOf(":")) && (r = i.slice(0, t).toLowerCase(), n = s(i.slice(t + 1)), a[r] = n);
                    return a
                }(this.xhr.getAllResponseHeaders()), this.header["content-type"] = this.xhr.getResponseHeader("content-type"), this._setHeaderProperties(this.header), null === this.text && e._responseType ? this.body = this.xhr.response : this.body = "HEAD" != this.req.method ? this._parseBody(this.text ? this.text : this.xhr.response) : null
            }

            function d(e, t) {
                var i = this;
                this._query = this._query || [], this.method = e, this.url = t, this.header = {}, this._header = {}, this.on("end", (function() {
                    var e, t = null,
                        r = null;
                    try {
                        r = new h(i)
                    } catch (e) {
                        return (t = new Error("Parser is unable to parse the response")).parse = !0, t.original = e, i.xhr ? (t.rawResponse = void 0 === i.xhr.responseType ? i.xhr.responseText : i.xhr.response, t.status = i.xhr.status ? i.xhr.status : null, t.statusCode = t.status) : (t.rawResponse = null, t.status = null), i.callback(t)
                    }
                    i.emit("response", r);
                    try {
                        i._isResponseOK(r) || (e = new Error(r.statusText || "Unsuccessful HTTP response"))
                    } catch (t) {
                        e = t
                    }
                    e ? (e.original = t, e.response = r, e.status = r.status, i.callback(e, r)) : i.callback(null, r)
                }))
            }

            function u(e, t, i) {
                var r = n("DELETE", e);
                return "function" == typeof t && (i = t, t = null), t && r.send(t), i && r.end(i), r
            }
            n.serializeObject = o, n.parseString = l, n.types = {
                html: "text/html",
                json: "application/json",
                xml: "text/xml",
                urlencoded: "application/x-www-form-urlencoded",
                form: "application/x-www-form-urlencoded",
                "form-data": "application/x-www-form-urlencoded"
            }, n.serialize = {
                "application/x-www-form-urlencoded": o,
                "application/json": JSON.stringify
            }, n.parse = {
                "application/x-www-form-urlencoded": l,
                "application/json": JSON.parse
            }, Hw(h.prototype), h.prototype._parseBody = function(e) {
                var t = n.parse[this.type];
                return this.req._parser ? this.req._parser(this, e) : (!t && c(this.type) && (t = n.parse["application/json"]), t && e && (e.length || e instanceof Object) ? t(e) : null)
            }, h.prototype.toError = function() {
                var e = this.req,
                    t = e.method,
                    i = e.url,
                    r = "cannot " + t + " " + i + " (" + this.status + ")",
                    n = new Error(r);
                return n.status = this.status, n.method = t, n.url = i, n
            }, n.Response = h, jw(d.prototype), Rw(d.prototype), d.prototype.type = function(e) {
                return this.set("Content-Type", n.types[e] || e), this
            }, d.prototype.accept = function(e) {
                return this.set("Accept", n.types[e] || e), this
            }, d.prototype.auth = function(e, t, i) {
                switch ("object" == typeof t && null !== t && (i = t), i || (i = {
                    type: "function" == typeof btoa ? "basic" : "auto"
                }), i.type) {
                    case "basic":
                        this.set("Authorization", "Basic " + btoa(e + ":" + t));
                        break;
                    case "auto":
                        this.username = e, this.password = t;
                        break;
                    case "bearer":
                        this.set("Authorization", "Bearer " + e)
                }
                return this
            }, d.prototype.query = function(e) {
                return "string" != typeof e && (e = o(e)), e && this._query.push(e), this
            }, d.prototype.attach = function(e, t, i) {
                if (t) {
                    if (this._data) throw Error("superagent can't mix .send() and .attach()");
                    this._getFormData().append(e, t, i || t.name)
                }
                return this
            }, d.prototype._getFormData = function() {
                return this._formData || (this._formData = new i.FormData), this._formData
            }, d.prototype.callback = function(e, t) {
                if (this._maxRetries && this._retries++ < this._maxRetries && function(e, t) {
                        return !!(e && e.code && ~zw.indexOf(e.code)) || (!!(t && t.status && t.status >= 500) || (!!(e && "timeout" in e && "ECONNABORTED" == e.code) || !!(e && "crossDomain" in e)))
                    }(e, t)) return this._retry();
                var i = this._callback;
                this.clearTimeout(), e && (this._maxRetries && (e.retries = this._retries - 1), this.emit("error", e)), i(e, t)
            }, d.prototype.crossDomainError = function() {
                var e = new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");
                e.crossDomain = !0, e.status = this.status, e.method = this.method, e.url = this.url, this.callback(e)
            }, d.prototype.buffer = d.prototype.ca = d.prototype.agent = function() {
                return console.warn("This is not supported in browser version of superagent"), this
            }, d.prototype.pipe = d.prototype.write = function() {
                throw Error("Streaming is not supported in browser version of superagent")
            }, d.prototype._isHost = function(e) {
                return e && "object" == typeof e && !Array.isArray(e) && "[object Object]" !== Object.prototype.toString.call(e)
            }, d.prototype.end = function(e) {
                return this._endCalled && console.warn("Warning: .end() was called twice. This is not supported in superagent"), this._endCalled = !0, this._callback = e || r, this._finalizeQueryString(), this._end()
            }, d.prototype._end = function() {
                var e = this,
                    t = this.xhr = n.getXHR(),
                    i = this._formData || this._data;
                this._setTimeouts(), t.onreadystatechange = function() {
                    var i = t.readyState;
                    if (i >= 2 && e._responseTimeoutTimer && clearTimeout(e._responseTimeoutTimer), 4 == i) {
                        var r;
                        try {
                            r = t.status
                        } catch (e) {
                            r = 0
                        }
                        if (!r) {
                            if (e.timedout || e._aborted) return;
                            return e.crossDomainError()
                        }
                        e.emit("end")
                    }
                };
                var r = function(t, i) {
                    i.total > 0 && (i.percent = i.loaded / i.total * 100), i.direction = t, e.emit("progress", i)
                };
                if (this.hasListeners("progress")) try {
                    t.onprogress = r.bind(null, "download"), t.upload && (t.upload.onprogress = r.bind(null, "upload"))
                } catch (e) {}
                try {
                    this.username && this.password ? t.open(this.method, this.url, !0, this.username, this.password) : t.open(this.method, this.url, !0)
                } catch (e) {
                    return this.callback(e)
                }
                if (this._withCredentials && (t.withCredentials = !0), !this._formData && "GET" != this.method && "HEAD" != this.method && "string" != typeof i && !this._isHost(i)) {
                    var s = this._header["content-type"],
                        o = this._serializer || n.serialize[s ? s.split(";")[0] : ""];
                    !o && c(s) && (o = n.serialize["application/json"]), o && (i = o(i))
                }
                for (var a in this.header) null != this.header[a] && this.header.hasOwnProperty(a) && t.setRequestHeader(a, this.header[a]);
                return this._responseType && (t.responseType = this._responseType), this.emit("request", this), t.send(void 0 !== i ? i : null), this
            }, n.get = function(e, t, i) {
                var r = n("GET", e);
                return "function" == typeof t && (i = t, t = null), t && r.query(t), i && r.end(i), r
            }, n.head = function(e, t, i) {
                var r = n("HEAD", e);
                return "function" == typeof t && (i = t, t = null), t && r.query(t), i && r.end(i), r
            }, n.options = function(e, t, i) {
                var r = n("OPTIONS", e);
                return "function" == typeof t && (i = t, t = null), t && r.send(t), i && r.end(i), r
            }, n.del = u, n.delete = u, n.patch = function(e, t, i) {
                var r = n("PATCH", e);
                return "function" == typeof t && (i = t, t = null), t && r.send(t), i && r.end(i), r
            }, n.post = function(e, t, i) {
                var r = n("POST", e);
                return "function" == typeof t && (i = t, t = null), t && r.send(t), i && r.end(i), r
            }, n.put = function(e, t, i) {
                var r = n("PUT", e);
                return "function" == typeof t && (i = t, t = null), t && r.send(t), i && r.end(i), r
            }
        }));
    $w.Request;
    class Ww {
        constructor() {
            this.basePath = "https://api.bimdata.io".replace(/\/+$/, ""), this.authentications = {
                Bearer: {
                    type: "apiKey",
                    in: "header",
                    name: "Authorization"
                },
                bimdata_connect: {
                    type: "oauth2"
                },
                client_credentials: {
                    type: "oauth2"
                }
            }, this.defaultHeaders = {}, this.timeout = 6e4, this.cache = !0, this.enableCookies = !1, "undefined" == typeof window && (this.agent = new $w.agent), this.requestAgent = null, this.plugins = null
        }
        paramToString(e) {
            return null == e || null == e ? "" : e instanceof Date ? e.toJSON() : e.toString()
        }
        buildUrl(e, t, i) {
            e.match(/^\//) || (e = "/" + e);
            var r = this.basePath + e;
            return null != i && (r = i + e), r = r.replace(/\{([\w-]+)\}/g, (e, i) => {
                var r;
                return r = t.hasOwnProperty(i) ? this.paramToString(t[i]) : e, encodeURIComponent(r)
            })
        }
        isJsonMime(e) {
            return Boolean(null != e && e.match(/^application\/json(;.*)?$/i))
        }
        jsonPreferredMime(e) {
            for (var t = 0; t < e.length; t++)
                if (this.isJsonMime(e[t])) return e[t];
            return e[0]
        }
        isFileParam(e) {
            if ("function" == typeof require) {
                let t;
                try {
                    t = require("fs")
                } catch (e) {}
                if (t && t.ReadStream && e instanceof t.ReadStream) return !0
            }
            return "function" == typeof Buffer && e instanceof Buffer || ("function" == typeof Blob && e instanceof Blob || "function" == typeof File && e instanceof File)
        }
        normalizeParams(e) {
            var t = {};
            for (var i in e)
                if (e.hasOwnProperty(i) && null != e[i] && null != e[i]) {
                    var r = e[i];
                    this.isFileParam(r) || Array.isArray(r) ? t[i] = r : t[i] = this.paramToString(r)
                } return t
        }
        buildCollectionParam(e, t) {
            if (null == e) return null;
            switch (t) {
                case "csv":
                    return e.map(this.paramToString).join(",");
                case "ssv":
                    return e.map(this.paramToString).join(" ");
                case "tsv":
                    return e.map(this.paramToString).join("\t");
                case "pipes":
                    return e.map(this.paramToString).join("|");
                case "multi":
                    return e.map(this.paramToString);
                default:
                    throw new Error("Unknown collection format: " + t)
            }
        }
        applyAuthToRequest(e, t) {
            t.forEach(t => {
                var i = this.authentications[t];
                switch (i.type) {
                    case "basic":
                        (i.username || i.password) && e.auth(i.username || "", i.password || "");
                        break;
                    case "bearer":
                        i.accessToken && e.set({
                            Authorization: "Bearer " + i.accessToken
                        });
                        break;
                    case "apiKey":
                        if (i.apiKey) {
                            var r = {};
                            i.apiKeyPrefix ? r[i.name] = i.apiKeyPrefix + " " + i.apiKey : r[i.name] = i.apiKey, "header" === i.in ? e.set(r) : e.query(r)
                        }
                        break;
                    case "oauth2":
                        i.accessToken && e.set({
                            Authorization: "Bearer " + i.accessToken
                        });
                        break;
                    default:
                        throw new Error("Unknown authentication type: " + i.type)
                }
            })
        }
        deserialize(e, t) {
            if (null == e || null == t || 204 == e.status) return null;
            var i = e.body;
            return (null == i || "object" == typeof i && void 0 === i.length && !Object.keys(i).length) && (i = e.text), Ww.convertToType(i, t)
        }
        callApi(t, i, r, n, s, o, a, l, c, h, d, u) {
            var p = this.buildUrl(t, r, u),
                f = $w(i, p);
            if (null !== this.plugins)
                for (var _ in this.plugins) this.plugins.hasOwnProperty(_) && f.use(this.plugins[_]);
            this.applyAuthToRequest(f, l), "GET" === i.toUpperCase() && !1 === this.cache && (n._ = (new Date).getTime()), f.query(this.normalizeParams(n)), f.set(this.defaultHeaders).set(this.normalizeParams(s)), this.requestAgent && f.agent(this.requestAgent), f.timeout(this.timeout);
            var m = this.jsonPreferredMime(c);
            if (m ? "multipart/form-data" != m && f.type(m) : f.header["Content-Type"] || f.type("application/json"), "application/x-www-form-urlencoded" === m) f.send(e.stringify(this.normalizeParams(o)));
            else if ("multipart/form-data" == m) {
                var g = this.normalizeParams(o);
                for (var v in g) g.hasOwnProperty(v) && (this.isFileParam(g[v]) ? f.attach(v, g[v]) : f.field(v, g[v]))
            } else null != a && f.send(a);
            var b = this.jsonPreferredMime(h);
            return b && f.accept(b), "Blob" === d ? f.responseType("blob") : "String" === d && f.responseType("string"), this.enableCookies && ("undefined" == typeof window ? this.agent._attachCookies(f) : f.withCredentials()), new Promise((e, t) => {
                f.end((i, r) => {
                    if (i) {
                        var n = {};
                        r && (n.status = r.status, n.statusText = r.statusText, n.body = r.body, n.response = r), n.error = i, t(n)
                    } else try {
                        var s = this.deserialize(r, d);
                        this.enableCookies && "undefined" == typeof window && this.agent._saveCookies(r), e({
                            data: s,
                            response: r
                        })
                    } catch (n) {
                        t(n)
                    }
                })
            })
        }
        static parseDate(e) {
            return new Date(e)
        }
        static convertToType(e, t) {
            if (null == e) return e;
            switch (t) {
                case "Boolean":
                    return Boolean(e);
                case "Integer":
                    return parseInt(e, 10);
                case "Number":
                    return parseFloat(e);
                case "String":
                    return String(e);
                case "Date":
                    return Ww.parseDate(String(e));
                case "Blob":
                    return e;
                default:
                    if (t === Object) return e;
                    if ("function" == typeof t.constructFromObject) return t.constructFromObject(e);
                    if (Array.isArray(t)) {
                        var i = t[0];
                        return e.map(e => Ww.convertToType(e, i))
                    }
                    if ("object" == typeof t) {
                        var r, n;
                        for (var s in t)
                            if (t.hasOwnProperty(s)) {
                                r = s, n = t[s];
                                break
                            } var o = {};
                        for (var s in e)
                            if (e.hasOwnProperty(s)) {
                                var a = Ww.convertToType(s, r),
                                    l = Ww.convertToType(e[s], n);
                                o[a] = l
                            } return o
                    }
                    return e
            }
        }
        hostSettings() {
            return [{
                url: "https://api.bimdata.io/",
                description: "No description provided"
            }]
        }
        getBasePathFromSettings(e, t = {}) {
            var i = this.hostSettings();
            if (e < 0 || e >= i.length) throw new Error("Invalid index " + e + " when selecting the host settings. Must be less than " + i.length);
            var r = i[e],
                n = r.url;
            for (var s in r.variables)
                if (s in t) {
                    let e = r.variables[s];
                    if ("enum_values" in e && !e.enum_values.includes(t[s])) throw new Error("The variable `" + s + "` in the host URL has invalid value " + t[s] + ". Must be " + r.variables[s].enum_values + ".");
                    n = n.replace("{" + s + "}", t[s])
                } else n = n.replace("{" + s + "}", r.variables[s].default_value);
            return n
        }
        static constructFromObject(e, t, i) {
            if (Array.isArray(e))
                for (var r = 0; r < e.length; r++) e.hasOwnProperty(r) && (t[r] = Ww.convertToType(e[r], i));
            else
                for (var n in e) e.hasOwnProperty(n) && (t[n] = Ww.convertToType(e[n], i))
        }
    }
    Ww.CollectionFormatEnum = {
        CSV: ",",
        SSV: " ",
        TSV: "\t",
        PIPES: "|",
        MULTI: "multi"
    }, Ww.instance = new Ww;
    class qw {
        constructor(e) {
            qw.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new qw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String"))), t
        }
    }
    qw.prototype.id = void 0, qw.prototype.name = void 0;
    class Gw {
        constructor(e) {
            Gw.initialize(this, e)
        }
        static initialize(e, t) {
            e.email = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new Gw, e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String"))), t
        }
    }
    Gw.prototype.email = void 0;
    class Yw {
        constructor() {
            Yw.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new Yw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("value") && (t.value = Ww.convertToType(e.value, Object)), e.hasOwnProperty("operator") && (t.operator = Ww.convertToType(e.operator, "String")), e.hasOwnProperty("params") && (t.params = Ww.convertToType(e.params, Object)), e.hasOwnProperty("condition") && (t.condition = Ww.convertToType(e.condition, "String")), e.hasOwnProperty("rule_components") && (t.rule_components = Ww.convertToType(e.rule_components, Object))), t
        }
    }
    Yw.prototype.id = void 0, Yw.prototype.type = void 0, Yw.prototype.value = void 0, Yw.prototype.operator = void 0, Yw.prototype.params = void 0, Yw.prototype.condition = void 0, Yw.prototype.rule_components = void 0;
    class Zw {
        constructor(e) {
            Zw.initialize(this, e)
        }
        static initialize(e, t) {
            e.condition = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new Zw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("condition") && (t.condition = Ww.convertToType(e.condition, "String")), e.hasOwnProperty("rule_components") && (t.rule_components = Ww.convertToType(e.rule_components, [Yw])), e.hasOwnProperty("on") && (t.on = Zw.constructFromObject(e.on))), t
        }
    }
    Zw.prototype.id = void 0, Zw.prototype.name = void 0, Zw.prototype.condition = void 0, Zw.prototype.rule_components = void 0, Zw.prototype.on = void 0;
    class Xw {
        constructor(e) {
            Xw.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new Xw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("parent_ruleset_id") && (t.parent_ruleset_id = Ww.convertToType(e.parent_ruleset_id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("rules") && (t.rules = Ww.convertToType(e.rules, [Zw])), e.hasOwnProperty("rulesets") && (t.rulesets = Ww.convertToType(e.rulesets, [Xw]))), t
        }
    }
    Xw.prototype.id = void 0, Xw.prototype.parent_ruleset_id = void 0, Xw.prototype.name = void 0, Xw.prototype.description = void 0, Xw.prototype.rules = void 0, Xw.prototype.rulesets = void 0;
    class Kw {
        constructor(e) {
            Kw.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new Kw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("rulesets") && (t.rulesets = Ww.convertToType(e.rulesets, [Xw])), e.hasOwnProperty("is_default") && (t.is_default = Ww.convertToType(e.is_default, "Boolean"))), t
        }
    }
    Kw.prototype.id = void 0, Kw.prototype.name = void 0, Kw.prototype.description = void 0, Kw.prototype.created_at = void 0, Kw.prototype.updated_at = void 0, Kw.prototype.rulesets = void 0, Kw.prototype.is_default = void 0;
    class Qw {
        constructor() {
            Qw.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new Qw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("result") && (t.result = Ww.convertToType(e.result, "String")), e.hasOwnProperty("collisions") && (t.collisions = Ww.convertToType(e.collisions, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("error_detail") && (t.error_detail = Ww.convertToType(e.error_detail, "String"))), t
        }
    }
    Qw.prototype.id = void 0, Qw.prototype.status = void 0, Qw.prototype.result = void 0, Qw.prototype.collisions = void 0, Qw.prototype.created_at = void 0, Qw.prototype.updated_at = void 0, Qw.prototype.error_detail = void 0, Qw.StatusEnum = {
        C: "C",
        P: "P",
        E: "E"
    };
    class Jw {
        constructor() {
            Jw.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new Jw, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("notation") && (t.notation = Ww.convertToType(e.notation, "String")), e.hasOwnProperty("title") && (t.title = Ww.convertToType(e.title, "String"))), t
        }
    }
    Jw.prototype.id = void 0, Jw.prototype.name = void 0, Jw.prototype.notation = void 0, Jw.prototype.title = void 0;
    class eM {
        constructor(e, t, i) {
            eM.initialize(this, e, t, i)
        }
        static initialize(e, t, i, r) {
            e.x = t, e.y = i, e.z = r
        }
        static constructFromObject(e, t) {
            return e && (t = t || new eM, e.hasOwnProperty("x") && (t.x = Ww.convertToType(e.x, "Number")), e.hasOwnProperty("y") && (t.y = Ww.convertToType(e.y, "Number")), e.hasOwnProperty("z") && (t.z = Ww.convertToType(e.z, "Number"))), t
        }
    }
    eM.prototype.x = void 0, eM.prototype.y = void 0, eM.prototype.z = void 0;
    class tM {
        constructor(e, t, i) {
            tM.initialize(this, e, t, i)
        }
        static initialize(e, t, i, r) {
            e.x = t, e.y = i, e.z = r
        }
        static constructFromObject(e, t) {
            return e && (t = t || new tM, e.hasOwnProperty("x") && (t.x = Ww.convertToType(e.x, "Number")), e.hasOwnProperty("y") && (t.y = Ww.convertToType(e.y, "Number")), e.hasOwnProperty("z") && (t.z = Ww.convertToType(e.z, "Number"))), t
        }
    }
    tM.prototype.x = void 0, tM.prototype.y = void 0, tM.prototype.z = void 0;
    class iM {
        constructor(e, t) {
            iM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.location = t, e.direction = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new iM, e.hasOwnProperty("location") && (t.location = tM.constructFromObject(e.location)), e.hasOwnProperty("direction") && (t.direction = eM.constructFromObject(e.direction))), t
        }
    }
    iM.prototype.location = void 0, iM.prototype.direction = void 0;
    class rM {
        constructor(e) {
            rM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new rM, e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("viewer_url") && (t.viewer_url = Ww.convertToType(e.viewer_url, "String"))), t
        }
    }
    rM.prototype.name = void 0, rM.prototype.viewer_url = void 0;
    class nM {
        constructor(e) {
            nM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new nM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("is_personnal") && (t.is_personnal = Ww.convertToType(e.is_personnal, "Boolean"))), t
        }
    }
    nM.prototype.id = void 0, nM.prototype.name = void 0, nM.prototype.is_personnal = void 0;
    class sM {
        constructor() {
            sM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new sM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String")), e.hasOwnProperty("company") && (t.company = Ww.convertToType(e.company, "String")), e.hasOwnProperty("firstname") && (t.firstname = Ww.convertToType(e.firstname, "String")), e.hasOwnProperty("lastname") && (t.lastname = Ww.convertToType(e.lastname, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("cloud_role") && (t.cloud_role = Ww.convertToType(e.cloud_role, "Number")), e.hasOwnProperty("project_role") && (t.project_role = Ww.convertToType(e.project_role, "Number")), e.hasOwnProperty("provider") && (t.provider = Ww.convertToType(e.provider, "String")), e.hasOwnProperty("sub") && (t.sub = Ww.convertToType(e.sub, "String"))), t
        }
    }
    sM.prototype.id = void 0, sM.prototype.email = void 0, sM.prototype.company = void 0, sM.prototype.firstname = void 0, sM.prototype.lastname = void 0, sM.prototype.created_at = void 0, sM.prototype.updated_at = void 0, sM.prototype.cloud_role = void 0, sM.prototype.project_role = void 0, sM.prototype.provider = void 0, sM.prototype.sub = void 0;
    class oM {
        constructor(e) {
            oM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new oM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("features") && (t.features = Ww.convertToType(e.features, [rM])), e.hasOwnProperty("marketplace_apps") && (t.marketplace_apps = Ww.convertToType(e.marketplace_apps, "String")), e.hasOwnProperty("organization") && (t.organization = nM.constructFromObject(e.organization)), e.hasOwnProperty("creator") && (t.creator = sM.constructFromObject(e.creator)), e.hasOwnProperty("creator_app") && (t.creator_app = Ww.convertToType(e.creator_app, "String")), e.hasOwnProperty("is_default") && (t.is_default = Ww.convertToType(e.is_default, "Boolean")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("image") && (t.image = Ww.convertToType(e.image, "String")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date"))), t
        }
    }
    oM.prototype.id = void 0, oM.prototype.name = void 0, oM.prototype.features = void 0, oM.prototype.marketplace_apps = void 0, oM.prototype.organization = void 0, oM.prototype.creator = void 0, oM.prototype.creator_app = void 0, oM.prototype.is_default = void 0, oM.prototype.created_at = void 0, oM.prototype.image = void 0, oM.prototype.updated_at = void 0;
    class aM {
        constructor(e, t) {
            aM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.email = t, e.redirect_uri = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new aM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String")), e.hasOwnProperty("redirect_uri") && (t.redirect_uri = Ww.convertToType(e.redirect_uri, "String")), e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    aM.prototype.id = void 0, aM.prototype.email = void 0, aM.prototype.redirect_uri = void 0, aM.prototype.role = void 0;
    class lM {
        constructor(e) {
            lM.initialize(this, e)
        }
        static initialize(e, t) {
            e.cloud = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new lM, e.hasOwnProperty("cloud") && (t.cloud = Ww.convertToType(e.cloud, "Number")), e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    lM.prototype.cloud = void 0, lM.prototype.role = void 0;
    class cM {
        constructor() {
            cM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new cM, e.hasOwnProperty("ifc_guid") && (t.ifc_guid = Ww.convertToType(e.ifc_guid, "String")), e.hasOwnProperty("originating_system") && (t.originating_system = Ww.convertToType(e.originating_system, "String")), e.hasOwnProperty("authoring_tool_id") && (t.authoring_tool_id = Ww.convertToType(e.authoring_tool_id, "String"))), t
        }
    }
    cM.prototype.ifc_guid = void 0, cM.prototype.originating_system = void 0, cM.prototype.authoring_tool_id = void 0;
    class hM {
        constructor(e, t) {
            hM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.color = t, e.components = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new hM, e.hasOwnProperty("color") && (t.color = Ww.convertToType(e.color, "String")), e.hasOwnProperty("components") && (t.components = Ww.convertToType(e.components, [cM]))), t
        }
    }
    hM.prototype.color = void 0, hM.prototype.components = void 0;
    class dM {
        constructor() {
            dM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new dM, e.hasOwnProperty("guid") && (t.guid = Ww.convertToType(e.guid, "String")), e.hasOwnProperty("date") && (t.date = Ww.convertToType(e.date, "Date")), e.hasOwnProperty("author") && (t.author = Ww.convertToType(e.author, "String")), e.hasOwnProperty("comment") && (t.comment = Ww.convertToType(e.comment, "String")), e.hasOwnProperty("viewpoint_guid") && (t.viewpoint_guid = Ww.convertToType(e.viewpoint_guid, "String")), e.hasOwnProperty("reply_to_comment_guid") && (t.reply_to_comment_guid = Ww.convertToType(e.reply_to_comment_guid, "String")), e.hasOwnProperty("topic_guid") && (t.topic_guid = Ww.convertToType(e.topic_guid, "String")), e.hasOwnProperty("modified_author") && (t.modified_author = Ww.convertToType(e.modified_author, "String")), e.hasOwnProperty("modified_date") && (t.modified_date = Ww.convertToType(e.modified_date, "Date")), e.hasOwnProperty("viewpoint_temp_id") && (t.viewpoint_temp_id = Ww.convertToType(e.viewpoint_temp_id, "Number"))), t
        }
    }
    dM.prototype.guid = void 0, dM.prototype.date = void 0, dM.prototype.author = void 0, dM.prototype.comment = void 0, dM.prototype.viewpoint_guid = void 0, dM.prototype.reply_to_comment_guid = void 0, dM.prototype.topic_guid = void 0, dM.prototype.modified_author = void 0, dM.prototype.modified_date = void 0, dM.prototype.viewpoint_temp_id = void 0;
    class uM {
        constructor() {
            uM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new uM, e.hasOwnProperty("spaces_visible") && (t.spaces_visible = Ww.convertToType(e.spaces_visible, "Boolean")), e.hasOwnProperty("space_boundaries_visible") && (t.space_boundaries_visible = Ww.convertToType(e.space_boundaries_visible, "Boolean")), e.hasOwnProperty("openings_visible") && (t.openings_visible = Ww.convertToType(e.openings_visible, "Boolean"))), t
        }
    }
    uM.prototype.spaces_visible = void 0, uM.prototype.space_boundaries_visible = void 0, uM.prototype.openings_visible = void 0;
    class pM {
        constructor(e) {
            pM.initialize(this, e)
        }
        static initialize(e, t) {
            e.view_setup_hints = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new pM, e.hasOwnProperty("default_visibility") && (t.default_visibility = Ww.convertToType(e.default_visibility, "Boolean")), e.hasOwnProperty("exceptions") && (t.exceptions = Ww.convertToType(e.exceptions, [cM])), e.hasOwnProperty("view_setup_hints") && (t.view_setup_hints = uM.constructFromObject(e.view_setup_hints))), t
        }
    }
    pM.prototype.default_visibility = void 0, pM.prototype.exceptions = void 0, pM.prototype.view_setup_hints = void 0;
    class fM {
        constructor() {
            fM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new fM, e.hasOwnProperty("coloring") && (t.coloring = Ww.convertToType(e.coloring, [hM])), e.hasOwnProperty("visibility") && (t.visibility = pM.constructFromObject(e.visibility)), e.hasOwnProperty("selection") && (t.selection = Ww.convertToType(e.selection, [cM]))), t
        }
    }
    fM.prototype.coloring = void 0, fM.prototype.visibility = void 0, fM.prototype.selection = void 0;
    class _M {
        constructor(e) {
            _M.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new _M, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("parent") && (t.parent = Ww.convertToType(e.parent, "Number")), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("creator") && (t.creator = Ww.convertToType(e.creator, "Number")), e.hasOwnProperty("project") && (t.project = Ww.convertToType(e.project, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("file_name") && (t.file_name = Ww.convertToType(e.file_name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("file") && (t.file = Ww.convertToType(e.file, "String")), e.hasOwnProperty("size") && (t.size = Ww.convertToType(e.size, "Number")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("ifc_source") && (t.ifc_source = Ww.convertToType(e.ifc_source, "String")), e.hasOwnProperty("ifc_id") && (t.ifc_id = Ww.convertToType(e.ifc_id, "String"))), t
        }
    }
    _M.prototype.id = void 0, _M.prototype.parent = void 0, _M.prototype.parent_id = void 0, _M.prototype.creator = void 0, _M.prototype.project = void 0, _M.prototype.name = void 0, _M.prototype.file_name = void 0, _M.prototype.description = void 0, _M.prototype.file = void 0, _M.prototype.size = void 0, _M.prototype.created_at = void 0, _M.prototype.updated_at = void 0, _M.prototype.ifc_source = void 0, _M.prototype.ifc_id = void 0, _M.IfcSourceEnum = {
        UPLOAD: "UPLOAD",
        SPLIT: "SPLIT",
        MERGE: "MERGE",
        EXPORT: "EXPORT",
        OPTIMIZED: "OPTIMIZED"
    };
    class mM {
        constructor(e) {
            mM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new mM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("identifier") && (t.identifier = Ww.convertToType(e.identifier, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String"))), t
        }
    }
    mM.prototype.id = void 0, mM.prototype.name = void 0, mM.prototype.identifier = void 0, mM.prototype.description = void 0;
    class gM {
        constructor(e) {
            gM.initialize(this, e)
        }
        static initialize(e, t) {
            e.type = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new gM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("unit_type") && (t.unit_type = Ww.convertToType(e.unit_type, "String")), e.hasOwnProperty("prefix") && (t.prefix = Ww.convertToType(e.prefix, "String")), e.hasOwnProperty("dimensions") && (t.dimensions = Ww.convertToType(e.dimensions, ["Number"])), e.hasOwnProperty("conversion_factor") && (t.conversion_factor = Ww.convertToType(e.conversion_factor, "Number")), e.hasOwnProperty("conversion_baseunit") && (t.conversion_baseunit = gM.constructFromObject(e.conversion_baseunit)), e.hasOwnProperty("elements") && (t.elements = Ww.convertToType(e.elements, Object)), e.hasOwnProperty("is_default") && (t.is_default = Ww.convertToType(e.is_default, "Boolean"))), t
        }
    }
    gM.prototype.id = void 0, gM.prototype.type = void 0, gM.prototype.name = void 0, gM.prototype.unit_type = void 0, gM.prototype.prefix = void 0, gM.prototype.dimensions = void 0, gM.prototype.conversion_factor = void 0, gM.prototype.conversion_baseunit = void 0, gM.prototype.elements = void 0, gM.prototype.is_default = void 0;
    class vM {
        constructor() {
            vM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new vM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("unit") && (t.unit = gM.constructFromObject(e.unit)), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("value_type") && (t.value_type = Ww.convertToType(e.value_type, "String"))), t
        }
    }
    vM.prototype.id = void 0, vM.prototype.unit = void 0, vM.prototype.name = void 0, vM.prototype.description = void 0, vM.prototype.type = void 0, vM.prototype.value_type = void 0;
    class bM {
        constructor(e) {
            bM.initialize(this, e)
        }
        static initialize(e, t) {
            e.definition = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new bM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("definition") && (t.definition = vM.constructFromObject(e.definition)), e.hasOwnProperty("value") && (t.value = Ww.convertToType(e.value, Object)), e.hasOwnProperty("property_set_id") && (t.property_set_id = Ww.convertToType(e.property_set_id, "String"))), t
        }
    }
    bM.prototype.id = void 0, bM.prototype.definition = void 0, bM.prototype.value = void 0, bM.prototype.property_set_id = void 0;
    class yM {
        constructor() {
            yM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new yM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("properties") && (t.properties = Ww.convertToType(e.properties, [bM]))), t
        }
    }
    yM.prototype.id = void 0, yM.prototype.name = void 0, yM.prototype.description = void 0, yM.prototype.type = void 0, yM.prototype.properties = void 0;
    class wM {
        constructor(e) {
            wM.initialize(this, e)
        }
        static initialize(e, t) {
            e.type = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new wM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("attributes") && (t.attributes = yM.constructFromObject(e.attributes)), e.hasOwnProperty("property_sets") && (t.property_sets = Ww.convertToType(e.property_sets, [yM])), e.hasOwnProperty("classifications") && (t.classifications = Ww.convertToType(e.classifications, [Jw])), e.hasOwnProperty("layers") && (t.layers = Ww.convertToType(e.layers, [mM]))), t
        }
    }
    wM.prototype.id = void 0, wM.prototype.uuid = void 0, wM.prototype.type = void 0, wM.prototype.attributes = void 0, wM.prototype.property_sets = void 0, wM.prototype.classifications = void 0, wM.prototype.layers = void 0;
    class MM {
        constructor(e, t) {
            MM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.element_uuid = t, e.classification_id = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new MM, e.hasOwnProperty("element_uuid") && (t.element_uuid = Ww.convertToType(e.element_uuid, "String")), e.hasOwnProperty("classification_id") && (t.classification_id = Ww.convertToType(e.classification_id, "Number"))), t
        }
    }
    MM.prototype.element_uuid = void 0, MM.prototype.classification_id = void 0;
    class AM {
        constructor(e, t) {
            AM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.element_uuid = t, e.property_set_id = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new AM, e.hasOwnProperty("element_uuid") && (t.element_uuid = Ww.convertToType(e.element_uuid, "String")), e.hasOwnProperty("property_set_id") && (t.property_set_id = Ww.convertToType(e.property_set_id, "Number"))), t
        }
    }
    AM.prototype.element_uuid = void 0, AM.prototype.property_set_id = void 0;
    class xM {
        constructor(e, t, i, r, n) {
            xM.initialize(this, e, t, i, r, n)
        }
        static initialize(e, t, i, r, n, s) {
            e.topic_type = t, e.topic_status = i, e.topic_label = r, e.priority = n, e.stage = s
        }
        static constructFromObject(e, t) {
            return e && (t = t || new xM, e.hasOwnProperty("topic_type") && (t.topic_type = Ww.convertToType(e.topic_type, ["String"])), e.hasOwnProperty("topic_status") && (t.topic_status = Ww.convertToType(e.topic_status, ["String"])), e.hasOwnProperty("topic_label") && (t.topic_label = Ww.convertToType(e.topic_label, ["String"])), e.hasOwnProperty("priority") && (t.priority = Ww.convertToType(e.priority, ["String"])), e.hasOwnProperty("user_id_type") && (t.user_id_type = Ww.convertToType(e.user_id_type, ["String"])), e.hasOwnProperty("stage") && (t.stage = Ww.convertToType(e.stage, ["String"]))), t
        }
    }
    xM.prototype.topic_type = void 0, xM.prototype.topic_status = void 0, xM.prototype.topic_label = void 0, xM.prototype.priority = void 0, xM.prototype.user_id_type = void 0, xM.prototype.stage = void 0;
    class CM {
        constructor(e, t, i, r, n) {
            CM.initialize(this, e, t, i, r, n)
        }
        static initialize(e, t, i, r, n, s) {
            e.id = t, e.parent_id = i, e.name = r, e.created_at = n, e.updated_at = s
        }
        static constructFromObject(e, t) {
            return e && (t = t || new CM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("created_by") && (t.created_by = sM.constructFromObject(e.created_by)), e.hasOwnProperty("creator") && (t.creator = sM.constructFromObject(e.creator)), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("file_name") && (t.file_name = Ww.convertToType(e.file_name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("size") && (t.size = Ww.convertToType(e.size, "Number")), e.hasOwnProperty("ifc_id") && (t.ifc_id = Ww.convertToType(e.ifc_id, "Number")), e.hasOwnProperty("file") && (t.file = Ww.convertToType(e.file, "String")), e.hasOwnProperty("children") && (t.children = Ww.convertToType(e.children, [CM]))), t
        }
    }
    CM.prototype.id = void 0, CM.prototype.parent_id = void 0, CM.prototype.created_by = void 0, CM.prototype.creator = void 0, CM.prototype.type = void 0, CM.prototype.name = void 0, CM.prototype.created_at = void 0, CM.prototype.updated_at = void 0, CM.prototype.file_name = void 0, CM.prototype.description = void 0, CM.prototype.size = void 0, CM.prototype.ifc_id = void 0, CM.prototype.file = void 0, CM.prototype.children = void 0, CM.TypeEnum = {
        Folder: "Folder",
        Document: "Document",
        Ifc: "Ifc"
    };
    class PM {
        constructor(e) {
            PM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new PM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("created_by") && (t.created_by = sM.constructFromObject(e.created_by)), e.hasOwnProperty("children") && (t.children = Ww.convertToType(e.children, [CM]))), t
        }
    }
    PM.prototype.id = void 0, PM.prototype.parent_id = void 0, PM.prototype.type = void 0, PM.prototype.name = void 0, PM.prototype.created_at = void 0, PM.prototype.updated_at = void 0, PM.prototype.created_by = void 0, PM.prototype.children = void 0;
    class kM {
        constructor(e, t) {
            kM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.end_point = t, e.start_point = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new kM, e.hasOwnProperty("end_point") && (t.end_point = tM.constructFromObject(e.end_point)), e.hasOwnProperty("start_point") && (t.start_point = tM.constructFromObject(e.start_point))), t
        }
    }
    kM.prototype.end_point = void 0, kM.prototype.start_point = void 0;
    class EM {
        constructor(e, t, i, r) {
            EM.initialize(this, e, t, i, r)
        }
        static initialize(e, t, i, r, n) {
            e.view_to_world_scale = t, e.camera_direction = i, e.camera_up_vector = r, e.camera_view_point = n
        }
        static constructFromObject(e, t) {
            return e && (t = t || new EM, e.hasOwnProperty("view_to_world_scale") && (t.view_to_world_scale = Ww.convertToType(e.view_to_world_scale, "Number")), e.hasOwnProperty("camera_direction") && (t.camera_direction = eM.constructFromObject(e.camera_direction)), e.hasOwnProperty("camera_up_vector") && (t.camera_up_vector = eM.constructFromObject(e.camera_up_vector)), e.hasOwnProperty("camera_view_point") && (t.camera_view_point = tM.constructFromObject(e.camera_view_point))), t
        }
    }
    EM.prototype.view_to_world_scale = void 0, EM.prototype.camera_direction = void 0, EM.prototype.camera_up_vector = void 0, EM.prototype.camera_view_point = void 0;
    class IM {
        constructor(e, t, i, r) {
            IM.initialize(this, e, t, i, r)
        }
        static initialize(e, t, i, r, n) {
            e.field_of_view = t, e.camera_direction = i, e.camera_up_vector = r, e.camera_view_point = n
        }
        static constructFromObject(e, t) {
            return e && (t = t || new IM, e.hasOwnProperty("field_of_view") && (t.field_of_view = Ww.convertToType(e.field_of_view, "Number")), e.hasOwnProperty("camera_direction") && (t.camera_direction = eM.constructFromObject(e.camera_direction)), e.hasOwnProperty("camera_up_vector") && (t.camera_up_vector = eM.constructFromObject(e.camera_up_vector)), e.hasOwnProperty("camera_view_point") && (t.camera_view_point = tM.constructFromObject(e.camera_view_point)), e.hasOwnProperty("bimdata_camera_direction") && (t.bimdata_camera_direction = eM.constructFromObject(e.bimdata_camera_direction))), t
        }
    }
    IM.prototype.field_of_view = void 0, IM.prototype.camera_direction = void 0, IM.prototype.camera_up_vector = void 0, IM.prototype.camera_view_point = void 0, IM.prototype.bimdata_camera_direction = void 0;
    class TM {
        constructor(e) {
            TM.initialize(this, e)
        }
        static initialize(e, t) {
            e.snapshot_type = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new TM, e.hasOwnProperty("snapshot_type") && (t.snapshot_type = Ww.convertToType(e.snapshot_type, "String")), e.hasOwnProperty("snapshot_data") && (t.snapshot_data = Ww.convertToType(e.snapshot_data, "String"))), t
        }
    }
    TM.prototype.snapshot_type = void 0, TM.prototype.snapshot_data = void 0;
    class DM {
        constructor() {
            DM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new DM, e.hasOwnProperty("index") && (t.index = Ww.convertToType(e.index, "Number")), e.hasOwnProperty("guid") && (t.guid = Ww.convertToType(e.guid, "String")), e.hasOwnProperty("orthogonal_camera") && (t.orthogonal_camera = EM.constructFromObject(e.orthogonal_camera)), e.hasOwnProperty("perspective_camera") && (t.perspective_camera = IM.constructFromObject(e.perspective_camera)), e.hasOwnProperty("lines") && (t.lines = Ww.convertToType(e.lines, [kM])), e.hasOwnProperty("clipping_planes") && (t.clipping_planes = Ww.convertToType(e.clipping_planes, [iM])), e.hasOwnProperty("snapshot") && (t.snapshot = TM.constructFromObject(e.snapshot)), e.hasOwnProperty("components") && (t.components = fM.constructFromObject(e.components)), e.hasOwnProperty("temp_id") && (t.temp_id = Ww.convertToType(e.temp_id, "Number"))), t
        }
    }
    DM.prototype.index = void 0, DM.prototype.guid = void 0, DM.prototype.orthogonal_camera = void 0, DM.prototype.perspective_camera = void 0, DM.prototype.lines = void 0, DM.prototype.clipping_planes = void 0, DM.prototype.snapshot = void 0, DM.prototype.components = void 0, DM.prototype.temp_id = void 0;
    class SM {
        constructor(e, t) {
            SM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.title = t, e.project = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new SM, e.hasOwnProperty("guid") && (t.guid = Ww.convertToType(e.guid, "String")), e.hasOwnProperty("creation_date") && (t.creation_date = Ww.convertToType(e.creation_date, "Date")), e.hasOwnProperty("creation_author") && (t.creation_author = Ww.convertToType(e.creation_author, "String")), e.hasOwnProperty("modified_date") && (t.modified_date = Ww.convertToType(e.modified_date, "Date")), e.hasOwnProperty("modified_author") && (t.modified_author = Ww.convertToType(e.modified_author, "String")), e.hasOwnProperty("title") && (t.title = Ww.convertToType(e.title, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("reference_links") && (t.reference_links = Ww.convertToType(e.reference_links, ["String"])), e.hasOwnProperty("ifcs") && (t.ifcs = Ww.convertToType(e.ifcs, ["Number"])), e.hasOwnProperty("labels") && (t.labels = Ww.convertToType(e.labels, ["String"])), e.hasOwnProperty("topic_type") && (t.topic_type = Ww.convertToType(e.topic_type, "String")), e.hasOwnProperty("topic_status") && (t.topic_status = Ww.convertToType(e.topic_status, "String")), e.hasOwnProperty("stage") && (t.stage = Ww.convertToType(e.stage, "String")), e.hasOwnProperty("priority") && (t.priority = Ww.convertToType(e.priority, "String")), e.hasOwnProperty("index") && (t.index = Ww.convertToType(e.index, "Number")), e.hasOwnProperty("assigned_to") && (t.assigned_to = Ww.convertToType(e.assigned_to, "String")), e.hasOwnProperty("format") && (t.format = Ww.convertToType(e.format, "String")), e.hasOwnProperty("due_date") && (t.due_date = Ww.convertToType(e.due_date, "Date")), e.hasOwnProperty("comments") && (t.comments = Ww.convertToType(e.comments, [dM])), e.hasOwnProperty("viewpoints") && (t.viewpoints = Ww.convertToType(e.viewpoints, [DM])), e.hasOwnProperty("project") && (t.project = Ww.convertToType(e.project, "Number"))), t
        }
    }
    SM.prototype.guid = void 0, SM.prototype.creation_date = void 0, SM.prototype.creation_author = void 0, SM.prototype.modified_date = void 0, SM.prototype.modified_author = void 0, SM.prototype.title = void 0, SM.prototype.description = void 0, SM.prototype.reference_links = void 0, SM.prototype.ifcs = void 0, SM.prototype.labels = void 0, SM.prototype.topic_type = void 0, SM.prototype.topic_status = void 0, SM.prototype.stage = void 0, SM.prototype.priority = void 0, SM.prototype.index = void 0, SM.prototype.assigned_to = void 0, SM.prototype.format = void 0, SM.prototype.due_date = void 0, SM.prototype.comments = void 0, SM.prototype.viewpoints = void 0, SM.prototype.project = void 0;
    class BM {
        constructor() {
            BM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new BM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("creator") && (t.creator = sM.constructFromObject(e.creator)), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("source") && (t.source = Ww.convertToType(e.source, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("document_id") && (t.document_id = Ww.convertToType(e.document_id, "String")), e.hasOwnProperty("document") && (t.document = _M.constructFromObject(e.document)), e.hasOwnProperty("structure_file") && (t.structure_file = Ww.convertToType(e.structure_file, "String")), e.hasOwnProperty("systems_file") && (t.systems_file = Ww.convertToType(e.systems_file, "String")), e.hasOwnProperty("map_file") && (t.map_file = Ww.convertToType(e.map_file, "String")), e.hasOwnProperty("gltf_file") && (t.gltf_file = Ww.convertToType(e.gltf_file, "String")), e.hasOwnProperty("bvh_tree_file") && (t.bvh_tree_file = Ww.convertToType(e.bvh_tree_file, "String")), e.hasOwnProperty("viewer_360_file") && (t.viewer_360_file = Ww.convertToType(e.viewer_360_file, "String")), e.hasOwnProperty("xkt_file") && (t.xkt_file = Ww.convertToType(e.xkt_file, "String")), e.hasOwnProperty("project_id") && (t.project_id = Ww.convertToType(e.project_id, "String")), e.hasOwnProperty("world_position") && (t.world_position = Ww.convertToType(e.world_position, ["Number"])), e.hasOwnProperty("errors") && (t.errors = Ww.convertToType(e.errors, ["String"])), e.hasOwnProperty("warnings") && (t.warnings = Ww.convertToType(e.warnings, ["String"]))), t
        }
    }
    BM.prototype.id = void 0, BM.prototype.name = void 0, BM.prototype.creator = void 0, BM.prototype.status = void 0, BM.prototype.source = void 0, BM.prototype.created_at = void 0, BM.prototype.updated_at = void 0, BM.prototype.document_id = void 0, BM.prototype.document = void 0, BM.prototype.structure_file = void 0, BM.prototype.systems_file = void 0, BM.prototype.map_file = void 0, BM.prototype.gltf_file = void 0, BM.prototype.bvh_tree_file = void 0, BM.prototype.viewer_360_file = void 0, BM.prototype.xkt_file = void 0, BM.prototype.project_id = void 0, BM.prototype.world_position = void 0, BM.prototype.errors = void 0, BM.prototype.warnings = void 0, BM.SourceEnum = {
        UPLOAD: "UPLOAD",
        SPLIT: "SPLIT",
        MERGE: "MERGE",
        EXPORT: "EXPORT",
        OPTIMIZED: "OPTIMIZED"
    };
    class jM {
        constructor() {
            jM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new jM, e.hasOwnProperty("token") && (t.token = Ww.convertToType(e.token, "String")), e.hasOwnProperty("read_only") && (t.read_only = Ww.convertToType(e.read_only, "Boolean")), e.hasOwnProperty("expires_at") && (t.expires_at = Ww.convertToType(e.expires_at, "Date"))), t
        }
    }
    jM.prototype.token = void 0, jM.prototype.read_only = void 0, jM.prototype.expires_at = void 0;
    class LM {
        constructor(e, t) {
            LM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.name = t, e.project = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new LM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("protected") && (t.protected = Ww.convertToType(e.protected, "Boolean")), e.hasOwnProperty("project") && (t.project = Ww.convertToType(e.project, "Number"))), t
        }
    }
    LM.prototype.id = void 0, LM.prototype.name = void 0, LM.prototype.description = void 0, LM.prototype.created_at = void 0, LM.prototype.updated_at = void 0, LM.prototype.protected = void 0, LM.prototype.project = void 0;
    class RM {
        constructor(e) {
            RM.initialize(this, e)
        }
        static initialize(e, t) {
            e.checker = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new RM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("error_detail") && (t.error_detail = Ww.convertToType(e.error_detail, "String")), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("result") && (t.result = Ww.convertToType(e.result, "String")), e.hasOwnProperty("collisions") && (t.collisions = Ww.convertToType(e.collisions, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("checker") && (t.checker = Ww.convertToType(e.checker, "Number"))), t
        }
    }
    RM.prototype.id = void 0, RM.prototype.error_detail = void 0, RM.prototype.status = void 0, RM.prototype.result = void 0, RM.prototype.collisions = void 0, RM.prototype.created_at = void 0, RM.prototype.updated_at = void 0, RM.prototype.checker = void 0, RM.StatusEnum = {
        C: "C",
        P: "P",
        E: "E"
    };
    class OM {
        constructor() {
            OM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new OM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("ifc") && (t.ifc = BM.constructFromObject(e.ifc)), e.hasOwnProperty("creator") && (t.creator = sM.constructFromObject(e.creator)), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("checkplan_id") && (t.checkplan_id = Ww.convertToType(e.checkplan_id, "Number")), e.hasOwnProperty("results") && (t.results = Ww.convertToType(e.results, [RM])), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("checkplan") && (t.checkplan = LM.constructFromObject(e.checkplan))), t
        }
    }
    OM.prototype.id = void 0, OM.prototype.ifc = void 0, OM.prototype.creator = void 0, OM.prototype.name = void 0, OM.prototype.checkplan_id = void 0, OM.prototype.results = void 0, OM.prototype.created_at = void 0, OM.prototype.updated_at = void 0, OM.prototype.checkplan = void 0;
    class FM {
        constructor() {
            FM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new FM, e.hasOwnProperty("errors") && (t.errors = Ww.convertToType(e.errors, ["String"])), e.hasOwnProperty("warnings") && (t.warnings = Ww.convertToType(e.warnings, ["String"]))), t
        }
    }
    FM.prototype.errors = void 0, FM.prototype.warnings = void 0;
    class NM {
        constructor(e) {
            NM.initialize(this, e)
        }
        static initialize(e, t) {
            e.file_name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new NM, e.hasOwnProperty("classifications") && (t.classifications = Ww.convertToType(e.classifications, "String")), e.hasOwnProperty("zones") && (t.zones = Ww.convertToType(e.zones, "String")), e.hasOwnProperty("properties") && (t.properties = Ww.convertToType(e.properties, "String")), e.hasOwnProperty("systems") && (t.systems = Ww.convertToType(e.systems, "String")), e.hasOwnProperty("layers") && (t.layers = Ww.convertToType(e.layers, "String")), e.hasOwnProperty("materials") && (t.materials = Ww.convertToType(e.materials, "String")), e.hasOwnProperty("attributes") && (t.attributes = Ww.convertToType(e.attributes, "String")), e.hasOwnProperty("structure") && (t.structure = Ww.convertToType(e.structure, "String")), e.hasOwnProperty("uuids") && (t.uuids = Ww.convertToType(e.uuids, ["String"])), e.hasOwnProperty("file_name") && (t.file_name = Ww.convertToType(e.file_name, "String"))), t
        }
    }
    NM.prototype.classifications = "UPDATED", NM.prototype.zones = "UPDATED", NM.prototype.properties = "UPDATED", NM.prototype.systems = "UPDATED", NM.prototype.layers = "UPDATED", NM.prototype.materials = "UPDATED", NM.prototype.attributes = "UPDATED", NM.prototype.structure = "UPDATED", NM.prototype.uuids = void 0, NM.prototype.file_name = void 0, NM.ClassificationsEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.ZonesEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.PropertiesEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.SystemsEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.LayersEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.MaterialsEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.AttributesEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    }, NM.StructureEnum = {
        ORIGINAL: "ORIGINAL",
        UPDATED: "UPDATED",
        NONE: "NONE"
    };
    class UM {
        constructor() {
            UM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new UM, e.hasOwnProperty("structure_file") && (t.structure_file = Ww.convertToType(e.structure_file, "String")), e.hasOwnProperty("systems_file") && (t.systems_file = Ww.convertToType(e.systems_file, "String")), e.hasOwnProperty("map_file") && (t.map_file = Ww.convertToType(e.map_file, "String")), e.hasOwnProperty("gltf_file") && (t.gltf_file = Ww.convertToType(e.gltf_file, "String")), e.hasOwnProperty("gltf_with_openings_file") && (t.gltf_with_openings_file = Ww.convertToType(e.gltf_with_openings_file, "String")), e.hasOwnProperty("bvh_tree_file") && (t.bvh_tree_file = Ww.convertToType(e.bvh_tree_file, "String")), e.hasOwnProperty("viewer_360_file") && (t.viewer_360_file = Ww.convertToType(e.viewer_360_file, "String")), e.hasOwnProperty("xkt_file") && (t.xkt_file = Ww.convertToType(e.xkt_file, "String"))), t
        }
    }
    UM.prototype.structure_file = void 0, UM.prototype.systems_file = void 0, UM.prototype.map_file = void 0, UM.prototype.gltf_file = void 0, UM.prototype.gltf_with_openings_file = void 0, UM.prototype.bvh_tree_file = void 0, UM.prototype.viewer_360_file = void 0, UM.prototype.xkt_file = void 0;
    class HM {
        constructor(e, t) {
            HM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.ifc_ids = t, e.export_name = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new HM, e.hasOwnProperty("ifc_ids") && (t.ifc_ids = Ww.convertToType(e.ifc_ids, ["Number"])), e.hasOwnProperty("floating_point_reduction") && (t.floating_point_reduction = Ww.convertToType(e.floating_point_reduction, "Number")), e.hasOwnProperty("export_name") && (t.export_name = Ww.convertToType(e.export_name, "String"))), t
        }
    }
    HM.prototype.ifc_ids = void 0, HM.prototype.floating_point_reduction = void 0, HM.prototype.export_name = void 0;
    class VM {
        constructor() {
            VM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new VM, e.hasOwnProperty("floating_point_reduction") && (t.floating_point_reduction = Ww.convertToType(e.floating_point_reduction, "Number"))), t
        }
    }
    VM.prototype.floating_point_reduction = void 0;
    class zM {
        constructor(e, t, i, r) {
            zM.initialize(this, e, t, i, r)
        }
        static initialize(e, t, i, r, n) {
            e.redirect_uri = t, e.cloud_name = i, e.cloud_role = r, e.email = n
        }
        static constructFromObject(e, t) {
            return e && (t = t || new zM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("client_id") && (t.client_id = Ww.convertToType(e.client_id, "String")), e.hasOwnProperty("redirect_uri") && (t.redirect_uri = Ww.convertToType(e.redirect_uri, "String")), e.hasOwnProperty("cloud_name") && (t.cloud_name = Ww.convertToType(e.cloud_name, "String")), e.hasOwnProperty("cloud_role") && (t.cloud_role = Ww.convertToType(e.cloud_role, "Number")), e.hasOwnProperty("project_name") && (t.project_name = Ww.convertToType(e.project_name, "String")), e.hasOwnProperty("project_role") && (t.project_role = Ww.convertToType(e.project_role, "Number")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String")), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("sender_provider_sub") && (t.sender_provider_sub = Ww.convertToType(e.sender_provider_sub, "String"))), t
        }
    }
    zM.prototype.id = void 0, zM.prototype.client_id = void 0, zM.prototype.redirect_uri = void 0, zM.prototype.cloud_name = void 0, zM.prototype.cloud_role = void 0, zM.prototype.project_name = void 0, zM.prototype.project_role = void 0, zM.prototype.email = void 0, zM.prototype.status = void 0, zM.prototype.sender_provider_sub = void 0, zM.StatusEnum = {
        A: "A",
        D: "D",
        P: "P"
    };
    class $M {
        constructor(e) {
            $M.initialize(this, e)
        }
        static initialize(e, t) {
            e.label = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new $M, e.hasOwnProperty("label") && (t.label = Ww.convertToType(e.label, "String"))), t
        }
    }
    $M.prototype.label = void 0;
    class WM {
        constructor(e, t) {
            WM.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.name = t, e.elements = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new WM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("identifier") && (t.identifier = Ww.convertToType(e.identifier, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("elements") && (t.elements = Ww.convertToType(e.elements, ["String"]))), t
        }
    }
    WM.prototype.id = void 0, WM.prototype.name = void 0, WM.prototype.identifier = void 0, WM.prototype.description = void 0, WM.prototype.elements = void 0;
    class qM {
        constructor(e) {
            qM.initialize(this, e)
        }
        static initialize(e, t) {
            e.priority = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new qM, e.hasOwnProperty("priority") && (t.priority = Ww.convertToType(e.priority, "String"))), t
        }
    }
    qM.prototype.priority = void 0;
    class GM {
        constructor() {
            GM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new GM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("processor") && (t.processor = Ww.convertToType(e.processor, "Number")), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("detail_message") && (t.detail_message = Ww.convertToType(e.detail_message, "String"))), t
        }
    }
    GM.prototype.id = void 0, GM.prototype.processor = void 0, GM.prototype.status = void 0, GM.prototype.detail_message = void 0, GM.StatusEnum = {
        C: "C",
        D: "D",
        P: "P",
        W: "W",
        I: "I",
        E: "E",
        X: "X"
    };
    class YM {
        constructor(e) {
            YM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new YM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("logo") && (t.logo = Ww.convertToType(e.logo, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("cloud") && (t.cloud = oM.constructFromObject(e.cloud)), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("root_folder_id") && (t.root_folder_id = Ww.convertToType(e.root_folder_id, "String"))), t
        }
    }
    YM.prototype.id = void 0, YM.prototype.logo = void 0, YM.prototype.name = void 0, YM.prototype.cloud = void 0, YM.prototype.status = void 0, YM.prototype.created_at = void 0, YM.prototype.updated_at = void 0, YM.prototype.parent_id = void 0, YM.prototype.root_folder_id = void 0, YM.StatusEnum = {
        A: "A",
        D: "D"
    };
    class ZM {
        constructor(e) {
            ZM.initialize(this, e)
        }
        static initialize(e, t) {
            e.scopes = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new ZM, e.hasOwnProperty("token") && (t.token = Ww.convertToType(e.token, "String")), e.hasOwnProperty("scopes") && (t.scopes = Ww.convertToType(e.scopes, ["String"])), e.hasOwnProperty("expires_at") && (t.expires_at = Ww.convertToType(e.expires_at, "Date"))), t
        }
    }
    ZM.prototype.token = void 0, ZM.prototype.scopes = void 0, ZM.prototype.expires_at = void 0;
    class XM {
        constructor(e, t, i) {
            XM.initialize(this, e, t, i)
        }
        static initialize(e, t, i, r) {
            e.email = t, e.redirect_uri = i, e.role = r
        }
        static constructFromObject(e, t) {
            return e && (t = t || new XM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String")), e.hasOwnProperty("redirect_uri") && (t.redirect_uri = Ww.convertToType(e.redirect_uri, "String")), e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    XM.prototype.id = void 0, XM.prototype.email = void 0, XM.prototype.redirect_uri = void 0, XM.prototype.role = void 0;
    class KM {
        constructor(e) {
            KM.initialize(this, e)
        }
        static initialize(e, t) {
            e.project = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new KM, e.hasOwnProperty("project") && (t.project = Ww.convertToType(e.project, "Number")), e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    KM.prototype.project = void 0, KM.prototype.role = void 0;
    class QM {
        constructor(e) {
            QM.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new QM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("logo") && (t.logo = Ww.convertToType(e.logo, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("status") && (t.status = Ww.convertToType(e.status, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("children") && (t.children = Ww.convertToType(e.children, [QM])), e.hasOwnProperty("root_folder_id") && (t.root_folder_id = Ww.convertToType(e.root_folder_id, "String"))), t
        }
    }
    QM.prototype.id = void 0, QM.prototype.logo = void 0, QM.prototype.name = void 0, QM.prototype.status = void 0, QM.prototype.created_at = void 0, QM.prototype.updated_at = void 0, QM.prototype.parent_id = void 0, QM.prototype.children = void 0, QM.prototype.root_folder_id = void 0, QM.StatusEnum = {
        A: "A",
        D: "D"
    };
    class JM {
        constructor() {
            JM.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new JM, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("notation") && (t.notation = Ww.convertToType(e.notation, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String"))), t
        }
    }
    JM.prototype.id = void 0, JM.prototype.type = void 0, JM.prototype.notation = void 0, JM.prototype.description = void 0;
    class eA {
        constructor() {
            eA.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new eA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("value_type") && (t.value_type = Ww.convertToType(e.value_type, "String")), e.hasOwnProperty("unit_id") && (t.unit_id = Ww.convertToType(e.unit_id, "Number"))), t
        }
    }
    eA.prototype.id = void 0, eA.prototype.description = void 0, eA.prototype.name = void 0, eA.prototype.type = void 0, eA.prototype.value_type = void 0, eA.prototype.unit_id = void 0;
    class tA {
        constructor(e, t) {
            tA.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.uuid = t, e.type = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new tA, e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("attributes") && (t.attributes = Ww.convertToType(e.attributes, "Number")), e.hasOwnProperty("psets") && (t.psets = Ww.convertToType(e.psets, ["Number"])), e.hasOwnProperty("classifications") && (t.classifications = Ww.convertToType(e.classifications, ["Number"])), e.hasOwnProperty("layers") && (t.layers = Ww.convertToType(e.layers, ["Number"])), e.hasOwnProperty("systems") && (t.systems = Ww.convertToType(e.systems, ["Number"]))), t
        }
    }
    tA.prototype.uuid = void 0, tA.prototype.type = void 0, tA.prototype.attributes = void 0, tA.prototype.psets = void 0, tA.prototype.classifications = void 0, tA.prototype.layers = void 0, tA.prototype.systems = void 0;
    class iA {
        constructor(e) {
            iA.initialize(this, e)
        }
        static initialize(e, t) {
            e.name = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new iA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("identifier") && (t.identifier = Ww.convertToType(e.identifier, "String"))), t
        }
    }
    iA.prototype.id = void 0, iA.prototype.name = void 0, iA.prototype.description = void 0, iA.prototype.identifier = void 0;
    class rA {
        constructor(e) {
            rA.initialize(this, e)
        }
        static initialize(e, t) {
            e.def_id = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new rA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("value") && (t.value = Ww.convertToType(e.value, Object)), e.hasOwnProperty("def_id") && (t.def_id = Ww.convertToType(e.def_id, "Number"))), t
        }
    }
    rA.prototype.id = void 0, rA.prototype.value = void 0, rA.prototype.def_id = void 0;
    class nA {
        constructor(e) {
            nA.initialize(this, e)
        }
        static initialize(e, t) {
            e.properties = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new nA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("properties") && (t.properties = Ww.convertToType(e.properties, [rA]))), t
        }
    }
    nA.prototype.id = void 0, nA.prototype.description = void 0, nA.prototype.name = void 0, nA.prototype.type = void 0, nA.prototype.properties = void 0;
    class sA {
        constructor(e) {
            sA.initialize(this, e)
        }
        static initialize(e, t) {
            e.uuid = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new sA, e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("object_type") && (t.object_type = Ww.convertToType(e.object_type, "String"))), t
        }
    }
    sA.prototype.uuid = void 0, sA.prototype.name = void 0, sA.prototype.description = void 0, sA.prototype.object_type = void 0;
    class oA {
        constructor(e) {
            oA.initialize(this, e)
        }
        static initialize(e, t) {
            e.type = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new oA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("type") && (t.type = Ww.convertToType(e.type, "String")), e.hasOwnProperty("unit_type") && (t.unit_type = Ww.convertToType(e.unit_type, "String")), e.hasOwnProperty("prefix") && (t.prefix = Ww.convertToType(e.prefix, "String")), e.hasOwnProperty("elements") && (t.elements = Ww.convertToType(e.elements, Object)), e.hasOwnProperty("conversion_factor") && (t.conversion_factor = Ww.convertToType(e.conversion_factor, "Number")), e.hasOwnProperty("dimensions") && (t.dimensions = Ww.convertToType(e.dimensions, ["Number"])), e.hasOwnProperty("conversion_baseunit_index") && (t.conversion_baseunit_index = Ww.convertToType(e.conversion_baseunit_index, "Number")), e.hasOwnProperty("is_default") && (t.is_default = Ww.convertToType(e.is_default, "Boolean"))), t
        }
    }
    oA.prototype.id = void 0, oA.prototype.name = void 0, oA.prototype.type = void 0, oA.prototype.unit_type = void 0, oA.prototype.prefix = void 0, oA.prototype.elements = void 0, oA.prototype.conversion_factor = void 0, oA.prototype.dimensions = void 0, oA.prototype.conversion_baseunit_index = void 0, oA.prototype.is_default = void 0;
    class aA {
        constructor(e) {
            aA.initialize(this, e)
        }
        static initialize(e, t) {
            e.elements = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new aA, e.hasOwnProperty("units") && (t.units = Ww.convertToType(e.units, [oA])), e.hasOwnProperty("definitions") && (t.definitions = Ww.convertToType(e.definitions, [eA])), e.hasOwnProperty("property_sets") && (t.property_sets = Ww.convertToType(e.property_sets, [nA])), e.hasOwnProperty("classifications") && (t.classifications = Ww.convertToType(e.classifications, [JM])), e.hasOwnProperty("layers") && (t.layers = Ww.convertToType(e.layers, [iA])), e.hasOwnProperty("systems") && (t.systems = Ww.convertToType(e.systems, [sA])), e.hasOwnProperty("elements") && (t.elements = Ww.convertToType(e.elements, [tA]))), t
        }
    }
    aA.prototype.units = void 0, aA.prototype.definitions = void 0, aA.prototype.property_sets = void 0, aA.prototype.classifications = void 0, aA.prototype.layers = void 0, aA.prototype.systems = void 0, aA.prototype.elements = void 0;
    class lA {
        constructor(e) {
            lA.initialize(this, e)
        }
        static initialize(e, t) {
            e.email = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new lA, e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String"))), t
        }
    }
    lA.prototype.email = void 0;
    class cA {
        constructor(e, t) {
            cA.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.id = t, e.email = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new cA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String"))), t
        }
    }
    cA.prototype.id = void 0, cA.prototype.name = void 0, cA.prototype.email = void 0;
    class hA {
        constructor(e, t, i) {
            hA.initialize(this, e, t, i)
        }
        static initialize(e, t, i, r) {
            e.email = t, e.firstname = i, e.lastname = r
        }
        static constructFromObject(e, t) {
            return e && (t = t || new hA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("email") && (t.email = Ww.convertToType(e.email, "String")), e.hasOwnProperty("company") && (t.company = Ww.convertToType(e.company, "String")), e.hasOwnProperty("firstname") && (t.firstname = Ww.convertToType(e.firstname, "String")), e.hasOwnProperty("lastname") && (t.lastname = Ww.convertToType(e.lastname, "String")), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("organizations") && (t.organizations = Ww.convertToType(e.organizations, [nM])), e.hasOwnProperty("clouds") && (t.clouds = Ww.convertToType(e.clouds, [lM])), e.hasOwnProperty("projects") && (t.projects = Ww.convertToType(e.projects, [KM])), e.hasOwnProperty("provider") && (t.provider = Ww.convertToType(e.provider, "String")), e.hasOwnProperty("provider_sub") && (t.provider_sub = Ww.convertToType(e.provider_sub, "String")), e.hasOwnProperty("sub") && (t.sub = Ww.convertToType(e.sub, "String"))), t
        }
    }
    hA.prototype.id = void 0, hA.prototype.email = void 0, hA.prototype.company = void 0, hA.prototype.firstname = void 0, hA.prototype.lastname = void 0, hA.prototype.created_at = void 0, hA.prototype.updated_at = void 0, hA.prototype.organizations = void 0, hA.prototype.clouds = void 0, hA.prototype.projects = void 0, hA.prototype.provider = void 0, hA.prototype.provider_sub = void 0, hA.prototype.sub = void 0;
    class dA {
        constructor(e) {
            dA.initialize(this, e)
        }
        static initialize(e, t) {
            e.uuid = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new dA, e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, {
                String: {
                    String: "String"
                }
            }))), t
        }
    }
    dA.prototype.uuid = void 0;
    class uA {
        constructor(e) {
            uA.initialize(this, e)
        }
        static initialize(e, t) {
            e.uuid = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new uA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("longname") && (t.longname = Ww.convertToType(e.longname, "String")), e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("zone_set") && (t.zone_set = Ww.convertToType(e.zone_set, ["Number"])), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date"))), t
        }
    }
    uA.prototype.id = void 0, uA.prototype.name = void 0, uA.prototype.longname = void 0, uA.prototype.uuid = void 0, uA.prototype.zone_set = void 0, uA.prototype.created_at = void 0, uA.prototype.updated_at = void 0;
    class pA {
        constructor(e) {
            pA.initialize(this, e)
        }
        static initialize(e, t) {
            e.stage = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new pA, e.hasOwnProperty("stage") && (t.stage = Ww.convertToType(e.stage, "String"))), t
        }
    }
    pA.prototype.stage = void 0;
    class fA {
        constructor(e) {
            fA.initialize(this, e)
        }
        static initialize(e, t) {
            e.elements = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new fA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("object_type") && (t.object_type = Ww.convertToType(e.object_type, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("elements") && (t.elements = Ww.convertToType(e.elements, ["String"]))), t
        }
    }
    fA.prototype.id = void 0, fA.prototype.uuid = void 0, fA.prototype.name = void 0, fA.prototype.object_type = void 0, fA.prototype.description = void 0, fA.prototype.elements = void 0;
    class _A {
        constructor(e, t) {
            _A.initialize(this, e, t)
        }
        static initialize(e, t, i) {
            e.title = t, e.project = i
        }
        static constructFromObject(e, t) {
            return e && (t = t || new _A, e.hasOwnProperty("guid") && (t.guid = Ww.convertToType(e.guid, "String")), e.hasOwnProperty("topic_type") && (t.topic_type = Ww.convertToType(e.topic_type, "String")), e.hasOwnProperty("topic_status") && (t.topic_status = Ww.convertToType(e.topic_status, "String")), e.hasOwnProperty("title") && (t.title = Ww.convertToType(e.title, "String")), e.hasOwnProperty("priority") && (t.priority = Ww.convertToType(e.priority, "String")), e.hasOwnProperty("labels") && (t.labels = Ww.convertToType(e.labels, ["String"])), e.hasOwnProperty("creation_date") && (t.creation_date = Ww.convertToType(e.creation_date, "Date")), e.hasOwnProperty("creation_author") && (t.creation_author = Ww.convertToType(e.creation_author, "String")), e.hasOwnProperty("modified_date") && (t.modified_date = Ww.convertToType(e.modified_date, "Date")), e.hasOwnProperty("modified_author") && (t.modified_author = Ww.convertToType(e.modified_author, "String")), e.hasOwnProperty("assigned_to") && (t.assigned_to = Ww.convertToType(e.assigned_to, "String")), e.hasOwnProperty("reference_links") && (t.reference_links = Ww.convertToType(e.reference_links, ["String"])), e.hasOwnProperty("stage") && (t.stage = Ww.convertToType(e.stage, "String")), e.hasOwnProperty("description") && (t.description = Ww.convertToType(e.description, "String")), e.hasOwnProperty("due_date") && (t.due_date = Ww.convertToType(e.due_date, "Date")), e.hasOwnProperty("ifcs") && (t.ifcs = Ww.convertToType(e.ifcs, ["Number"])), e.hasOwnProperty("format") && (t.format = Ww.convertToType(e.format, "String")), e.hasOwnProperty("index") && (t.index = Ww.convertToType(e.index, "Number")), e.hasOwnProperty("project") && (t.project = Ww.convertToType(e.project, "Number"))), t
        }
    }
    _A.prototype.guid = void 0, _A.prototype.topic_type = void 0, _A.prototype.topic_status = void 0, _A.prototype.title = void 0, _A.prototype.priority = void 0, _A.prototype.labels = void 0, _A.prototype.creation_date = void 0, _A.prototype.creation_author = void 0, _A.prototype.modified_date = void 0, _A.prototype.modified_author = void 0, _A.prototype.assigned_to = void 0, _A.prototype.reference_links = void 0, _A.prototype.stage = void 0, _A.prototype.description = void 0, _A.prototype.due_date = void 0, _A.prototype.ifcs = void 0, _A.prototype.format = void 0, _A.prototype.index = void 0, _A.prototype.project = void 0;
    class mA {
        constructor(e) {
            mA.initialize(this, e)
        }
        static initialize(e, t) {
            e.topic_status = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new mA, e.hasOwnProperty("topic_status") && (t.topic_status = Ww.convertToType(e.topic_status, "String"))), t
        }
    }
    mA.prototype.topic_status = void 0;
    class gA {
        constructor(e) {
            gA.initialize(this, e)
        }
        static initialize(e, t) {
            e.topic_type = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new gA, e.hasOwnProperty("topic_type") && (t.topic_type = Ww.convertToType(e.topic_type, "String"))), t
        }
    }
    gA.prototype.topic_type = void 0;
    class vA {
        constructor() {
            vA.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new vA, e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    vA.prototype.role = void 0;
    class bA {
        constructor() {
            bA.initialize(this)
        }
        static initialize(e) {}
        static constructFromObject(e, t) {
            return e && (t = t || new bA, e.hasOwnProperty("role") && (t.role = Ww.convertToType(e.role, "Number"))), t
        }
    }
    bA.prototype.role = void 0;
    class yA {
        constructor(e, t, i) {
            yA.initialize(this, e, t, i)
        }
        static initialize(e, t, i, r) {
            e.events = t, e.url = i, e.secret = r
        }
        static constructFromObject(e, t) {
            return e && (t = t || new yA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("events") && (t.events = Ww.convertToType(e.events, ["String"])), e.hasOwnProperty("url") && (t.url = Ww.convertToType(e.url, "String")), e.hasOwnProperty("secret") && (t.secret = Ww.convertToType(e.secret, "String"))), t
        }
    }
    yA.prototype.id = void 0, yA.prototype.events = void 0, yA.prototype.url = void 0, yA.prototype.secret = void 0;
    class wA {
        constructor(e) {
            wA.initialize(this, e)
        }
        static initialize(e, t) {
            e.uuid = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new wA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("zones") && (t.zones = Ww.convertToType(e.zones, [wA])), e.hasOwnProperty("parent_id") && (t.parent_id = Ww.convertToType(e.parent_id, "Number")), e.hasOwnProperty("spaces") && (t.spaces = Ww.convertToType(e.spaces, [uA])), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date")), e.hasOwnProperty("color") && (t.color = Ww.convertToType(e.color, "String"))), t
        }
    }
    wA.prototype.id = void 0, wA.prototype.name = void 0, wA.prototype.uuid = void 0, wA.prototype.zones = void 0, wA.prototype.parent_id = void 0, wA.prototype.spaces = void 0, wA.prototype.created_at = void 0, wA.prototype.updated_at = void 0, wA.prototype.color = void 0;
    class MA {
        constructor(e) {
            MA.initialize(this, e)
        }
        static initialize(e, t) {
            e.uuid = t
        }
        static constructFromObject(e, t) {
            return e && (t = t || new MA, e.hasOwnProperty("id") && (t.id = Ww.convertToType(e.id, "Number")), e.hasOwnProperty("name") && (t.name = Ww.convertToType(e.name, "String")), e.hasOwnProperty("longname") && (t.longname = Ww.convertToType(e.longname, "String")), e.hasOwnProperty("uuid") && (t.uuid = Ww.convertToType(e.uuid, "String")), e.hasOwnProperty("zone_set") && (t.zone_set = Ww.convertToType(e.zone_set, ["Number"])), e.hasOwnProperty("created_at") && (t.created_at = Ww.convertToType(e.created_at, "Date")), e.hasOwnProperty("updated_at") && (t.updated_at = Ww.convertToType(e.updated_at, "Date"))), t
        }
    }
    MA.prototype.id = void 0, MA.prototype.name = void 0, MA.prototype.longname = void 0, MA.prototype.uuid = void 0, MA.prototype.zone_set = void 0, MA.prototype.created_at = void 0, MA.prototype.updated_at = void 0;
    var AA = Object.freeze({
        __proto__: null,
        ApiClient: Ww,
        BcfProject: qw,
        BcfUser: Gw,
        CheckPlan: Kw,
        CheckerResult: Qw,
        Classification: Jw,
        ClippingPlane: iM,
        Cloud: oM,
        CloudInvitation: aM,
        CloudRole: lM,
        Coloring: hM,
        Comment: dM,
        Component: cM,
        ComponentsParent: fM,
        Direction: eM,
        Document: _M,
        Element: wM,
        ElementClassificationRelation: MM,
        ElementPropertySetRelation: AM,
        Extensions: xM,
        Feature: rM,
        Folder: PM,
        FullTopic: SM,
        Ifc: BM,
        IfcAccessToken: jM,
        IfcChecker: OM,
        IfcCheckerCheckplan: LM,
        IfcCheckerResults: RM,
        IfcErrors: FM,
        IfcExport: NM,
        IfcFiles: UM,
        IfcMerge: HM,
        IfcOptimize: VM,
        Invitation: zM,
        Label: $M,
        Layer: WM,
        LayerElement: mM,
        Line: kM,
        Organization: nM,
        OrthogonalCamera: EM,
        PerspectiveCamera: IM,
        Point: tM,
        Priority: qM,
        ProcessorHandler: GM,
        Project: YM,
        ProjectAccessToken: ZM,
        ProjectInvitation: XM,
        ProjectRole: KM,
        ProjectWithChildren: QM,
        Property: bM,
        PropertyDefinition: vM,
        PropertySet: yM,
        RawClassification: JM,
        RawDefinition: eA,
        RawElement: tA,
        RawElements: aA,
        RawLayer: iA,
        RawProperty: rA,
        RawPropertySet: nA,
        RawSystem: sA,
        RawUnit: oA,
        RecursiveFolderChildren: CM,
        Rule: Zw,
        RuleComponent: Yw,
        Ruleset: Xw,
        SelectUser: lA,
        SelfBcfUser: cA,
        SelfUser: hA,
        SimpleElement: dA,
        Snapshot: TM,
        Space: uA,
        Stage: pA,
        System: fA,
        Topic: _A,
        TopicStatus: mA,
        TopicType: gA,
        Unit: gM,
        User: sM,
        UserCloudUpdate: vA,
        UserProjectUpdate: bA,
        ViewSetupHints: uM,
        Viewpoint: DM,
        Visibility: pM,
        WebHook: yA,
        Zone: wA,
        ZoneSpace: MA,
        BcfApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            createCommentWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling createComment");
                if (null == t) throw new Error("Missing the required parameter 'topicsGuid' when calling createComment");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createComment");
                let n = {
                        projects_pk: e,
                        topics_guid: t
                    },
                    s = dM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createComment(e, t, i) {
                return this.createCommentWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            createFullTopicWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling createFullTopic");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling createFullTopic");
                let r = {
                        projects_pk: e
                    },
                    n = SM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/full-topic", "POST", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            createFullTopic(e, t) {
                return this.createFullTopicWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            createTopicWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling createTopic");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling createTopic");
                let r = {
                        projects_pk: e
                    },
                    n = _A;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics", "POST", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            createTopic(e, t) {
                return this.createTopicWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            createViewpointWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling createViewpoint");
                if (null == t) throw new Error("Missing the required parameter 'topicsGuid' when calling createViewpoint");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createViewpoint");
                let n = {
                        projects_pk: e,
                        topics_guid: t
                    },
                    s = DM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createViewpoint(e, t, i) {
                return this.createViewpointWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteCommentWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling deleteComment");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling deleteComment");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling deleteComment");
                let r = {
                    guid: e,
                    projects_pk: t,
                    topics_guid: i
                };
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteComment(e, t, i) {
                return this.deleteCommentWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteTopicWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling deleteTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling deleteTopic");
                let i = {
                    guid: e,
                    projects_pk: t
                };
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{guid}", "DELETE", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteTopic(e, t) {
                return this.deleteTopicWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            deleteViewpointWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling deleteViewpoint");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling deleteViewpoint");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling deleteViewpoint");
                let r = {
                    guid: e,
                    projects_pk: t,
                    topics_guid: i
                };
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteViewpoint(e, t, i) {
                return this.deleteViewpointWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            downloadBcfExportWithHttpInfo(e, t) {
                t = t || {};
                if (null == e) throw new Error("Missing the required parameter 'id' when calling downloadBcfExport");
                let i = {
                        id: e
                    },
                    r = {
                        topics: t.topics,
                        format: t.format
                    };
                return this.apiClient.callApi("/bcf/2.1/projects/{id}/export", "GET", i, r, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            downloadBcfExport(e, t) {
                return this.downloadBcfExportWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateBcfProjectWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'id' when calling fullUpdateBcfProject");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling fullUpdateBcfProject");
                let r = {
                        id: e
                    },
                    n = qw;
                return this.apiClient.callApi("/bcf/2.1/projects/{id}", "PUT", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            fullUpdateBcfProject(e, t) {
                return this.fullUpdateBcfProjectWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCommentWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling fullUpdateComment");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling fullUpdateComment");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling fullUpdateComment");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateComment");
                let s = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    o = dM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateComment(e, t, i, r) {
                return this.fullUpdateCommentWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateFullTopicWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling fullUpdateFullTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling fullUpdateFullTopic");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling fullUpdateFullTopic");
                let n = {
                        guid: e,
                        projects_pk: t
                    },
                    s = SM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/full-topic/{guid}", "PUT", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            fullUpdateFullTopic(e, t, i) {
                return this.fullUpdateFullTopicWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateTopicWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling fullUpdateTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling fullUpdateTopic");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling fullUpdateTopic");
                let n = {
                        guid: e,
                        projects_pk: t
                    },
                    s = _A;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{guid}", "PUT", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            fullUpdateTopic(e, t, i) {
                return this.fullUpdateTopicWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateViewpointWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling fullUpdateViewpoint");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling fullUpdateViewpoint");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling fullUpdateViewpoint");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateViewpoint");
                let s = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    o = DM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateViewpoint(e, t, i, r) {
                return this.fullUpdateViewpointWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getBcfProjectWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling getBcfProject");
                let t = {
                        id: e
                    },
                    i = qw;
                return this.apiClient.callApi("/bcf/2.1/projects/{id}", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getBcfProject(e) {
                return this.getBcfProjectWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getBcfProjectsWithHttpInfo() {
                let e = [qw];
                return this.apiClient.callApi("/bcf/2.1/projects", "GET", {}, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], e, null)
            }
            getBcfProjects() {
                return this.getBcfProjectsWithHttpInfo().then((function(e) {
                    return e.data
                }))
            }
            getColoringsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getColorings");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getColorings");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getColorings");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = [hM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/coloring", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getColorings(e, t, i) {
                return this.getColoringsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getCommentWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getComment");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getComment");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getComment");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = dM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getComment(e, t, i) {
                return this.getCommentWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getCommentsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getComments");
                if (null == t) throw new Error("Missing the required parameter 'topicsGuid' when calling getComments");
                let i = {
                        projects_pk: e,
                        topics_guid: t
                    },
                    r = [dM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getComments(e, t) {
                return this.getCommentsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getExtensionsWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getExtensions");
                let t = {
                        projects_pk: e
                    },
                    i = xM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/extensions", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getExtensions(e) {
                return this.getExtensionsWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getFullTopicWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getFullTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getFullTopic");
                let i = {
                        guid: e,
                        projects_pk: t
                    },
                    r = SM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/full-topic/{guid}", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getFullTopic(e, t) {
                return this.getFullTopicWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getFullTopicsWithHttpInfo(e, t) {
                t = t || {};
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getFullTopics");
                let i = {
                        projects_pk: e
                    },
                    r = {
                        ifcs: t.ifcs,
                        format: t.format
                    },
                    n = [SM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/full-topic", "GET", i, r, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getFullTopics(e, t) {
                return this.getFullTopicsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getSelectionsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getSelections");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getSelections");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getSelections");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = [cM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/selection", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getSelections(e, t, i) {
                return this.getSelectionsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getSnapshotWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getSnapshot");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getSnapshot");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getSnapshot");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = File;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/snapshot", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getSnapshot(e, t, i) {
                return this.getSnapshotWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getTopicWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getTopic");
                let i = {
                        guid: e,
                        projects_pk: t
                    },
                    r = _A;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{guid}", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getTopic(e, t) {
                return this.getTopicWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getTopicViewpointsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getTopicViewpoints");
                if (null == t) throw new Error("Missing the required parameter 'topicsGuid' when calling getTopicViewpoints");
                let i = {
                        projects_pk: e,
                        topics_guid: t
                    },
                    r = [DM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/topic-viewpoints", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getTopicViewpoints(e, t) {
                return this.getTopicViewpointsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getTopicsWithHttpInfo(e, t) {
                t = t || {};
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getTopics");
                let i = {
                        projects_pk: e
                    },
                    r = {
                        ifcs: t.ifcs,
                        format: t.format
                    },
                    n = [_A];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics", "GET", i, r, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getTopics(e, t) {
                return this.getTopicsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getUserWithHttpInfo() {
                let e = cA;
                return this.apiClient.callApi("/bcf/2.1/current-user", "GET", {}, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], e, null)
            }
            getUser() {
                return this.getUserWithHttpInfo().then((function(e) {
                    return e.data
                }))
            }
            getViewpointWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getViewpoint");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getViewpoint");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getViewpoint");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = DM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getViewpoint(e, t, i) {
                return this.getViewpointWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getViewpointsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling getViewpoints");
                if (null == t) throw new Error("Missing the required parameter 'topicsGuid' when calling getViewpoints");
                let i = {
                        projects_pk: e,
                        topics_guid: t
                    },
                    r = [DM];
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getViewpoints(e, t) {
                return this.getViewpointsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getVisibilitiesWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling getVisibilities");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling getVisibilities");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling getVisibilities");
                let r = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    n = pM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/visibility", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getVisibilities(e, t, i) {
                return this.getVisibilitiesWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            importBcfWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling importBcf");
                if (null == t) throw new Error("Missing the required parameter 'name' when calling importBcf");
                let i = {
                        id: e
                    },
                    r = {
                        name: t
                    };
                return this.apiClient.callApi("/bcf/2.1/projects/{id}/import", "POST", i, {}, {}, r, null, ["Bearer", "bimdata_connect", "client_credentials"], ["multipart/form-data", "application/x-www-form-urlencoded"], [], null, null)
            }
            importBcf(e, t) {
                return this.importBcfWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            updateBcfProjectWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'id' when calling updateBcfProject");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling updateBcfProject");
                let r = {
                        id: e
                    },
                    n = qw;
                return this.apiClient.callApi("/bcf/2.1/projects/{id}", "PATCH", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            updateBcfProject(e, t) {
                return this.updateBcfProjectWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            updateCommentWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling updateComment");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling updateComment");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling updateComment");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateComment");
                let s = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    o = dM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateComment(e, t, i, r) {
                return this.updateCommentWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateExtensionsWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'projectsPk' when calling updateExtensions");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling updateExtensions");
                let r = {
                        projects_pk: e
                    },
                    n = xM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/extensions", "PATCH", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            updateExtensions(e, t) {
                return this.updateExtensionsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            updateFullTopicWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling updateFullTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling updateFullTopic");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling updateFullTopic");
                let n = {
                        guid: e,
                        projects_pk: t
                    },
                    s = SM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/full-topic/{guid}", "PATCH", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            updateFullTopic(e, t, i) {
                return this.updateFullTopicWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateTopicWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling updateTopic");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling updateTopic");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling updateTopic");
                let n = {
                        guid: e,
                        projects_pk: t
                    },
                    s = _A;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{guid}", "PATCH", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            updateTopic(e, t, i) {
                return this.updateTopicWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateViewpointWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'guid' when calling updateViewpoint");
                if (null == t) throw new Error("Missing the required parameter 'projectsPk' when calling updateViewpoint");
                if (null == i) throw new Error("Missing the required parameter 'topicsGuid' when calling updateViewpoint");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateViewpoint");
                let s = {
                        guid: e,
                        projects_pk: t,
                        topics_guid: i
                    },
                    o = DM;
                return this.apiClient.callApi("/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateViewpoint(e, t, i, r) {
                return this.updateViewpointWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
        },
        CheckerApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            createCheckerWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createChecker");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createChecker");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createChecker");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createChecker");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = OM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createChecker(e, t, i, r) {
                return this.createCheckerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createCheckerResultWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling createCheckerResult");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling createCheckerResult");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createCheckerResult");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createCheckerResult");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling createCheckerResult");
                let o = {
                        checker_pk: e,
                        cloud_pk: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = Qw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            createCheckerResult(e, t, i, r, n) {
                return this.createCheckerResultWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            createCheckplanWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createCheckplan");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling createCheckplan");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createCheckplan");
                let n = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    s = Kw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createCheckplan(e, t, i) {
                return this.createCheckplanWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            createRuleWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling createRule");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling createRule");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createRule");
                if (null == r) throw new Error("Missing the required parameter 'rulesetPk' when calling createRule");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling createRule");
                let o = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i,
                        ruleset_pk: r
                    },
                    a = Zw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            createRule(e, t, i, r, n) {
                return this.createRuleWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            createRuleComponentWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling createRuleComponent");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling createRuleComponent");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createRuleComponent");
                if (null == r) throw new Error("Missing the required parameter 'rulePk' when calling createRuleComponent");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling createRuleComponent");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling createRuleComponent");
                let a = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i,
                        rule_pk: r,
                        ruleset_pk: n
                    },
                    l = Yw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent", "POST", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            createRuleComponent(e, t, i, r, n, s) {
                return this.createRuleComponentWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            createRulesetWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling createRuleset");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling createRuleset");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createRuleset");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createRuleset");
                let s = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i
                    },
                    o = Xw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createRuleset(e, t, i, r) {
                return this.createRulesetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteCheckerWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteChecker");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteChecker");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteChecker");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteChecker");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteChecker(e, t, i, r) {
                return this.deleteCheckerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteCheckerResultWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling deleteCheckerResult");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling deleteCheckerResult");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling deleteCheckerResult");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling deleteCheckerResult");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling deleteCheckerResult");
                let s = {
                    checker_pk: e,
                    cloud_pk: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteCheckerResult(e, t, i, r, n) {
                return this.deleteCheckerResultWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            deleteCheckplanWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteCheckplan");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteCheckplan");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteCheckplan");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteCheckplan(e, t, i) {
                return this.deleteCheckplanWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteRuleWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling deleteRule");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling deleteRule");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling deleteRule");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteRule");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling deleteRule");
                let s = {
                    check_plan_pk: e,
                    cloud_pk: t,
                    id: i,
                    project_pk: r,
                    ruleset_pk: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteRule(e, t, i, r, n) {
                return this.deleteRuleWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            deleteRuleComponentWithHttpInfo(e, t, i, r, n, s) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling deleteRuleComponent");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling deleteRuleComponent");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling deleteRuleComponent");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteRuleComponent");
                if (null == n) throw new Error("Missing the required parameter 'rulePk' when calling deleteRuleComponent");
                if (null == s) throw new Error("Missing the required parameter 'rulesetPk' when calling deleteRuleComponent");
                let o = {
                    check_plan_pk: e,
                    cloud_pk: t,
                    id: i,
                    project_pk: r,
                    rule_pk: n,
                    ruleset_pk: s
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}", "DELETE", o, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteRuleComponent(e, t, i, r, n, s) {
                return this.deleteRuleComponentWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            deleteRulesetWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling deleteRuleset");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling deleteRuleset");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling deleteRuleset");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteRuleset");
                let n = {
                    check_plan_pk: e,
                    cloud_pk: t,
                    id: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteRuleset(e, t, i, r) {
                return this.deleteRulesetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCheckerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateChecker");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateChecker");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateChecker");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateChecker");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateChecker");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = OM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateChecker(e, t, i, r, n) {
                return this.fullUpdateCheckerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCheckerResultWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling fullUpdateCheckerResult");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateCheckerResult");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling fullUpdateCheckerResult");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateCheckerResult");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateCheckerResult");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling fullUpdateCheckerResult");
                let a = {
                        checker_pk: e,
                        cloud_pk: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n
                    },
                    l = Qw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}", "PUT", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            fullUpdateCheckerResult(e, t, i, r, n, s) {
                return this.fullUpdateCheckerResultWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCheckplanWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateCheckplan");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateCheckplan");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateCheckplan");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateCheckplan");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = Kw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateCheckplan(e, t, i, r) {
                return this.fullUpdateCheckplanWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateRuleWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling fullUpdateRule");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateRule");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling fullUpdateRule");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateRule");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling fullUpdateRule");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling fullUpdateRule");
                let a = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        ruleset_pk: n
                    },
                    l = Zw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}", "PUT", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            fullUpdateRule(e, t, i, r, n, s) {
                return this.fullUpdateRuleWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateRuleComponentWithHttpInfo(e, t, i, r, n, s, o) {
                let a = o;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling fullUpdateRuleComponent");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateRuleComponent");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling fullUpdateRuleComponent");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateRuleComponent");
                if (null == n) throw new Error("Missing the required parameter 'rulePk' when calling fullUpdateRuleComponent");
                if (null == s) throw new Error("Missing the required parameter 'rulesetPk' when calling fullUpdateRuleComponent");
                if (null == o) throw new Error("Missing the required parameter 'data' when calling fullUpdateRuleComponent");
                let l = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        rule_pk: n,
                        ruleset_pk: s
                    },
                    c = Yw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}", "PUT", l, {}, {}, {}, a, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], c, null)
            }
            fullUpdateRuleComponent(e, t, i, r, n, s, o) {
                return this.fullUpdateRuleComponentWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateRulesetWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling fullUpdateRuleset");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateRuleset");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling fullUpdateRuleset");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateRuleset");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateRuleset");
                let o = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r
                    },
                    a = Xw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateRuleset(e, t, i, r, n) {
                return this.fullUpdateRulesetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getCheckerWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getChecker");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getChecker");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getChecker");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getChecker");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = OM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getChecker(e, t, i, r) {
                return this.getCheckerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getCheckerResultWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling getCheckerResult");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getCheckerResult");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getCheckerResult");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling getCheckerResult");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling getCheckerResult");
                let s = {
                        checker_pk: e,
                        cloud_pk: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n
                    },
                    o = Qw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getCheckerResult(e, t, i, r, n) {
                return this.getCheckerResultWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getCheckerResultsWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling getCheckerResults");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getCheckerResults");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getCheckerResults");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getCheckerResults");
                let n = {
                        checker_pk: e,
                        cloud_pk: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = [Qw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getCheckerResults(e, t, i, r) {
                return this.getCheckerResultsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getCheckersWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCheckers");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getCheckers");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getCheckers");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [OM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getCheckers(e, t, i) {
                return this.getCheckersWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getCheckplanWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCheckplan");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getCheckplan");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getCheckplan");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = Kw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getCheckplan(e, t, i) {
                return this.getCheckplanWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getCheckplansWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCheckplans");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getCheckplans");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [Kw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getCheckplans(e, t) {
                return this.getCheckplansWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getRuleWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRule");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRule");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getRule");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getRule");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling getRule");
                let s = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        ruleset_pk: n
                    },
                    o = Zw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getRule(e, t, i, r, n) {
                return this.getRuleWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getRuleComponentWithHttpInfo(e, t, i, r, n, s) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRuleComponent");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRuleComponent");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getRuleComponent");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getRuleComponent");
                if (null == n) throw new Error("Missing the required parameter 'rulePk' when calling getRuleComponent");
                if (null == s) throw new Error("Missing the required parameter 'rulesetPk' when calling getRuleComponent");
                let o = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        rule_pk: n,
                        ruleset_pk: s
                    },
                    a = Yw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}", "GET", o, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], a, null)
            }
            getRuleComponent(e, t, i, r, n, s) {
                return this.getRuleComponentWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            getRuleComponentsWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRuleComponents");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRuleComponents");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getRuleComponents");
                if (null == r) throw new Error("Missing the required parameter 'rulePk' when calling getRuleComponents");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling getRuleComponents");
                let s = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i,
                        rule_pk: r,
                        ruleset_pk: n
                    },
                    o = [Yw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getRuleComponents(e, t, i, r, n) {
                return this.getRuleComponentsWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getRulesWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRules");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRules");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getRules");
                if (null == r) throw new Error("Missing the required parameter 'rulesetPk' when calling getRules");
                let n = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i,
                        ruleset_pk: r
                    },
                    s = [Zw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getRules(e, t, i, r) {
                return this.getRulesWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getRulesetWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRuleset");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRuleset");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getRuleset");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getRuleset");
                let n = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r
                    },
                    s = Xw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getRuleset(e, t, i, r) {
                return this.getRulesetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getRulesetsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling getRulesets");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling getRulesets");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getRulesets");
                let r = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        project_pk: i
                    },
                    n = [Xw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getRulesets(e, t, i) {
                return this.getRulesetsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            launchNewCheckWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling launchNewCheck");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling launchNewCheck");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling launchNewCheck");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling launchNewCheck");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling launchNewCheck");
                let o = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}/launch-check", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            launchNewCheck(e, t, i, r, n) {
                return this.launchNewCheckWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateCheckerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateChecker");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateChecker");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateChecker");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateChecker");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateChecker");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = OM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateChecker(e, t, i, r, n) {
                return this.updateCheckerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateCheckerResultWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'checkerPk' when calling updateCheckerResult");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling updateCheckerResult");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling updateCheckerResult");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling updateCheckerResult");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling updateCheckerResult");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling updateCheckerResult");
                let a = {
                        checker_pk: e,
                        cloud_pk: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n
                    },
                    l = Qw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}", "PATCH", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            updateCheckerResult(e, t, i, r, n, s) {
                return this.updateCheckerResultWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            updateCheckplanWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateCheckplan");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateCheckplan");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateCheckplan");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateCheckplan");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = Kw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateCheckplan(e, t, i, r) {
                return this.updateCheckplanWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateRuleWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling updateRule");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling updateRule");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling updateRule");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateRule");
                if (null == n) throw new Error("Missing the required parameter 'rulesetPk' when calling updateRule");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling updateRule");
                let a = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        ruleset_pk: n
                    },
                    l = Zw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}", "PATCH", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            updateRule(e, t, i, r, n, s) {
                return this.updateRuleWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            updateRuleComponentWithHttpInfo(e, t, i, r, n, s, o) {
                let a = o;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling updateRuleComponent");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling updateRuleComponent");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling updateRuleComponent");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateRuleComponent");
                if (null == n) throw new Error("Missing the required parameter 'rulePk' when calling updateRuleComponent");
                if (null == s) throw new Error("Missing the required parameter 'rulesetPk' when calling updateRuleComponent");
                if (null == o) throw new Error("Missing the required parameter 'data' when calling updateRuleComponent");
                let l = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r,
                        rule_pk: n,
                        ruleset_pk: s
                    },
                    c = Yw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}", "PATCH", l, {}, {}, {}, a, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], c, null)
            }
            updateRuleComponent(e, t, i, r, n, s, o) {
                return this.updateRuleComponentWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            updateRulesetWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'checkPlanPk' when calling updateRuleset");
                if (null == t) throw new Error("Missing the required parameter 'cloudPk' when calling updateRuleset");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling updateRuleset");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateRuleset");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateRuleset");
                let o = {
                        check_plan_pk: e,
                        cloud_pk: t,
                        id: i,
                        project_pk: r
                    },
                    a = Xw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateRuleset(e, t, i, r, n) {
                return this.updateRulesetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
        },
        CollaborationApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            cancelCloudUserInvitationWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling cancelCloudUserInvitation");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling cancelCloudUserInvitation");
                let i = {
                    cloud_pk: e,
                    id: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/invitation/{id}", "DELETE", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            cancelCloudUserInvitation(e, t) {
                return this.cancelCloudUserInvitationWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            cancelProjectUserInvitationWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling cancelProjectUserInvitation");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling cancelProjectUserInvitation");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling cancelProjectUserInvitation");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/invitation/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            cancelProjectUserInvitation(e, t, i) {
                return this.cancelProjectUserInvitationWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            checkAccessWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling checkAccess");
                let t = {
                    id: e
                };
                return this.apiClient.callApi("/cloud/{id}/check-access", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            checkAccess(e) {
                return this.checkAccessWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            createClassificationWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createClassification");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling createClassification");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createClassification");
                let n = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    s = [Jw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createClassification(e, t, i) {
                return this.createClassificationWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            createCloudWithHttpInfo(e) {
                let t = e;
                if (null == e) throw new Error("Missing the required parameter 'data' when calling createCloud");
                let i = oM;
                return this.apiClient.callApi("/cloud", "POST", {}, {}, {}, {}, t, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], i, null)
            }
            createCloud(e) {
                return this.createCloudWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            createDMSTreeWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createDMSTree");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling createDMSTree");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createDMSTree");
                let n = {
                    cloud_pk: e,
                    id: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}/dms-tree", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            createDMSTree(e, t, i) {
                return this.createDMSTreeWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            createDemoWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling createDemo");
                let t = {
                        id: e
                    },
                    i = YM;
                return this.apiClient.callApi("/cloud/{id}/create-demo", "POST", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            createDemo(e) {
                return this.createDemoWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            createDocumentWithHttpInfo(e, t, i, r, n) {
                n = n || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createDocument");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling createDocument");
                if (null == i) throw new Error("Missing the required parameter 'name' when calling createDocument");
                if (null == r) throw new Error("Missing the required parameter 'file' when calling createDocument");
                let s = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    o = {
                        parent: n.parent,
                        parent_id: n.parentId,
                        creator: n.creator,
                        name: i,
                        file_name: n.fileName,
                        description: n.description,
                        file: r,
                        size: n.size,
                        ifc_source: n.ifcSource
                    },
                    a = _M;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document", "POST", s, {}, {}, o, null, ["Bearer", "bimdata_connect", "client_credentials"], ["multipart/form-data", "application/x-www-form-urlencoded"], ["application/json"], a, null)
            }
            createDocument(e, t, i, r, n) {
                return this.createDocumentWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            createFolderWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createFolder");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling createFolder");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createFolder");
                let n = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    s = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createFolder(e, t, i) {
                return this.createFolderWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            createProjectWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createProject");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling createProject");
                let r = {
                        cloud_pk: e
                    },
                    n = YM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project", "POST", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            createProject(e, t) {
                return this.createProjectWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            createProjectAccessTokenWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createProjectAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling createProjectAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling createProjectAccessToken");
                let n = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    s = ZM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            createProjectAccessToken(e, t, i) {
                return this.createProjectAccessTokenWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteClassificationWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteClassification");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteClassification");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteClassification");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteClassification(e, t, i) {
                return this.deleteClassificationWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteCloudWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling deleteCloud");
                let t = {
                    id: e
                };
                return this.apiClient.callApi("/cloud/{id}", "DELETE", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteCloud(e) {
                return this.deleteCloudWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            deleteCloudUserWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteCloudUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteCloudUser");
                let i = {
                    cloud_pk: e,
                    id: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/user/{id}", "DELETE", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteCloudUser(e, t) {
                return this.deleteCloudUserWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            deleteDocumentWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteDocument");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteDocument");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteDocument");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteDocument(e, t, i) {
                return this.deleteDocumentWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteFolderWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteFolder");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteFolder");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteFolder");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteFolder(e, t, i) {
                return this.deleteFolderWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteProjectWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteProject");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteProject");
                let i = {
                    cloud_pk: e,
                    id: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}", "DELETE", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteProject(e, t) {
                return this.deleteProjectWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            deleteProjectAccessTokenWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteProjectAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling deleteProjectAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'token' when calling deleteProjectAccessToken");
                let r = {
                    cloud_pk: e,
                    project_pk: t,
                    token: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token/{token}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteProjectAccessToken(e, t, i) {
                return this.deleteProjectAccessTokenWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteProjectUserWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteProjectUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteProjectUser");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteProjectUser");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/user/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteProjectUser(e, t, i) {
                return this.deleteProjectUserWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateClassificationWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateClassification");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateClassification");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateClassification");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateClassification");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = Jw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification/{id}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateClassification(e, t, i, r) {
                return this.fullUpdateClassificationWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCloudWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'id' when calling fullUpdateCloud");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling fullUpdateCloud");
                let r = {
                        id: e
                    },
                    n = oM;
                return this.apiClient.callApi("/cloud/{id}", "PUT", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            fullUpdateCloud(e, t) {
                return this.fullUpdateCloudWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateCloudUserWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateCloudUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateCloudUser");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling fullUpdateCloudUser");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/user/{id}", "PUT", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            fullUpdateCloudUser(e, t, i) {
                return this.fullUpdateCloudUserWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateDocumentWithHttpInfo(e, t, i, r, n, s) {
                s = s || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateDocument");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateDocument");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateDocument");
                if (null == r) throw new Error("Missing the required parameter 'name' when calling fullUpdateDocument");
                if (null == n) throw new Error("Missing the required parameter 'file' when calling fullUpdateDocument");
                let o = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    a = {
                        parent: s.parent,
                        parent_id: s.parentId,
                        creator: s.creator,
                        name: r,
                        file_name: s.fileName,
                        description: s.description,
                        file: n,
                        size: s.size,
                        ifc_source: s.ifcSource
                    },
                    l = _M;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document/{id}", "PUT", o, {}, {}, a, null, ["Bearer", "bimdata_connect", "client_credentials"], ["multipart/form-data", "application/x-www-form-urlencoded"], ["application/json"], l, null)
            }
            fullUpdateDocument(e, t, i, r, n, s) {
                return this.fullUpdateDocumentWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateFolderWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateFolder");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateFolder");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateFolder");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateFolder");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder/{id}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateFolder(e, t, i, r) {
                return this.fullUpdateFolderWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateProjectWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateProject");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateProject");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling fullUpdateProject");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = YM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}", "PUT", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            fullUpdateProject(e, t, i) {
                return this.fullUpdateProjectWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateProjectAccessTokenWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateProjectAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateProjectAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'token' when calling fullUpdateProjectAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateProjectAccessToken");
                let s = {
                        cloud_pk: e,
                        project_pk: t,
                        token: i
                    },
                    o = ZM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token/{token}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateProjectAccessToken(e, t, i, r) {
                return this.fullUpdateProjectAccessTokenWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateProjectUserWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateProjectUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateProjectUser");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateProjectUser");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateProjectUser");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/user/{id}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateProjectUser(e, t, i, r) {
                return this.fullUpdateProjectUserWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getClassificationWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getClassification");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getClassification");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getClassification");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = Jw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getClassification(e, t, i) {
                return this.getClassificationWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getClassificationsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getClassifications");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getClassifications");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [Jw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getClassifications(e, t) {
                return this.getClassificationsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getCloudWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling getCloud");
                let t = {
                        id: e
                    },
                    i = oM;
                return this.apiClient.callApi("/cloud/{id}", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getCloud(e) {
                return this.getCloudWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getCloudInvitationsWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCloudInvitations");
                let t = {
                        cloud_pk: e
                    },
                    i = [aM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/invitation", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getCloudInvitations(e) {
                return this.getCloudInvitationsWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getCloudSizeWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling getCloudSize");
                let t = {
                    id: e
                };
                return this.apiClient.callApi("/cloud/{id}/size", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], "Number", null)
            }
            getCloudSize(e) {
                return this.getCloudSizeWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getCloudUserWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCloudUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getCloudUser");
                let i = {
                        cloud_pk: e,
                        id: t
                    },
                    r = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/user/{id}", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getCloudUser(e, t) {
                return this.getCloudUserWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getCloudUsersWithHttpInfo(e, t) {
                t = t || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getCloudUsers");
                let i = {
                        cloud_pk: e
                    },
                    r = {
                        email: t.email,
                        email__contains: t.emailContains,
                        email__startswith: t.emailStartswith,
                        email__endswith: t.emailEndswith
                    },
                    n = [sM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/user", "GET", i, r, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getCloudUsers(e, t) {
                return this.getCloudUsersWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getCloudsWithHttpInfo() {
                let e = [oM];
                return this.apiClient.callApi("/cloud", "GET", {}, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], e, null)
            }
            getClouds() {
                return this.getCloudsWithHttpInfo().then((function(e) {
                    return e.data
                }))
            }
            getDocumentWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getDocument");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getDocument");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getDocument");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = _M;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getDocument(e, t, i) {
                return this.getDocumentWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getDocumentsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getDocuments");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getDocuments");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [_M];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getDocuments(e, t) {
                return this.getDocumentsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getFolderWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getFolder");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getFolder");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getFolder");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getFolder(e, t, i) {
                return this.getFolderWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getFoldersWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getFolders");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getFolders");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [PM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getFolders(e, t) {
                return this.getFoldersWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProject");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getProject");
                let i = {
                        cloud_pk: e,
                        id: t
                    },
                    r = QM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getProject(e, t) {
                return this.getProjectWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectAccessTokenWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getProjectAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'token' when calling getProjectAccessToken");
                let r = {
                        cloud_pk: e,
                        project_pk: t,
                        token: i
                    },
                    n = ZM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token/{token}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getProjectAccessToken(e, t, i) {
                return this.getProjectAccessTokenWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getProjectAccessTokensWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectAccessTokens");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getProjectAccessTokens");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [ZM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getProjectAccessTokens(e, t) {
                return this.getProjectAccessTokensWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectDMSTreeWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectDMSTree");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getProjectDMSTree");
                let i = {
                        cloud_pk: e,
                        id: t
                    },
                    r = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}/dms-tree", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getProjectDMSTree(e, t) {
                return this.getProjectDMSTreeWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectInvitationsWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectInvitations");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getProjectInvitations");
                let i = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    r = [XM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/invitation", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getProjectInvitations(e, t) {
                return this.getProjectInvitationsWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectSubTreeWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectSubTree");
                let t = {
                        cloud_pk: e
                    },
                    i = [QM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/subtree", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getProjectSubTree(e) {
                return this.getProjectSubTreeWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getProjectTreeWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectTree");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getProjectTree");
                let i = {
                        cloud_pk: e,
                        id: t
                    },
                    r = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}/tree", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getProjectTree(e, t) {
                return this.getProjectTreeWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getProjectUserWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getProjectUser");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getProjectUser");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/user/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getProjectUser(e, t, i) {
                return this.getProjectUserWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getProjectUsersWithHttpInfo(e, t, i) {
                i = i || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjectUsers");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getProjectUsers");
                let r = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    n = {
                        email: i.email,
                        email__contains: i.emailContains,
                        email__startswith: i.emailStartswith,
                        email__endswith: i.emailEndswith
                    },
                    s = [sM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/user", "GET", r, n, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getProjectUsers(e, t, i) {
                return this.getProjectUsersWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getProjectsWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProjects");
                let t = {
                        cloud_pk: e
                    },
                    i = [YM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getProjects(e) {
                return this.getProjectsWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getSelfProjectsWithHttpInfo() {
                let e = [YM];
                return this.apiClient.callApi("/user/projects", "GET", {}, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], e, null)
            }
            getSelfProjects() {
                return this.getSelfProjectsWithHttpInfo().then((function(e) {
                    return e.data
                }))
            }
            getSelfUserWithHttpInfo() {
                let e = hA;
                return this.apiClient.callApi("/user", "GET", {}, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], e, null)
            }
            getSelfUser() {
                return this.getSelfUserWithHttpInfo().then((function(e) {
                    return e.data
                }))
            }
            inviteCloudUserWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling inviteCloudUser");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling inviteCloudUser");
                let r = {
                        cloud_pk: e
                    },
                    n = aM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/invitation", "POST", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            inviteCloudUser(e, t) {
                return this.inviteCloudUserWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            inviteProjectUserWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling inviteProjectUser");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling inviteProjectUser");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling inviteProjectUser");
                let n = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    s = XM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/invitation", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            inviteProjectUser(e, t, i) {
                return this.inviteProjectUserWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateClassificationWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateClassification");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateClassification");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateClassification");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateClassification");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = Jw;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/classification/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateClassification(e, t, i, r) {
                return this.updateClassificationWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateCloudWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'id' when calling updateCloud");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling updateCloud");
                let r = {
                        id: e
                    },
                    n = oM;
                return this.apiClient.callApi("/cloud/{id}", "PATCH", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            updateCloud(e, t) {
                return this.updateCloudWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            updateCloudUserWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateCloudUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateCloudUser");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling updateCloudUser");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/user/{id}", "PATCH", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            updateCloudUser(e, t, i) {
                return this.updateCloudUserWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateDocumentWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateDocument");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateDocument");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateDocument");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateDocument");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = _M;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/document/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateDocument(e, t, i, r) {
                return this.updateDocumentWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateFolderWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateFolder");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateFolder");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateFolder");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateFolder");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = PM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/folder/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateFolder(e, t, i, r) {
                return this.updateFolderWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateProjectWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateProject");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateProject");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling updateProject");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = YM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{id}", "PATCH", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            updateProject(e, t, i) {
                return this.updateProjectWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateProjectAccessTokenWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateProjectAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling updateProjectAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'token' when calling updateProjectAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateProjectAccessToken");
                let s = {
                        cloud_pk: e,
                        project_pk: t,
                        token: i
                    },
                    o = ZM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/access-token/{token}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateProjectAccessToken(e, t, i, r) {
                return this.updateProjectAccessTokenWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateProjectUserWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateProjectUser");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateProjectUser");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateProjectUser");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateProjectUser");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = sM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/user/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateProjectUser(e, t, i, r) {
                return this.updateProjectUserWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateSelfUserWithHttpInfo(e) {
                let t = e;
                if (null == e) throw new Error("Missing the required parameter 'data' when calling updateSelfUser");
                let i = hA;
                return this.apiClient.callApi("/user", "PATCH", {}, {}, {}, {}, t, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], i, null)
            }
            updateSelfUser(e) {
                return this.updateSelfUserWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
        },
        IfcApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            addIfcErrorsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling addIfcErrors");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling addIfcErrors");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling addIfcErrors");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling addIfcErrors");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = FM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/errors", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            addIfcErrors(e, t, i, r) {
                return this.addIfcErrorsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkDeleteIfcClassificationsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkDeleteIfcClassifications");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkDeleteIfcClassifications");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkDeleteIfcClassifications");
                let r = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/list_destroy", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkDeleteIfcClassifications(e, t, i) {
                return this.bulkDeleteIfcClassificationsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            bulkDeleteIfcPropertiesWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkDeleteIfcProperties");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkDeleteIfcProperties");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkDeleteIfcProperties");
                let r = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_destroy", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkDeleteIfcProperties(e, t, i) {
                return this.bulkDeleteIfcPropertiesWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            bulkDeleteIfcPropertyDefinitionsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkDeleteIfcPropertyDefinitions");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkDeleteIfcPropertyDefinitions");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkDeleteIfcPropertyDefinitions");
                let r = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/bulk_destroy", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkDeleteIfcPropertyDefinitions(e, t, i) {
                return this.bulkDeleteIfcPropertyDefinitionsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            bulkDeleteIfcUnitsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkDeleteIfcUnits");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkDeleteIfcUnits");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkDeleteIfcUnits");
                let r = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/bulk_destroy", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkDeleteIfcUnits(e, t, i) {
                return this.bulkDeleteIfcUnitsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            bulkDeletePropertySetWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkDeletePropertySet");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkDeletePropertySet");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkDeletePropertySet");
                let r = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/bulk_destroy", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkDeletePropertySet(e, t, i) {
                return this.bulkDeletePropertySetWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            bulkFullUpdateElementsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkFullUpdateElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkFullUpdateElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkFullUpdateElements");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling bulkFullUpdateElements");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [wM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            bulkFullUpdateElements(e, t, i, r) {
                return this.bulkFullUpdateElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkFullUpdateIfcPropertyWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkFullUpdateIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkFullUpdateIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkFullUpdateIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling bulkFullUpdateIfcProperty");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [bM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            bulkFullUpdateIfcProperty(e, t, i, r) {
                return this.bulkFullUpdateIfcPropertyWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkRemoveClassificationsOfElementWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkRemoveClassificationsOfElement");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling bulkRemoveClassificationsOfElement");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling bulkRemoveClassificationsOfElement");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling bulkRemoveClassificationsOfElement");
                let n = {
                    cloud_pk: e,
                    element_uuid: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/bulk_destroy", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkRemoveClassificationsOfElement(e, t, i, r) {
                return this.bulkRemoveClassificationsOfElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkRemoveElementsFromClassificationWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkRemoveElementsFromClassification");
                if (null == t) throw new Error("Missing the required parameter 'ifcClassificationPk' when calling bulkRemoveElementsFromClassification");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling bulkRemoveElementsFromClassification");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling bulkRemoveElementsFromClassification");
                let n = {
                    cloud_pk: e,
                    ifc_classification_pk: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/bulk_destroy", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            bulkRemoveElementsFromClassification(e, t, i, r) {
                return this.bulkRemoveElementsFromClassificationWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkUpdateElementsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkUpdateElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkUpdateElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkUpdateElements");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling bulkUpdateElements");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [wM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            bulkUpdateElements(e, t, i, r) {
                return this.bulkUpdateElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            bulkUpdateIfcPropertyWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling bulkUpdateIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling bulkUpdateIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling bulkUpdateIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling bulkUpdateIfcProperty");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [bM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            bulkUpdateIfcProperty(e, t, i, r) {
                return this.bulkUpdateIfcPropertyWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createAccessTokenWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createAccessToken");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = jM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createAccessToken(e, t, i, r) {
                return this.createAccessTokenWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createClassificationElementRelationsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createClassificationElementRelations");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createClassificationElementRelations");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createClassificationElementRelations");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createClassificationElementRelations");
                let s = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            createClassificationElementRelations(e, t, i, r) {
                return this.createClassificationElementRelationsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createClassificationsOfElementWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createClassificationsOfElement");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling createClassificationsOfElement");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createClassificationsOfElement");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createClassificationsOfElement");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling createClassificationsOfElement");
                let o = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = [Jw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            createClassificationsOfElement(e, t, i, r, n) {
                return this.createClassificationsOfElementWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            createElementWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createElement");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createElement");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [wM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createElement(e, t, i, r) {
                return this.createElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createElementPropertySetWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createElementPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling createElementPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createElementPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createElementPropertySet");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling createElementPropertySet");
                let o = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = yM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            createElementPropertySet(e, t, i, r, n) {
                return this.createElementPropertySetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            createElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createElementPropertySetProperty");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling createElementPropertySetProperty");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createElementPropertySetProperty");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createElementPropertySetProperty");
                if (null == n) throw new Error("Missing the required parameter 'propertysetPk' when calling createElementPropertySetProperty");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling createElementPropertySetProperty");
                let a = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        propertyset_pk: n
                    },
                    l = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property", "POST", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            createElementPropertySetProperty(e, t, i, r, n, s) {
                return this.createElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            createElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o) {
                let a = o;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createElementPropertySetPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling createElementPropertySetPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createElementPropertySetPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createElementPropertySetPropertyDefinition");
                if (null == n) throw new Error("Missing the required parameter 'propertyPk' when calling createElementPropertySetPropertyDefinition");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling createElementPropertySetPropertyDefinition");
                if (null == o) throw new Error("Missing the required parameter 'data' when calling createElementPropertySetPropertyDefinition");
                let l = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        property_pk: n,
                        propertyset_pk: s
                    },
                    c = vM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition", "POST", l, {}, {}, {}, a, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], c, null)
            }
            createElementPropertySetPropertyDefinition(e, t, i, r, n, s, o) {
                return this.createElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            createElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a) {
                let l = a;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == n) throw new Error("Missing the required parameter 'propertyPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == s) throw new Error("Missing the required parameter 'propertydefinitionPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == o) throw new Error("Missing the required parameter 'propertysetPk' when calling createElementPropertySetPropertyDefinitionUnit");
                if (null == a) throw new Error("Missing the required parameter 'data' when calling createElementPropertySetPropertyDefinitionUnit");
                let c = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        property_pk: n,
                        propertydefinition_pk: s,
                        propertyset_pk: o
                    },
                    h = gM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit", "POST", c, {}, {}, {}, l, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], h, null)
            }
            createElementPropertySetPropertyDefinitionUnit(e, t, i, r, n, s, o, a) {
                return this.createElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a).then((function(e) {
                    return e.data
                }))
            }
            createIfcPropertyDefinitionWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createIfcPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createIfcPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createIfcPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createIfcPropertyDefinition");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [vM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createIfcPropertyDefinition(e, t, i, r) {
                return this.createIfcPropertyDefinitionWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createIfcUnitWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createIfcUnit");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createIfcUnit");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createIfcUnit");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createIfcUnit");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [gM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createIfcUnit(e, t, i, r) {
                return this.createIfcUnitWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createLayerWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createLayer");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createLayer");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createLayer");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createLayer");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = WM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createLayer(e, t, i, r) {
                return this.createLayerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createPropertySetWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createPropertySet");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [yM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createPropertySet(e, t, i, r) {
                return this.createPropertySetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createPropertySetElementRelationsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createPropertySetElementRelations");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createPropertySetElementRelations");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createPropertySetElementRelations");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createPropertySetElementRelations");
                let s = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset-element", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            createPropertySetElementRelations(e, t, i, r) {
                return this.createPropertySetElementRelationsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createRawElementsWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createRawElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createRawElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createRawElements");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createRawElements");
                let s = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            createRawElements(e, t, i, r) {
                return this.createRawElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createSpaceWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createSpace");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createSpace");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createSpace");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createSpace");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [uA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createSpace(e, t, i, r) {
                return this.createSpaceWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createSystemWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createSystem");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createSystem");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createSystem");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createSystem");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = fA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createSystem(e, t, i, r) {
                return this.createSystemWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createZoneWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createZone");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createZone");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createZone");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling createZone");
                let s = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    o = [wA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            createZone(e, t, i, r) {
                return this.createZoneWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            createZoneSpaceWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createZoneSpace");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling createZoneSpace");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling createZoneSpace");
                if (null == r) throw new Error("Missing the required parameter 'zonePk' when calling createZoneSpace");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling createZoneSpace");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        zone_pk: r
                    },
                    a = MA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space", "POST", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            createZoneSpace(e, t, i, r, n) {
                return this.createZoneSpaceWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            deleteAccessTokenWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling deleteAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'token' when calling deleteAccessToken");
                let n = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i,
                    token: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteAccessToken(e, t, i, r) {
                return this.deleteAccessTokenWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteElementWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling deleteElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteElement");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling deleteElement");
                let n = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i,
                    uuid: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteElement(e, t, i, r) {
                return this.deleteElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteIfcWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteIfc");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}", "DELETE", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteIfc(e, t, i) {
                return this.deleteIfcWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            deleteIfcPropertyWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteIfcProperty");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteIfcProperty(e, t, i, r) {
                return this.deleteIfcPropertyWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteIfcPropertyDefinitionWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteIfcPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteIfcPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteIfcPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteIfcPropertyDefinition");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteIfcPropertyDefinition(e, t, i, r) {
                return this.deleteIfcPropertyDefinitionWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteIfcUnitWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteIfcUnit");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteIfcUnit");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteIfcUnit");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteIfcUnit");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteIfcUnit(e, t, i, r) {
                return this.deleteIfcUnitWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteLayerWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteLayer");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteLayer");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteLayer");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteLayer");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteLayer(e, t, i, r) {
                return this.deleteLayerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deletePropertySetWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deletePropertySet");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deletePropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deletePropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deletePropertySet");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deletePropertySet(e, t, i, r) {
                return this.deletePropertySetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteSpaceWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteSpace");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteSpace(e, t, i, r) {
                return this.deleteSpaceWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteSystemWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteSystem");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling deleteSystem");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling deleteSystem");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling deleteSystem");
                let n = {
                    cloud_pk: e,
                    ifc_pk: t,
                    project_pk: i,
                    uuid: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteSystem(e, t, i, r) {
                return this.deleteSystemWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteZoneWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteZone");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteZone");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteZone");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteZone");
                let n = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteZone(e, t, i, r) {
                return this.deleteZoneWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            deleteZoneSpaceWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteZoneSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteZoneSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling deleteZoneSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling deleteZoneSpace");
                if (null == n) throw new Error("Missing the required parameter 'zonePk' when calling deleteZoneSpace");
                let s = {
                    cloud_pk: e,
                    id: t,
                    ifc_pk: i,
                    project_pk: r,
                    zone_pk: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteZoneSpace(e, t, i, r, n) {
                return this.deleteZoneSpaceWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            exportIfcWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling exportIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling exportIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling exportIfc");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling exportIfc");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = NM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/export", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            exportIfc(e, t, i, r) {
                return this.exportIfcWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateAccessTokenWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'token' when calling fullUpdateAccessToken");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateAccessToken");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        token: r
                    },
                    a = jM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateAccessToken(e, t, i, r, n) {
                return this.fullUpdateAccessTokenWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateElementWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateElement");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling fullUpdateElement");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateElement");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    a = wM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateElement(e, t, i, r, n) {
                return this.fullUpdateElementWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s, o) {
                let a = o;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateElementPropertySetProperty");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling fullUpdateElementPropertySetProperty");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling fullUpdateElementPropertySetProperty");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateElementPropertySetProperty");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateElementPropertySetProperty");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling fullUpdateElementPropertySetProperty");
                if (null == o) throw new Error("Missing the required parameter 'data' when calling fullUpdateElementPropertySetProperty");
                let l = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n,
                        propertyset_pk: s
                    },
                    c = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}", "PUT", l, {}, {}, {}, a, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], c, null)
            }
            fullUpdateElementPropertySetProperty(e, t, i, r, n, s, o) {
                return this.fullUpdateElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateIfcWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateIfc");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling fullUpdateIfc");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = BM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}", "PUT", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            fullUpdateIfc(e, t, i, r) {
                return this.fullUpdateIfcWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateIfcPropertyWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateIfcProperty");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateIfcProperty");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateIfcProperty(e, t, i, r, n) {
                return this.fullUpdateIfcPropertyWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateIfcPropertyDefinitionWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateIfcPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateIfcPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateIfcPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateIfcPropertyDefinition");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateIfcPropertyDefinition");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = vM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateIfcPropertyDefinition(e, t, i, r, n) {
                return this.fullUpdateIfcPropertyDefinitionWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateIfcUnitWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateIfcUnit");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateIfcUnit");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateIfcUnit");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateIfcUnit");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateIfcUnit");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = gM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateIfcUnit(e, t, i, r, n) {
                return this.fullUpdateIfcUnitWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateLayerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateLayer");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateLayer");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateLayer");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateLayer");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateLayer");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = WM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateLayer(e, t, i, r, n) {
                return this.fullUpdateLayerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateProcessorHandlerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateProcessorHandler");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateProcessorHandler");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateProcessorHandler");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateProcessorHandler");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateProcessorHandler");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = GM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateProcessorHandler(e, t, i, r, n) {
                return this.fullUpdateProcessorHandlerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdatePropertySetWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdatePropertySet");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdatePropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdatePropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdatePropertySet");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdatePropertySet");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = yM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdatePropertySet(e, t, i, r, n) {
                return this.fullUpdatePropertySetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateSpaceWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateSpace");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateSpace");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = uA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateSpace(e, t, i, r, n) {
                return this.fullUpdateSpaceWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateSystemWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateSystem");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateSystem");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateSystem");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling fullUpdateSystem");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateSystem");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    a = fA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateSystem(e, t, i, r, n) {
                return this.fullUpdateSystemWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateZoneWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateZone");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateZone");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateZone");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateZone");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling fullUpdateZone");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = wA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            fullUpdateZone(e, t, i, r, n) {
                return this.fullUpdateZoneWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateZoneSpaceWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateZoneSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateZoneSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling fullUpdateZoneSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling fullUpdateZoneSpace");
                if (null == n) throw new Error("Missing the required parameter 'zonePk' when calling fullUpdateZoneSpace");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling fullUpdateZoneSpace");
                let a = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r,
                        zone_pk: n
                    },
                    l = MA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}", "PUT", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            fullUpdateZoneSpace(e, t, i, r, n, s) {
                return this.fullUpdateZoneSpaceWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            getAccessTokenWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'token' when calling getAccessToken");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        token: r
                    },
                    s = jM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getAccessToken(e, t, i, r) {
                return this.getAccessTokenWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getAccessTokensWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getAccessTokens");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getAccessTokens");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getAccessTokens");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [jM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getAccessTokens(e, t, i) {
                return this.getAccessTokensWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getClassificationsOfElementWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getClassificationsOfElement");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getClassificationsOfElement");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getClassificationsOfElement");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getClassificationsOfElement");
                let n = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = [Jw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getClassificationsOfElement(e, t, i, r) {
                return this.getClassificationsOfElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getElementWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getElement");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling getElement");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    s = wM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getElement(e, t, i, r) {
                return this.getElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getElementPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySet");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySet");
                let s = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n
                    },
                    o = yM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getElementPropertySet(e, t, i, r, n) {
                return this.getElementPropertySetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertiesWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetProperties");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetProperties");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetProperties");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetProperties");
                if (null == n) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetProperties");
                let s = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        propertyset_pk: n
                    },
                    o = [bM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getElementPropertySetProperties(e, t, i, r, n) {
                return this.getElementPropertySetPropertiesWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetProperty");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetProperty");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getElementPropertySetProperty");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetProperty");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetProperty");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetProperty");
                let o = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n,
                        propertyset_pk: s
                    },
                    a = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}", "GET", o, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], a, null)
            }
            getElementPropertySetProperty(e, t, i, r, n, s) {
                return this.getElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getElementPropertySetPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetPropertyDefinition");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetPropertyDefinition");
                if (null == s) throw new Error("Missing the required parameter 'propertyPk' when calling getElementPropertySetPropertyDefinition");
                if (null == o) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetPropertyDefinition");
                let a = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n,
                        property_pk: s,
                        propertyset_pk: o
                    },
                    l = vM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}", "GET", a, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], l, null)
            }
            getElementPropertySetPropertyDefinition(e, t, i, r, n, s, o) {
                return this.getElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == s) throw new Error("Missing the required parameter 'propertyPk' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == o) throw new Error("Missing the required parameter 'propertydefinitionPk' when calling getElementPropertySetPropertyDefinitionUnit");
                if (null == a) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetPropertyDefinitionUnit");
                let l = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n,
                        property_pk: s,
                        propertydefinition_pk: o,
                        propertyset_pk: a
                    },
                    c = gM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}", "GET", l, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], c, null)
            }
            getElementPropertySetPropertyDefinitionUnit(e, t, i, r, n, s, o, a) {
                return this.getElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertyDefinitionUnitsWithHttpInfo(e, t, i, r, n, s, o) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == n) throw new Error("Missing the required parameter 'propertyPk' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == s) throw new Error("Missing the required parameter 'propertydefinitionPk' when calling getElementPropertySetPropertyDefinitionUnits");
                if (null == o) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetPropertyDefinitionUnits");
                let a = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        property_pk: n,
                        propertydefinition_pk: s,
                        propertyset_pk: o
                    },
                    l = [gM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit", "GET", a, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], l, null)
            }
            getElementPropertySetPropertyDefinitionUnits(e, t, i, r, n, s, o) {
                return this.getElementPropertySetPropertyDefinitionUnitsWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetPropertyDefinitionsWithHttpInfo(e, t, i, r, n, s) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySetPropertyDefinitions");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySetPropertyDefinitions");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySetPropertyDefinitions");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySetPropertyDefinitions");
                if (null == n) throw new Error("Missing the required parameter 'propertyPk' when calling getElementPropertySetPropertyDefinitions");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling getElementPropertySetPropertyDefinitions");
                let o = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r,
                        property_pk: n,
                        propertyset_pk: s
                    },
                    a = [vM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition", "GET", o, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], a, null)
            }
            getElementPropertySetPropertyDefinitions(e, t, i, r, n, s) {
                return this.getElementPropertySetPropertyDefinitionsWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            getElementPropertySetsWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementPropertySets");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling getElementPropertySets");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getElementPropertySets");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getElementPropertySets");
                let n = {
                        cloud_pk: e,
                        element_uuid: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = [yM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getElementPropertySets(e, t, i, r) {
                return this.getElementPropertySetsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getElementsWithHttpInfo(e, t, i, r) {
                r = r || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getElements");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    s = {
                        type: r.type,
                        classification: r.classification,
                        classification__notation: r.classificationNotation
                    },
                    o = [wM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element", "GET", n, s, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getElements(e, t, i, r) {
                return this.getElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getElementsFromClassificationWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getElementsFromClassification");
                if (null == t) throw new Error("Missing the required parameter 'ifcClassificationPk' when calling getElementsFromClassification");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getElementsFromClassification");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getElementsFromClassification");
                let n = {
                        cloud_pk: e,
                        ifc_classification_pk: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = [wM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getElementsFromClassification(e, t, i, r) {
                return this.getElementsFromClassificationWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getIfcWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfc");
                let r = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    n = BM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getIfc(e, t, i) {
                return this.getIfcWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcBVHWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcBVH");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcBVH");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcBVH");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/map", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            getIfcBVH(e, t, i) {
                return this.getIfcBVHWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcClassificationsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcClassifications");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcClassifications");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcClassifications");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [Jw];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getIfcClassifications(e, t, i) {
                return this.getIfcClassificationsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcGLTFWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcGLTF");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcGLTF");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcGLTF");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/gltf", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            getIfcGLTF(e, t, i) {
                return this.getIfcGLTFWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcMapWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcMap");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcMap");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcMap");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/bvh", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            getIfcMap(e, t, i) {
                return this.getIfcMapWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcPropertiesWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcProperties");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcProperties");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcProperties");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [bM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getIfcProperties(e, t, i) {
                return this.getIfcPropertiesWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcPropertyWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getIfcProperty");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getIfcProperty(e, t, i, r) {
                return this.getIfcPropertyWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getIfcPropertyDefinitionWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getIfcPropertyDefinition");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = vM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getIfcPropertyDefinition(e, t, i, r) {
                return this.getIfcPropertyDefinitionWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getIfcPropertyDefinitionsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcPropertyDefinitions");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcPropertyDefinitions");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcPropertyDefinitions");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [vM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getIfcPropertyDefinitions(e, t, i) {
                return this.getIfcPropertyDefinitionsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcStructureWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcStructure");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcStructure");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcStructure");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/structure", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            getIfcStructure(e, t, i) {
                return this.getIfcStructureWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcSystemsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcSystems");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcSystems");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcSystems");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/systems", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            getIfcSystems(e, t, i) {
                return this.getIfcSystemsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcUnitWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcUnit");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getIfcUnit");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcUnit");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getIfcUnit");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = gM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getIfcUnit(e, t, i, r) {
                return this.getIfcUnitWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getIfcUnitsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcUnits");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getIfcUnits");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getIfcUnits");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [gM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getIfcUnits(e, t, i) {
                return this.getIfcUnitsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getIfcsWithHttpInfo(e, t, i) {
                i = i || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getIfcs");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling getIfcs");
                let r = {
                        cloud_pk: e,
                        project_pk: t
                    },
                    n = {
                        status: i.status,
                        source: i.source
                    },
                    s = [BM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc", "GET", r, n, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getIfcs(e, t, i) {
                return this.getIfcsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getLayerWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getLayer");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getLayer");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getLayer");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getLayer");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = WM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getLayer(e, t, i, r) {
                return this.getLayerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getLayersWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getLayers");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getLayers");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getLayers");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [WM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getLayers(e, t, i) {
                return this.getLayersWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getProcessorHandlerWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProcessorHandler");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getProcessorHandler");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getProcessorHandler");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getProcessorHandler");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = GM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getProcessorHandler(e, t, i, r) {
                return this.getProcessorHandlerWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getProcessorHandlersWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getProcessorHandlers");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getProcessorHandlers");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getProcessorHandlers");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [GM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getProcessorHandlers(e, t, i) {
                return this.getProcessorHandlersWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getPropertySetWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getPropertySet");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = yM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getPropertySet(e, t, i, r) {
                return this.getPropertySetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getPropertySetsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getPropertySets");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getPropertySets");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getPropertySets");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [yM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getPropertySets(e, t, i) {
                return this.getPropertySetsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getRawElementsWithHttpInfo(e, t, i, r) {
                r = r || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getRawElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getRawElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getRawElements");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    s = {
                        type: r.type,
                        classification: r.classification,
                        classification__notation: r.classificationNotation
                    },
                    o = aA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw", "GET", n, s, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getRawElements(e, t, i, r) {
                return this.getRawElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getSimpleElementWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSimpleElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getSimpleElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getSimpleElement");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling getSimpleElement");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    s = dA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}/simple", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getSimpleElement(e, t, i, r) {
                return this.getSimpleElementWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getSimpleElementsWithHttpInfo(e, t, i, r) {
                r = r || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSimpleElements");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getSimpleElements");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getSimpleElements");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    s = {
                        type: r.type,
                        classification: r.classification,
                        classification__notation: r.classificationNotation
                    },
                    o = dA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/simple", "GET", n, s, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getSimpleElements(e, t, i, r) {
                return this.getSimpleElementsWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getSpaceWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getSpace");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = uA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getSpace(e, t, i, r) {
                return this.getSpaceWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getSpacesWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSpaces");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getSpaces");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getSpaces");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [uA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getSpaces(e, t, i) {
                return this.getSpacesWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getSystemWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSystem");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getSystem");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getSystem");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling getSystem");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    s = fA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getSystem(e, t, i, r) {
                return this.getSystemWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getSystemsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getSystems");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getSystems");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getSystems");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [fA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            getSystems(e, t, i) {
                return this.getSystemsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getZoneWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getZone");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getZone");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getZone");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getZone");
                let n = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    s = wA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getZone(e, t, i, r) {
                return this.getZoneWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getZoneSpaceWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getZoneSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getZoneSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling getZoneSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling getZoneSpace");
                if (null == n) throw new Error("Missing the required parameter 'zonePk' when calling getZoneSpace");
                let s = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r,
                        zone_pk: n
                    },
                    o = MA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}", "GET", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getZoneSpace(e, t, i, r, n) {
                return this.getZoneSpaceWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            getZoneSpacesWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getZoneSpaces");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getZoneSpaces");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getZoneSpaces");
                if (null == r) throw new Error("Missing the required parameter 'zonePk' when calling getZoneSpaces");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        zone_pk: r
                    },
                    s = [MA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space", "GET", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], s, null)
            }
            getZoneSpaces(e, t, i, r) {
                return this.getZoneSpacesWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            getZonesWithHttpInfo(e, t, i, r) {
                r = r || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getZones");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling getZones");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling getZones");
                let n = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    s = {
                        color: r.color
                    },
                    o = [wA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone", "GET", n, s, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], o, null)
            }
            getZones(e, t, i, r) {
                return this.getZonesWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            listClassificationElementRelationsWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling listClassificationElementRelations");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling listClassificationElementRelations");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling listClassificationElementRelations");
                let r = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i
                    },
                    n = [MM];
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element", "GET", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], n, null)
            }
            listClassificationElementRelations(e, t, i) {
                return this.listClassificationElementRelationsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            mergeIfcsWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling mergeIfcs");
                if (null == t) throw new Error("Missing the required parameter 'projectPk' when calling mergeIfcs");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling mergeIfcs");
                let n = {
                    cloud_pk: e,
                    project_pk: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/merge", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            mergeIfcs(e, t, i) {
                return this.mergeIfcsWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            optimizeIfcWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling optimizeIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling optimizeIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling optimizeIfc");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling optimizeIfc");
                let s = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/optimize", "POST", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            optimizeIfc(e, t, i, r) {
                return this.optimizeIfcWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            removeAllElementPropertySetWithHttpInfo(e, t, i, r) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeAllElementPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeAllElementPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling removeAllElementPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling removeAllElementPropertySet");
                let n = {
                    cloud_pk: e,
                    element_uuid: t,
                    ifc_pk: i,
                    project_pk: r
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/all", "DELETE", n, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeAllElementPropertySet(e, t, i, r) {
                return this.removeAllElementPropertySetWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            removeClassificationOfElementWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeClassificationOfElement");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeClassificationOfElement");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling removeClassificationOfElement");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling removeClassificationOfElement");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling removeClassificationOfElement");
                let s = {
                    cloud_pk: e,
                    element_uuid: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/{id}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeClassificationOfElement(e, t, i, r, n) {
                return this.removeClassificationOfElementWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            removeElementPropertySetWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeElementPropertySet");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeElementPropertySet");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling removeElementPropertySet");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling removeElementPropertySet");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling removeElementPropertySet");
                let s = {
                    cloud_pk: e,
                    element_uuid: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeElementPropertySet(e, t, i, r, n) {
                return this.removeElementPropertySetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            removeElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeElementPropertySetProperty");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeElementPropertySetProperty");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling removeElementPropertySetProperty");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling removeElementPropertySetProperty");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling removeElementPropertySetProperty");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling removeElementPropertySetProperty");
                let o = {
                    cloud_pk: e,
                    element_uuid: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n,
                    propertyset_pk: s
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}", "DELETE", o, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeElementPropertySetProperty(e, t, i, r, n, s) {
                return this.removeElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
            removeElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeElementPropertySetPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeElementPropertySetPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling removeElementPropertySetPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling removeElementPropertySetPropertyDefinition");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling removeElementPropertySetPropertyDefinition");
                if (null == s) throw new Error("Missing the required parameter 'propertyPk' when calling removeElementPropertySetPropertyDefinition");
                if (null == o) throw new Error("Missing the required parameter 'propertysetPk' when calling removeElementPropertySetPropertyDefinition");
                let a = {
                    cloud_pk: e,
                    element_uuid: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n,
                    property_pk: s,
                    propertyset_pk: o
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}", "DELETE", a, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeElementPropertySetPropertyDefinition(e, t, i, r, n, s, o) {
                return this.removeElementPropertySetPropertyDefinitionWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            removeElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == s) throw new Error("Missing the required parameter 'propertyPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == o) throw new Error("Missing the required parameter 'propertydefinitionPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                if (null == a) throw new Error("Missing the required parameter 'propertysetPk' when calling removeElementPropertySetPropertyDefinitionUnit");
                let l = {
                    cloud_pk: e,
                    element_uuid: t,
                    id: i,
                    ifc_pk: r,
                    project_pk: n,
                    property_pk: s,
                    propertydefinition_pk: o,
                    propertyset_pk: a
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}", "DELETE", l, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeElementPropertySetPropertyDefinitionUnit(e, t, i, r, n, s, o, a) {
                return this.removeElementPropertySetPropertyDefinitionUnitWithHttpInfo(e, t, i, r, n, s, o, a).then((function(e) {
                    return e.data
                }))
            }
            removeElementsFromClassificationWithHttpInfo(e, t, i, r, n) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling removeElementsFromClassification");
                if (null == t) throw new Error("Missing the required parameter 'ifcClassificationPk' when calling removeElementsFromClassification");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling removeElementsFromClassification");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling removeElementsFromClassification");
                if (null == n) throw new Error("Missing the required parameter 'uuid' when calling removeElementsFromClassification");
                let s = {
                    cloud_pk: e,
                    ifc_classification_pk: t,
                    ifc_pk: i,
                    project_pk: r,
                    uuid: n
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/{uuid}", "DELETE", s, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            removeElementsFromClassification(e, t, i, r, n) {
                return this.removeElementsFromClassificationWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            reprocessIfcWithHttpInfo(e, t, i) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling reprocessIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling reprocessIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling reprocessIfc");
                let r = {
                    cloud_pk: e,
                    id: t,
                    project_pk: i
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/reprocess", "POST", r, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            reprocessIfc(e, t, i) {
                return this.reprocessIfcWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateAccessTokenWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateAccessToken");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling updateAccessToken");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateAccessToken");
                if (null == r) throw new Error("Missing the required parameter 'token' when calling updateAccessToken");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateAccessToken");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        token: r
                    },
                    a = jM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateAccessToken(e, t, i, r, n) {
                return this.updateAccessTokenWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateElementWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateElement");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling updateElement");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateElement");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling updateElement");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateElement");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    a = wM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateElement(e, t, i, r, n) {
                return this.updateElementWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s, o) {
                let a = o;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateElementPropertySetProperty");
                if (null == t) throw new Error("Missing the required parameter 'elementUuid' when calling updateElementPropertySetProperty");
                if (null == i) throw new Error("Missing the required parameter 'id' when calling updateElementPropertySetProperty");
                if (null == r) throw new Error("Missing the required parameter 'ifcPk' when calling updateElementPropertySetProperty");
                if (null == n) throw new Error("Missing the required parameter 'projectPk' when calling updateElementPropertySetProperty");
                if (null == s) throw new Error("Missing the required parameter 'propertysetPk' when calling updateElementPropertySetProperty");
                if (null == o) throw new Error("Missing the required parameter 'data' when calling updateElementPropertySetProperty");
                let l = {
                        cloud_pk: e,
                        element_uuid: t,
                        id: i,
                        ifc_pk: r,
                        project_pk: n,
                        propertyset_pk: s
                    },
                    c = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}", "PATCH", l, {}, {}, {}, a, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], c, null)
            }
            updateElementPropertySetProperty(e, t, i, r, n, s, o) {
                return this.updateElementPropertySetPropertyWithHttpInfo(e, t, i, r, n, s, o).then((function(e) {
                    return e.data
                }))
            }
            updateIfcWithHttpInfo(e, t, i, r) {
                let n = r;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateIfc");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateIfc");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateIfc");
                if (null == r) throw new Error("Missing the required parameter 'data' when calling updateIfc");
                let s = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    o = BM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}", "PATCH", s, {}, {}, {}, n, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], o, null)
            }
            updateIfc(e, t, i, r) {
                return this.updateIfcWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateIfcFilesWithHttpInfo(e, t, i, r) {
                r = r || {};
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateIfcFiles");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateIfcFiles");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateIfcFiles");
                let n = {
                        cloud_pk: e,
                        id: t,
                        project_pk: i
                    },
                    s = {
                        structure_file: r.structureFile,
                        systems_file: r.systemsFile,
                        map_file: r.mapFile,
                        gltf_file: r.gltfFile,
                        gltf_with_openings_file: r.gltfWithOpeningsFile,
                        bvh_tree_file: r.bvhTreeFile,
                        viewer_360_file: r.viewer360File,
                        xkt_file: r.xktFile
                    },
                    o = UM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/files", "PATCH", n, {}, {}, s, null, ["Bearer", "bimdata_connect", "client_credentials"], ["multipart/form-data", "application/x-www-form-urlencoded"], ["application/json"], o, null)
            }
            updateIfcFiles(e, t, i, r) {
                return this.updateIfcFilesWithHttpInfo(e, t, i, r).then((function(e) {
                    return e.data
                }))
            }
            updateIfcPropertyWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateIfcProperty");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateIfcProperty");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateIfcProperty");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateIfcProperty");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateIfcProperty");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = bM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateIfcProperty(e, t, i, r, n) {
                return this.updateIfcPropertyWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateIfcPropertyDefinitionWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateIfcPropertyDefinition");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateIfcPropertyDefinition");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateIfcPropertyDefinition");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateIfcPropertyDefinition");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateIfcPropertyDefinition");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = vM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateIfcPropertyDefinition(e, t, i, r, n) {
                return this.updateIfcPropertyDefinitionWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateIfcUnitWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateIfcUnit");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateIfcUnit");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateIfcUnit");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateIfcUnit");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateIfcUnit");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = gM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateIfcUnit(e, t, i, r, n) {
                return this.updateIfcUnitWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateLayerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateLayer");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateLayer");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateLayer");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateLayer");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateLayer");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = WM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateLayer(e, t, i, r, n) {
                return this.updateLayerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateProcessorHandlerWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateProcessorHandler");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateProcessorHandler");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateProcessorHandler");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateProcessorHandler");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateProcessorHandler");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = GM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}", "PUT", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateProcessorHandler(e, t, i, r, n) {
                return this.updateProcessorHandlerWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updatePropertySetWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updatePropertySet");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updatePropertySet");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updatePropertySet");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updatePropertySet");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updatePropertySet");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = yM;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updatePropertySet(e, t, i, r, n) {
                return this.updatePropertySetWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateSpaceWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateSpace");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateSpace");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = uA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateSpace(e, t, i, r, n) {
                return this.updateSpaceWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateSystemWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateSystem");
                if (null == t) throw new Error("Missing the required parameter 'ifcPk' when calling updateSystem");
                if (null == i) throw new Error("Missing the required parameter 'projectPk' when calling updateSystem");
                if (null == r) throw new Error("Missing the required parameter 'uuid' when calling updateSystem");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateSystem");
                let o = {
                        cloud_pk: e,
                        ifc_pk: t,
                        project_pk: i,
                        uuid: r
                    },
                    a = fA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateSystem(e, t, i, r, n) {
                return this.updateSystemWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateZoneWithHttpInfo(e, t, i, r, n) {
                let s = n;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateZone");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateZone");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateZone");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateZone");
                if (null == n) throw new Error("Missing the required parameter 'data' when calling updateZone");
                let o = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r
                    },
                    a = wA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}", "PATCH", o, {}, {}, {}, s, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], a, null)
            }
            updateZone(e, t, i, r, n) {
                return this.updateZoneWithHttpInfo(e, t, i, r, n).then((function(e) {
                    return e.data
                }))
            }
            updateZoneSpaceWithHttpInfo(e, t, i, r, n, s) {
                let o = s;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateZoneSpace");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateZoneSpace");
                if (null == i) throw new Error("Missing the required parameter 'ifcPk' when calling updateZoneSpace");
                if (null == r) throw new Error("Missing the required parameter 'projectPk' when calling updateZoneSpace");
                if (null == n) throw new Error("Missing the required parameter 'zonePk' when calling updateZoneSpace");
                if (null == s) throw new Error("Missing the required parameter 'data' when calling updateZoneSpace");
                let a = {
                        cloud_pk: e,
                        id: t,
                        ifc_pk: i,
                        project_pk: r,
                        zone_pk: n
                    },
                    l = MA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}", "PATCH", a, {}, {}, {}, o, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], l, null)
            }
            updateZoneSpace(e, t, i, r, n, s) {
                return this.updateZoneSpaceWithHttpInfo(e, t, i, r, n, s).then((function(e) {
                    return e.data
                }))
            }
        },
        SsoApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            acceptInvitationWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling acceptInvitation");
                let t = {
                    id: e
                };
                return this.apiClient.callApi("/identity-provider/invitation/{id}/accept", "POST", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            acceptInvitation(e) {
                return this.acceptInvitationWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            deleteUserWithHttpInfo(e) {
                let t = e;
                if (null == e) throw new Error("Missing the required parameter 'data' when calling deleteUser");
                return this.apiClient.callApi("/identity-provider/user", "DELETE", {}, {}, {}, {}, t, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], [], null, null)
            }
            deleteUser(e) {
                return this.deleteUserWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            denyInvitationWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling denyInvitation");
                let t = {
                    id: e
                };
                return this.apiClient.callApi("/identity-provider/invitation/{id}/deny", "POST", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            denyInvitation(e) {
                return this.denyInvitationWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getInvitationWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'id' when calling getInvitation");
                let t = {
                        id: e
                    },
                    i = zM;
                return this.apiClient.callApi("/identity-provider/invitation/{id}", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getInvitation(e) {
                return this.getInvitationWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            getInvitationsWithHttpInfo(e) {
                let t = {
                        status: (e = e || {}).status
                    },
                    i = [zM];
                return this.apiClient.callApi("/identity-provider/invitation", "GET", {}, t, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getInvitations(e) {
                return this.getInvitationsWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
        },
        WebhookApi: class {
            constructor(e) {
                this.apiClient = e || Ww.instance
            }
            createWebHookWithHttpInfo(e, t) {
                let i = t;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling createWebHook");
                if (null == t) throw new Error("Missing the required parameter 'data' when calling createWebHook");
                let r = {
                        cloud_pk: e
                    },
                    n = yA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook", "POST", r, {}, {}, {}, i, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], n, null)
            }
            createWebHook(e, t) {
                return this.createWebHookWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            deleteWebHookWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling deleteWebHook");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling deleteWebHook");
                let i = {
                    cloud_pk: e,
                    id: t
                };
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook/{id}", "DELETE", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], [], null, null)
            }
            deleteWebHook(e, t) {
                return this.deleteWebHookWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            fullUpdateWebHookWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling fullUpdateWebHook");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling fullUpdateWebHook");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling fullUpdateWebHook");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = yA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook/{id}", "PUT", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            fullUpdateWebHook(e, t, i) {
                return this.fullUpdateWebHookWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            getWebHookWithHttpInfo(e, t) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getWebHook");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling getWebHook");
                let i = {
                        cloud_pk: e,
                        id: t
                    },
                    r = yA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook/{id}", "GET", i, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], r, null)
            }
            getWebHook(e, t) {
                return this.getWebHookWithHttpInfo(e, t).then((function(e) {
                    return e.data
                }))
            }
            getWebHooksWithHttpInfo(e) {
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling getWebHooks");
                let t = {
                        cloud_pk: e
                    },
                    i = [yA];
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook", "GET", t, {}, {}, {}, null, ["Bearer", "bimdata_connect", "client_credentials"], [], ["application/json"], i, null)
            }
            getWebHooks(e) {
                return this.getWebHooksWithHttpInfo(e).then((function(e) {
                    return e.data
                }))
            }
            pingWebHookWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling pingWebHook");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling pingWebHook");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling pingWebHook");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = yA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook/{id}/ping", "POST", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            pingWebHook(e, t, i) {
                return this.pingWebHookWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
            updateWebHookWithHttpInfo(e, t, i) {
                let r = i;
                if (null == e) throw new Error("Missing the required parameter 'cloudPk' when calling updateWebHook");
                if (null == t) throw new Error("Missing the required parameter 'id' when calling updateWebHook");
                if (null == i) throw new Error("Missing the required parameter 'data' when calling updateWebHook");
                let n = {
                        cloud_pk: e,
                        id: t
                    },
                    s = yA;
                return this.apiClient.callApi("/cloud/{cloud_pk}/webhook/{id}", "PATCH", n, {}, {}, {}, r, ["Bearer", "bimdata_connect", "client_credentials"], ["application/json"], ["application/json"], s, null)
            }
            updateWebHook(e, t, i) {
                return this.updateWebHookWithHttpInfo(e, t, i).then((function(e) {
                    return e.data
                }))
            }
        }
    });
    class xA extends Error {
        constructor(e) {
            super(e), this.name = "UnmockableError"
        }
    }

    function CA({
        accessToken: e,
        apiUrl: t,
        offlineOptions: i
    }) {
        const r = Ww.instance;
        r.basePath = t;
        const n = r.authentications.Bearer;
        if (n.type = "oauth2", n.accessToken = e, i) {
            const e = Object.getPrototypeOf(r),
                t = e.callApi,
                n = function(e, n, s, o, a, l, c, h, d, u, p, f) {
                    const _ = function() {
                        return t.bind(r)(e, n, s, o, a, l, c, h, d, u, p, f)
                    };
                    if ("GET" !== n.toUpperCase()) return i.allowUnmockedMethodsOnNetwork ? _() : Promise.reject(new Error(`Unable to call ${n.toUpperCase()} ${e} in offline mode`));
                    try {
                        const t = function(e, t, i, r) {
                            let n;
                            switch (t.ifc_pk ? n = r.data.find(e => e.id === parseInt(t.ifc_pk)) : t.id && (n = r.data.find(e => e.id === parseInt(t.id))), e) {
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc":
                                    return r.data;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}":
                                    return n;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification":
                                    return Object.values(n.rawElements.classifications);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element": {
                                    const e = [];
                                    return Object.values(n.formattedRawElements.elements).forEach(t => {
                                        t.classifications.forEach(i => {
                                            e.push({
                                                element_uuid: t.uuid,
                                                classification_id: i.id
                                            })
                                        })
                                    }), e
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element":
                                    return Object.values(n.formattedRawElements.elements).filter(e => e.classifications.some(e => e.id === parseInt(t.ifc_classification_pk)));
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element": {
                                    const e = i.type,
                                        t = i.classification,
                                        r = i.classification__notation;
                                    return Object.values(n.formattedRawElements.elements).filter(i => (!e || i.type === e) && (t ? i.classifications.some(e => e.name === t) : !r || i.classifications.some(e => e.notation === r)))
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification":
                                    return n.formattedRawElements.elements[t.element_uuid].classifications;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset":
                                    return n.formattedRawElements.elements[t.element_uuid].property_sets;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}":
                                    return n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.id));
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property":
                                    return n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}":
                                    return n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties.find(e => e.id === parseInt(t.id));
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition":
                                    return [n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties.find(e => e.id === parseInt(t.property_pk)).definition];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}": {
                                    const e = n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties.find(e => e.id === parseInt(t.property_pk)).definition;
                                    if (e.id === t.id) return e
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit": {
                                    const e = n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties.find(e => e.id === parseInt(t.property_pk)).definition;
                                    if (e.id !== t.propertydefinition_pk) return;
                                    return [e.unit]
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}": {
                                    const e = n.formattedRawElements.elements[t.element_uuid].property_sets.find(e => e.id === parseInt(t.propertyset_pk)).properties.find(e => e.id === parseInt(t.property_pk)).definition;
                                    if (e.id !== parseInt(t.propertydefinition_pk)) return;
                                    if (e.unit.id === parseInt(t.id)) return e.unit
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}":
                                    return n.formattedRawElements.elements[t.uuid];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}/simple": {
                                    const e = n.formattedRawElements.elements[t.uuid];
                                    if (!e) return;
                                    const i = {},
                                        r = {};
                                    return e.attributes.properties.forEach(e => {
                                        r[e.definition.name] = e.value
                                    }), i[e.uuid] = {
                                        attributes: r
                                    }, e.property_sets.forEach(t => {
                                        const r = {};
                                        t.properties.forEach(e => {
                                            r[e.definition.name] = e.value
                                        }), i[e.uuid][t.name] = r
                                    }), i
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw":
                                    return n.rawElements;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/simple": {
                                    const e = {};
                                    return Object.values(n.formattedRawElements.elements).forEach(t => {
                                        const i = {};
                                        t.attributes.properties.forEach(e => {
                                            i[e.definition.name] = e.value
                                        }), e[t.uuid] = {
                                            attributes: i
                                        }, t.property_sets.forEach(i => {
                                            const r = {};
                                            i.properties.forEach(e => {
                                                r[e.definition.name] = e.value
                                            }), e[t.uuid][i.name] = r
                                        })
                                    }), e
                                }
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer":
                                    return Object.values(n.formattedRawElements.layers);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}":
                                    return n.formattedRawElements.layers[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property":
                                    return Object.values(n.formattedRawElements.property_sets).reduce((e, t) => (e.push(...t.properties), e), []);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}":
                                    return Object.values(n.formattedRawElements.property_sets).reduce((e, t) => (e.push(...t.properties), e), []).find(e => e.id === parseInt(t.id));
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition":
                                    return Object.values(n.formattedRawElements.definitions);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}":
                                    return n.formattedRawElements.definitions[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset":
                                    return Object.values(n.formattedRawElements.property_sets);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}":
                                    return n.formattedRawElements.property_sets[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space":
                                    return n.flatSpaces;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}":
                                    return n.spaces[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system":
                                    return Object.values(n.formattedRawElements.systems);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}":
                                    return n.formattedRawElements.systems[t.uuid];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit":
                                    return Object.values(n.formattedRawElements.units);
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}":
                                    return n.formattedRawElements.units[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone":
                                    return n.zones;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}":
                                    return n.flatZones[t.id];
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space":
                                    return n.flatZones[t.zone_pk].spaces;
                                case "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}":
                                    return n.flatZones[t.zone_pk].spaces.find(e => e.id === parseInt(t.id));
                                default:
                                    throw xA("NO MOCK MATCHED FOR REQUEST", e)
                            }
                        }(e, s, o, i);
                        if (void 0 === t) {
                            const e = {
                                status: 404,
                                statusText: "Mocked resource not found",
                                body: {
                                    detail: "Mocked resource not found"
                                }
                            };
                            return Promise.reject(e)
                        }
                        return Promise.resolve({
                            data: t,
                            response: {
                                status: 200
                            }
                        })
                    } catch (t) {
                        if ("UnmockableError" === t.name) return i.allowUnmockedMethodsOnNetwork ? _() : Promise.reject(new Error(`Unable to call ${n.toUpperCase()} ${e} in offline mode`));
                        throw t
                    }
                };
            e.callApi = n
        }
        return AA
    }
    var PA = {
            INCREMENT_SPINNER_PROCESSES(e) {
                e.spinnerProcesses++
            },
            DECREMENT_SPINNER_PROCESSES(e) {
                e.spinnerProcesses--
            },
            STOP_SPINNER(e) {
                e.spinnerProcesses = 0
            },
            SET_VIEWER_COMPONENT(e, t) {
                e.viewerComponent = t
            },
            SET_VIEWER_ELEMENT(e, t) {
                e.viewerElement = t
            },
            SET_VIEWER_BOUNDING_CLIENT_RECT(e, t) {
                e.viewerBoundingClientRect = t
            },
            REGISTER_PLUGIN(e, {
                name: t,
                plugin: i
            }) {
                if (!t) throw new Error("Impossible to register plugin without a name");
                e.plugins.set(t, i), e.plugins = new Map(e.plugins)
            },
            REGISTER_KEYBOARD_SHORTCUTS_MANAGER(e, t) {
                e.keyboardShortcutsManager = t
            },
            REGISTER_MODAL_MANAGER(e, t) {
                e.modalManager = t
            },
            SET_ACCESS_TOKEN(e, t) {
                e.accessToken = t
            },
            SET_API_CLIENT(e, {
                accessToken: t,
                apiUrl: i,
                offlineOptions: r
            }) {
                e.apiClient = CA({
                    accessToken: t,
                    apiUrl: i,
                    offlineOptions: r
                })
            },
            SET_IFCS(e, t) {
                e.ifcs = t
            },
            SET_SELECTED_IFCS(e, t) {
                e.selectedIfcs = t
            },
            SET_STRUCTURES(e, t) {
                e.structures = t
            },
            SET_OBJECTS_WITH_REPRESENTATION(e, t) {
                e.objectsWithRepresentation = t
            },
            SET_OBJECTS_WITHOUT_REPRESENTATION(e, t) {
                e.objectsWithoutRepresentation = t
            },
            ADD_OBJECTS_WITHOUT_REPRESENTATION(e, {
                objects: t,
                ifcId: i
            }) {
                const r = [...t];
                r.ifcId = i;
                const n = e.objectsWithoutRepresentation.find(e => e.ifcId === i);
                n ? (r.push(...n), e.objectsWithoutRepresentation = [...e.objectsWithoutRepresentation.filter(e => e.ifcId !== i), r]) : e.objectsWithoutRepresentation = [...e.objectsWithoutRepresentation, r]
            },
            SET_SELECTED_OBJECT_IDS(e, t) {
                e.selectedObjectIds = t
            },
            SET_SELECTION_MODE(e, t) {
                if (!e.selectionModes.includes(t)) throw new Error(`Selection mode ${t} not supported.`);
                e.selectionMode = t
            }
        },
        kA = {
            allObjects: e => {
                const t = new Map;
                return e.objectsWithRepresentation.flat().forEach(e => t.set(e.uuid, e)), e.objectsWithoutRepresentation.flat().forEach(e => t.set(e.uuid, e)), t
            },
            allObjectsOfType: (e, t) => e => [...t.allObjects.values()].filter(t => t.type === e),
            typesOf: (e, t) => (e = []) => {
                void 0 === e.map && (e = [...e]);
                const i = new Set;
                return e.forEach(e => {
                    const r = t.allObjects.get(e);
                    r && r.type && i.add(r.type)
                }), Array.from(i).sort()
            },
            idsByTypeOf: (e, t) => (e = new Set) => {
                const i = t.typesOf(e);
                return [...t.allObjects.values()].filter(e => i.includes(e.type)).map(e => e.uuid)
            },
            allIds: (e, t) => [...t.allObjects.values()].map(e => e.uuid),
            ifcIdOf: e => t => {
                for (let i of [...e.objectsWithRepresentation, ...e.objectsWithoutRepresentation]) {
                    if (i.find(e => e.uuid === t)) return i.ifcId
                }
            },
            object: (e, t) => e => [...t.allObjects.values()].find(t => t.uuid === e),
            objectName: (e, t) => e => {
                const i = t.object(e);
                return i && i.name || null
            },
            selectedObjectIds: e => Array.from(e.selectedObjectIds),
            structureOf: (e, t) => i => e.structures.find(e => e.ifcId === t.ifcIdOf(i)),
            objectParent: (e, t) => e => {
                const i = t.object(e);
                return i ? i.parent : null
            },
            objectChildren: (e, t) => e => {
                const i = t.object(e);
                return i ? i.children : null
            },
            objectDescendants: (e, t) => e => {
                const i = t.object(e);
                if (!i) return null;
                const r = [];
                let n = i ? Array.from(i.children) : [];
                for (; n.length;) r.push(...n), n = n.flatMap(e => e.children);
                return r
            },
            objectAncestors: (e, t) => e => {
                const i = [];
                let r = t.objectParent(e);
                for (; r;) i.push(r), r = r.parent;
                return i
            },
            objectAncestorByType: (e, t) => (e, i) => {
                if (!i) throw "A type must be specified to get ancestor by type.";
                let r = t.objectParent(e);
                for (; r;) {
                    if (r.type === i) return r;
                    r = r.parent
                }
                return null
            },
            objectStorey: (e, t) => e => t.objectAncestorByType(e, "storey"),
            objectSpace: (e, t) => e => t.objectAncestorByType(e, "space")
        };

    function EA(e) {
        e.data.forEach(e => {
            var t;
            e.formattedRawElements = function(e) {
                const t = JSON.parse(JSON.stringify(e));
                t.units.forEach(e => {
                    e.conversion_baseunit = t.units[e.conversion_baseunit_index], delete e.conversion_baseunit_index
                }), t.definitions.forEach(e => {
                    e.unit = t.units[e.unit_id], delete e.unit_id
                }), t.property_sets.forEach(e => {
                    e.properties.forEach(e => {
                        e.definition = t.definitions[e.def_id], delete e.def_id
                    })
                });
                const i = t.systems.reduce((e, t) => (t.elements = [], e[t.uuid] = t, e), {}),
                    r = {};
                return t.elements.forEach(e => {
                    e.attributes = t.property_sets[e.attributes], e.property_sets = e.psets.map(e => t.property_sets[e]), delete e.psets, e.classifications = e.classifications.map(e => t.classifications[e]), e.systems = e.systems.map(i => {
                        const r = t.systems[i];
                        return r.elements.push(e.uuid), r
                    }), e.layers = e.layers.map(e => t.layers[e]), r[e.uuid] = e
                }), {
                    units: t.units.reduce((e, t) => (e[t.id] = t, e), {}),
                    definitions: t.definitions.reduce((e, t) => (e[t.id] = t, e), {}),
                    property_sets: t.property_sets.reduce((e, t) => (e[t.id] = t, e), {}),
                    classifications: t.classifications.reduce((e, t) => (e[t.id] = t, e), {}),
                    systems: i,
                    layers: t.layers.reduce((e, t) => (e[t.id] = t, e), {}),
                    elements: r
                }
            }(e.rawElements), e.flatZones = function e(t, i) {
                return i || (i = {}), t.forEach(t => {
                    i[t.id] = t, e(t.zones, i)
                }), i
            }(e.zones), e.flatSpaces = (t = e.flatZones, Object.entries(t).reduce((e, [t, i]) => (i.spaces.forEach(t => {
                e[t.id] = t
            }), e), {}))
        })
    }

    function IA(e) {
        return (IA = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(e)
    }

    function TA(e) {
        return e.forEach((function(e) {
            if ("function" != typeof e) throw new Error("Expected [rule] to be typeof [function], got [".concat("undefined" == typeof value ? "undefined" : IA(value), "]"))
        })), !0
    }

    function DA(e) {
        if (!(e && e.constructor && e instanceof $_.Set)) throw new Error("Expected [set] to be instanceof [Set], got [".concat(e && e.constructor, "]"));
        return !0
    }

    function SA(e) {
        return e.forEach((function(e) {
            return DA(e)
        })), !0
    }

    function BA(e) {
        if (!e || 1 !== e.length) throw new Error("The function must be given exactly 1 argument.");
        return !0
    }

    function jA(e) {
        return function() {
            for (var t = arguments.length, i = new Array(t), r = 0; r < t; r++) i[r] = arguments[r];
            BA(i);
            var n = i[0];
            return e(this, n)
        }
    }
    var LA = $_.Set.prototype.add;
    $_.Set.prototype.add = function(e) {
        if (this.rulesFct && !this.rulesFct.call(null, e)) throw new Error("Value [".concat(e, "] does not match ruleset."));
        return LA.call(this, e)
    };
    var RA = $_.Set.prototype.has;

    function OA(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new FA([e]);
        if (void 0 === e || "string" == typeof e || "number" == typeof e || "boolean" == typeof e || null === e) return e;
        if ("function" == typeof e) {
            var i = {
                fctStr: String(e).replace(/\s+/g, "")
            };
            return i.refs = Object.getOwnPropertyNames(e).map((function(i) {
                return RA.call(t, e[i]) ? "circular" : OA(e[i], t)
            })), i
        }
        var r = Array.isArray(e);
        if ("object" !== IA(e) && !r) return e;
        if (t.add(e), r) return e.map((function(e) {
            return RA.call(t, e) ? "circular" : OA(e, t)
        }));
        var n = {};
        return Object.getOwnPropertyNames(e).sort((function(e, t) {
            return e.localeCompare(t)
        })).forEach((function(i) {
            n[i] = RA.call(t, e[i]) ? "circular" : OA(e[i], t)
        })), n
    }
    $_.Set.prototype.has = function(e) {
        var t = IA(e);
        if ("string" === t || "number" === t || "boolean" === t) return RA.call(this, e);
        for (var i, r = this.values(); void 0 !== (i = r.next().value);) {
            var n = IA(i);
            if (n !== t) return !1;
            var s = i instanceof NA && e instanceof NA;
            if (i === e) return !0;
            if (s && i.equal(e)) return !0;
            if ("function" === n && "function" === t || !s && "object" === n && "object" === t || Array.isArray(i) && Array.isArray(e)) {
                var o = OA(i),
                    a = OA(e);
                if (JSON.stringify(o) === JSON.stringify(a)) return !0
            }
        }
        return !1
    }, $_.Set.prototype.rules = function(e) {
        return e && (TA([e]), this.rulesFct = e), this.rulesFct
    }, $_.Set.prototype.toArray = function() {
        var e = [];
        e.length = this.size;
        var t = 0;
        return this.forEach((function(i) {
            e[t++] = i
        })), e
    }, $_.Set.prototype.any = function() {
        return this.values().next().value
    }, $_.Set.prototype.isSupersetOf = function(e) {
        for (var t, i = e.values(); void 0 !== (t = i.next().value);)
            if (!this.has(t)) return !1;
        return !0
    }, $_.Set.prototype.isSubsetOf = function(e) {
        return e.isSupersetOf(this)
    }, $_.Set.prototype.properSupersetOf = function(e) {
        return this.size !== e.size && this.isSupersetOf(e)
    }, $_.Set.prototype.properSubsetOf = function(e) {
        return this.size !== e.size && this.isSubsetOf(e)
    }, $_.Set.prototype.equal = function(e) {
        return DA(e), this.size === e.size && this.isSubsetOf(e)
    }, $_.Set.prototype.isEmpty = function() {
        return 0 === this.size
    };
    var FA = $_.Set;

    function NA(e, t) {
        var i = new FA;
        return t && i.rules(t), e && e.forEach((function(e) {
            return i.add(e)
        })), i
    }

    function UA() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        SA(t);
        var r = new NA;
        return t.forEach((function(e) {
            return e.forEach((function(e) {
                return r.add(e)
            }))
        })), r
    }

    function HA() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        if (SA(t), !t || 0 === t.length) throw new Error("The intersection operator currently does not support 0 arguments.");
        var r = new NA;
        return t.forEach((function(e) {
            e.forEach((function(e) {
                t.every((function(t) {
                    return t.has(e)
                })) && r.add(e)
            }))
        })), r
    }

    function VA(e, t) {
        var i = new NA;

        function r(e, t, i) {
            e.forEach((function(e) {
                t.has(e) || i.add(e)
            }))
        }
        return r(e, t, i), r(t, e, i), i
    }
    $_.Set = NA, $_.Set.prototype = FA.prototype, $_.Set.from = function() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return new NA(t.concat())
    }, $_.Set.toSet = function(e) {
        return e instanceof NA ? e : NA.from(e)
    }, $_.Set.copy = function(e) {
        DA(e);
        var t = new NA;
        return e.forEach((function(e) {
            return t.add(e)
        })), t
    }, $_.Set.union = UA, $_.Set.prototype.union = jA(UA), $_.Set.intersection = HA, $_.Set.prototype.intersect = jA(HA), $_.Set.difference = function(e, t) {
        DA(e), DA(t);
        var i = new NA([]);
        return e.forEach((function(e) {
            t.has(e) || i.add(e)
        })), i
    }, $_.Set.complement = function(e, t) {
        if (DA(e), DA(t), !e.isSupersetOf(t)) throw new Error("[set2] has an element which is not in the universe [set1].");
        return NA.difference(e, t)
    }, $_.Set.symDiff = function() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        if (t.forEach((function(e) {
                return DA(e)
            })), 2 === t.length) return VA.apply(void 0, t);
        for (var r = VA(t.shift(), t.shift()); t.length > 0;) r = VA(r, t.shift());
        return r
    }, $_.Set.cartesian = function(e, t) {
        DA(e), DA(t);
        var i = new NA;
        return e.forEach((function(e) {
            return t.forEach((function(t) {
                return i.add([e, t])
            }))
        })), i
    }, $_.Set.power = function(e) {
        DA(e);
        var t = function e(t) {
            if (DA(t), 0 === t.size) return NA.from(t);
            var i = t.any(),
                r = NA.difference(t, NA.from(i)),
                n = e(r),
                s = function(e, t) {
                    return t.forEach((function(t) {
                        return t.add(e)
                    })), t
                }(i, e(r));
            return NA.union(n, s)
        }(e);
        return t.add(new NA), e.forEach((function(e) {
            return t.add(NA.from(e))
        })), t
    }, $_.Set.mergeRules = function() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return TA(t),
            function(e) {
                if (!t.some((function(t) {
                        return t.call(e)
                    }))) throw new Error("Value [".concat(e, "] does not match any rule of the ruleset."));
                return !0
            }
    }, $_.Set.mergeRulesStrict = function() {
        for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return TA(t),
            function(e) {
                if (!t.every((function(t) {
                        return t.call(e)
                    }))) throw new Error("Value [".concat(e, "] does not match any rule of the ruleset."));
                return !0
            }
    }, $_.Set.__isExtended__ = !0;
    var zA = "";
    const {
        mapMutations: $A,
        mapActions: WA,
        mapState: qA
    } = Ma("viewer");
    const GA = gl({
        render: function() {
            var e = this,
                t = e.$createElement,
                i = e._self._c || t;
            return i("div", {
                staticClass: "bimdata-viewer",
                style: "--background-color: " + (e.cfg.backgroundColor || "#f5f5f5"),
                attrs: {
                    id: "bimdata-viewer"
                },
                on: {
                    "!contextmenu": function(t) {
                        return t.preventDefault(), e.$emit("right-click", t)
                    }
                }
            }, [i("BIMDataKeyboardShortcutsManager"), e._v(" "), i("BIMDataModalManager"), e._v(" "), i("BIMDataPlugins", {
                attrs: {
                    plugins: e.plugins
                }
            }), e._v(" "), e.loading ? i("div", {
                staticClass: "global-spinner"
            }, [i("BIMDataSpinner", {
                attrs: {
                    size: "70px",
                    border: "7px"
                }
            })], 1) : e._e(), e._v(" "), !1 !== e.cfg.bimdataPlugins.logo ? i("div", {
                staticClass: "viewer__logo"
            }, [i("BIMDataIcon", {
                attrs: {
                    }
            }, [i("BIMDataLogo")], 1), e._v(" "), i("div", {
                staticClass: "version"
            }, [e._v(e._s(e.$options.version))])], 1) : e._e()], 1)
        },
        staticRenderFns: []
    }, (function(e) {
        e && e("data-v-645beff2_0", {
            source: '.m-t-6{margin-top:6px}.p-t-6{padding-top:6px}.m-b-6{margin-bottom:6px}.p-b-6{padding-bottom:6px}.m-l-6{margin-left:6px}.p-l-6{padding-left:6px}.m-r-6{margin-right:6px}.p-r-6{padding-right:6px}.m-t-12{margin-top:12px}.p-t-12{padding-top:12px}.m-b-12{margin-bottom:12px}.p-b-12{padding-bottom:12px}.m-l-12{margin-left:12px}.p-l-12{padding-left:12px}.m-r-12{margin-right:12px}.p-r-12{padding-right:12px}body,html{margin:0;cursor:default}*,::after,::before{box-sizing:border-box}textarea{font-family:robotoregular,Helvetica,Arial,sans-serif}.error{color:#ff3d1e}.warning{color:#ff9100}.text{color:#616060}.slide-fade-right-enter-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-right-leave-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-right-enter,.slide-fade-right-leave-to{transform:translateX(20px);opacity:0}.slide-fade-left-enter-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-left-leave-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-left-enter,.slide-fade-left-leave-to{transform:translateX(-20px);opacity:0}.slide-fade-down-enter-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-down-leave-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-down-enter,.slide-fade-down-leave-to{transform:translateY(10px);opacity:0}.slide-fade-in-up-enter-active{transform:translate3d(0,100%,0)}.slide-fade-in-up-leave-active{transform:translate3d(0,-100%,0)}.slide-fade-in-up-enter,.slide-fade-in-up-leave-to{transition:.1s;opacity:0}.slide-fade-up-enter-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-up-leave-active{transition:all .1s cubic-bezier(1,.5,.8,1)}.slide-fade-up-enter,.slide-fade-up-leave-to{transform:translateY(-20px);opacity:0}.bimdata-viewer{color:#2f374a;font-family:robotoregular,Helvetica,Arial,sans-serif}.h-100{height:100vh}.h-100p{height:100%}.submenu{position:absolute;top:0;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1)}.submenu--up{width:100%}.submenu--up ul{width:100%;position:absolute;bottom:2px;right:0;background-color:#fff;border-radius:3px;box-shadow:0 2px 10px 0 rgba(0,0,0,.1)}.submenu--up ul li{padding:calc(12px / 2)}.submenu--down{margin-top:calc(12px / 2);width:100%;left:0;top:35px;border-radius:3px;z-index:1}.submenu--down li{padding:calc(12px / 2);cursor:pointer}.submenu--down li:hover{background-color:#f8f8f8}.submenu--down li.disabled{cursor:inherit}.submenu--down li.disabled:hover{background-color:transparent}.submenu--right__simple{padding:12px;width:187px;display:flex;flex-direction:column;justify-content:center;right:calc(45px + 12px);top:0}.submenu--right__windowed{width:400px;height:calc(var(--viewer-height) - (2 * 12px));right:calc(45px + 12px);z-index:1}.submenu--right__free{right:calc(45px + 12px);z-index:1}.submenu--left__windowed{width:400px;height:calc(var(--viewer-height) - (2 * 12px));left:calc(45px + 12px);z-index:1}.submenu--left__free{left:calc(45px + 12px);z-index:1}.submenu--left__simple{padding:20px;width:190px;display:flex;flex-direction:column;justify-content:center;left:calc(45px + 12px);top:0}.submenu__header{padding:0 12px;height:32px;display:flex;align-items:center;justify-content:space-between;box-shadow:0 2px 10px 0 rgba(0,0,0,.1)}.submenu__header--left{display:flex;align-items:center;position:relative}.submenu__header__menu{height:20px;display:flex;align-items:center;position:relative;cursor:pointer}.submenu__header__submenu{width:184px;position:absolute;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.12);top:22px;left:0;border-radius:3px;z-index:1}.submenu__header__submenu ul{padding:calc(12px / 2) 0}.submenu__header__submenu ul li{padding:calc(12px / 2);background-color:#fff;cursor:pointer;font-size:.8571428571em;display:flex;align-items:center}.submenu__header__submenu ul li svg{margin-right:12px}.submenu__header__submenu ul li:hover{background-color:#f8f8f8}.submenu__header__name{margin-left:12px}.bimdata-info-length{padding:0 calc(12px / 2);height:18px;display:flex;align-items:center;justify-content:center;background-color:#2f374a;color:#fff;border-radius:3px;line-height:1.5;font-size:.7857142857em}.bimdata-viewer ::-webkit-scrollbar{width:7px;height:7px}.bimdata-viewer ::-webkit-scrollbar-track{background-color:rgba(97,96,96,.3)}.bimdata-viewer ::-webkit-scrollbar-thumb{background:#2f374a;height:48px}.bimdata-viewer ::-webkit-scrollbar-thumb:hover{background:#616060}.annotation-marker.high,.annotation-marker.low,.annotation-marker.medium,.bcf--list__element--priority.high,.bcf--list__element--priority.low,.bcf--list__element--priority.medium,.index.high,.index.low,.index.medium{color:#fff}.annotation-marker.low,.bcf--list__element--priority.low,.index.low{background-color:#7b7b7b}.annotation-marker.medium,.bcf--list__element--priority.medium,.index.medium{background-color:#ff9100}.annotation-marker.high,.bcf--list__element--priority.high,.index.high{background-color:#ff3d1e}.infos__priority .low{color:#7b7b7b}.infos__priority .medium{color:#ff9100}.infos__priority .high{color:#ff3d1e}.bimdata-error{color:#ff3d1e}.bimdata-error__picto{margin-right:6px;padding:1px;width:13px;height:13px;display:inline-flex;align-items:center;justify-content:center;background-color:#ff3d1e;border-radius:50%}.bimdata-error__label{margin-left:5px;font-size:.7857142857em}.bimdata-viewer .color-picker{width:177px;padding:10px;position:absolute;background-color:#fff;box-shadow:0 2px 10px 0 rgba(0,0,0,.1);border-radius:3px;z-index:1}.bimdata-viewer .color-picker .verte__menu-origin{width:100%}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu{width:100%;box-shadow:none}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte-picker{margin:0}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte-picker__origin{width:100%;height:93px}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte-picker__origin .verte-picker__canvas{width:100%;height:100%;display:block}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte-picker__origin .verte-picker__cursor{width:17px;height:17px;border:2px solid #fff;box-shadow:none}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte-picker__slider{margin:12px 0}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller{padding:0}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__inputs .verte__model{color:#2f374a;font-size:11px;font-weight:400}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__inputs .verte__model:hover{color:#1b202b}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__inputs .verte__input{font-size:11px;font-weight:400}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__recent{justify-content:space-between}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__recent-color{margin:3px;width:20px;height:20px;border-radius:5px}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__recent-color:first-child{margin-left:0}.bimdata-viewer .color-picker .verte__menu-origin .verte__menu .verte__controller .verte__recent-color:last-child{margin-right:0}.bimdata-viewer .color-picker__btns{display:flex;justify-content:space-between}.verte{position:relative;display:flex;justify-content:center}.verte *{box-sizing:border-box}.verte--loading{opacity:0}.verte__guide{width:24px;height:24px;padding:0;border:0;background:0 0}.verte__guide:focus{outline:0}.verte__guide svg{width:100%;height:100%;fill:inherit}.verte__menu{flex-direction:column;justify-content:center;align-items:stretch;width:250px;border-radius:6px;background-color:#fff;will-change:transform;box-shadow:0 8px 15px rgba(0,0,0,.1)}.verte__menu:focus{outline:0}.verte__menu-origin{display:none;position:absolute;z-index:10}.verte__menu-origin--active{display:flex}.verte__menu-origin--static{position:static;z-index:initial}.verte__menu-origin--top{bottom:50px}.verte__menu-origin--bottom{top:50px}.verte__menu-origin--right{right:0}.verte__menu-origin--left{left:0}.verte__menu-origin--center{position:fixed;top:0;left:0;width:100vw;height:100vh;justify-content:center;align-items:center;background-color:rgba(0,0,0,.1)}.verte__menu-origin:focus{outline:0}.verte__controller{padding:0 20px 20px}.verte__recent{display:flex;flex-wrap:wrap;justify-content:flex-end;align-items:center;width:100%}.verte__recent-color{margin:4px;width:27px;height:27px;border-radius:50%;background-color:#fff;box-shadow:0 2px 4px rgba(0,0,0,.1);background-image:linear-gradient(45deg,rgba(112,128,144,.5) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,rgba(112,128,144,.5) 75%),linear-gradient(-45deg,rgba(112,128,144,.5) 25%,transparent 25%),linear-gradient(-45deg,transparent 75%,rgba(112,128,144,.5) 75%);background-size:6px 6px;background-position:0 0,3px -3px,0 3px,-3px 0;overflow:hidden}.verte__recent-color:after{content:"";display:block;width:100%;height:100%;background-color:currentColor}.verte__value{padding:.6em;width:100%;border:1px solid #708090;border-radius:6px 0 0 6px;text-align:center;font-size:12px;-webkit-appearance:none;-moz-appearance:textfield}.verte__value:focus{outline:0;border-color:#1a3aff}.verte__icon{width:20px;height:20px}.verte__icon--small{width:12px;height:12px}.verte__input{padding:5px;margin:0 3px;min-width:0;text-align:center;border-width:0 0 1px 0;appearance:none;-moz-appearance:textfield}.verte__input::-webkit-inner-spin-button,.verte__input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.verte__inputs{display:flex;font-size:16px;margin-bottom:5px}.verte__draggable{border-radius:6px 6px 0 0;height:8px;width:100%;cursor:grab;background:linear-gradient(90deg,#fff 2px,transparent 1%) center,linear-gradient(#fff 2px,transparent 1%) center,rgba(112,128,144,.2);background-size:4px 4px}.verte__model,.verte__submit{position:relative;display:inline-flex;justify-content:center;align-items:center;padding:1px;border:0;text-align:center;cursor:pointer;background-color:transparent;font-weight:700;color:#708090;fill:#708090;outline:0}.verte__model:hover,.verte__submit:hover{fill:#1a3aff;color:#1a3aff}.verte__close{position:absolute;top:1px;right:1px;z-index:1;display:flex;justify-content:center;align-items:center;padding:4px;cursor:pointer;border-radius:50%;border:0;transform:translate(50%,-50%);background-color:rgba(0,0,0,.4);fill:#fff;outline:0;box-shadow:1px 1px 1px rgba(0,0,0,.2)}.verte__close:hover{background-color:rgba(0,0,0,.6)}.verte-picker{width:100%;margin:0 auto 10px;display:flex;flex-direction:column}.verte-picker--wheel{margin-top:20px}.verte-picker__origin{user-select:none;position:relative;margin:0 auto;overflow:hidden}.verte-picker__slider{margin:20px 20px 0}.verte-picker__canvas{display:block}.verte-picker__cursor{position:absolute;top:0;left:0;margin:-6px;width:12px;height:12px;border:1px solid #fff;border-radius:50%;will-change:transform;pointer-events:none;background-color:transparent;box-shadow:#fff 0 0 0 1.5px,rgba(0,0,0,.3) 0 0 1px 1px inset,rgba(0,0,0,.4) 0 0 1px 2px}.verte-picker__input{display:flex;margin-bottom:10px}.slider{position:relative;display:flex;align-items:center;box-sizing:border-box;margin-bottom:10px;font-size:20px}.slider--dragging .slider-label,.slider:hover .slider-label{visibility:visible;opacity:1}.slider__input{margin-bottom:0;padding:.3em;margin-left:.2em;max-width:70px;width:20%;border:0;text-align:center;font-size:12px;-webkit-appearance:none;-moz-appearance:textfield}.slider__input::-webkit-inner-spin-button,.slider__input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.slider__input:focus{outline:0;border-color:#1a3aff}.slider__track{position:relative;flex:1;margin:3px;width:auto;height:8px;background:#fff;will-change:transfom;background-image:linear-gradient(45deg,rgba(112,128,144,.5) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,rgba(112,128,144,.5) 75%),linear-gradient(-45deg,rgba(112,128,144,.5) 25%,transparent 25%),linear-gradient(-45deg,transparent 75%,rgba(112,128,144,.5) 75%);background-size:6px 6px;background-position:0 0,3px -3px,0 3px,-3px 0;border-radius:10px}.slider__handle{position:relative;position:absolute;top:0;left:0;will-change:transform;color:#000;margin:-2px 0 0 -8px;width:12px;height:12px;border:2px solid #fff;background-color:currentColor;border-radius:50%;box-shadow:0 1px 4px -2px #000}.slider__label{position:absolute;top:-3em;left:.4em;z-index:999;visibility:hidden;padding:6px;min-width:3em;border-radius:6px;background-color:#000;color:#fff;text-align:center;font-size:12px;line-height:1em;opacity:0;transform:translate(-50%,0);white-space:nowrap}.slider__label:before{position:absolute;bottom:-.6em;left:50%;display:block;width:0;height:0;border-width:.6em .6em 0 .6em;border-style:solid;border-color:#000 transparent transparent transparent;content:"";transform:translate3d(-50%,0,0)}.slider__fill{width:100%;height:100%;transform-origin:left top;border-radius:10px}.bimdata-viewer{width:100%;height:100%;font-size:16px;position:relative;background-color:var(--background-color);overflow:hidden}.bimdata-viewer .viewer__menu{position:absolute;top:12px;display:flex;flex-direction:column}.bimdata-viewer .viewer__menu--down,.bimdata-viewer .viewer__menu--left,.bimdata-viewer .viewer__menu--right,.bimdata-viewer .viewer__menu--up{z-index:1}.bimdata-viewer .viewer__menu--left{left:12px}.bimdata-viewer .viewer__menu--right{right:12px}.bimdata-viewer .viewer__menu--up{flex-direction:row;align-items:center;left:calc(50% - (520px / 2))}.bimdata-viewer .viewer__menu--down{flex-direction:column-reverse;align-items:center;bottom:16px;top:unset;left:calc(50% - (412px / 2));z-index:2}.bimdata-viewer .viewer__logo{position:absolute;bottom:12px;left:0;display:flex;flex-direction:column;align-items:center}.bimdata-viewer .viewer__logo .version{font-size:70%;min-width:72px;text-align:center}.bimdata-viewer .global-spinner{background-color:rgba(245,245,245,.5);position:absolute;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center}',
            map: void 0,
            media: void 0
        })
    }), {
        name: "BimdataViewer",
        version: zA,
        components: {
            BIMDataIcon: El,
            BIMDataLogo: Sw,
            BIMDataModalManager: xc,
            BIMDataKeyboardShortcutsManager: hv,
            BIMDataPlugins: zl,
            BIMDataSpinner: xl
        },
        data() {
            return {
                initialized: !1,
                plugins: [],
                resizeObserver: new ResizeObserver(this.handleResize)
            }
        },
        props: {
            accessToken: {
                type: String,
                required: !0
            },
            cfg: {
                type: Object,
                required: !0,
                validator: e => e.cloudId && e.projectId && e.apiUrl
            }
        },
        computed: {
            ...qA(["spinnerProcesses", "apiClient"]),
            loading() {
                return this.spinnerProcesses >= 1
            }
        },
        watch: {
            accessToken: {
                handler(e) {
                    this.setAccessToken(e), this.setApiClient({
                        accessToken: e,
                        apiUrl: this.cfg.apiUrl,
                        offlineOptions: this.cfg.offlineOptions
                    }), Object.getPrototypeOf(this.$root).$bimdataApiClient = this.apiClient
                },
                immediate: !0
            },
            plugins: {
                handler(e, t) {
                    e.filter(e => !t.includes(e)).filter(e => e.i18n && !e.i18nRegistered).forEach(e => {
                        Hl(e.i18n, this.$i18n), e.i18nRegistered = !0
                    })
                }
            }
        },
        beforeCreate() {
            this.$store.state.viewer || this.$store.registerModule("viewer", {
                namespaced: !0,
                state: {
                    spinnerProcesses: 0,
                    viewerComponent: null,
                    viewerElement: null,
                    viewerBoundingClientRect: null,
                    plugins: new Map,
                    accessToken: null,
                    apiClient: null,
                    keyboardShortcutsManager: null,
                    modalManager: null,
                    ifcs: [],
                    selectedIfcs: [],
                    structures: [],
                    objectsWithRepresentation: [],
                    objectsWithoutRepresentation: [],
                    selectedObjectIds: new Set,
                    selectionMode: "object", 
                    selectionModes: ["object", "type"]
                },
                getters: kA,
                actions: Bw,
                mutations: PA
            })
        },
        async created() {
            this.cfg.bimdataPlugins || (this.cfg.bimdataPlugins = {}), this.addQuickAccessors(), this.incrementSpinnerProcesses(), this.setViewerComponent(this), Hl(Ul, this.$i18n);
            const {
                cloudId: e,
                projectId: t,
                ifcIds: i
            } = this.cfg;
            this.initOffline(), await this.init({
                cloudId: e,
                projectId: t,
                ifcIds: i
            }), this.registerDefaultPlugins(), this.decrementSpinnerProcesses(), this.initialized = !0, window.viewer = this
        },
        mounted() {
            this.$hub.on("set-selection-mode", ({
                mode: e
            }) => {
                this.setSelectionMode(e)
            }), this.$hub.on("select-objects", ({
                ids: e
            }) => this.setObjectsSelected({
                ids: e,
                selected: !0
            })), this.$hub.on("deselect-objects", ({
                ids: e
            }) => this.setObjectsSelected({
                ids: e,
                selected: !1
            })), this.setViewerElement(this.$el), this.resizeObserver.observe(this.$el)
        },
        destroyed() {
            this.$store.unregisterModule("viewer"), this.resizeObserver && this.resizeObserver.disconnect()
        },
        methods: {
            ...WA(["init", "setObjectsSelected"]),
            ...$A({
                setApiClient: "SET_API_CLIENT",
                setAccessToken: "SET_ACCESS_TOKEN",
                setSelectionMode: "SET_SELECTION_MODE",
                setViewerElement: "SET_VIEWER_ELEMENT",
                setViewerComponent: "SET_VIEWER_COMPONENT",
                setViewerBoundingClientRect: "SET_VIEWER_BOUNDING_CLIENT_RECT",
                incrementSpinnerProcesses: "INCREMENT_SPINNER_PROCESSES",
                decrementSpinnerProcesses: "DECREMENT_SPINNER_PROCESSES"
            }),
            initOffline() {
                this.cfg.offlineOptions && EA(this.cfg.offlineOptions)
            },
            handleResize(e) {
                e.forEach(e => this.setViewerBoundingClientRect(e.target.getBoundingClientRect()))
            },
            registerDefaultPlugins() {
                this.cfg.bimdataPlugins = this.cfg.bimdataPlugins || {};
                const {
                    cloudId: e,
                    projectId: t,
                    apiUrl: i
                } = this.cfg, r = [];
                r.push(dv);
                const n = [uv, iw, Jy, {
                        component: sc,
                        name: "reload",
                        display: {
                            content: "header"
                        }
                    }, pv, {
                        component: Ac,
                        name: "help",

                    }, tw, fv, bv, wv, xb({
                        editProperties: !1 !== this.cfg.bimdataPlugins.editProperties,
                        merge: !1 !== this.cfg.bimdataPlugins.merge,
                        exportAllowed: !1 !== this.cfg.bimdataPlugins.exportAllowed
                    }), kw, Dw, Qy],
                    s = [aw, lw];
                n.filter(e => !1 !== this.cfg.bimdataPlugins.default && !1 !== this.cfg.bimdataPlugins[e.name] || !0 === this.cfg.bimdataPlugins[e.name]).forEach(e => r.push(e)), s.filter(e => !0 === this.cfg.bimdataPlugins[e.name]).forEach(e => r.push(e)), this.plugins = r.map(this.autoRegisterPluginWrapper).map(e => ({
                    enabled: !0,
                    ...e
                }))
            },
            autoRegisterPluginWrapper(e) {
                const t = {
                        ...e.component
                    },
                    i = t.created || (() => {});
                return t.created = function() {
                    this.$store.commit("viewer/REGISTER_PLUGIN", {
                        name: e.name,
                        plugin: this
                    }), i.call(this)
                }, {
                    ...e,
                    component: t
                }
            },
            registerPlugins(e = []) {
                const t = this.$watch("initialized", i => {
                    i && (this.plugins = this.plugins.concat(e.map(this.autoRegisterPluginWrapper).map(e => ({
                        enabled: !0,
                        ...e
                    }))), t && t())
                }, {
                    immediate: !0
                })
            },
            async getRawElements(e) {
                const t = new this.$bimdataApiClient.IfcApi,
                    i = await t.getRawElements(this.$utils.getCloudId(), e, this.$utils.getProjectId());
                i.units.forEach(e => {
                    e.conversion_baseunit = i.units[e.conversion_baseunit_index], delete e.conversion_baseunit_index
                }), i.definitions.forEach(e => {
                    e.unit = i.units[e.unit_id], delete e.unit_id
                }), i.property_sets.forEach(e => {
                    e.properties.forEach(e => {
                        e.definition = i.definitions[e.def_id], delete e.def_id
                    })
                });
                const r = {};
                return i.elements.forEach(e => {
                    e.attributes = i.property_sets[e.attributes], e.propertySets = e.psets.map(e => i.property_sets[e]), delete e.psets, e.classifications = e.classifications.map(e => i.classifications[e]), e.systems = e.systems.map(e => i.systems[e]), e.layers = e.layers.map(e => i.layers[e]), r[e.uuid] = e
                }), r
            },
            addQuickAccessors() {
                Object.getPrototypeOf(this.$root).$hub = {
                    on: (...e) => this.$on(...e),
                    off: (...e) => this.$off(...e),
                    emit: (...e) => this.$emit(...e)
                }, Object.getPrototypeOf(this.$root).$plugins = new Proxy({}, {
                    get: (e, t) => {
                        if ("symbol" != typeof t) return "modalManager" === t ? this.$store.state.viewer.modalManager : "keyboardShortcutsManager" === t ? this.$store.state.viewer.keyboardShortcutsManager : this.$store.state.viewer.plugins.get(t)
                    }
                }), Object.getPrototypeOf(this.$root).$utils = new Proxy({}, {
                    get: (e, t) => {
                        if ("symbol" == typeof t) return;
                        const i = t.match(/^get(.+)/);
                        if (i) {
                            const e = i[1].replace(/^./, e => e.toLowerCase());
                            if ("cfg" === e) return () => this.cfg;
                            if ("cloudId" === e || "projectId" === e || "apiUrl" === e) return () => this.cfg[e];
                            if ("rawElements" === e) return this.getRawElements;
                            const t = this.$store.getters["viewer/" + e];
                            if (t) return "function" == typeof t ? (...e) => t(...e) : () => t;
                            const r = this.$store.state.viewer[e];
                            if (r) return () => r
                        }
                        return "loadIfcs" === t || "unloadIfcs" === t ? (...e) => this.$store.dispatch(`viewer/${t}`, ...e) : void 0
                    }
                })
            }
        }
    }, void 0, !1, void 0, !1, bl, void 0, void 0);

    function YA(e, t, i, r = "en") {
        i.apiUrl = i.apiUrl || "https://api-beta.bimdata.io";
        const n = new fl({
                locale: r,
                fallbackLocale: "fr",
                messages: {
                    en: null,
                    fr: null
                }
            }),
            s = new wi({
                store: new Pa.Store,
                i18n: n,
                el: `#${e}`,
                data: {
                    accessToken: t,
                    cfg: i
                },
                render(e) {
                    return e(GA, {
                        props: {
                            accessToken: this.accessToken,
                            cfg: this.cfg
                        }
                    })
                }
            });
        return {
            viewer: s.$store.state.viewer.viewerComponent,
            store: s.$store,
            eventHub: s.$store.state.viewer.hub,
            setAccessToken: function(e) {
                s.accessToken = e
            }
        }
    }
    return wi.use(Pa), wi.use(fl), window.initBIMDataViewer = YA, YA
	
	
}));



